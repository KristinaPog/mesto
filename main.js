/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={376:(e,t,r)=>{function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var i=r(1801);function a(e,t){return e=e.split(" "),t=t.split(" "),e[0]>t[0]?1:e[0]<t[0]?-1:Math.sign(parseFloat(e[1])-parseFloat(t[1]))}function u(e,t,r){if(e=i(e),!r){var n=[t,{}];r=n[0],t=n[1]}var o=t.match||/\sx($|\s)/,u=[];for(var B in e.stats){var s=e.stats[B];for(var c in s)s[c].match(o)&&u.push(B+" "+c)}r(u.sort(a))}var B={};function s(e,t){var r,o=n(e);try{for(o.s();!(r=o.n()).done;){var i=r.value;B[i]=Object.assign({},t)}}catch(e){o.e(e)}finally{o.f()}}function c(e,t){var r,o=n(e);try{for(o.s();!(r=o.n()).done;){var i=r.value;B[i].browsers=B[i].browsers.concat(t.browsers).sort(a)}}catch(e){o.e(e)}finally{o.f()}}e.exports=B,u(r(5670),(function(e){return s(["border-radius","border-top-left-radius","border-top-right-radius","border-bottom-right-radius","border-bottom-left-radius"],{mistakes:["-khtml-","-ms-","-o-"],feature:"border-radius",browsers:e})})),u(r(4890),(function(e){return s(["box-shadow"],{mistakes:["-khtml-"],feature:"css-boxshadow",browsers:e})})),u(r(5919),(function(e){return s(["animation","animation-name","animation-duration","animation-delay","animation-direction","animation-fill-mode","animation-iteration-count","animation-play-state","animation-timing-function","@keyframes"],{mistakes:["-khtml-","-ms-"],feature:"css-animation",browsers:e})})),u(r(2209),(function(e){return s(["transition","transition-property","transition-duration","transition-delay","transition-timing-function"],{mistakes:["-khtml-","-ms-"],browsers:e,feature:"css-transitions"})})),u(r(3726),(function(e){return s(["transform","transform-origin"],{feature:"transforms2d",browsers:e})}));var l=r(3022);u(l,(function(e){return s(["perspective","perspective-origin"],{feature:"transforms3d",browsers:e}),s(["transform-style"],{mistakes:["-ms-","-o-"],browsers:e,feature:"transforms3d"})})),u(l,{match:/y\sx|y\s#2/},(function(e){return s(["backface-visibility"],{mistakes:["-ms-","-o-"],feature:"transforms3d",browsers:e})}));var f=r(2924);u(f,{match:/y\sx/},(function(e){return s(["linear-gradient","repeating-linear-gradient","radial-gradient","repeating-radial-gradient"],{props:["background","background-image","border-image","mask","list-style","list-style-image","content","mask-image"],mistakes:["-ms-"],feature:"css-gradients",browsers:e})})),u(f,{match:/a\sx/},(function(e){return c(["linear-gradient","repeating-linear-gradient","radial-gradient","repeating-radial-gradient"],{feature:"css-gradients",browsers:e=e.map((function(e){return/firefox|op/.test(e)?e:"".concat(e," old")}))})})),u(r(6216),(function(e){return s(["box-sizing"],{feature:"css3-boxsizing",browsers:e})})),u(r(8658),(function(e){return s(["filter"],{feature:"css-filters",browsers:e})})),u(r(7370),(function(e){return s(["filter-function"],{props:["background","background-image","border-image","mask","list-style","list-style-image","content","mask-image"],feature:"css-filter-function",browsers:e})})),u(r(5546),{match:/y\sx|y\s#2/},(function(e){return s(["backdrop-filter"],{feature:"css-backdrop-filter",browsers:e})})),u(r(8941),(function(e){return s(["element"],{props:["background","background-image","border-image","mask","list-style","list-style-image","content","mask-image"],feature:"css-element-function",browsers:e})})),u(r(1742),(function(e){s(["columns","column-width","column-gap","column-rule","column-rule-color","column-rule-width","column-count","column-rule-style","column-span","column-fill"],{feature:"multicolumn",browsers:e}),s(["break-before","break-after","break-inside"],{feature:"multicolumn",browsers:e.filter((function(e){return!/firefox/.test(e)}))})})),u(r(6957),(function(e){return s(["user-select"],{mistakes:["-khtml-"],feature:"user-select-none",browsers:e})}));var p=r(8278);u(p,{match:/a\sx/},(function(e){s(["display-flex","inline-flex"],{props:["display"],feature:"flexbox",browsers:e=e.map((function(e){return/ie|firefox/.test(e)?e:"".concat(e," 2009")}))}),s(["flex","flex-grow","flex-shrink","flex-basis"],{feature:"flexbox",browsers:e}),s(["flex-direction","flex-wrap","flex-flow","justify-content","order","align-items","align-self","align-content"],{feature:"flexbox",browsers:e})})),u(p,{match:/y\sx/},(function(e){c(["display-flex","inline-flex"],{feature:"flexbox",browsers:e}),c(["flex","flex-grow","flex-shrink","flex-basis"],{feature:"flexbox",browsers:e}),c(["flex-direction","flex-wrap","flex-flow","justify-content","order","align-items","align-self","align-content"],{feature:"flexbox",browsers:e})})),u(r(7742),(function(e){return s(["calc"],{props:["*"],feature:"calc",browsers:e})})),u(r(8594),(function(e){return s(["background-origin","background-size"],{feature:"background-img-opts",browsers:e})})),u(r(9043),(function(e){return s(["background-clip"],{feature:"background-clip-text",browsers:e})})),u(r(9556),(function(e){return s(["font-feature-settings","font-variant-ligatures","font-language-override"],{feature:"font-feature",browsers:e})})),u(r(2793),(function(e){return s(["font-kerning"],{feature:"font-kerning",browsers:e})})),u(r(6374),(function(e){return s(["border-image"],{feature:"border-image",browsers:e})})),u(r(1922),(function(e){return s(["::selection"],{selector:!0,feature:"css-selection",browsers:e})})),u(r(9201),(function(e){s(["::placeholder"],{selector:!0,feature:"css-placeholder",browsers:e.concat(["ie 10 old","ie 11 old","firefox 18 old"])})})),u(r(9819),(function(e){s([":placeholder-shown"],{selector:!0,feature:"css-placeholder-shown",browsers:e})})),u(r(7694),(function(e){return s(["hyphens"],{feature:"css-hyphens",browsers:e})}));var y=r(9882);u(y,(function(e){return s([":fullscreen"],{selector:!0,feature:"fullscreen",browsers:e})})),u(y,{match:/x(\s#2|$)/},(function(e){return s(["::backdrop"],{selector:!0,feature:"fullscreen",browsers:e})})),u(r(4787),(function(e){return s(["::file-selector-button"],{selector:!0,feature:"file-selector-button",browsers:e})})),u(r(4739),(function(e){return s([":autofill"],{selector:!0,feature:"css-autofill",browsers:e})})),u(r(5048),(function(e){return s(["tab-size"],{feature:"css3-tabsize",browsers:e})}));var C=r(3017),d=["width","min-width","max-width","height","min-height","max-height","inline-size","min-inline-size","max-inline-size","block-size","min-block-size","max-block-size","grid","grid-template","grid-template-rows","grid-template-columns","grid-auto-columns","grid-auto-rows"];u(C,(function(e){return s(["max-content","min-content"],{props:d,feature:"intrinsic-width",browsers:e})})),u(C,{match:/x|\s#4/},(function(e){return s(["fill","fill-available"],{props:d,feature:"intrinsic-width",browsers:e})})),u(C,{match:/x|\s#5/},(function(e){return s(["fit-content"],{props:d,feature:"intrinsic-width",browsers:e})})),u(r(1294),(function(e){return s(["stretch"],{props:d,feature:"css-width-stretch",browsers:e})})),u(r(2136),(function(e){return s(["zoom-in","zoom-out"],{props:["cursor"],feature:"css3-cursors-newer",browsers:e})})),u(r(577),(function(e){return s(["grab","grabbing"],{props:["cursor"],feature:"css3-cursors-grab",browsers:e})})),u(r(81),(function(e){return s(["sticky"],{props:["position"],feature:"css-sticky",browsers:e})})),u(r(2396),(function(e){return s(["touch-action"],{feature:"pointer",browsers:e})})),u(r(7272),{match:/x.*#[235]/},(function(e){return s(["text-decoration-skip","text-decoration-skip-ink"],{feature:"text-decoration",browsers:e})})),u(r(9176),(function(e){return s(["text-decoration"],{feature:"text-decoration",browsers:e})})),u(r(2337),(function(e){return s(["text-decoration-color"],{feature:"text-decoration",browsers:e})})),u(r(4189),(function(e){return s(["text-decoration-line"],{feature:"text-decoration",browsers:e})})),u(r(7295),(function(e){return s(["text-decoration-style"],{feature:"text-decoration",browsers:e})})),u(r(8867),(function(e){return s(["text-size-adjust"],{feature:"text-size-adjust",browsers:e})})),u(r(4634),(function(e){s(["mask-clip","mask-composite","mask-image","mask-origin","mask-repeat","mask-border-repeat","mask-border-source"],{feature:"css-masks",browsers:e}),s(["mask","mask-position","mask-size","mask-border","mask-border-outset","mask-border-width","mask-border-slice"],{feature:"css-masks",browsers:e})})),u(r(3275),(function(e){return s(["clip-path"],{feature:"css-clip-path",browsers:e})})),u(r(2718),(function(e){return s(["box-decoration-break"],{feature:"css-boxdecorationbreak",browsers:e})})),u(r(955),(function(e){return s(["object-fit","object-position"],{feature:"object-fit",browsers:e})})),u(r(9678),(function(e){return s(["shape-margin","shape-outside","shape-image-threshold"],{feature:"css-shapes",browsers:e})})),u(r(8908),(function(e){return s(["text-overflow"],{feature:"text-overflow",browsers:e})})),u(r(5683),(function(e){return s(["@viewport"],{feature:"css-deviceadaptation",browsers:e})})),u(r(4063),{match:/( x($| )|a #2)/},(function(e){return s(["@resolution"],{feature:"css-media-resolution",browsers:e})})),u(r(1803),(function(e){return s(["text-align-last"],{feature:"css-text-align-last",browsers:e})}));var h=r(7907);u(h,{match:/y x|a x #1/},(function(e){return s(["pixelated"],{props:["image-rendering"],feature:"css-crisp-edges",browsers:e})})),u(h,{match:/a x #2/},(function(e){return s(["image-rendering"],{feature:"css-crisp-edges",browsers:e})}));var v=r(3403);u(v,(function(e){return s(["border-inline-start","border-inline-end","margin-inline-start","margin-inline-end","padding-inline-start","padding-inline-end"],{feature:"css-logical-props",browsers:e})})),u(v,{match:/x\s#2/},(function(e){return s(["border-block-start","border-block-end","margin-block-start","margin-block-end","padding-block-start","padding-block-end"],{feature:"css-logical-props",browsers:e})})),u(r(6440),{match:/#2|x/},(function(e){return s(["appearance"],{feature:"css-appearance",browsers:e})})),u(r(8956),(function(e){return s(["scroll-snap-type","scroll-snap-coordinate","scroll-snap-destination","scroll-snap-points-x","scroll-snap-points-y"],{feature:"css-snappoints",browsers:e})})),u(r(5735),(function(e){return s(["flow-into","flow-from","region-fragment"],{feature:"css-regions",browsers:e})})),u(r(3524),(function(e){return s(["image-set"],{props:["background","background-image","border-image","cursor","mask","mask-image","list-style","list-style-image","content"],feature:"css-image-set",browsers:e})})),u(r(6797),{match:/a|x/},(function(e){return s(["writing-mode"],{feature:"css-writing-mode",browsers:e})})),u(r(4143),(function(e){return s(["cross-fade"],{props:["background","background-image","border-image","mask","list-style","list-style-image","content","mask-image"],feature:"css-cross-fade",browsers:e})})),u(r(1090),(function(e){return s([":read-only",":read-write"],{selector:!0,feature:"css-read-only-write",browsers:e})})),u(r(7975),(function(e){return s(["text-emphasis","text-emphasis-position","text-emphasis-style","text-emphasis-color"],{feature:"text-emphasis",browsers:e})}));var b=r(6818);u(b,(function(e){s(["display-grid","inline-grid"],{props:["display"],feature:"css-grid",browsers:e}),s(["grid-template-columns","grid-template-rows","grid-row-start","grid-column-start","grid-row-end","grid-column-end","grid-row","grid-column","grid-area","grid-template","grid-template-areas","place-self"],{feature:"css-grid",browsers:e})})),u(b,{match:/a x/},(function(e){return s(["grid-column-align","grid-row-align"],{feature:"css-grid",browsers:e})})),u(r(3362),(function(e){return s(["text-spacing"],{feature:"css-text-spacing",browsers:e})})),u(r(1054),(function(e){return s([":any-link"],{selector:!0,feature:"css-any-link",browsers:e})})),u(r(6017),(function(e){return s(["isolate"],{props:["unicode-bidi"],feature:"css-unicode-bidi",browsers:e})})),u(r(3010),(function(e){return s(["plaintext"],{props:["unicode-bidi"],feature:"css-unicode-bidi",browsers:e})})),u(r(7892),{match:/y x/},(function(e){return s(["isolate-override"],{props:["unicode-bidi"],feature:"css-unicode-bidi",browsers:e})})),u(r(4450),{match:/a #1/},(function(e){return s(["overscroll-behavior"],{feature:"css-overscroll-behavior",browsers:e})})),u(r(459),(function(e){return s(["text-orientation"],{feature:"css-text-orientation",browsers:e})})),u(r(9629),(function(e){return s(["print-color-adjust","color-adjust"],{feature:"css-print-color-adjust",browsers:e})}))},3398:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"add",value:function(e,t){var r=t+e.name;if(!e.parent.some((function(t){return t.name===r&&t.params===e.params}))){var n=this.clone(e,{name:r});return e.parent.insertBefore(e,n)}}},{key:"process",value:function(e){var t,r=this.parentPrefix(e),n=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(this.prefixes);try{for(n.s();!(t=n.n()).done;){var i=t.value;r&&r!==i||this.add(e,i)}}catch(e){n.e(e)}finally{n.f()}}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(3227));e.exports=B},9220:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}var o=r(2841),i=r(6527).agents,a=r(4605),u=r(4977),B=r(1112),s=r(376),c=r(7550),l={browsers:i,prefixes:s},f=new Map;function p(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var o,i;if(1===t.length&&(i=t[0],"[object Object]"===Object.prototype.toString.apply(i))?(o=t[0],t=void 0):0===t.length||1===t.length&&!t[0]?t=void 0:t.length<=2&&(Array.isArray(t[0])||!t[0])?(o=t[1],t=t[0]):"object"===n(t[t.length-1])&&(o=t.pop()),o||(o={}),o.browser)throw new Error("Change `browser` option to `overrideBrowserslist` in Autoprefixer");if(o.browserslist)throw new Error("Change `browserslist` option to `overrideBrowserslist` in Autoprefixer");o.overrideBrowserslist?t=o.overrideBrowserslist:o.browsers&&("undefined"!=typeof console&&console.warn&&console.warn(a.red("\n  Replace Autoprefixer `browsers` option to Browserslist config.\n  Use `browserslist` key in `package.json` or `.browserslistrc` file.\n\n  Using `browsers` option can cause errors. Browserslist config can\n  be used for Babel, Autoprefixer, postcss-normalize and other tools.\n\n  If you really need to use option, rename it to `overrideBrowserslist`.\n\n  Learn more at:\n  https://github.com/browserslist/browserslist#readme\n  https://twitter.com/browserslist\n\n".replace(/`[^`]+`/g,(function(e){return a.yellow(e.slice(1,-1))})))),t=o.browsers);var s={ignoreUnknownVersions:o.ignoreUnknownVersions,stats:o.stats,env:o.env};function p(e){var r=l,n=new u(r.browsers,t,e,s),i=n.selected.join(", ")+JSON.stringify(o);return f.has(i)||f.set(i,new B(r.prefixes,n,o)),f.get(i)}return{postcssPlugin:"autoprefixer",prepare:function(e){var t=p({from:e.opts.from,env:o.env});return{OnceExit:function(r){!function(e,t){0!==t.browsers.selected.length&&(t.add.selectors.length>0||Object.keys(t.add).length>2||e.warn("Autoprefixer target browsers do not need any prefixes.You do not need Autoprefixer anymore.\nCheck your Browserslist config to be sure that your targets are set up correctly.\n\n  Learn more at:\n  https://github.com/postcss/autoprefixer#readme\n  https://github.com/browserslist/browserslist#readme\n\n"))}(e,t),!1!==o.remove&&t.processor.remove(r,e),!1!==o.add&&t.processor.add(r,e)}}},info:function(e){return(e=e||{}).from=e.from||process.cwd(),c(p(e))},options:o,browsers:t}}e.exports=p,p.postcss=!0,p.data=l,p.defaults=o.defaults,p.info=function(){return p().info()}},5765:e=>{function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function o(e){return e[e.length-1]}var i={parse:function(e){var t,n=[""],i=[n],a=r(e);try{for(a.s();!(t=a.n()).done;){var u=t.value;"("!==u?")"!==u?n[n.length-1]+=u:(i.pop(),(n=o(i)).push("")):(n=[""],o(i).push(n),i.push(n))}}catch(e){a.e(e)}finally{a.f()}return i[0]},stringify:function(e){var n,o="",a=r(e);try{for(a.s();!(n=a.n()).done;){var u=n.value;"object"!==t(u)?o+=u:o+="(".concat(i.stringify(u),")")}}catch(e){a.e(e)}finally{a.f()}return o}};e.exports=i},4977:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var a=r(2841),u=r(6527).agents,B=r(7220),s=function(){function e(t,r,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.data=t,this.options=n||{},this.browserslistOpts=o||{},this.selected=this.parse(r)}var t,r,n;return t=e,n=[{key:"prefixes",value:function(){if(this.prefixesCache)return this.prefixesCache;for(var e in this.prefixesCache=[],u)this.prefixesCache.push("-".concat(u[e].prefix,"-"));return this.prefixesCache=B.uniq(this.prefixesCache).sort((function(e,t){return t.length-e.length})),this.prefixesCache}},{key:"withPrefix",value:function(e){return this.prefixesRegexp||(this.prefixesRegexp=new RegExp(this.prefixes().join("|"))),this.prefixesRegexp.test(e)}}],(r=[{key:"parse",value:function(e){var t={};for(var r in this.browserslistOpts)t[r]=this.browserslistOpts[r];return t.path=this.options.from,a(e,t)}},{key:"prefix",value:function(e){var t,r,n=(t=e.split(" "),r=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(t,r)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=n[0],a=n[1],u=this.data[i],B=u.prefix_exceptions&&u.prefix_exceptions[a];return B||(B=u.prefix),"-".concat(B,"-")}},{key:"isSelected",value:function(e){return this.selected.includes(e)}}])&&i(t.prototype,r),n&&i(t,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=s},2495:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(3227),l=r(4977),f=r(7220),p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(y,e);var t,r,i,c,p=(i=y,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(c){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function y(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,y),p.apply(this,arguments)}return t=y,r=[{key:"check",value:function(){return!0}},{key:"prefixed",value:function(e,t){return t+e}},{key:"normalize",value:function(e){return e}},{key:"otherPrefixes",value:function(e,t){var r,n=o(l.prefixes());try{for(n.s();!(r=n.n()).done;){var i=r.value;if(i!==t&&e.includes(i))return e.replace(/var\([^)]+\)/,"").includes(i)}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"set",value:function(e,t){return e.prop=this.prefixed(e.prop,t),e}},{key:"needCascade",value:function(e){return e._autoprefixerCascade||(e._autoprefixerCascade=!1!==this.all.options.cascade&&e.raw("before").includes("\n")),e._autoprefixerCascade}},{key:"maxPrefixed",value:function(e,t){if(t._autoprefixerMax)return t._autoprefixerMax;var r,n=0,i=o(e);try{for(i.s();!(r=i.n()).done;){var a=r.value;(a=f.removeNote(a)).length>n&&(n=a.length)}}catch(e){i.e(e)}finally{i.f()}return t._autoprefixerMax=n,t._autoprefixerMax}},{key:"calcBefore",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=this.maxPrefixed(e,t)-f.removeNote(r).length,o=t.raw("before");return n>0&&(o+=Array(n).fill(" ").join("")),o}},{key:"restoreBefore",value:function(e){var t=e.raw("before").split("\n"),r=t[t.length-1];this.all.group(e).up((function(e){var t=e.raw("before").split("\n"),n=t[t.length-1];n.length<r.length&&(r=n)})),t[t.length-1]=r,e.raws.before=t.join("\n")}},{key:"insert",value:function(e,t,r){var n=this.set(this.clone(e),t);if(n&&!e.parent.some((function(e){return e.prop===n.prop&&e.value===n.value})))return this.needCascade(e)&&(n.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,n)}},{key:"isAlready",value:function(e,t){var r=this.all.group(e).up((function(e){return e.prop===t}));return r||(r=this.all.group(e).down((function(e){return e.prop===t}))),r}},{key:"add",value:function(e,t,r,n){var o=this.prefixed(e.prop,t);if(!this.isAlready(e,o)&&!this.otherPrefixes(e.value,t))return this.insert(e,t,r,n)}},{key:"process",value:function(e,t){if(this.needCascade(e)){var r=u(s(y.prototype),"process",this).call(this,e,t);r&&r.length&&(this.restoreBefore(e),e.raws.before=this.calcBefore(r,e))}else u(s(y.prototype),"process",this).call(this,e,t)}},{key:"old",value:function(e,t){return[this.prefixed(e,t)]}}],r&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),y}(c);e.exports=p},1397:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"prefixed",value:function(e,t){var r,n,i,u=(n=s(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2012===r?t+"flex-line-pack":a(B(p.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(){return"align-content"}},{key:"set",value:function(e,t){var r=s(t)[0];return 2012===r?(e.value=p.oldValues[e.value]||e.value,a(B(p.prototype),"set",this).call(this,e,t)):"final"===r?a(B(p.prototype),"set",this).call(this,e,t):void 0}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["align-content","flex-line-pack"],c.oldValues={"flex-end":"end","flex-start":"start","space-between":"justify","space-around":"distribute"},e.exports=c},1688:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"prefixed",value:function(e,t){var r,n,i,u=(n=s(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2009===r?t+"box-align":2012===r?t+"flex-align":a(B(p.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(){return"align-items"}},{key:"set",value:function(e,t){var r=s(t)[0];return 2009!==r&&2012!==r||(e.value=p.oldValues[e.value]||e.value),a(B(p.prototype),"set",this).call(this,e,t)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["align-items","flex-align","box-align"],c.oldValues={"flex-end":"end","flex-start":"start"},e.exports=c},9256:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"check",value:function(e){return e.parent&&!e.parent.some((function(e){return e.prop&&e.prop.startsWith("grid-")}))}},{key:"prefixed",value:function(e,t){var r,n,i,u=(n=s(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2012===r?t+"flex-item-align":a(B(p.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(){return"align-self"}},{key:"set",value:function(e,t){var r=s(t)[0];return 2012===r?(e.value=p.oldValues[e.value]||e.value,a(B(p.prototype),"set",this).call(this,e,t)):"final"===r?a(B(p.prototype),"set",this).call(this,e,t):void 0}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["align-self","flex-item-align"],c.oldValues={"flex-end":"end","flex-start":"start"},e.exports=c},8509:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"check",value:function(e){return!e.value.split(/\s+/).some((function(e){var t=e.toLowerCase();return"reverse"===t||"alternate-reverse"===t}))}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["animation","animation-direction"],e.exports=u},2940:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}var a=r(2495),u=r(7220),B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&o(e,t)}(s,e);var t,r,a,B=(r=s,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=i(r);if(a){var o=i(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function s(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(n=B.call(this,e,t,r)).prefixes&&(n.prefixes=u.uniq(n.prefixes.map((function(e){return"-ms-"===e?"-webkit-":e})))),n}return t=s,Object.defineProperty(t,"prototype",{writable:!1}),t}(a);B.names=["appearance"],e.exports=B},8288:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(7718),B=r(7220),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(l,e);var t,r,u,s,c=(u=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(s){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(n=c.call(this,e,t,r)).prefixes&&(n.prefixes=B.uniq(n.prefixes.map((function(){return"-webkit-"})))),n}return t=l,(r=[{key:"prefixed",value:function(e){return"-webkit-"===e?":-webkit-autofill":":".concat(e,"autofill")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(u);s.names=[":autofill"],e.exports=s},2989:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}var a=r(2495),u=r(7220),B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&o(e,t)}(s,e);var t,r,a,B=(r=s,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=i(r);if(a){var o=i(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function s(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(n=B.call(this,e,t,r)).prefixes&&(n.prefixes=u.uniq(n.prefixes.map((function(e){return"-ms-"===e?"-webkit-":e})))),n}return t=s,Object.defineProperty(t,"prototype",{writable:!1}),t}(a);B.names=["backdrop-filter"],e.exports=B},5874:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(2495),B=r(7220),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(l,e);var t,r,u,s,c=(u=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(s){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(n=c.call(this,e,t,r)).prefixes&&(n.prefixes=B.uniq(n.prefixes.map((function(e){return"-ms-"===e?"-webkit-":e})))),n}return t=l,(r=[{key:"check",value:function(e){return"text"===e.value.toLowerCase()}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(u);s.names=["background-clip"],e.exports=s},6053:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"set",value:function(e,t){var r=e.value.toLowerCase();return"-webkit-"!==t||r.includes(" ")||"contain"===r||"cover"===r||(e.value=e.value+" "+e.value),i(u(l.prototype),"set",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["background-size"],e.exports=B},3554:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"prefixed",value:function(e,t){return e.includes("-start")?t+e.replace("-block-start","-before"):t+e.replace("-block-end","-after")}},{key:"normalize",value:function(e){return e.includes("-before")?e.replace("-before","-block-start"):e.replace("-after","-block-end")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["border-block-start","border-block-end","margin-block-start","margin-block-end","padding-block-start","padding-block-end","border-before","border-after","margin-before","margin-after","padding-before","padding-after"],e.exports=u},9515:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"set",value:function(e,t){return e.value=e.value.replace(/\s+fill(\s)/,"$1"),i(u(l.prototype),"set",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["border-image"],e.exports=B},4668:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"prefixed",value:function(e,t){return"-moz-"===t?t+(l.toMozilla[e]||e):i(u(l.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(e){return l.toNormal[e]||e}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["border-radius"],B.toMozilla={},B.toNormal={};for(var s=0,c=["top","bottom"];s<c.length;s++)for(var l=c[s],f=0,p=["left","right"];f<p.length;f++){var y=p[f],C="border-".concat(l,"-").concat(y,"-radius"),d="border-radius-".concat(l).concat(y);B.names.push(C),B.names.push(d),B.toMozilla[C]=d,B.toNormal[d]=C}e.exports=B},4307:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"prefixed",value:function(e,t){return"".concat(t,"column-").concat(e)}},{key:"normalize",value:function(e){return e.includes("inside")?"break-inside":e.includes("before")?"break-before":"break-after"}},{key:"set",value:function(e,t){return("break-inside"===e.prop&&"avoid-column"===e.value||"avoid-page"===e.value)&&(e.value="avoid"),i(u(l.prototype),"set",this).call(this,e,t)}},{key:"insert",value:function(e,t,r){return"break-inside"!==e.prop?i(u(l.prototype),"insert",this).call(this,e,t,r):/region/i.test(e.value)||/page/i.test(e.value)?void 0:i(u(l.prototype),"insert",this).call(this,e,t,r)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["break-inside","page-break-inside","column-break-inside","break-before","page-break-before","column-break-before","break-after","page-break-after","column-break-after"],e.exports=B},6765:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(7861).list,B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(B);if(s){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"replace",value:function(e,t){var r=this;return u.space(e).map((function(e){if(e.slice(0,+r.name.length+1)!==r.name+"(")return e;var n=e.lastIndexOf(")"),o=e.slice(n+1),i=e.slice(r.name.length+1,n);if("-webkit-"===t){var a=i.match(/\d*.?\d+%?/);a?(i=i.slice(a[0].length).trim(),i+=", ".concat(a[0])):i+=", 0.5"}return t+r.name+"("+i+")"+o})).join(" ")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(563));B.names=["cross-fade"],e.exports=B},8662:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2386),s=r(433),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(c);if(l){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),r=f.call(this,e,t),"display-flex"===e&&(r.name="flex"),r}return t=p,(r=[{key:"check",value:function(e){return"display"===e.prop&&e.value===this.name}},{key:"prefixed",value:function(e){var t,r,n,i,a=(n=B(e),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return t=a[0],e=a[1],2009===t?r="flex"===this.name?"box":"inline-box":2012===t?r="flex"===this.name?"flexbox":"inline-flexbox":"final"===t&&(r=this.name),e+r}},{key:"replace",value:function(e,t){return this.prefixed(t)}},{key:"old",value:function(e){var t=this.prefixed(e);if(t)return new s(this.name,t)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(563));c.names=["display-flex","inline-flex"],e.exports=c},9628:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),r=s.call(this,e,t),"display-grid"===e&&(r.name="grid"),r}return t=c,(r=[{key:"check",value:function(e){return"display"===e.prop&&e.value===this.name}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(563));u.names=["display-grid","inline-grid"],e.exports=u},5747:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(7718),B=r(7220),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(l,e);var t,r,u,s,c=(u=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(s){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(n=c.call(this,e,t,r)).prefixes&&(n.prefixes=B.uniq(n.prefixes.map((function(){return"-webkit-"})))),n}return t=l,(r=[{key:"prefixed",value:function(e){return"-webkit-"===e?"::-webkit-file-upload-button":"::".concat(e,"file-selector-button")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(u);s.names=["::file-selector-button"],e.exports=s},8205:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}var a=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&o(e,t)}(B,e);var t,r,a,u=(r=B,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=i(r);if(a){var o=i(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function B(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,B),r=u.call(this,e,t),"filter-function"===e&&(r.name="filter"),r}return t=B,Object.defineProperty(t,"prototype",{writable:!1}),t}(r(563));a.names=["filter","filter-function"],e.exports=a},1139:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"check",value:function(e){var t=e.value;return!t.toLowerCase().includes("alpha(")&&!t.includes("DXImageTransform.Microsoft")&&!t.includes("data:image/svg+xml")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["filter"],e.exports=u},6771:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(2386),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(p,e);var t,r,i,l,f=(i=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(l){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"normalize",value:function(){return"flex-basis"}},{key:"prefixed",value:function(e,t){var r,n=o(c(t),2);return r=n[0],t=n[1],2012===r?t+"flex-preferred-size":u(s(p.prototype),"prefixed",this).call(this,e,t)}},{key:"set",value:function(e,t){var r,n=o(c(t),2);if(r=n[0],t=n[1],2012===r||"final"===r)return u(s(p.prototype),"set",this).call(this,e,t)}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));l.names=["flex-basis","flex-preferred-size"],e.exports=l},9259:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(2386),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(p,e);var t,r,i,l,f=(i=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(l){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"normalize",value:function(){return"flex-direction"}},{key:"insert",value:function(e,t,r){var n,i=o(c(t),2);if(n=i[0],t=i[1],2009!==n)return u(s(p.prototype),"insert",this).call(this,e,t,r);if(!e.parent.some((function(e){return e.prop===t+"box-orient"||e.prop===t+"box-direction"}))){var a,B,l=e.value;"inherit"===l||"initial"===l||"unset"===l?(a=l,B=l):(a=l.includes("row")?"horizontal":"vertical",B=l.includes("reverse")?"reverse":"normal");var f=this.clone(e);return f.prop=t+"box-orient",f.value=a,this.needCascade(e)&&(f.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,f),(f=this.clone(e)).prop=t+"box-direction",f.value=B,this.needCascade(e)&&(f.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,f)}}},{key:"old",value:function(e,t){var r,n=o(c(t),2);return r=n[0],t=n[1],2009===r?[t+"box-orient",t+"box-direction"]:u(s(p.prototype),"old",this).call(this,e,t)}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));l.names=["flex-direction","box-direction","box-orient"],e.exports=l},2242:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"insert",value:function(e,t,r){var n,i,u,c=(i=s(t),u=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(i,u)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(i,u)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(n=c[0],t=c[1],2009!==n)return a(B(p.prototype),"insert",this).call(this,e,t,r);var l=e.value.split(/\s+/).filter((function(e){return"wrap"!==e&&"nowrap"!==e&&"wrap-reverse"}));if(0!==l.length&&!e.parent.some((function(e){return e.prop===t+"box-orient"||e.prop===t+"box-direction"}))){var f=l[0],y=f.includes("row")?"horizontal":"vertical",C=f.includes("reverse")?"reverse":"normal",d=this.clone(e);return d.prop=t+"box-orient",d.value=y,this.needCascade(e)&&(d.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,d),(d=this.clone(e)).prop=t+"box-direction",d.value=C,this.needCascade(e)&&(d.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,d)}}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["flex-flow","box-direction","box-orient"],e.exports=c},924:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"normalize",value:function(){return"flex"}},{key:"prefixed",value:function(e,t){var r,n,i,u=(n=s(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2009===r?t+"box-flex":2012===r?t+"flex-positive":a(B(p.prototype),"prefixed",this).call(this,e,t)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["flex-grow","flex-positive"],e.exports=c},9415:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(2386),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(p,e);var t,r,i,l,f=(i=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(l){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"normalize",value:function(){return"flex-shrink"}},{key:"prefixed",value:function(e,t){var r,n=o(c(t),2);return r=n[0],t=n[1],2012===r?t+"flex-negative":u(s(p.prototype),"prefixed",this).call(this,e,t)}},{key:"set",value:function(e,t){var r,n=o(c(t),2);if(r=n[0],t=n[1],2012===r||"final"===r)return u(s(p.prototype),"set",this).call(this,e,t)}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));l.names=["flex-shrink","flex-negative"],e.exports=l},2386:e=>{e.exports=function(e){var t;return"-webkit- 2009"===e||"-moz-"===e?t=2009:"-ms-"===e?t=2012:"-webkit-"===e&&(t="final"),"-webkit- 2009"===e&&(e="-webkit-"),[t,e]}},8671:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2386),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(f,e);var t,r,s,c,l=(s=f,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(s);if(c){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function f(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),l.apply(this,arguments)}return t=f,(r=[{key:"set",value:function(e,t){if(2009!==B(t)[0])return i(u(f.prototype),"set",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),f}(r(2495));s.names=["flex-wrap"],e.exports=s},6713:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(7861).list,c=r(2386),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(y,e);var t,r,l,f,p=(l=y,f=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(l);if(f){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function y(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,y),p.apply(this,arguments)}return t=y,(r=[{key:"prefixed",value:function(e,t){var r,n,i,u=(n=c(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2009===r?t+"box-flex":a(B(y.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(){return"flex"}},{key:"set",value:function(e,t){var r=c(t)[0];if(2009===r)return e.value=s.space(e.value)[0],e.value=y.oldValues[e.value]||e.value,a(B(y.prototype),"set",this).call(this,e,t);if(2012===r){var n=s.space(e.value);3===n.length&&"0"===n[2]&&(e.value=n.slice(0,2).concat("0px").join(" "))}return a(B(y.prototype),"set",this).call(this,e,t)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),y}(r(2495));l.names=["flex","box-flex"],l.oldValues={auto:"1",none:"0"},e.exports=l},441:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"prefixed",value:function(e){return"-webkit-"===e?":-webkit-full-screen":"-moz-"===e?":-moz-full-screen":":".concat(e,"fullscreen")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(7718));u.names=[":fullscreen"],e.exports=u},2234:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(5527),l=r(9619),f=r(433),p=r(563),y=r(7220),C=/top|left|right|bottom/gi,d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(h,e);var t,r,i,p,d=(i=h,p=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(p){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function h(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h),d.apply(this,arguments)}return t=h,r=[{key:"replace",value:function(e,t){var r,n=c(e),i=o(n.nodes);try{for(i.s();!(r=i.n()).done;){var a=r.value,u=this.name;if("function"===a.type&&a.value===u)if(a.nodes=this.newDirection(a.nodes),a.nodes=this.normalize(a.nodes,u),"-webkit- old"===t){if(!this.oldWebkit(a))return!1}else a.nodes=this.convertDirection(a.nodes),a.value=t+a.value}}catch(e){i.e(e)}finally{i.f()}return n.toString()}},{key:"replaceFirst",value:function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return r.map((function(e){return" "===e?{type:"space",value:e}:{type:"word",value:e}})).concat(e.slice(1))}},{key:"normalizeUnit",value:function(e,t){var r=parseFloat(e);return"".concat(r/t*360,"deg")}},{key:"normalize",value:function(e,t){if(!e[0])return e;if(/-?\d+(.\d+)?grad/.test(e[0].value))e[0].value=this.normalizeUnit(e[0].value,400);else if(/-?\d+(.\d+)?rad/.test(e[0].value))e[0].value=this.normalizeUnit(e[0].value,2*Math.PI);else if(/-?\d+(.\d+)?turn/.test(e[0].value))e[0].value=this.normalizeUnit(e[0].value,1);else if(e[0].value.includes("deg")){var r=parseFloat(e[0].value);r=l.wrap(0,360,r),e[0].value="".concat(r,"deg")}if("linear-gradient"===t||"repeating-linear-gradient"===t){var n=e[0].value;"0deg"===n||"0"===n?e=this.replaceFirst(e,"to"," ","top"):"90deg"===n?e=this.replaceFirst(e,"to"," ","right"):"180deg"===n?e=this.replaceFirst(e,"to"," ","bottom"):"270deg"===n&&(e=this.replaceFirst(e,"to"," ","left"))}return e}},{key:"newDirection",value:function(e){if("to"===e[0].value)return e;if(C.lastIndex=0,!C.test(e[0].value))return e;e.unshift({type:"word",value:"to"},{type:"space",value:" "});for(var t=2;t<e.length&&"div"!==e[t].type;t++)"word"===e[t].type&&(e[t].value=this.revertDirection(e[t].value));return e}},{key:"isRadial",value:function(e){var t,r="before",n=o(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;if("before"===r&&"space"===i.type)r="at";else if("at"===r&&"at"===i.value)r="after";else{if("after"===r&&"space"===i.type)return!0;if("div"===i.type)break;r="before"}}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"convertDirection",value:function(e){return e.length>0&&("to"===e[0].value?this.fixDirection(e):e[0].value.includes("deg")?this.fixAngle(e):this.isRadial(e)&&this.fixRadial(e)),e}},{key:"fixDirection",value:function(e){e.splice(0,2);var t,r=o(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;if("div"===n.type)break;"word"===n.type&&(n.value=this.revertDirection(n.value))}}catch(e){r.e(e)}finally{r.f()}}},{key:"fixAngle",value:function(e){var t=e[0].value;t=parseFloat(t),t=Math.abs(450-t)%360,t=this.roundFloat(t,3),e[0].value="".concat(t,"deg")}},{key:"fixRadial",value:function(e){var t,r,n,o,i,a,u=[],B=[];for(o=0;o<e.length-2;o++){if(t=e[o],r=e[o+1],n=e[o+2],"space"===t.type&&"at"===r.value&&"space"===n.type){i=o+3;break}u.push(t)}for(o=i;o<e.length;o++){if("div"===e[o].type){a=e[o];break}B.push(e[o])}e.splice.apply(e,[0,o].concat(B,[a],u))}},{key:"revertDirection",value:function(e){return h.directions[e.toLowerCase()]||e}},{key:"roundFloat",value:function(e,t){return parseFloat(e.toFixed(t))}},{key:"oldWebkit",value:function(e){var t=e.nodes,r=c.stringify(e.nodes);if("linear-gradient"!==this.name)return!1;if(t[0]&&t[0].value.includes("deg"))return!1;if(r.includes("px")||r.includes("-corner")||r.includes("-side"))return!1;var n,i=[[]],a=o(t);try{for(a.s();!(n=a.n()).done;){var u=n.value;i[i.length-1].push(u),"div"===u.type&&","===u.value&&i.push([])}}catch(e){a.e(e)}finally{a.f()}this.oldDirection(i),this.colorStops(i),e.nodes=[];for(var B=0,s=i;B<s.length;B++){var l=s[B];e.nodes=e.nodes.concat(l)}return e.nodes.unshift({type:"word",value:"linear"},this.cloneDiv(e.nodes)),e.value="-webkit-gradient",!0}},{key:"oldDirection",value:function(e){var t=this.cloneDiv(e[0]);if("to"!==e[0][0].value)return e.unshift([{type:"word",value:h.oldDirections.bottom},t]);var r,n=[],i=o(e[0].slice(2));try{for(i.s();!(r=i.n()).done;){var a=r.value;"word"===a.type&&n.push(a.value.toLowerCase())}}catch(e){i.e(e)}finally{i.f()}n=n.join(" ");var u=h.oldDirections[n]||n;return e[0]=[{type:"word",value:u},t],e[0]}},{key:"cloneDiv",value:function(e){var t,r=o(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;if("div"===n.type&&","===n.value)return n}}catch(e){r.e(e)}finally{r.f()}return{type:"div",value:",",after:" "}}},{key:"colorStops",value:function(e){for(var t=[],r=0;r<e.length;r++){var n=void 0,o=e[r],i=void 0;if(0!==r){var a=c.stringify(o[0]);o[1]&&"word"===o[1].type?n=o[1].value:o[2]&&"word"===o[2].type&&(n=o[2].value);var u;u=1!==r||n&&"0%"!==n?r!==e.length-1||n&&"100%"!==n?n?"color-stop(".concat(n,", ").concat(a,")"):"color-stop(".concat(a,")"):"to(".concat(a,")"):"from(".concat(a,")");var B=o[o.length-1];e[r]=[{type:"word",value:u}],"div"===B.type&&","===B.value&&(i=e[r].push(B)),t.push(i)}}return t}},{key:"old",value:function(e){if("-webkit-"===e){var t;t="linear-gradient"===this.name?"linear":"repeating-linear-gradient"===this.name?"repeating-linear":"repeating-radial-gradient"===this.name?"repeating-radial":"radial";var r=y.regexp("-webkit-(".concat(t,"-gradient|gradient\\(\\s*").concat(t,")"),!1);return new f(this.name,e+this.name,"-gradient",r)}return u(s(h.prototype),"old",this).call(this,e)}},{key:"add",value:function(e,t){var r=e.prop;if(r.includes("mask")){if("-webkit-"===t||"-webkit- old"===t)return u(s(h.prototype),"add",this).call(this,e,t)}else{if("list-style"!==r&&"list-style-image"!==r&&"content"!==r)return u(s(h.prototype),"add",this).call(this,e,t);if("-webkit-"===t||"-webkit- old"===t)return u(s(h.prototype),"add",this).call(this,e,t)}}}],r&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),h}(p);d.names=["linear-gradient","repeating-linear-gradient","radial-gradient","repeating-radial-gradient"],d.directions={top:"bottom",left:"right",bottom:"top",right:"left"},d.oldDirections={top:"left bottom, left top",left:"right top, left top",bottom:"left top, left bottom",right:"left top, right top","top right":"left bottom, right top","top left":"right bottom, left top","right top":"left bottom, right top","right bottom":"left top, right bottom","bottom right":"left top, right bottom","bottom left":"right top, left bottom","left top":"right bottom, left top","left bottom":"right top, left bottom"},e.exports=d},7686:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(2495),l=r(1637),f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(p,e);var t,r,i,c,f=(i=p,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(c){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"insert",value:function(e,t,r,n){if("-ms-"!==t)return u(s(p.prototype),"insert",this).call(this,e,t,r);var i=l.parse(e),a=o(l.translate(i,0,2),2),B=a[0],c=a[1],f=o(l.translate(i,1,3),2);[["grid-row",B],["grid-row-span",c],["grid-column",f[0]],["grid-column-span",f[1]]].forEach((function(t){var r=o(t,2),n=r[0],i=r[1];l.insertDecl(e,n,i)})),l.warnTemplateSelectorNotFound(e,n),l.warnIfGridRowColumnExists(e,n)}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(c);f.names=["grid-area"],e.exports=f},5389:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"check",value:function(e){return!e.value.includes("flex-")&&"baseline"!==e.value}},{key:"prefixed",value:function(e,t){return t+"grid-column-align"}},{key:"normalize",value:function(){return"justify-self"}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["grid-column-align"],e.exports=u},1485:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2495),s=r(7220).isPureNumber,c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(f,e);var t,r,B,c,l=(B=f,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(c){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function f(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),l.apply(this,arguments)}return t=f,(r=[{key:"insert",value:function(e,t,r,n){if("-ms-"!==t)return i(u(f.prototype),"insert",this).call(this,e,t,r);var o=this.clone(e),a=e.prop.replace(/end$/,"start"),B=t+e.prop.replace(/end$/,"span");if(!e.parent.some((function(e){return e.prop===B}))){var c;if(o.prop=B,e.value.includes("span"))o.value=e.value.replace(/span\s/i,"");else if(e.parent.walkDecls(a,(function(e){c=e})),c){if(!s(c.value))return;var l=Number(e.value)-Number(c.value)+"";o.value=l}else e.warn(n,"Can not prefix ".concat(e.prop," (").concat(a," is not found)"));e.cloneBefore(o)}}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),f}(B);c.names=["grid-row-end","grid-column-end"],e.exports=c},6073:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"check",value:function(e){return!e.value.includes("flex-")&&"baseline"!==e.value}},{key:"prefixed",value:function(e,t){return t+"grid-row-align"}},{key:"normalize",value:function(){return"align-self"}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["grid-row-align"],e.exports=u},9646:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(2495),l=r(1637),f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(p,e);var t,r,i,c,f=(i=p,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(c){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"insert",value:function(e,t,r){if("-ms-"!==t)return u(s(p.prototype),"insert",this).call(this,e,t,r);var n=l.parse(e),i=o(l.translate(n,0,1),2),a=i[0],B=i[1];n[0]&&n[0].includes("span")&&(B=n[0].join("").replace(/\D/g,"")),[[e.prop,a],["".concat(e.prop,"-span"),B]].forEach((function(t){var r=o(t,2),n=r[0],i=r[1];l.insertDecl(e,n,i)}))}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(c);f.names=["grid-row","grid-column"],e.exports=f},9583:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2495),s=r(1637),c=s.prefixTrackProp,l=s.prefixTrackValue,f=s.autoplaceGridItems,p=s.getGridGap,y=s.inheritGridGap,C=r(8882),d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(h,e);var t,r,B,s,d=(B=h,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function h(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h),d.apply(this,arguments)}return t=h,(r=[{key:"prefixed",value:function(e,t){return"-ms-"===t?c({prop:e,prefix:t}):i(u(h.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(e){return e.replace(/^grid-(rows|columns)/,"grid-template-$1")}},{key:"insert",value:function(e,t,r,n){if("-ms-"!==t)return i(u(h.prototype),"insert",this).call(this,e,t,r);var o=e.parent,a=e.prop,B=e.value,s=a.includes("rows"),d=a.includes("columns"),v=o.some((function(e){return"grid-template"===e.prop||"grid-template-areas"===e.prop}));if(v&&s)return!1;var b=new C({options:{}}),m=b.gridStatus(o,n),g=p(e);g=y(e,g)||g;var w=s?g.row:g.column;"no-autoplace"!==m&&!0!==m||v||(w=null);var O=l({value:B,gap:w});e.cloneBefore({prop:c({prop:a,prefix:t}),value:O});var j=o.nodes.find((function(e){return"grid-auto-flow"===e.prop})),S="row";if(j&&!b.disabled(j,n)&&(S=j.value.trim()),"autoplace"===m){var x=o.nodes.find((function(e){return"grid-template-rows"===e.prop}));if(!x&&v)return;if(!x&&!v)return void e.warn(n,"Autoplacement does not work without grid-template-rows property");o.nodes.find((function(e){return"grid-template-columns"===e.prop}))||v||e.warn(n,"Autoplacement does not work without grid-template-columns property"),d&&!v&&f(e,n,g,S)}}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),h}(B);d.names=["grid-template-rows","grid-template-columns","grid-rows","grid-columns"],e.exports=d},1401:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"check",value:function(e){var t=e.value;return!t.includes("/")&&!t.includes("span")}},{key:"normalize",value:function(e){return e.replace("-start","")}},{key:"prefixed",value:function(e,t){var r=i(u(l.prototype),"prefixed",this).call(this,e,t);return"-ms-"===t&&(r=r.replace("-start","")),r}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["grid-row-start","grid-column-start"],e.exports=B},1520:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2495),s=r(1637),c=s.parseGridAreas,l=s.warnMissedAreas,f=s.prefixTrackProp,p=s.prefixTrackValue,y=s.getGridGap,C=s.warnGridGap,d=s.inheritGridGap,h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(v,e);var t,r,B,s,h=(B=v,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function v(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,v),h.apply(this,arguments)}return t=v,(r=[{key:"insert",value:function(e,t,r,n){if("-ms-"!==t)return i(u(v.prototype),"insert",this).call(this,e,t,r);var o=!1,a=!1,B=e.parent,s=y(e);s=d(e,s)||s,B.walkDecls(/-ms-grid-rows/,(function(e){return e.remove()})),B.walkDecls(/grid-template-(rows|columns)/,(function(e){if("grid-template-rows"===e.prop){a=!0;var r=e.prop,n=e.value;e.cloneBefore({prop:f({prop:r,prefix:t}),value:p({value:n,gap:s.row})})}else o=!0}));var h=e.value.trim().slice(1,-1).split(/["']\s*["']?/g);o&&!a&&s.row&&h.length>1&&e.cloneBefore({prop:"-ms-grid-rows",value:p({value:"repeat(".concat(h.length,", auto)"),gap:s.row}),raws:{}}),C({gap:s,hasColumns:o,decl:e,result:n});var b=c({rows:h,gap:s});return l(b,e,n),e}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),v}(B);h.names=["grid-template-areas"],e.exports=h},7383:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2495),s=r(1637),c=s.parseTemplate,l=s.warnMissedAreas,f=s.getGridGap,p=s.warnGridGap,y=s.inheritGridGap,C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(d,e);var t,r,B,s,C=(B=d,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function d(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,d),C.apply(this,arguments)}return t=d,(r=[{key:"insert",value:function(e,t,r,n){if("-ms-"!==t)return i(u(d.prototype),"insert",this).call(this,e,t,r);if(!e.parent.some((function(e){return"-ms-grid-rows"===e.prop}))){var o=f(e),a=y(e,o),B=c({decl:e,gap:a||o}),s=B.rows,C=B.columns,h=B.areas,v=Object.keys(h).length>0,b=Boolean(s),m=Boolean(C);return p({gap:o,hasColumns:m,decl:e,result:n}),l(h,e,n),(b&&m||v)&&e.cloneBefore({prop:"-ms-grid-rows",value:s,raws:{}}),m&&e.cloneBefore({prop:"-ms-grid-columns",value:C,raws:{}}),e}}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),d}(B);C.names=["grid-template"],e.exports=C},1637:(e,t,r)=>{function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=i(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||i(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){if(e){if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var u=r(5527),B=r(7861).list,s=r(7220).uniq,c=r(7220).escapeRegexp,l=r(7220).splitSelector;function f(e){return e&&2===e.length&&"span"===e[0]&&parseInt(e[1],10)>0?[!1,parseInt(e[1],10)]:e&&1===e.length&&parseInt(e[0],10)>0?[parseInt(e[0],10),!1]:[!1,!1]}function p(e,t){var r=e.nodes,n=t.gap,o=r.reduce((function(e,t){return"div"===t.type&&","===t.value?e.key="size":e[e.key].push(u.stringify(t)),e}),{key:"count",size:[],count:[]}),i=o.count,a=o.size;if(n){a=a.filter((function(e){return e.trim()}));for(var B=[],s=function(e){a.forEach((function(t,r){(r>0||e>1)&&B.push(n),B.push(t)}))},c=1;c<=i;c++)s(c);return B.join(" ")}return"(".concat(a.join(""),")[").concat(i.join(""),"]")}function y(e){var t=e.value,r=e.gap,n=u(t).nodes.reduce((function(e,t){return"function"===t.type&&"repeat"===t.value?e.concat({type:"word",value:p(t,{gap:r})}):r&&"space"===t.type?e.concat({type:"space",value:" "},{type:"word",value:r},t):e.concat(t)}),[]);return u.stringify(n)}t.translate=function(e,t,r){var n=e[t],i=e[r];if(!n)return[!1,!1];var a=o(f(n),2),u=a[0],B=a[1],s=o(f(i),2),c=s[0],l=s[1];return u&&!i?[u,!1]:B&&c?[c-B,B]:u&&l?[u,l]:u&&c?[u,c-u]:[!1,!1]},t.parse=function(e){var t=u(e.value),r=[],o=0;r[o]=[];var i,a=n(t.nodes);try{for(a.s();!(i=a.n()).done;){var B=i.value;"div"===B.type?r[o+=1]=[]:"word"===B.type&&r[o].push(B.value)}}catch(e){a.e(e)}finally{a.f()}return r},t.insertDecl=function(e,t,r){r&&!e.parent.some((function(e){return e.prop==="-ms-".concat(t)}))&&e.cloneBefore({prop:"-ms-".concat(t),value:r.toString()})},t.prefixTrackProp=function(e){var t=e.prop;return e.prefix+t.replace("template-","")},t.prefixTrackValue=y;var C=/^\.+$/;function d(e,t){return{start:e,end:t,span:t-e}}function h(e){var t=e.rows,r=e.gap;return t.reduce((function(e,t,n){return r.row&&(n*=2),""===t.trim()||function(e){return e.trim().split(/\s+/g)}(t).forEach((function(t,o){if(!C.test(t))if(r.column&&(o*=2),void 0===e[t])e[t]={column:d(o+1,o+2),row:d(n+1,n+2)};else{var i=e[t],a=i.column,u=i.row;a.start=Math.min(a.start,o+1),a.end=Math.max(a.end,o+2),a.span=a.end-a.start,u.start=Math.min(u.start,n+1),u.end=Math.max(u.end,n+2),u.span=u.end-u.start}})),e}),{})}function v(e){return e.areas.length>e.rows.length&&e.rows.push("auto"),e}function b(e){var t=e.decl,r=e.gap,n=u(t.value).nodes.reduce((function(e,t){var r=t.type,n=t.value;return function(e){return"word"===e.type&&/^\[.+]$/.test(e.value)}(t)||"space"===r||("string"===r&&(e=v(e)).areas.push(n),"word"!==r&&"function"!==r||e[e.key].push(u.stringify(t)),"div"===r&&"/"===n&&(e.key="columns",e=v(e))),e}),{key:"rows",columns:[],rows:[],areas:[]});return{areas:h({rows:n.areas,gap:r}),columns:y({value:n.columns.join(" "),gap:r.column}),rows:y({value:n.rows.join(" "),gap:r.row})}}function m(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=[{prop:"-ms-grid-row",value:String(e.row.start)}];return(e.row.span>1||t)&&n.push({prop:"-ms-grid-row-span",value:String(e.row.span)}),n.push({prop:"-ms-grid-column",value:String(e.column.start)}),(e.column.span>1||r)&&n.push({prop:"-ms-grid-column-span",value:String(e.column.span)}),n}function g(e){return"atrule"===e.type&&"media"===e.name?e:!!e.parent&&g(e.parent)}function w(e,t){return(e=e.map((function(e){var t=B.space(e),r=B.comma(e);return t.length>r.length&&(e=t.slice(-1).join("")),e}))).map((function(e){return t.map((function(t,r){return"".concat(0===r?"":" ").concat(t," > ").concat(e)}))}))}function O(e,t){return e.selectors.some((function(e){return t.selectors.includes(e)}))}function j(e){var t={};return e.parent.walkDecls(/^(grid-)?((row|column)-)?gap$/,(function(e){var r=e.prop,n=e.value;if(/^(grid-)?gap$/.test(r)){var i=o(u(n).nodes,3),a=i[0],B=i[2];t.row=a&&u.stringify(a),t.column=B?u.stringify(B):t.row}/^(grid-)?row-gap$/.test(r)&&(t.row=n),/^(grid-)?column-gap$/.test(r)&&(t.column=n)})),t}function S(e){return e?(u(e).walk((function(e){"word"===e.type&&/min|max/g.test(e.value)?t=e.value:e.value.includes("px")&&(r=parseInt(e.value.replace(/\D/g,"")))})),[t,r]):[];var t,r}function x(e,t){var r=e.parent,n=g(r),i=r.root(),a=l(r.selector);if(Object.keys(t).length>0)return!1;var u,B=o(S(n.params),1)[0],s=a[0],f=c(s[s.length-1][0]),p=new RegExp("(".concat(f,"$)|(").concat(f,"[,.])"));return i.walkRules(p,(function(e){var t;if(r.toString()===e.toString())return!1;if(e.walkDecls("grid-gap",(function(e){return t=j(e)})),!t||0===Object.keys(t).length)return!0;if(!function(e,t){var r,n=l(e),i=l(t);if(n[0].length<i[0].length)return!1;if(n[0].length>i[0].length){var a=n[0].reduce((function(e,t,r){return o(t,1)[0]===i[0][0][0]&&r}),!1);a&&(r=i[0].every((function(e,t){return e.every((function(e,r){return n[0].slice(a)[t][r]===e}))})))}else r=i.some((function(e){return e.every((function(e,t){return e.every((function(e,r){return n[0][t][r]===e}))}))}));return r}(r.selector,e.selector))return!0;var n=g(e);return n?S(n.params)[0]===B?(u=t,!0):void 0:(u=t,!0)})),!!(u&&Object.keys(u).length>0)&&u}function P(e){return u(e).nodes.reduce((function(e,t){if("function"===t.type&&"repeat"===t.value){var r="count",n=o(t.nodes.reduce((function(e,t){return"word"===t.type&&"count"===r?(e[0]=Math.abs(parseInt(t.value)),e):"div"===t.type&&","===t.value?(r="value",e):("value"===r&&(e[1]+=u.stringify(t)),e)}),[0,""]),2),i=n[0],a=n[1];if(i)for(var B=0;B<i;B++)e.push(a);return e}return"space"===t.type?e:e.concat(u.stringify(t))}),[])}t.parseGridAreas=h,t.parseTemplate=b,t.insertAreas=function(e,t){var r=function(e){var t=[];return e.walkDecls(/grid-template(-areas)?$/,(function(e){var r=e.parent,n=g(r),o=j(e),u=b({decl:e,gap:x(e,o)||o}).areas,B=Object.keys(u);if(0===B.length)return!0;var c,l=t.reduce((function(e,t,r){var n=t.allAreas;return n&&B.some((function(e){return n.includes(e)}))?r:e}),null);if(null!==l){var f=t[l],p=f.allAreas,y=f.rules,C=y.some((function(e){return!1===e.hasDuplicates&&O(e,r)})),d=!1,h=y.reduce((function(e,t){return!t.params&&O(t,r)?(d=!0,t.duplicateAreaNames):(d||B.forEach((function(r){t.areas[r]&&e.push(r)})),s(e))}),[]);y.forEach((function(e){B.forEach((function(t){var r=e.areas[t];r&&r.row.span!==u[t].row.span&&(u[t].row.updateSpan=!0),r&&r.column.span!==u[t].column.span&&(u[t].column.updateSpan=!0)}))})),t[l].allAreas=s([].concat(function(e){if(Array.isArray(e))return a(e)}(c=p)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(c)||i(c)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),B)),t[l].rules.push({hasDuplicates:!C,params:n.params,selectors:r.selectors,node:r,duplicateAreaNames:h,areas:u})}else t.push({allAreas:B,areasCount:0,rules:[{hasDuplicates:!1,duplicateRules:[],params:n.params,selectors:r.selectors,node:r,duplicateAreaNames:[],areas:u}]})})),t}(e);if(0!==r.length){var o={};return e.walkDecls("grid-area",(function(i){var a=i.parent,u="-ms-grid-row"===a.first.prop,s=g(a);if(!t(i)){var c=e.index(s||a),l=i.value,f=r.filter((function(e){return e.allAreas.includes(l)}))[0];if(!f)return!0;var p=f.allAreas[f.allAreas.length-1],y=B.space(a.selector),C=B.comma(a.selector),d=y.length>1&&y.length>C.length;if(u)return!1;o[p]||(o[p]={});var h,v=!1,b=n(f.rules);try{var O=function(){var t=h.value,r=t.areas[l],n=t.duplicateAreaNames.includes(l);if(!r){var u,B=o[p].lastRule;return u=B?e.index(B):-1,c>u&&(o[p].lastRule=s||a),"continue"}if(t.params&&!o[p][t.params]&&(o[p][t.params]=[]),t.hasDuplicates&&n||t.params)if(!t.hasDuplicates||t.params||d){if(t.hasDuplicates&&!t.params&&d&&a.selector.includes(t.selectors[0]))a.walkDecls(/-ms-grid-(row|column)/,(function(e){return e.remove()})),m(r,r.row.updateSpan,r.column.updateSpan).reverse().forEach((function(e){return a.prepend(Object.assign(e,{raws:{between:i.raws.between}}))}));else if(t.params){var f=a.clone();f.removeAll(),m(r,r.row.updateSpan,r.column.updateSpan).reverse().forEach((function(e){return f.prepend(Object.assign(e,{raws:{between:i.raws.between}}))})),t.hasDuplicates&&n&&(f.selectors=w(f.selectors,t.selectors)),f.raws=t.node.raws,e.index(t.node.parent)>c?t.node.parent.append(f):o[p][t.params].push(f),v||(o[p].lastRule=s||a)}}else{var y=a.clone();y.removeAll(),m(r,r.row.updateSpan,r.column.updateSpan).reverse().forEach((function(e){return y.prepend(Object.assign(e,{raws:{between:i.raws.between}}))})),y.selectors=w(y.selectors,t.selectors),o[p].lastRule&&o[p].lastRule.after(y),o[p].lastRule=y,v=!0}else m(r,!1,!1).reverse().forEach((function(e){return a.prepend(Object.assign(e,{raws:{between:i.raws.between}}))})),o[p].lastRule=a,v=!0};for(b.s();!(h=b.n()).done;)O()}catch(e){b.e(e)}finally{b.f()}}})),void Object.keys(o).forEach((function(e){var t=o[e],r=t.lastRule;Object.keys(t).reverse().filter((function(e){return"lastRule"!==e})).forEach((function(e){t[e].length>0&&r&&(r.after({name:"media",params:e}),r.next().append(t[e]))}))}))}},t.warnMissedAreas=function(e,t,r){var n=Object.keys(e);t.root().walkDecls("grid-area",(function(e){n=n.filter((function(t){return t!==e.value}))})),n.length>0&&t.warn(r,"Can not find grid areas: "+n.join(", "))},t.warnTemplateSelectorNotFound=function(e,t){var r=e.parent,o=e.root(),i=!1,a=B.space(r.selector).filter((function(e){return">"!==e})).slice(0,-1);if(a.length>0){var u=!1,s=null;o.walkDecls(/grid-template(-areas)?$/,(function(t){var r,o=t.parent,c=o.selectors,l=b({decl:t,gap:j(t)}).areas[e.value],f=n(c);try{for(f.s();!(r=f.n()).done;){var p=r.value;if(u)break;var y=B.space(p).filter((function(e){return">"!==e}));u=y.every((function(e,t){return e===a[t]}))}}catch(e){f.e(e)}finally{f.f()}if(u||!l)return!0;s||(s=o.selector),s&&s!==o.selector&&(i=!0)})),!u&&i&&e.warn(t,"Autoprefixer cannot find a grid-template "+'containing the duplicate grid-area "'.concat(e.value,'" ')+"with full selector matching: ".concat(a.join(" ")))}},t.warnIfGridRowColumnExists=function(e,t){var r=e.parent,n=[];r.walkDecls(/^grid-(row|column)/,(function(e){e.prop.endsWith("-end")||e.value.startsWith("span")||e.prop.endsWith("-gap")||n.push(e)})),n.length>0&&n.forEach((function(e){e.warn(t,"You already have a grid-area declaration present in the rule. "+"You should use either grid-area or ".concat(e.prop,", not both"))}))},t.getGridGap=j,t.inheritGridGap=x,t.warnGridGap=function(e){var t=e.gap,r=e.hasColumns,n=e.decl,o=e.result,i=t.row&&t.column;!r&&(i||t.column&&!t.row)&&(delete t.column,n.warn(o,"Can not implement grid-gap without grid-template-columns"))},t.autoplaceGridItems=function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"row",o=e.parent,i=P(o.nodes.find((function(e){return"grid-template-rows"===e.prop})).value),a=P(e.value),u=h({rows:i.map((function(e,t){return Array.from({length:a.length},(function(e,r){return r+t*a.length+1})).join(" ")})),gap:r}),B=Object.keys(u),s=B.map((function(e){return u[e]}));n.includes("column")&&(s=s.sort((function(e,t){return e.column.start-t.column.start}))),s.reverse().forEach((function(e,t){var r=e.column,n=e.row,i=o.selectors.map((function(e){return e+" > *:nth-child(".concat(B.length-t,")")})).join(", "),a=o.clone().removeAll();a.selector=i,a.append({prop:"-ms-grid-row",value:n.start}),a.append({prop:"-ms-grid-column",value:r.start}),o.after(a)}))}},6210:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"check",value:function(e){return"pixelated"===e.value}},{key:"prefixed",value:function(e,t){return"-ms-"===t?"-ms-interpolation-mode":i(u(l.prototype),"prefixed",this).call(this,e,t)}},{key:"set",value:function(e,t){return"-ms-"!==t?i(u(l.prototype),"set",this).call(this,e,t):(e.prop="-ms-interpolation-mode",e.value="nearest-neighbor",e)}},{key:"normalize",value:function(){return"image-rendering"}},{key:"process",value:function(e,t){return i(u(l.prototype),"process",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["image-rendering","interpolation-mode"],e.exports=B},567:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"replace",value:function(e,t){var r=i(u(l.prototype),"replace",this).call(this,e,t);return"-webkit-"===t&&(r=r.replace(/("[^"]+"|'[^']+')(\s+\d+\w)/gi,"url($1)$2")),r}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(563));B.names=["image-set"],e.exports=B},9511:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"prefixed",value:function(e,t){return t+e.replace("-inline","")}},{key:"normalize",value:function(e){return e.replace(/(margin|padding|border)-(start|end)/,"$1-inline-$2")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["border-inline-start","border-inline-end","margin-inline-start","margin-inline-end","padding-inline-start","padding-inline-end","border-start","border-end","margin-start","margin-end","padding-start","padding-end"],e.exports=u},6843:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(433);function s(e){return new RegExp("(^|[\\s,(])(".concat(e,"($|[\\s),]))"),"gi")}var c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(c);if(l){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"regexp",value:function(){return this.regexpCache||(this.regexpCache=s(this.name)),this.regexpCache}},{key:"isStretch",value:function(){return"stretch"===this.name||"fill"===this.name||"fill-available"===this.name}},{key:"replace",value:function(e,t){return"-moz-"===t&&this.isStretch()?e.replace(this.regexp(),"$1-moz-available$3"):"-webkit-"===t&&this.isStretch()?e.replace(this.regexp(),"$1-webkit-fill-available$3"):i(u(p.prototype),"replace",this).call(this,e,t)}},{key:"old",value:function(e){var t=e+this.name;return this.isStretch()&&("-moz-"===e?t="-moz-available":"-webkit-"===e&&(t="-webkit-fill-available")),new B(this.name,t,t,s(t))}},{key:"add",value:function(e,t){if(!e.prop.includes("grid")||"-webkit-"===t)return i(u(p.prototype),"add",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(563));c.names=["max-content","min-content","fit-content","fill","fill-available","stretch"],e.exports=c},3485:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"prefixed",value:function(e,t){var r,n,i,u=(n=s(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2009===r?t+"box-pack":2012===r?t+"flex-pack":a(B(p.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(){return"justify-content"}},{key:"set",value:function(e,t){var r=s(t)[0];if(2009===r||2012===r){var n=p.oldValues[e.value]||e.value;if(e.value=n,2009!==r||"distribute"!==n)return a(B(p.prototype),"set",this).call(this,e,t)}else if("final"===r)return a(B(p.prototype),"set",this).call(this,e,t)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["justify-content","flex-pack","box-pack"],c.oldValues={"flex-end":"end","flex-start":"start","space-between":"justify","space-around":"distribute"},e.exports=c},3832:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"normalize",value:function(){return this.name.replace("box-image","border")}},{key:"prefixed",value:function(e,t){var r=i(u(l.prototype),"prefixed",this).call(this,e,t);return"-webkit-"===t&&(r=r.replace("border","box-image")),r}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["mask-border","mask-border-source","mask-border-slice","mask-border-width","mask-border-outset","mask-border-repeat","mask-box-image","mask-box-image-source","mask-box-image-slice","mask-box-image-width","mask-box-image-outset","mask-box-image-repeat"],e.exports=B},260:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"insert",value:function(e,t,r){var n,o,i="mask-composite"===e.prop,a=(n=(n=i?e.value.split(","):e.value.match(c.regexp)||[]).map((function(e){return e.trim()})).filter((function(e){return e}))).length;if(a&&((o=this.clone(e)).value=n.map((function(e){return c.oldValues[e]||e})).join(", "),n.includes("intersect")&&(o.value+=", xor"),o.prop=t+"mask-composite"),i){if(!a)return;return this.needCascade(e)&&(o.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,o)}var u=this.clone(e);return u.prop=t+u.prop,a&&(u.value=u.value.replace(c.regexp,"")),this.needCascade(e)&&(u.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,u),a?(this.needCascade(e)&&(o.raws.before=this.calcBefore(r,e,t)),e.parent.insertBefore(e,o)):e}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["mask","mask-composite"],u.oldValues={add:"source-over",subtract:"source-out",intersect:"source-in",exclude:"xor"},u.regexp=new RegExp("\\s+(".concat(Object.keys(u.oldValues).join("|"),")\\b(?!\\))\\s*(?=[,])"),"ig"),e.exports=u},681:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(2386),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(p,e);var t,r,c,l,f=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(c);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"prefixed",value:function(e,t){var r,n,i,u=(n=s(t),i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(n,i)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return r=u[0],t=u[1],2009===r?t+"box-ordinal-group":2012===r?t+"flex-order":a(B(p.prototype),"prefixed",this).call(this,e,t)}},{key:"normalize",value:function(){return"order"}},{key:"set",value:function(e,t){return 2009===s(t)[0]&&/\d/.test(e.value)?(e.value=(parseInt(e.value)+1).toString(),a(B(p.prototype),"set",this).call(this,e,t)):a(B(p.prototype),"set",this).call(this,e,t)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(r(2495));c.names=["order","flex-order","box-ordinal-group"],e.exports=c},127:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"prefixed",value:function(e,t){return t+"scroll-chaining"}},{key:"normalize",value:function(){return"overscroll-behavior"}},{key:"set",value:function(e,t){return"auto"===e.value?e.value="chained":"none"!==e.value&&"contain"!==e.value||(e.value="none"),i(u(l.prototype),"set",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["overscroll-behavior","scroll-chaining"],e.exports=B},967:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(433),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(f,e);var t,r,s,c,l=(s=f,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(s);if(c){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function f(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),l.apply(this,arguments)}return t=f,(r=[{key:"replace",value:function(e,t){return"-webkit-"===t?e.replace(this.regexp(),"$1-webkit-optimize-contrast"):"-moz-"===t?e.replace(this.regexp(),"$1-moz-crisp-edges"):i(u(f.prototype),"replace",this).call(this,e,t)}},{key:"old",value:function(e){return"-webkit-"===e?new B(this.name,"-webkit-optimize-contrast"):"-moz-"===e?new B(this.name,"-moz-crisp-edges"):i(u(f.prototype),"old",this).call(this,e)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),f}(r(563));s.names=["pixelated"],e.exports=s},3903:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},u.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c=r(2495),l=r(1637),f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(p,e);var t,r,i,c,f=(i=p,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(c){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.apply(this,arguments)}return t=p,(r=[{key:"insert",value:function(e,t,r){if("-ms-"!==t)return u(s(p.prototype),"insert",this).call(this,e,t,r);if(!e.parent.some((function(e){return"-ms-grid-row-align"===e.prop}))){var n=o(l.parse(e),1),i=o(n[0],2),a=i[0],B=i[1];B?(l.insertDecl(e,"grid-row-align",a),l.insertDecl(e,"grid-column-align",B)):(l.insertDecl(e,"grid-row-align",a),l.insertDecl(e,"grid-column-align",a))}}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),p}(c);f.names=["place-self"],e.exports=f},4439:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"prefixed",value:function(e){return"-ms-"===e?":-ms-input-placeholder":":".concat(e,"placeholder-shown")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(7718));u.names=[":placeholder-shown"],e.exports=u},2225:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"possible",value:function(){return i(u(l.prototype),"possible",this).call(this).concat(["-moz- old","-ms- old"])}},{key:"prefixed",value:function(e){return"-webkit-"===e?"::-webkit-input-placeholder":"-ms-"===e?"::-ms-input-placeholder":"-ms- old"===e?":-ms-input-placeholder":"-moz- old"===e?":-moz-placeholder":"::".concat(e,"placeholder")}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(7718));B.names=["::placeholder"],e.exports=B},4038:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(c,e);var t,r,u,B,s=(u=c,B=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(B){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),s.apply(this,arguments)}return t=c,(r=[{key:"prefixed",value:function(e,t){return"-moz-"===t?"color-adjust":t+"print-color-adjust"}},{key:"normalize",value:function(){return"print-color-adjust"}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(r(2495));u.names=["print-color-adjust","color-adjust"],e.exports=u},739:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"set",value:function(e,t){return"text-decoration-skip-ink"===e.prop&&"auto"===e.value?(e.prop=t+"text-decoration-skip",e.value="ink",e):i(u(l.prototype),"set",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["text-decoration-skip-ink","text-decoration-skip"],e.exports=B},2202:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(2495),B=["none","underline","overline","line-through","blink","inherit","initial","unset"],s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(l,e);var t,r,u,s,c=(u=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(s){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"check",value:function(e){return e.value.split(/\s+/).some((function(e){return!B.includes(e)}))}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(u);s.names=["text-decoration"],e.exports=s},3407:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"set",value:function(e,t){return"-webkit-"===t&&(e.value=e.value.replace(/\s*(right|left)\s*/i,"")),i(u(l.prototype),"set",this).call(this,e,t)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["text-emphasis-position"],e.exports=B},2742:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(f,e);var t,r,s,c,l=(s=f,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(s);if(c){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function f(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),l.apply(this,arguments)}return t=f,(r=[{key:"keyframeParents",value:function(e){for(var t=e.parent;t;){if("atrule"===t.type&&"keyframes"===t.name)return!0;t=t.parent}return!1}},{key:"contain3d",value:function(e){if("transform-origin"===e.prop)return!1;var t,r=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(f.functions3d);try{for(r.s();!(t=r.n()).done;){var n=t.value;if(e.value.includes("".concat(n,"(")))return!0}}catch(e){r.e(e)}finally{r.f()}return!1}},{key:"set",value:function(e,t){return e=a(B(f.prototype),"set",this).call(this,e,t),"-ms-"===t&&(e.value=e.value.replace(/rotatez/gi,"rotate")),e}},{key:"insert",value:function(e,t,r){if("-ms-"===t){if(!this.contain3d(e)&&!this.keyframeParents(e))return a(B(f.prototype),"insert",this).call(this,e,t,r)}else{if("-o-"!==t)return a(B(f.prototype),"insert",this).call(this,e,t,r);if(!this.contain3d(e))return a(B(f.prototype),"insert",this).call(this,e,t,r)}}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),f}(r(2495));s.names=["transform","transform-origin"],s.functions3d=["matrix3d","translate3d","translateZ","scale3d","scaleZ","rotate3d","rotateX","rotateY","perspective"],e.exports=s},3265:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"set",value:function(e,t){return"-ms-"===t&&"contain"===e.value&&(e.value="element"),i(u(l.prototype),"set",this).call(this,e,t)}},{key:"insert",value:function(e,t,r){return"all"===e.value&&"-ms-"===t?void 0:i(u(l.prototype),"insert",this).call(this,e,t,r)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["user-select"],e.exports=B},8321:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),c.apply(this,arguments)}return t=l,(r=[{key:"insert",value:function(e,t,r){if("-ms-"===t){var n=this.set(this.clone(e),t);this.needCascade(e)&&(n.raws.before=this.calcBefore(r,e,t));var o="ltr";return e.parent.nodes.forEach((function(e){"direction"===e.prop&&("rtl"!==e.value&&"ltr"!==e.value||(o=e.value))})),n.value=l.msValues[o][e.value]||e.value,e.parent.insertBefore(e,n)}return i(u(l.prototype),"insert",this).call(this,e,t,r)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(2495));B.names=["writing-mode"],B.msValues={ltr:{"horizontal-tb":"lr-tb","vertical-rl":"tb-rl","vertical-lr":"tb-lr"},rtl:{"horizontal-tb":"rl-tb","vertical-rl":"bt-rl","vertical-lr":"bt-lr"}},e.exports=B},7550:(e,t,r)=>{function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var i=r(2841),a={ie:"IE",ie_mob:"IE Mobile",ios_saf:"iOS Safari",op_mini:"Opera Mini",op_mob:"Opera Mobile",and_chr:"Chrome for Android",and_ff:"Firefox for Android",and_uc:"UC for Android",and_qq:"QQ Browser",kaios:"KaiOS Browser",baidu:"Baidu Browser",samsung:"Samsung Internet"};function u(e,t,r){var n="  ".concat(e);return r&&(n+=" *"),n+=": ",(n+=t.map((function(e){return e.replace(/^-(.*)-$/g,"$1")})).join(", "))+"\n"}e.exports=function(e){if(0===e.browsers.selected.length)return"No browsers selected";var t,r,o={},B=n(e.browsers.selected);try{for(B.s();!(t=B.n()).done;){var s=t.value.split(" "),c=s[0],l=s[1];o[c=a[c]||(r=c).slice(0,1).toUpperCase()+r.slice(1)]?o[c].push(l):o[c]=[l]}}catch(e){B.e(e)}finally{B.f()}var f="Browsers:\n";for(var p in o){var y=o[p];y=y.sort((function(e,t){return parseFloat(t)-parseFloat(e)})),f+="  ".concat(p,": ").concat(y.join(", "),"\n")}var C=i.coverage(e.browsers.selected),d=Math.round(100*C)/100;f+="\nThese browsers account for ".concat(d,"% of all users globally\n");var h=[];for(var v in e.add){var b=e.add[v];"@"===v[0]&&b.prefixes&&h.push(u(v,b.prefixes))}h.length>0&&(f+="\nAt-Rules:\n".concat(h.sort().join("")));var m,g=[],w=n(e.add.selectors);try{for(w.s();!(m=w.n()).done;){var O=m.value;O.prefixes&&g.push(u(O.name,O.prefixes))}}catch(e){w.e(e)}finally{w.f()}g.length>0&&(f+="\nSelectors:\n".concat(g.sort().join("")));var j=[],S=[],x=!1;for(var P in e.add){var k=e.add[P];if("@"!==P[0]&&k.prefixes){var A=0===P.indexOf("grid-");A&&(x=!0),S.push(u(P,k.prefixes,A))}if(Array.isArray(k.values)){var E,D=n(k.values);try{for(D.s();!(E=D.n()).done;){var R=E.value,T=R.name.includes("grid");T&&(x=!0);var I=u(R.name,R.prefixes,T);j.includes(I)||j.push(I)}}catch(e){D.e(e)}finally{D.f()}}}return S.length>0&&(f+="\nProperties:\n".concat(S.sort().join(""))),j.length>0&&(f+="\nValues:\n".concat(j.sort().join(""))),x&&(f+="\n* - Prefixes will be added only on grid: true option.\n"),h.length||g.length||S.length||j.length||(f+="\nAwesome! Your browsers don't require any vendor prefixes.\nNow you can remove Autoprefixer from build steps."),f}},8522:e=>{function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function n(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var a=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.prefix=r,this.prefixed=t.prefixed(this.prefix),this.regexp=t.regexp(this.prefix),this.prefixeds=t.possible().map((function(e){return[t.prefixed(e),t.regexp(e)]})),this.unprefixed=t.name,this.nameRegexp=t.regexp()}var t,o;return t=e,(o=[{key:"isHack",value:function(e){for(var t=e.parent.index(e)+1,o=e.parent.nodes;t<o.length;){var i=o[t].selector;if(!i)return!0;if(i.includes(this.unprefixed)&&i.match(this.nameRegexp))return!1;var a,u=!1,B=r(this.prefixeds);try{for(B.s();!(a=B.n()).done;){var s=(f=a.value,p=2,function(e){if(Array.isArray(e))return e}(f)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(f,p)||n(f,p)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=s[0],l=s[1];if(i.includes(c)&&i.match(l)){u=!0;break}}}catch(e){B.e(e)}finally{B.f()}if(!u)return!0;t+=1}var f,p;return!0}},{key:"check",value:function(e){return!!e.selector.includes(this.prefixed)&&!!e.selector.match(this.regexp)&&!this.isHack(e)}}])&&i(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=a},433:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var i=r(7220),a=function(){function e(t,r,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.unprefixed=t,this.prefixed=r,this.string=n||r,this.regexp=o||i.regexp(r)}var t,r;return t=e,(r=[{key:"check",value:function(e){return!!e.includes(this.string)&&!!e.match(this.regexp)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=a},3227:(e,t,r)=>{function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==i(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===i(o)?o:String(o)),n)}var o}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}var a=r(4977),u=r(5741),B=r(7220);function s(e,t){for(var r=new e.constructor,n=0,o=Object.keys(e||{});n<o.length;n++){var a=o[n],u=e[a];"parent"===a&&"object"===i(u)?t&&(r[a]=t):"source"===a||null===a?r[a]=u:Array.isArray(u)?r[a]=u.map((function(e){return s(e,r)})):"_autoprefixerPrefix"!==a&&"_autoprefixerValues"!==a&&"proxyCache"!==a&&("object"===i(u)&&null!==u&&(u=s(u,r)),r[a]=u)}return r}var c=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.prefixes=r,this.name=t,this.all=n}var t,r,i;return t=e,i=[{key:"hack",value:function(e){var t=this;return this.hacks||(this.hacks={}),e.names.map((function(r){return t.hacks[r]=e,t.hacks[r]}))}},{key:"load",value:function(e,t,r){var n=this.hacks&&this.hacks[e];return n?new n(e,t,r):new this(e,t,r)}},{key:"clone",value:function(e,t){var r=s(e);for(var n in t)r[n]=t[n];return r}}],(r=[{key:"parentPrefix",value:function(e){var t;return t=void 0!==e._autoprefixerPrefix?e._autoprefixerPrefix:"decl"===e.type&&"-"===e.prop[0]?u.prefix(e.prop):"root"!==e.type&&("rule"===e.type&&e.selector.includes(":-")&&/:(-\w+-)/.test(e.selector)?e.selector.match(/:(-\w+-)/)[1]:"atrule"===e.type&&"-"===e.name[0]?u.prefix(e.name):this.parentPrefix(e.parent)),a.prefixes().includes(t)||(t=!1),e._autoprefixerPrefix=t,e._autoprefixerPrefix}},{key:"process",value:function(e,t){if(this.check(e)){var r,o=this.parentPrefix(e),i=this.prefixes.filter((function(e){return!o||o===B.removeNote(e)})),a=[],u=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(i);try{for(u.s();!(r=u.n()).done;){var s=r.value;this.add(e,s,a.concat([s]),t)&&a.push(s)}}catch(e){u.e(e)}finally{u.f()}return a}}},{key:"clone",value:function(t,r){return e.clone(t,r)}}])&&o(t.prototype,r),i&&o(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=c},1112:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=i(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function i(e,t){if(e){if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function u(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var B=r(5741),s=r(2495),c=r(5695),l=r(8670),f=r(8882),p=r(3968),y=r(4977),C=r(7718),d=r(3398),h=r(563),v=r(7220),b=r(441),m=r(2225),g=r(4439),w=r(5747),O=r(6713),j=r(681),S=r(1139),x=r(1485),P=r(8509),k=r(2242),A=r(924),E=r(8671),D=r(7686),R=r(3903),T=r(1401),I=r(9256),_=r(2940),F=r(6771),M=r(3832),L=r(260),G=r(1688),N=r(3265),H=r(9415),U=r(4307),J=r(8321),K=r(9515),Q=r(1397),V=r(4668),W=r(3554),Y=r(7383),Z=r(9511),X=r(6073),q=r(2742),z=r(9259),$=r(6210),ee=r(2989),te=r(5874),re=r(2202),ne=r(3485),oe=r(6053),ie=r(9646),ae=r(9583),ue=r(5389),Be=r(4038),se=r(127),ce=r(1520),le=r(3407),fe=r(739),pe=r(2234),ye=r(6843),Ce=r(967),de=r(567),he=r(6765),ve=r(8662),be=r(9628),me=r(8205),ge=r(8288);C.hack(ge),C.hack(b),C.hack(m),C.hack(g),C.hack(w),s.hack(O),s.hack(j),s.hack(S),s.hack(x),s.hack(P),s.hack(k),s.hack(A),s.hack(E),s.hack(D),s.hack(R),s.hack(T),s.hack(I),s.hack(_),s.hack(F),s.hack(M),s.hack(L),s.hack(G),s.hack(N),s.hack(H),s.hack(U),s.hack(J),s.hack(K),s.hack(Q),s.hack(V),s.hack(W),s.hack(Y),s.hack(Z),s.hack(X),s.hack(q),s.hack(z),s.hack($),s.hack(ee),s.hack(te),s.hack(re),s.hack(ne),s.hack(oe),s.hack(ie),s.hack(ae),s.hack(ue),s.hack(se),s.hack(ce),s.hack(Be),s.hack(le),s.hack(fe),h.hack(pe),h.hack(ye),h.hack(Ce),h.hack(de),h.hack(he),h.hack(ve),h.hack(be),h.hack(me);var we=new Map,Oe=function(){function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.data=t,this.browsers=r,this.options=n;var o,a,u=(o=this.preprocess(this.select(this.data)),a=2,function(e){if(Array.isArray(e))return e}(o)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(o,a)||i(o,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());this.add=u[0],this.remove=u[1],this.transition=new l(this),this.processor=new f(this)}var t,r;return t=e,(r=[{key:"cleaner",value:function(){if(this.cleanerCache)return this.cleanerCache;if(!this.browsers.selected.length)return this;var t=new y(this.browsers.data,[]);return this.cleanerCache=new e(this.data,t,this.options),this.cleanerCache}},{key:"select",value:function(e){var t=this,r={add:{},remove:{}},n=function(){var n=e[o],i=n.browsers.map((function(e){var t=e.split(" ");return{browser:"".concat(t[0]," ").concat(t[1]),note:t[2]}})),a=i.filter((function(e){return e.note})).map((function(e){return"".concat(t.browsers.prefix(e.browser)," ").concat(e.note)}));a=v.uniq(a),i=i.filter((function(e){return t.browsers.isSelected(e.browser)})).map((function(e){var r=t.browsers.prefix(e.browser);return e.note?"".concat(r," ").concat(e.note):r})),i=t.sort(v.uniq(i)),"no-2009"===t.options.flexbox&&(i=i.filter((function(e){return!e.includes("2009")})));var u=n.browsers.map((function(e){return t.browsers.prefix(e)}));n.mistakes&&(u=u.concat(n.mistakes)),u=u.concat(a),u=v.uniq(u),i.length?(r.add[o]=i,i.length<u.length&&(r.remove[o]=u.filter((function(e){return!i.includes(e)})))):r.remove[o]=u};for(var o in e)n();return r}},{key:"sort",value:function(e){return e.sort((function(e,t){var r=v.removeNote(e).length,n=v.removeNote(t).length;return r===n?t.length-e.length:n-r}))}},{key:"preprocess",value:function(t){var r={selectors:[],"@supports":new p(e,this)};for(var n in t.add){var i=t.add[n];if("@keyframes"===n||"@viewport"===n)r[n]=new d(n,i,this);else if("@resolution"===n)r[n]=new c(n,i,this);else if(this.data[n].selector)r.selectors.push(C.load(n,i,this));else{var a=this.data[n].props;if(a){var u,B=h.load(n,i,this),l=o(a);try{for(l.s();!(u=l.n()).done;){var f=u.value;r[f]||(r[f]={values:[]}),r[f].values.push(B)}}catch(e){l.e(e)}finally{l.f()}}else{var y=r[n]&&r[n].values||[];r[n]=s.load(n,i,this),r[n].values=y}}}var v={selectors:[]};for(var b in t.remove){var m=t.remove[b];if(this.data[b].selector){var g,w=C.load(b,m),O=o(m);try{for(O.s();!(g=O.n()).done;){var j=g.value;v.selectors.push(w.old(j))}}catch(e){O.e(e)}finally{O.f()}}else if("@keyframes"===b||"@viewport"===b){var S,x=o(m);try{for(x.s();!(S=x.n()).done;){var P=S.value;v["@".concat(P).concat(b.slice(1))]={remove:!0}}}catch(e){x.e(e)}finally{x.f()}}else if("@resolution"===b)v[b]=new c(b,m,this);else{var k=this.data[b].props;if(k){var A,E=h.load(b,[],this),D=o(m);try{for(D.s();!(A=D.n()).done;){var R=A.value,T=E.old(R);if(T){var I,_=o(k);try{for(_.s();!(I=_.n()).done;){var F=I.value;v[F]||(v[F]={}),v[F].values||(v[F].values=[]),v[F].values.push(T)}}catch(e){_.e(e)}finally{_.f()}}}}catch(e){D.e(e)}finally{D.f()}}else{var M,L=o(m);try{for(L.s();!(M=L.n()).done;){var G=M.value,N=this.decl(b).old(b,G);if("align-self"===b){var H=r[b]&&r[b].prefixes;if(H){if("-webkit- 2009"===G&&H.includes("-webkit-"))continue;if("-webkit-"===G&&H.includes("-webkit- 2009"))continue}}var U,J=o(N);try{for(J.s();!(U=J.n()).done;){var K=U.value;v[K]||(v[K]={}),v[K].remove=!0}}catch(e){J.e(e)}finally{J.f()}}}catch(e){L.e(e)}finally{L.f()}}}}return[r,v]}},{key:"decl",value:function(e){return we.has(e)||we.set(e,s.load(e)),we.get(e)}},{key:"unprefixed",value:function(e){var t=this.normalize(B.unprefixed(e));return"flex-direction"===t&&(t="flex-flow"),t}},{key:"normalize",value:function(e){return this.decl(e).normalize(e)}},{key:"prefixed",value:function(e,t){return e=B.unprefixed(e),this.decl(e).prefixed(e,t)}},{key:"values",value:function(e,t){var r=this[e],n=r["*"]&&r["*"].values,o=r[t]&&r[t].values;return n&&o?v.uniq(n.concat(o)):n||o||[]}},{key:"group",value:function(e){var t=this,r=e.parent,n=r.index(e),o=r.nodes.length,i=this.unprefixed(e.prop),a=function(e,a){for(n+=e;n>=0&&n<o;){var u=r.nodes[n];if("decl"===u.type){if(-1===e&&u.prop===i&&!y.withPrefix(u.value))break;if(t.unprefixed(u.prop)!==i)break;if(!0===a(u))return!0;if(1===e&&u.prop===i&&!y.withPrefix(u.value))break}n+=e}return!1};return{up:function(e){return a(-1,e)},down:function(e){return a(1,e)}}}}])&&u(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=Oe},8882:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var u=r(5527),B=r(563),s=r(1637).insertAreas,c=/(^|[^-])linear-gradient\(\s*(top|left|right|bottom)/i,l=/(^|[^-])radial-gradient\(\s*\d+(\w*|%)\s+\d+(\w*|%)\s*,/i,f=/(!\s*)?autoprefixer:\s*ignore\s+next/i,p=/(!\s*)?autoprefixer\s*grid:\s*(on|off|(no-)?autoplace)/i,y=["width","height","min-width","max-width","min-height","max-height","inline-size","min-inline-size","max-inline-size","block-size","min-block-size","max-block-size"];function C(e){return e.parent.some((function(e){return"grid-template"===e.prop||"grid-template-areas"===e.prop}))}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.prefixes=t}var t,r;return t=e,(r=[{key:"add",value:function(e,t){var r=this,n=this.prefixes.add["@resolution"],i=this.prefixes.add["@keyframes"],a=this.prefixes.add["@viewport"],f=this.prefixes.add["@supports"];function p(e){return e.parent.nodes.some((function(e){if("decl"!==e.type)return!1;var t="display"===e.prop&&/(inline-)?grid/.test(e.value),r=e.prop.startsWith("grid-template"),n=/^grid-([A-z]+-)?gap/.test(e.prop);return t||r||n}))}e.walkAtRules((function(e){if("keyframes"===e.name){if(!r.disabled(e,t))return i&&i.process(e)}else if("viewport"===e.name){if(!r.disabled(e,t))return a&&a.process(e)}else if("supports"===e.name){if(!1!==r.prefixes.options.supports&&!r.disabled(e,t))return f.process(e)}else if("media"===e.name&&e.params.includes("-resolution")&&!r.disabled(e,t))return n&&n.process(e)})),e.walkRules((function(e){if(!r.disabled(e,t))return r.prefixes.add.selectors.map((function(r){return r.process(e,t)}))}));var d=this.gridStatus(e,t)&&this.prefixes.add["grid-area"]&&this.prefixes.add["grid-area"].prefixes;return e.walkDecls((function(e){if(!r.disabledDecl(e,t)){var n,i=e.parent,a=e.prop,B=e.value;if("color-adjust"===a)i.every((function(e){return"print-color-adjust"!==e.prop}))&&t.warn("Replace color-adjust to print-color-adjust. The color-adjust shorthand is currently deprecated.",{node:e});else{if("grid-row-span"===a)return void t.warn("grid-row-span is not part of final Grid Layout. Use grid-row.",{node:e});if("grid-column-span"===a)return void t.warn("grid-column-span is not part of final Grid Layout. Use grid-column.",{node:e});if("display"===a&&"box"===B)return void t.warn("You should write display: flex by final spec instead of display: box",{node:e});if("text-emphasis-position"===a)"under"!==B&&"over"!==B||t.warn("You should use 2 values for text-emphasis-position For example, `under left` instead of just `under`.",{node:e});else if(/^(align|justify|place)-(items|content)$/.test(a)&&function(e){return e.parent.some((function(e){return"display"===e.prop&&/(inline-)?flex/.test(e.value)}))}(e))"start"!==B&&"end"!==B||t.warn("".concat(B," value has mixed support, consider using ")+"flex-".concat(B," instead"),{node:e});else if("text-decoration-skip"===a&&"ink"===B)t.warn("Replace text-decoration-skip: ink to text-decoration-skip-ink: auto, because spec had been changed",{node:e});else{if(d&&r.gridStatus(e,t))if("subgrid"===e.value&&t.warn("IE does not support subgrid",{node:e}),/^(align|justify|place)-items$/.test(a)&&p(e)){var s=a.replace("-items","-self");t.warn("IE does not support ".concat(a," on grid containers. ")+"Try using ".concat(s," on child elements instead: ")+"".concat(e.parent.selector," > * { ").concat(s,": ").concat(e.value," }"),{node:e})}else if(/^(align|justify|place)-content$/.test(a)&&p(e))t.warn("IE does not support ".concat(e.prop," on grid containers"),{node:e});else{if("display"===a&&"contents"===e.value)return void t.warn("Please do not use display: contents; if you have grid setting enabled",{node:e});if("grid-gap"===e.prop){var f=r.gridStatus(e,t);"autoplace"!==f||function(e){var t=e.parent.some((function(e){return"grid-template-rows"===e.prop})),r=e.parent.some((function(e){return"grid-template-columns"===e.prop}));return t&&r}(e)||C(e)?!0!==f&&"no-autoplace"!==f||C(e)||t.warn("grid-gap only works if grid-template(-areas) is being used",{node:e}):t.warn("grid-gap only works if grid-template(-areas) is being used or both rows and columns have been declared and cells have not been manually placed inside the explicit grid",{node:e})}else{if("grid-auto-columns"===a)return void t.warn("grid-auto-columns is not supported by IE",{node:e});if("grid-auto-rows"===a)return void t.warn("grid-auto-rows is not supported by IE",{node:e});if("grid-auto-flow"===a){var h=i.some((function(e){return"grid-template-rows"===e.prop})),v=i.some((function(e){return"grid-template-columns"===e.prop}));return void(C(e)?t.warn("grid-auto-flow is not supported by IE",{node:e}):B.includes("dense")?t.warn("grid-auto-flow: dense is not supported by IE",{node:e}):h||v||t.warn("grid-auto-flow works only if grid-template-rows and grid-template-columns are present in the same rule",{node:e}))}if(B.includes("auto-fit"))return void t.warn("auto-fit value is not supported by IE",{node:e,word:"auto-fit"});if(B.includes("auto-fill"))return void t.warn("auto-fill value is not supported by IE",{node:e,word:"auto-fill"});a.startsWith("grid-template")&&B.includes("[")&&t.warn("Autoprefixer currently does not support line names. Try using grid-template-areas instead.",{node:e,word:"["})}}if(B.includes("radial-gradient"))if(l.test(e.value))t.warn("Gradient has outdated direction syntax. New syntax is like `closest-side at 0 0` instead of `0 0, closest-side`.",{node:e});else{var b,m=o(u(B).nodes);try{for(m.s();!(b=m.n()).done;){var g=b.value;if("function"===g.type&&"radial-gradient"===g.value){var w,O=o(g.nodes);try{for(O.s();!(w=O.n()).done;){var j=w.value;"word"===j.type&&("cover"===j.value?t.warn("Gradient has outdated direction syntax. Replace `cover` to `farthest-corner`.",{node:e}):"contain"===j.value&&t.warn("Gradient has outdated direction syntax. Replace `contain` to `closest-side`.",{node:e}))}}catch(e){O.e(e)}finally{O.f()}}}}catch(e){m.e(e)}finally{m.f()}}B.includes("linear-gradient")&&c.test(B)&&t.warn("Gradient has outdated direction syntax. New syntax is like `to left` instead of `right`.",{node:e})}}if(y.includes(e.prop)&&!e.value.includes("-fill-available")&&(e.value.includes("fill-available")?t.warn("Replace fill-available to stretch, because spec had been changed",{node:e}):e.value.includes("fill")&&u(B).nodes.some((function(e){return"word"===e.type&&"fill"===e.value}))&&t.warn("Replace fill to stretch, because spec had been changed",{node:e})),"transition"===e.prop||"transition-property"===e.prop)return r.prefixes.transition.add(e,t);if("align-self"===e.prop){if("grid"!==r.displayType(e)&&!1!==r.prefixes.options.flexbox&&(n=r.prefixes.add["align-self"])&&n.prefixes&&n.process(e),!1!==r.gridStatus(e,t)&&(n=r.prefixes.add["grid-row-align"])&&n.prefixes)return n.process(e,t)}else if("justify-self"===e.prop){if(!1!==r.gridStatus(e,t)&&(n=r.prefixes.add["grid-column-align"])&&n.prefixes)return n.process(e,t)}else if("place-self"===e.prop){if((n=r.prefixes.add["place-self"])&&n.prefixes&&!1!==r.gridStatus(e,t))return n.process(e,t)}else if((n=r.prefixes.add[e.prop])&&n.prefixes)return n.process(e,t)}})),this.gridStatus(e,t)&&s(e,this.disabled),e.walkDecls((function(e){if(!r.disabledValue(e,t)){var n=r.prefixes.unprefixed(e.prop),i=r.prefixes.values("add",n);if(Array.isArray(i)){var a,u=o(i);try{for(u.s();!(a=u.n()).done;){var s=a.value;s.process&&s.process(e,t)}}catch(e){u.e(e)}finally{u.f()}}B.save(r.prefixes,e)}}))}},{key:"remove",value:function(e,t){var r=this,n=this.prefixes.remove["@resolution"];e.walkAtRules((function(e,o){r.prefixes.remove["@".concat(e.name)]?r.disabled(e,t)||e.parent.removeChild(o):"media"===e.name&&e.params.includes("-resolution")&&n&&n.clean(e)}));var i,a=o(this.prefixes.remove.selectors);try{var u=function(){var n=i.value;e.walkRules((function(e,o){n.check(e)&&(r.disabled(e,t)||e.parent.removeChild(o))}))};for(a.s();!(i=a.n()).done;)u()}catch(e){a.e(e)}finally{a.f()}return e.walkDecls((function(e,n){if(!r.disabled(e,t)){var i=e.parent,a=r.prefixes.unprefixed(e.prop);if("transition"!==e.prop&&"transition-property"!==e.prop||r.prefixes.transition.remove(e),r.prefixes.remove[e.prop]&&r.prefixes.remove[e.prop].remove){var u=r.prefixes.group(e).down((function(e){return r.prefixes.normalize(e.prop)===a}));if("flex-flow"===a&&(u=!0),"-webkit-box-orient"===e.prop){var B={"flex-direction":!0,"flex-flow":!0};if(!e.parent.some((function(e){return B[e.prop]})))return}if(u&&!r.withHackValue(e))return e.raw("before").includes("\n")&&r.reduceSpaces(e),void i.removeChild(n)}var s,c=o(r.prefixes.values("remove",a));try{for(c.s();!(s=c.n()).done;){var l=s.value;if(l.check&&l.check(e.value)&&(a=l.unprefixed,r.prefixes.group(e).down((function(e){return e.value.includes(a)}))))return void i.removeChild(n)}}catch(e){c.e(e)}finally{c.f()}}}))}},{key:"withHackValue",value:function(e){return"-webkit-background-clip"===e.prop&&"text"===e.value}},{key:"disabledValue",value:function(e,t){return!(!1!==this.gridStatus(e,t)||"decl"!==e.type||"display"!==e.prop||!e.value.includes("grid"))||!(!1!==this.prefixes.options.flexbox||"decl"!==e.type||"display"!==e.prop||!e.value.includes("flex"))||"decl"===e.type&&"content"===e.prop||this.disabled(e,t)}},{key:"disabledDecl",value:function(e,t){return!(!1!==this.gridStatus(e,t)||"decl"!==e.type||!e.prop.includes("grid")&&"justify-items"!==e.prop)||!(!1!==this.prefixes.options.flexbox||"decl"!==e.type||!e.prop.includes("flex")&&!["order","justify-content","align-items","align-content"].includes(e.prop))||this.disabled(e,t)}},{key:"disabled",value:function(e,t){if(!e)return!1;if(void 0!==e._autoprefixerDisabled)return e._autoprefixerDisabled;if(e.parent){var r=e.prev();if(r&&"comment"===r.type&&f.test(r.text))return e._autoprefixerDisabled=!0,e._autoprefixerSelfDisabled=!0,!0}var n,o=null;if(e.nodes&&(e.each((function(e){"comment"===e.type&&/(!\s*)?autoprefixer:\s*(off|on)/i.test(e.text)&&(void 0!==n?t.warn("Second Autoprefixer control comment was ignored. Autoprefixer applies control comment to whole block, not to next rules.",{node:e}):n=/on/i.test(e.text))})),void 0!==n&&(o=!n)),!e.nodes||null===o)if(e.parent){var i=this.disabled(e.parent,t);o=!0!==e.parent._autoprefixerSelfDisabled&&i}else o=!1;return e._autoprefixerDisabled=o,o}},{key:"reduceSpaces",value:function(e){var t=!1;if(this.prefixes.group(e).up((function(){return t=!0,!0})),!t){var r=e.raw("before").split("\n"),n=r[r.length-1].length,o=!1;this.prefixes.group(e).down((function(e){var t=(r=e.raw("before").split("\n")).length-1;r[t].length>n&&(!1===o&&(o=r[t].length-n),r[t]=r[t].slice(0,-o),e.raws.before=r.join("\n"))}))}}},{key:"displayType",value:function(e){var t,r=o(e.parent.nodes);try{for(r.s();!(t=r.n()).done;){var n=t.value;if("display"===n.prop){if(n.value.includes("flex"))return"flex";if(n.value.includes("grid"))return"grid"}}}catch(e){r.e(e)}finally{r.f()}return!1}},{key:"gridStatus",value:function(e,t){if(!e)return!1;if(void 0!==e._autoprefixerGridStatus)return e._autoprefixerGridStatus;var r,n=null;if(e.nodes&&(e.each((function(e){if("comment"===e.type&&p.test(e.text)){var n=/:\s*autoplace/i.test(e.text),o=/no-autoplace/i.test(e.text);void 0!==r?t.warn("Second Autoprefixer grid control comment was ignored. Autoprefixer applies control comments to the whole block, not to the next rules.",{node:e}):r=n?"autoplace":!!o||/on/i.test(e.text)}})),void 0!==r&&(n=r)),"atrule"===e.type&&"supports"===e.name){var o=e.params;o.includes("grid")&&o.includes("auto")&&(n=!1)}if(!e.nodes||null===n)if(e.parent){var i=this.gridStatus(e.parent,t);n=!0!==e.parent._autoprefixerSelfDisabled&&i}else n=void 0!==this.prefixes.options.grid?this.prefixes.options.grid:void 0!==process.env.AUTOPREFIXER_GRID&&("autoplace"!==process.env.AUTOPREFIXER_GRID||"autoplace");return e._autoprefixerGridStatus=n,n}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=d},5695:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(7942),c=r(3227),l=r(7220),f=/(min|max)-resolution\s*:\s*\d*\.?\d+(dppx|dpcm|dpi|x)/gi,p=/(min|max)-resolution(\s*:\s*)(\d*\.?\d+)(dppx|dpcm|dpi|x)/i,y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(C,e);var t,r,i,c,y=(i=C,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(i);if(c){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function C(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,C),y.apply(this,arguments)}return t=C,(r=[{key:"prefixName",value:function(e,t){return"-moz-"===e?t+"--moz-device-pixel-ratio":e+t+"-device-pixel-ratio"}},{key:"prefixQuery",value:function(e,t,r,n,o){return n=new s(n),"dpi"===o?n=n.div(96):"dpcm"===o&&(n=n.mul(2.54).div(96)),n=n.simplify(),"-o-"===e&&(n=n.n+"/"+n.d),this.prefixName(e,t)+r+n}},{key:"clean",value:function(e){var t=this;if(!this.bad){this.bad=[];var r,n=o(this.prefixes);try{for(n.s();!(r=n.n()).done;){var i=r.value;this.bad.push(this.prefixName(i,"min")),this.bad.push(this.prefixName(i,"max"))}}catch(e){n.e(e)}finally{n.f()}}e.params=l.editList(e.params,(function(e){return e.filter((function(e){return t.bad.every((function(t){return!e.includes(t)}))}))}))}},{key:"process",value:function(e){var t=this,r=this.parentPrefix(e),n=r?[r]:this.prefixes;e.params=l.editList(e.params,(function(e,r){var i,a=o(e);try{for(a.s();!(i=a.n()).done;){var u=i.value;if(u.includes("min-resolution")||u.includes("max-resolution")){var B,s=o(n);try{var c=function(){var e=B.value,n=u.replace(f,(function(r){var n=r.match(p);return t.prefixQuery(e,n[1],n[2],n[3],n[4])}));r.push(n)};for(s.s();!(B=s.n()).done;)c()}catch(e){s.e(e)}finally{s.f()}r.push(u)}else r.push(u)}}catch(e){a.e(e)}finally{a.f()}return l.uniq(r)}))}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),C}(c);e.exports=y},7718:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s=r(7861).list,c=r(8522),l=r(3227),f=r(4977),p=r(7220),y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(C,e);var t,r,i,l,y=(i=C,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(i);if(l){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function C(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,C),(n=y.call(this,e,t,r)).regexpCache=new Map,n}return t=C,(r=[{key:"check",value:function(e){return!!e.selector.includes(this.name)&&!!e.selector.match(this.regexp())}},{key:"prefixed",value:function(e){return this.name.replace(/^(\W*)/,"$1".concat(e))}},{key:"regexp",value:function(e){if(!this.regexpCache.has(e)){var t=e?this.prefixed(e):this.name;this.regexpCache.set(e,new RegExp("(^|[^:\"'=])".concat(p.escapeRegexp(t)),"gi"))}return this.regexpCache.get(e)}},{key:"possible",value:function(){return f.prefixes()}},{key:"prefixeds",value:function(e){var t=this;if(e._autoprefixerPrefixeds){if(e._autoprefixerPrefixeds[this.name])return e._autoprefixerPrefixeds}else e._autoprefixerPrefixeds={};var r={};if(e.selector.includes(",")){var n,i=s.comma(e.selector).filter((function(e){return e.includes(t.name)})),a=o(this.possible());try{var u=function(){var e=n.value;r[e]=i.map((function(r){return t.replace(r,e)})).join(", ")};for(a.s();!(n=a.n()).done;)u()}catch(e){a.e(e)}finally{a.f()}}else{var B,c=o(this.possible());try{for(c.s();!(B=c.n()).done;){var l=B.value;r[l]=this.replace(e.selector,l)}}catch(e){c.e(e)}finally{c.f()}}return e._autoprefixerPrefixeds[this.name]=r,e._autoprefixerPrefixeds}},{key:"already",value:function(e,t,r){for(var n=e.parent.index(e)-1;n>=0;){var o=e.parent.nodes[n];if("rule"!==o.type)return!1;var i=!1;for(var a in t[this.name]){var u=t[this.name][a];if(o.selector===u){if(r===a)return!0;i=!0;break}}if(!i)return!1;n-=1}return!1}},{key:"replace",value:function(e,t){return e.replace(this.regexp(),"$1".concat(this.prefixed(t)))}},{key:"add",value:function(e,t){var r=this.prefixeds(e);if(!this.already(e,r,t)){var n=this.clone(e,{selector:r[this.name][t]});e.parent.insertBefore(e,n)}}},{key:"old",value:function(e){return new c(this,e)}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),C}(l);e.exports=y},3968:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=a(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,i=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw i}}}}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||a(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function B(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var s=r(2837),c=r(1801),l=r(7861).parse,f=r(4977),p=r(5765),y=r(563),C=r(7220),d=c(s),h=[];for(var v in d.stats){var b=d.stats[v];for(var m in b){var g=b[m];/y/.test(g)&&h.push(v+" "+m)}}var w=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.Prefixes=t,this.all=r}var t,r;return t=e,(r=[{key:"prefixer",value:function(){if(this.prefixerCache)return this.prefixerCache;var e=this.all.browsers.selected.filter((function(e){return h.includes(e)})),t=new f(this.all.browsers.data,e,this.all.options);return this.prefixerCache=new this.Prefixes(this.all.data,t,this.all.options),this.prefixerCache}},{key:"parse",value:function(e){var t=e.split(":"),r=t[0],n=t[1];return n||(n=""),[r.trim(),n.trim()]}},{key:"virtual",value:function(e){var t=i(this.parse(e),2),r=t[0],n=t[1],o=l("a{}").first;return o.append({prop:r,value:n,raws:{before:""}}),o}},{key:"prefixed",value:function(e){var t=this.virtual(e);if(this.disabled(t.first))return t.nodes;var r=this.prefixer().add[t.first.prop];r&&r.process&&r.process(t.first,{warn:function(){return null}});var n,i=o(t.nodes);try{for(i.s();!(n=i.n()).done;){var a,u=n.value,B=o(this.prefixer().values("add",t.first.prop));try{for(B.s();!(a=B.n()).done;)a.value.process(u)}catch(e){B.e(e)}finally{B.f()}y.save(this.all,u)}}catch(e){i.e(e)}finally{i.f()}return t.nodes}},{key:"isNot",value:function(e){return"string"==typeof e&&/not\s*/i.test(e)}},{key:"isOr",value:function(e){return"string"==typeof e&&/\s*or\s*/i.test(e)}},{key:"isProp",value:function(e){return"object"===n(e)&&1===e.length&&"string"==typeof e[0]}},{key:"isHack",value:function(e,t){return!new RegExp("(\\(|\\s)".concat(C.escapeRegexp(t),":")).test(e)}},{key:"toRemove",value:function(e,t){var r=i(this.parse(e),2),n=r[0],a=r[1],u=this.all.unprefixed(n),B=this.all.cleaner();if(B.remove[n]&&B.remove[n].remove&&!this.isHack(t,u))return!0;var s,c=o(B.values("remove",u));try{for(c.s();!(s=c.n()).done;)if(s.value.check(a))return!0}catch(e){c.e(e)}finally{c.f()}return!1}},{key:"remove",value:function(e,t){for(var r=0;r<e.length;)if(!this.isNot(e[r-1])&&this.isProp(e[r])&&this.isOr(e[r+1])){if(this.toRemove(e[r][0],t)){e.splice(r,2);continue}r+=2}else"object"===n(e[r])&&(e[r]=this.remove(e[r],t)),r+=1;return e}},{key:"cleanBrackets",value:function(e){var t=this;return e.map((function(e){return"object"!==n(e)?e:1===e.length&&"object"===n(e[0])?t.cleanBrackets(e[0]):t.cleanBrackets(e)}))}},{key:"convert",value:function(e){var t,r=[""],n=o(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;r.push(["".concat(i.prop,": ").concat(i.value)]),r.push(" or ")}}catch(e){n.e(e)}finally{n.f()}return r[r.length-1]="",r}},{key:"normalize",value:function(e){var t=this;if("object"!==n(e))return e;if("string"==typeof(e=e.filter((function(e){return""!==e})))[0]){var r=e[0].trim();if(r.includes(":")||"selector"===r||"not selector"===r)return[p.stringify(e)]}return e.map((function(e){return t.normalize(e)}))}},{key:"add",value:function(e,t){var r=this;return e.map((function(e){if(r.isProp(e)){var o=r.prefixed(e[0]);return o.length>1?r.convert(o):e}return"object"===n(e)?r.add(e,t):e}))}},{key:"process",value:function(e){var t=p.parse(e.params);t=this.normalize(t),t=this.remove(t,e.params),t=this.add(t,e.params),t=this.cleanBrackets(t),e.params=p.stringify(t)}},{key:"disabled",value:function(e){if(!this.all.options.grid){if("display"===e.prop&&e.value.includes("grid"))return!0;if(e.prop.includes("grid")||"justify-items"===e.prop)return!0}if(!1===this.all.options.flexbox){if("display"===e.prop&&e.value.includes("flex"))return!0;if(e.prop.includes("flex")||["order","justify-content","align-items","align-content"].includes(e.prop))return!0}return!1}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=w},8670:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||a(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=a(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,i=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw i}}}}function a(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function B(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var s=r(7861).list,c=r(5527),l=r(4977),f=r(5741),p=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.props=["transition","transition-property"],this.prefixes=t}var t,r;return t=e,(r=[{key:"add",value:function(e,t){var r,n,o=this,a=this.prefixes.add[e.prop],u=this.ruleVendorPrefixes(e),B=u||a&&a.prefixes||[],s=this.parse(e.value),c=s.map((function(e){return o.findProp(e)})),l=[];if(!c.some((function(e){return"-"===e[0]}))){var f,p=i(s);try{for(p.s();!(f=p.n()).done;){var y=f.value;if("-"!==(n=this.findProp(y))[0]){var C=this.prefixes.add[n];if(C&&C.prefixes){var d,h=i(C.prefixes);try{for(h.s();!(d=h.n()).done;)if(r=d.value,!u||u.some((function(e){return r.includes(e)}))){var v=this.prefixes.prefixed(n,r);"-ms-transform"===v||c.includes(v)||this.disabled(n,r)||l.push(this.clone(n,v,y))}}catch(e){h.e(e)}finally{h.f()}}}}}catch(e){p.e(e)}finally{p.f()}s=s.concat(l);var b=this.stringify(s),m=this.stringify(this.cleanFromUnprefixed(s,"-webkit-"));if(B.includes("-webkit-")&&this.cloneBefore(e,"-webkit-".concat(e.prop),m),this.cloneBefore(e,e.prop,m),B.includes("-o-")){var g=this.stringify(this.cleanFromUnprefixed(s,"-o-"));this.cloneBefore(e,"-o-".concat(e.prop),g)}var w,O=i(B);try{for(O.s();!(w=O.n()).done;)if("-webkit-"!==(r=w.value)&&"-o-"!==r){var j=this.stringify(this.cleanOtherPrefixes(s,r));this.cloneBefore(e,r+e.prop,j)}}catch(e){O.e(e)}finally{O.f()}b===e.value||this.already(e,e.prop,b)||(this.checkForWarning(t,e),e.cloneBefore(),e.value=b)}}},{key:"findProp",value:function(e){var t=e[0].value;if(/^\d/.test(t)){var r,n=i(e.entries());try{for(n.s();!(r=n.n()).done;){var a=o(r.value,2),u=a[0],B=a[1];if(0!==u&&"word"===B.type)return B.value}}catch(e){n.e(e)}finally{n.f()}}return t}},{key:"already",value:function(e,t,r){return e.parent.some((function(e){return e.prop===t&&e.value===r}))}},{key:"cloneBefore",value:function(e,t,r){this.already(e,t,r)||e.cloneBefore({prop:t,value:r})}},{key:"checkForWarning",value:function(e,t){var r=this;if("transition-property"===t.prop){var n=!1,o=!1;t.parent.each((function(e){if("decl"===e.type&&0===e.prop.indexOf("transition-")){var t=s.comma(e.value);if("transition-property"!==e.prop)return o=o||t.length>1,!1;t.forEach((function(e){var t=r.prefixes.add[e];t&&t.prefixes&&t.prefixes.length>0&&(n=!0)}))}})),n&&o&&t.warn(e,"Replace transition-property to transition, because Autoprefixer could not support any cases of transition-property and other transition-*")}}},{key:"remove",value:function(e){var t=this,r=this.parse(e.value);r=r.filter((function(e){var r=t.prefixes.remove[t.findProp(e)];return!r||!r.remove}));var n=this.stringify(r);if(e.value!==n)if(0!==r.length){var o=e.parent.some((function(t){return t.prop===e.prop&&t.value===n})),i=e.parent.some((function(t){return t!==e&&t.prop===e.prop&&t.value.length>n.length}));o||i?e.remove():e.value=n}else e.remove()}},{key:"parse",value:function(e){var t,r=[],n=[],o=i(c(e).nodes);try{for(o.s();!(t=o.n()).done;){var a=t.value;n.push(a),"div"===a.type&&","===a.value&&(r.push(n),n=[])}}catch(e){o.e(e)}finally{o.f()}return r.push(n),r.filter((function(e){return e.length>0}))}},{key:"stringify",value:function(e){if(0===e.length)return"";var t,r=[],n=i(e);try{for(n.s();!(t=n.n()).done;){var o=t.value;"div"!==o[o.length-1].type&&o.push(this.div(e)),r=r.concat(o)}}catch(e){n.e(e)}finally{n.f()}return"div"===r[0].type&&(r=r.slice(1)),"div"===r[r.length-1].type&&(r=r.slice(0,-1)),c.stringify({nodes:r})}},{key:"clone",value:function(e,t,r){var n,o=[],a=!1,u=i(r);try{for(u.s();!(n=u.n()).done;){var B=n.value;a||"word"!==B.type||B.value!==e?o.push(B):(o.push({type:"word",value:t}),a=!0)}}catch(e){u.e(e)}finally{u.f()}return o}},{key:"div",value:function(e){var t,r=i(e);try{for(r.s();!(t=r.n()).done;){var n,o=i(t.value);try{for(o.s();!(n=o.n()).done;){var a=n.value;if("div"===a.type&&","===a.value)return a}}catch(e){o.e(e)}finally{o.f()}}}catch(e){r.e(e)}finally{r.f()}return{type:"div",value:",",after:" "}}},{key:"cleanOtherPrefixes",value:function(e,t){var r=this;return e.filter((function(e){var n=f.prefix(r.findProp(e));return""===n||n===t}))}},{key:"cleanFromUnprefixed",value:function(e,t){var r,n=this,o=e.map((function(e){return n.findProp(e)})).filter((function(e){return e.slice(0,t.length)===t})).map((function(e){return n.prefixes.unprefixed(e)})),a=[],u=i(e);try{for(u.s();!(r=u.n()).done;){var B=r.value,s=this.findProp(B),c=f.prefix(s);o.includes(s)||c!==t&&""!==c||a.push(B)}}catch(e){u.e(e)}finally{u.f()}return a}},{key:"disabled",value:function(e,t){if(e.includes("flex")||["order","justify-content","align-self","align-content"].includes(e)){if(!1===this.prefixes.options.flexbox)return!0;if("no-2009"===this.prefixes.options.flexbox)return t.includes("2009")}}},{key:"ruleVendorPrefixes",value:function(e){var t=e.parent;if("rule"!==t.type)return!1;if(!t.selector.includes(":-"))return!1;var r=l.prefixes().filter((function(e){return t.selector.includes(":"+e)}));return r.length>0&&r}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=p},7220:(e,t,r)=>{function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=r(7861).list;e.exports.error=function(e){var t=new Error(e);throw t.autoprefixer=!0,t},e.exports.uniq=function(e){return function(e){if(Array.isArray(e))return n(e)}(t=new Set(e))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();var t},e.exports.removeNote=function(e){return e.includes(" ")?e.split(" ")[0]:e},e.exports.escapeRegexp=function(e){return e.replace(/[$()*+-.?[\\\]^{|}]/g,"\\$&")},e.exports.regexp=function(e){return(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&(e=this.escapeRegexp(e)),new RegExp("(^|[\\s,(])(".concat(e,"($|[\\s(,]))"),"gi")},e.exports.editList=function(e,t){var r=o.comma(e),n=t(r,[]);if(r===n)return e;var i=e.match(/,\s*/);return i=i?i[0]:", ",n.join(i)},e.exports.splitSelector=function(e){return o.comma(e).map((function(e){return o.space(e).map((function(e){return e.split(/(?=\.|#)/g)}))}))},e.exports.isPureNumber=function(e){return"number"==typeof e||"string"==typeof e&&/^[0-9]+$/.test(e)}},563:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(3227),B=r(433),s=r(5741),c=r(7220),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(y,e);var t,r,u,l,f,p=(l=y,f=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(l);if(f){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function y(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,y),p.apply(this,arguments)}return t=y,u=[{key:"save",value:function(e,t){var r=this,n=t.prop,o=[],i=function(){var i,u=t._autoprefixerValues[a];if(u===t.value)return"continue";var B=s.prefix(n);if("-pie-"===B)return"continue";if(B===a)return i=t.value=u,o.push(i),"continue";var c=e.prefixed(n,a),l=t.parent;if(!l.every((function(e){return e.prop!==c})))return o.push(i),"continue";var f=u.replace(/\s+/," ");if(l.some((function(e){return e.prop===t.prop&&e.value.replace(/\s+/," ")===f})))return o.push(i),"continue";var p=r.clone(t,{value:u});i=t.parent.insertBefore(t,p),o.push(i)};for(var a in t._autoprefixerValues)i();return o}}],(r=[{key:"check",value:function(e){var t=e.value;return!!t.includes(this.name)&&!!t.match(this.regexp())}},{key:"regexp",value:function(){return this.regexpCache||(this.regexpCache=c.regexp(this.name))}},{key:"replace",value:function(e,t){return e.replace(this.regexp(),"$1".concat(t,"$2"))}},{key:"value",value:function(e){return e.raws.value&&e.raws.value.value===e.value?e.raws.value.raw:e.value}},{key:"add",value:function(e,t){e._autoprefixerValues||(e._autoprefixerValues={});var r,n=e._autoprefixerValues[t]||this.value(e);do{if(r=n,!1===(n=this.replace(n,t)))return}while(n!==r);e._autoprefixerValues[t]=n}},{key:"old",value:function(e){return new B(this.name,e+this.name)}}])&&o(t.prototype,r),u&&o(t,u),Object.defineProperty(t,"prototype",{writable:!1}),y}(u);e.exports=l},5741:e=>{e.exports={prefix:function(e){var t=e.match(/^(-\w+-)/);return t?t[0]:""},unprefixed:function(e){return e.replace(/^-\w+-/,"")}}},9796:(e,t,r)=>{var n=r(136);function o(){}e.exports={loadQueries:function(){throw new n("Sharable configs are not supported in client-side build of Browserslist")},getStat:function(e){return e.stats},loadConfig:function(e){if(e.config)throw new n("Browserslist config are not supported in client-side build")},loadCountry:function(){throw new n("Country statistics are not supported in client-side build of Browserslist")},loadFeature:function(){throw new n("Supports queries are not available in client-side build of Browserslist")},currentNode:function(e,t){return e(["maintained node versions"],t)[0]},parseConfig:o,readConfig:o,findConfig:o,clearCaches:o,oldDataWarning:o,env:{}}},136:e=>{function t(e){this.name="BrowserslistError",this.message=e,this.browserslist=!0,Error.captureStackTrace&&Error.captureStackTrace(this,t)}t.prototype=Error.prototype,e.exports=t},2841:(e,t,r)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}var o=r(6052),i=r(6527).agents,a=r(8864),u=r(2950),B=r(3643),s=r(136),c=r(1179),l=r(9796),f=37;function p(e,t){return 0===(e+".").indexOf(t+".")}function y(e){return e.filter((function(e){return"string"==typeof e}))}function C(e){var t=e;return 3===e.split(".").length&&(t=e.split(".").slice(0,-1).join(".")),t}function d(e){return function(t){return e+" "+t}}function h(e){return parseInt(e.split(".")[0])}function v(e,t){if(0===e.length)return[];var r=b(e.map(h)),n=r[r.length-t];if(!n)return e;for(var o=[],i=e.length-1;i>=0&&!(n>h(e[i]));i--)o.unshift(e[i]);return o}function b(e){for(var t=[],r=0;r<e.length;r++)-1===t.indexOf(e[r])&&t.push(e[r]);return t}function m(e,t,r){for(var n in r)e[t+" "+n]=r[n]}function g(e,t){return t=parseFloat(t),">"===e?function(e){return parseFloat(e)>t}:">="===e?function(e){return parseFloat(e)>=t}:"<"===e?function(e){return parseFloat(e)<t}:function(e){return parseFloat(e)<=t}}function w(e){return parseInt(e)}function O(e,t){return e<t?-1:e>t?1:0}function j(e,t){return O(parseInt(e[0]),parseInt(t[0]))||O(parseInt(e[1]||"0"),parseInt(t[1]||"0"))||O(parseInt(e[2]||"0"),parseInt(t[2]||"0"))}function S(e,t){return void 0===(t=t.split(".").map(w))[1]&&(t[1]="x"),"<="===e?function(e){return x(e=e.split(".").map(w),t)<=0}:function(e){return x(e=e.split(".").map(w),t)>=0}}function x(e,t){return e[0]!==t[0]?e[0]<t[0]?-1:1:"x"===t[1]?0:e[1]!==t[1]?e[1]<t[1]?-1:1:0}function P(e,t){var r=function(e,t){return-1!==e.versions.indexOf(t)?t:!!G.versionAliases[e.name][t]&&G.versionAliases[e.name][t]}(e,t);return r||1===e.versions.length&&e.versions[0]}function k(e,t){return e/=1e3,Object.keys(i).reduce((function(r,n){var o=E(n,t);if(!o)return r;var i=Object.keys(o.releaseDate).filter((function(t){var r=o.releaseDate[t];return null!==r&&r>=e}));return r.concat(i.map(d(o.name)))}),[])}function A(e){return{name:e.name,versions:e.versions,released:e.released,releaseDate:e.releaseDate}}function E(e,t){if(e=e.toLowerCase(),e=G.aliases[e]||e,t.mobileToDesktop&&G.desktopNames[e]){var r=G.data[G.desktopNames[e]];if("android"===e)return i=r,(o=A(G.data[e])).released=D(o.released,i.released),o.versions=D(o.versions,i.versions),o;var n=A(r);return n.name=e,"op_mob"===e&&(n=function(e,t){e.versions=e.versions.map((function(e){return t[e]||e})),e.released=e.released.map((function(e){return t[e]||e}));var r={};for(var n in e.releaseDate)r[t[n]||n]=e.releaseDate[n];return e.releaseDate=r,e}(n,{"10.0-10.1":"10"})),n}var o,i;return G.data[e]}function D(e,t){var r=f,n=t[t.length-1];return e.filter((function(e){return/^(?:[2-4]\.|[34]$)/.test(e)})).concat(t.slice(r-n-1))}function R(e,t){var r=E(e,t);if(!r)throw new s("Unknown browser "+e);return r}function T(e,t,r){if(r.mobileToDesktop)return e;var n=G.data.android.released,o=n[n.length-1]-f-t;return o>0?e.slice(-1):e.slice(o-1)}function I(e,t){return c(J,e).reduce((function(e,r,n){if(r.not&&0===n)throw new s("Write any browsers query (for instance, `defaults`) before `"+r.query+"`");var o=J[r.type].select.call(G,t,r).map((function(e){var r=e.split(" ");return"0"===r[1]?r[0]+" "+E(r[0],t).versions[0]:e}));if("and"===r.compose)return r.not?e.filter((function(e){return-1===o.indexOf(e)})):e.filter((function(e){return-1!==o.indexOf(e)}));if(r.not){var i={};return o.forEach((function(e){i[e]=!0})),e.filter((function(e){return!i[e]}))}return e.concat(o)}),[])}function _(e){return void 0===e&&(e={}),void 0===e.path&&(e.path=u.resolve?u.resolve("."):"."),e}function F(e,t){null==e&&(e=G.loadConfig(t)||G.defaults);return e}function M(e){if("string"!=typeof e&&!Array.isArray(e))throw new s("Browser queries must be an array or string. Got "+n(e)+".")}var L={};function G(e,t){M(e=F(e,t=_(t)));var r={ignoreUnknownVersions:t.ignoreUnknownVersions,dangerousExtend:t.dangerousExtend,mobileToDesktop:t.mobileToDesktop,path:t.path,env:t.env};l.oldDataWarning(G.data);var n=l.getStat(t,G.data);if(n)for(var o in r.customUsage={},n)m(r.customUsage,o,n[o]);var i=JSON.stringify([e,r]);if(L[i])return L[i];var a=b(I(e,r)).sort((function(e,t){if(e=e.split(" "),t=t.split(" "),e[0]===t[0]){var r=e[1].split("-")[0];return j(t[1].split("-")[0].split("."),r.split("."))}return O(e[0],t[0])}));return l.env.BROWSERSLIST_DISABLE_CACHE||(L[i]=a),a}function N(e,t){var r=G.nodeVersions.filter((function(e){return p(e,t.version)}));if(0===r.length){if(e.ignoreUnknownVersions)return[];throw new s("Unknown version "+t.version+" of Node.js")}return["node "+r[r.length-1]]}function H(e,t){var r=parseInt(t.year),n=parseInt(t.month||"01")-1,o=parseInt(t.day||"01");return k(Date.UTC(r,n,o,0,0,0),e)}function U(e,t){var r=parseFloat(t.coverage),n=G.usage.global;if(t.place)if(t.place.match(/^my\s+stats$/i)){if(!e.customUsage)throw new s("Custom usage statistics was not provided");n=e.customUsage}else{var o;o=2===t.place.length?t.place.toUpperCase():t.place.toLowerCase(),l.loadCountry(G.usage,o,G.data),n=G.usage[o]}for(var i,a=Object.keys(n).sort((function(e,t){return n[t]-n[e]})),u=0,B=[],c=0;c<a.length&&(i=a[c],0!==n[i])&&(u+=n[i],B.push(i),!(u>=r));c++);return B}G.parse=function(e,t){return M(e=F(e,t=_(t))),c(J,e)},G.cache={},G.data={},G.usage={global:{},custom:null},G.defaults=["> 0.5%","last 2 versions","Firefox ESR","not dead"],G.aliases={fx:"firefox",ff:"firefox",ios:"ios_saf",explorer:"ie",blackberry:"bb",explorermobile:"ie_mob",operamini:"op_mini",operamobile:"op_mob",chromeandroid:"and_chr",firefoxandroid:"and_ff",ucandroid:"and_uc",qqandroid:"and_qq"},G.desktopNames={and_chr:"chrome",and_ff:"firefox",ie_mob:"ie",op_mob:"opera",android:"chrome"},G.versionAliases={},G.clearCaches=l.clearCaches,G.parseConfig=l.parseConfig,G.readConfig=l.readConfig,G.findConfig=l.findConfig,G.loadConfig=l.loadConfig,G.coverage=function(e,t){var r;if(void 0===t)r=G.usage.global;else if("my stats"===t){var n={};n.path=u.resolve?u.resolve("."):".";var o=l.getStat(n);if(!o)throw new s("Custom usage statistics was not provided");for(var i in r={},o)m(r,i,o[i])}else if("string"==typeof t)t=t.length>2?t.toLowerCase():t.toUpperCase(),l.loadCountry(G.usage,t,G.data),r=G.usage[t];else for(var a in"dataByBrowser"in t&&(t=t.dataByBrowser),r={},t)for(var B in t[a])r[a+" "+B]=t[a][B];return e.reduce((function(e,t){var n=r[t];return void 0===n&&(n=r[t.replace(/ \S+$/," 0")]),e+(n||0)}),0)};var J={last_major_versions:{matches:["versions"],regexp:/^last\s+(\d+)\s+major\s+versions?$/i,select:function(e,t){return Object.keys(i).reduce((function(r,n){var o=E(n,e);if(!o)return r;var i=v(o.released,t.versions);return i=i.map(d(o.name)),"android"===o.name&&(i=T(i,t.versions,e)),r.concat(i)}),[])}},last_versions:{matches:["versions"],regexp:/^last\s+(\d+)\s+versions?$/i,select:function(e,t){return Object.keys(i).reduce((function(r,n){var o=E(n,e);if(!o)return r;var i=o.released.slice(-t.versions);return i=i.map(d(o.name)),"android"===o.name&&(i=T(i,t.versions,e)),r.concat(i)}),[])}},last_electron_major_versions:{matches:["versions"],regexp:/^last\s+(\d+)\s+electron\s+major\s+versions?$/i,select:function(e,t){return v(Object.keys(B),t.versions).map((function(e){return"chrome "+B[e]}))}},last_node_major_versions:{matches:["versions"],regexp:/^last\s+(\d+)\s+node\s+major\s+versions?$/i,select:function(e,t){return v(G.nodeVersions,t.versions).map((function(e){return"node "+e}))}},last_browser_major_versions:{matches:["versions","browser"],regexp:/^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,select:function(e,t){var r=R(t.browser,e),n=v(r.released,t.versions).map(d(r.name));return"android"===r.name&&(n=T(n,t.versions,e)),n}},last_electron_versions:{matches:["versions"],regexp:/^last\s+(\d+)\s+electron\s+versions?$/i,select:function(e,t){return Object.keys(B).slice(-t.versions).map((function(e){return"chrome "+B[e]}))}},last_node_versions:{matches:["versions"],regexp:/^last\s+(\d+)\s+node\s+versions?$/i,select:function(e,t){return G.nodeVersions.slice(-t.versions).map((function(e){return"node "+e}))}},last_browser_versions:{matches:["versions","browser"],regexp:/^last\s+(\d+)\s+(\w+)\s+versions?$/i,select:function(e,t){var r=R(t.browser,e),n=r.released.slice(-t.versions).map(d(r.name));return"android"===r.name&&(n=T(n,t.versions,e)),n}},unreleased_versions:{matches:[],regexp:/^unreleased\s+versions$/i,select:function(e){return Object.keys(i).reduce((function(t,r){var n=E(r,e);if(!n)return t;var o=n.versions.filter((function(e){return-1===n.released.indexOf(e)}));return o=o.map(d(n.name)),t.concat(o)}),[])}},unreleased_electron_versions:{matches:[],regexp:/^unreleased\s+electron\s+versions?$/i,select:function(){return[]}},unreleased_browser_versions:{matches:["browser"],regexp:/^unreleased\s+(\w+)\s+versions?$/i,select:function(e,t){var r=R(t.browser,e);return r.versions.filter((function(e){return-1===r.released.indexOf(e)})).map(d(r.name))}},last_years:{matches:["years"],regexp:/^last\s+(\d*.?\d+)\s+years?$/i,select:function(e,t){return k(Date.now()-31558432982.4*t.years,e)}},since_y:{matches:["year"],regexp:/^since (\d+)$/i,select:H},since_y_m:{matches:["year","month"],regexp:/^since (\d+)-(\d+)$/i,select:H},since_y_m_d:{matches:["year","month","day"],regexp:/^since (\d+)-(\d+)-(\d+)$/i,select:H},popularity:{matches:["sign","popularity"],regexp:/^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,select:function(e,t){var r=parseFloat(t.popularity),n=G.usage.global;return Object.keys(n).reduce((function(e,o){return">"===t.sign?n[o]>r&&e.push(o):"<"===t.sign?n[o]<r&&e.push(o):"<="===t.sign?n[o]<=r&&e.push(o):n[o]>=r&&e.push(o),e}),[])}},popularity_in_my_stats:{matches:["sign","popularity"],regexp:/^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,select:function(e,t){var r=parseFloat(t.popularity);if(!e.customUsage)throw new s("Custom usage statistics was not provided");var n=e.customUsage;return Object.keys(n).reduce((function(e,o){var i=n[o];return null==i||(">"===t.sign?i>r&&e.push(o):"<"===t.sign?i<r&&e.push(o):"<="===t.sign?i<=r&&e.push(o):i>=r&&e.push(o)),e}),[])}},popularity_in_config_stats:{matches:["sign","popularity","config"],regexp:/^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,select:function(e,t){var r=parseFloat(t.popularity),n=l.loadStat(e,t.config,G.data);if(n)for(var o in e.customUsage={},n)m(e.customUsage,o,n[o]);if(!e.customUsage)throw new s("Custom usage statistics was not provided");var i=e.customUsage;return Object.keys(i).reduce((function(e,n){var o=i[n];return null==o||(">"===t.sign?o>r&&e.push(n):"<"===t.sign?o<r&&e.push(n):"<="===t.sign?o<=r&&e.push(n):o>=r&&e.push(n)),e}),[])}},popularity_in_place:{matches:["sign","popularity","place"],regexp:/^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,select:function(e,t){var r=parseFloat(t.popularity),n=t.place;n=2===n.length?n.toUpperCase():n.toLowerCase(),l.loadCountry(G.usage,n,G.data);var o=G.usage[n];return Object.keys(o).reduce((function(e,n){var i=o[n];return null==i||(">"===t.sign?i>r&&e.push(n):"<"===t.sign?i<r&&e.push(n):"<="===t.sign?i<=r&&e.push(n):i>=r&&e.push(n)),e}),[])}},cover:{matches:["coverage"],regexp:/^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,select:U},cover_in:{matches:["coverage","place"],regexp:/^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,select:U},supports:{matches:["feature"],regexp:/^supports\s+([\w-]+)$/,select:function(e,t){l.loadFeature(G.cache,t.feature);var r=G.cache[t.feature];return Object.keys(r).reduce((function(e,t){var n=r[t];return(n.indexOf("y")>=0||n.indexOf("a")>=0)&&e.push(t),e}),[])}},electron_range:{matches:["from","to"],regexp:/^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,select:function(e,t){var r=C(t.from),n=C(t.to),o=parseFloat(t.from),i=parseFloat(t.to);if(!B[r])throw new s("Unknown version "+o+" of electron");if(!B[n])throw new s("Unknown version "+i+" of electron");return Object.keys(B).filter((function(e){var t=parseFloat(e);return t>=o&&t<=i})).map((function(e){return"chrome "+B[e]}))}},node_range:{matches:["from","to"],regexp:/^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,select:function(e,t){return G.nodeVersions.filter(S(">=",t.from)).filter(S("<=",t.to)).map((function(e){return"node "+e}))}},browser_range:{matches:["browser","from","to"],regexp:/^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,select:function(e,t){var r=R(t.browser,e),n=parseFloat(P(r,t.from)||t.from),o=parseFloat(P(r,t.to)||t.to);return r.released.filter((function(e){var t=parseFloat(e);return t>=n&&t<=o})).map(d(r.name))}},electron_ray:{matches:["sign","version"],regexp:/^electron\s*(>=?|<=?)\s*([\d.]+)$/i,select:function(e,t){var r=C(t.version);return Object.keys(B).filter(g(t.sign,r)).map((function(e){return"chrome "+B[e]}))}},node_ray:{matches:["sign","version"],regexp:/^node\s*(>=?|<=?)\s*([\d.]+)$/i,select:function(e,t){return G.nodeVersions.filter((r=t.sign,n=t.version,(n=n.split(".").map(w))[1]=n[1]||0,n[2]=n[2]||0,">"===r?function(e){return j(e=e.split(".").map(w),n)>0}:">="===r?function(e){return j(e=e.split(".").map(w),n)>=0}:"<"===r?function(e){return e=e.split(".").map(w),j(n,e)>0}:function(e){return e=e.split(".").map(w),j(n,e)>=0})).map((function(e){return"node "+e}));var r,n}},browser_ray:{matches:["browser","sign","version"],regexp:/^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,select:function(e,t){var r=t.version,n=R(t.browser,e),o=G.versionAliases[n.name][r];return o&&(r=o),n.released.filter(g(t.sign,r)).map((function(e){return n.name+" "+e}))}},firefox_esr:{matches:[],regexp:/^(firefox|ff|fx)\s+esr$/i,select:function(){return["firefox 102"]}},opera_mini_all:{matches:[],regexp:/(operamini|op_mini)\s+all/i,select:function(){return["op_mini all"]}},electron_version:{matches:["version"],regexp:/^electron\s+([\d.]+)$/i,select:function(e,t){var r=C(t.version),n=B[r];if(!n)throw new s("Unknown version "+t.version+" of electron");return["chrome "+n]}},node_major_version:{matches:["version"],regexp:/^node\s+(\d+)$/i,select:N},node_minor_version:{matches:["version"],regexp:/^node\s+(\d+\.\d+)$/i,select:N},node_patch_version:{matches:["version"],regexp:/^node\s+(\d+\.\d+\.\d+)$/i,select:N},current_node:{matches:[],regexp:/^current\s+node$/i,select:function(e){return[l.currentNode(I,e)]}},maintained_node:{matches:[],regexp:/^maintained\s+node\s+versions$/i,select:function(e){var t=Date.now();return I(Object.keys(a).filter((function(e){return t<Date.parse(a[e].end)&&t>Date.parse(a[e].start)&&(r=e.slice(1),G.nodeVersions.some((function(e){return p(e,r)})));var r})).map((function(e){return"node "+e.slice(1)})),e)}},phantomjs_1_9:{matches:[],regexp:/^phantomjs\s+1.9$/i,select:function(){return["safari 5"]}},phantomjs_2_1:{matches:[],regexp:/^phantomjs\s+2.1$/i,select:function(){return["safari 6"]}},browser_version:{matches:["browser","version"],regexp:/^(\w+)\s+(tp|[\d.]+)$/i,select:function(e,t){var r=t.version;/^tp$/i.test(r)&&(r="TP");var n=R(t.browser,e),o=P(n,r);if(o)r=o;else{if(!(o=P(n,o=-1===r.indexOf(".")?r+".0":r.replace(/\.0$/,"")))){if(e.ignoreUnknownVersions)return[];throw new s("Unknown version "+r+" of "+t.browser)}r=o}return[n.name+" "+r]}},browserslist_config:{matches:[],regexp:/^browserslist config$/i,select:function(e){return G(void 0,e)}},extends:{matches:["config"],regexp:/^extends (.+)$/i,select:function(e,t){return I(l.loadQueries(e,t.config),e)}},defaults:{matches:[],regexp:/^defaults$/i,select:function(e){return I(G.defaults,e)}},dead:{matches:[],regexp:/^dead$/i,select:function(e){return I(["Baidu >= 0","ie <= 11","ie_mob <= 11","bb <= 10","op_mob <= 12.1","samsung 4"],e)}},unknown:{matches:[],regexp:/^(\w+)$/i,select:function(e,t){throw E(t.query,e)?new s("Specify versions in Browserslist query for browser "+t.query):(r=t.query,new s("Unknown browser query `"+r+"`. Maybe you are using old Browserslist or made typo in query."));var r}}};!function(){for(var e in i){var t=i[e];G.data[e]={name:e,versions:y(i[e].versions),released:y(i[e].versions.slice(0,-3)),releaseDate:i[e].release_date},m(G.usage.global,e,t.usage_global),G.versionAliases[e]={};for(var r=0;r<t.versions.length;r++){var n=t.versions[r];if(n&&-1!==n.indexOf("-"))for(var a=n.split("-"),u=0;u<a.length;u++)G.versionAliases[e][a[u]]=n}}G.versionAliases.op_mob[59]="58",G.nodeVersions=o.map((function(e){return e.version}))}(),e.exports=G},1179:e=>{var t=/^\s+and\s+(.*)/i,r=/^(?:,\s*|\s+or\s+)(.*)/i;function n(e){return Array.isArray(e)?e.reduce((function(e,t){return e.concat(n(t))}),[]):[e]}function o(e,t){var r={query:t};for(var n in 0===t.indexOf("not ")&&(r.not=!0,t=t.slice(4)),e){var o=e[n],i=t.match(o.regexp);if(i){r.type=n;for(var a=0;a<o.matches.length;a++)r[o.matches[a]]=i[a+1];return r}}return r.type="unknown",r}function i(e,n,i){var a;return function(e,t){for(var r=1,n=e.length;r<=n;r++)if(t(e.substr(-r,r),r,n))return e.slice(0,-r);return""}(n,(function(n,u,B){return t.test(n)?((a=o(e,n.match(t)[1])).compose="and",i.unshift(a),!0):r.test(n)?((a=o(e,n.match(r)[1])).compose="or",i.unshift(a),!0):u===B&&((a=o(e,n.trim())).compose="or",i.unshift(a),!0)}))}e.exports=function(e,t){return Array.isArray(t)||(t=[t]),n(t.map((function(t){var r=[];do{t=i(e,t,r)}while(t);return r})))}},8779:e=>{e.exports={A:{A:{J:.0131217,D:.00621152,E:.0497493,F:.0580409,A:.00829156,B:.406286,EC:.009298},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","EC","J","D","E","F","A","B","","",""],E:"IE",F:{EC:962323200,J:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968e3}},B:{A:{C:.004081,K:.004267,L:.004268,G:.004081,M:.003702,N:.004081,O:.016324,P:0,Q:.004298,R:.00944,S:.004043,T:.004081,U:.003861,V:.003861,W:.004081,X:.003943,Y:.004081,Z:.003943,a:.003943,b:.008162,c:.004118,d:.003939,e:.003943,i:.003943,j:.003943,k:.003929,l:.003901,m:.011829,n:.007886,o:.003943,p:.008162,q:.004081,r:.004081,s:.008162,t:.016324,u:.044891,v:.118349,f:2.0609,H:2.19966},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C","K","L","G","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","i","j","k","l","m","n","o","p","q","r","s","t","u","v","f","H","","",""],E:"Edge",F:{C:1438128e3,K:1447286400,L:1470096e3,G:1491868800,M:1508198400,N:1525046400,O:1542067200,P:1579046400,Q:1581033600,R:1586736e3,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:161136e4,Y:1614816e3,Z:1618358400,a:1622073600,b:1626912e3,c:1630627200,d:1632441600,e:1634774400,i:1637539200,j:1641427200,k:1643932800,l:1646265600,m:1649635200,n:1651190400,o:1653955200,p:1655942400,q:1659657600,r:1661990400,s:1664755200,t:1666915200,u:1670198400,v:1673481600,f:1675900800,H:1678665600},D:{C:"ms",K:"ms",L:"ms",G:"ms",M:"ms",N:"ms",O:"ms"}},C:{A:{0:.004161,1:.008786,2:.004118,3:.004317,4:.004393,5:.004418,6:.008834,7:.008322,8:.008928,9:.004471,FC:.004118,uB:.004271,I:.011703,w:.004879,J:.020136,D:.005725,E:.004525,F:.00533,A:.004283,B:.008162,C:.004471,K:.004486,L:.00453,G:.008322,M:.004417,N:.004425,O:.004161,x:.004443,g:.004283,y:.008322,z:.013698,AB:.009284,BB:.004707,CB:.009076,DB:.004081,EB:.004783,FB:.003929,GB:.004783,HB:.00487,IB:.005029,JB:.0047,KB:.012243,LB:.004081,MB:.003867,NB:.004525,OB:.004293,PB:.004081,QB:.004538,RB:.008282,SB:.011601,TB:.044891,UB:.011601,VB:.003929,WB:.003974,XB:.008162,YB:.011601,ZB:.003939,vB:.004081,aB:.003929,wB:.004356,bB:.004425,cB:.008322,dB:.00415,eB:.004267,fB:.003801,gB:.004267,hB:.004081,iB:.00415,jB:.004293,kB:.004425,lB:.008162,h:.00415,mB:.00415,nB:.004318,oB:.004356,pB:.003974,qB:.036729,P:.004081,Q:.004081,R:.004081,xB:.003861,S:.004081,T:.003929,U:.004268,V:.003801,W:.012243,X:.008162,Y:.003943,Z:.003943,a:.012243,b:.003801,c:.007722,d:.016324,e:.003773,i:.007886,j:.003901,k:.003901,l:.004081,m:.003861,n:.004081,o:.110187,p:.036729,q:.008162,r:.008162,s:.008162,t:.012243,u:.024486,v:.053053,f:1.10187,H:.926387,yB:.008162,zB:0,GC:.008786,HC:.00487},B:"moz",C:["FC","uB","GC","HC","I","w","J","D","E","F","A","B","C","K","L","G","M","N","O","x","g","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","vB","aB","wB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","lB","h","mB","nB","oB","pB","qB","P","Q","R","xB","S","T","U","V","W","X","Y","Z","a","b","c","d","e","i","j","k","l","m","n","o","p","q","r","s","t","u","v","f","H","yB","zB",""],E:"Firefox",F:{0:1372118400,1:1375747200,2:1379376e3,3:1386633600,4:1391472e3,5:1395100800,6:1398729600,7:1402358400,8:1405987200,9:1409616e3,FC:1161648e3,uB:1213660800,GC:124632e4,HC:1264032e3,I:1300752e3,w:1308614400,J:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968e3,C:1331596800,K:1335225600,L:1338854400,G:1342483200,M:1346112e3,N:1349740800,O:1353628800,x:1357603200,g:1361232e3,y:1364860800,z:1368489600,AB:1413244800,BB:1417392e3,CB:1421107200,DB:1424736e3,EB:1428278400,FB:1431475200,GB:1435881600,HB:1439251200,IB:144288e4,JB:1446508800,KB:1450137600,LB:1453852800,MB:1457395200,NB:1461628800,OB:1465257600,PB:1470096e3,QB:1474329600,RB:1479168e3,SB:1485216e3,TB:1488844800,UB:149256e4,VB:1497312e3,WB:1502150400,XB:1506556800,YB:1510617600,ZB:1516665600,vB:1520985600,aB:1525824e3,wB:1529971200,bB:1536105600,cB:1540252800,dB:1544486400,eB:154872e4,fB:1552953600,gB:1558396800,hB:1562630400,iB:1567468800,jB:1571788800,kB:1575331200,lB:1578355200,h:1581379200,mB:1583798400,nB:1586304e3,oB:1588636800,pB:1591056e3,qB:1593475200,P:1595894400,Q:1598313600,R:1600732800,xB:1603152e3,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,a:1628553600,b:1630972800,c:1633392e3,d:1635811200,e:1638835200,i:1641859200,j:1644364800,k:1646697600,l:1649116800,m:1651536e3,n:1653955200,o:1656374400,p:1658793600,q:1661212800,r:1663632e3,s:1666051200,t:1668470400,u:1670889600,v:1673913600,f:1676332800,H:1678752e3,yB:null,zB:null}},D:{A:{0:.008786,1:.003939,2:.004461,3:.004141,4:.004326,5:.0047,6:.004538,7:.008322,8:.008596,9:.004566,I:.004706,w:.004879,J:.004879,D:.005591,E:.005591,F:.005591,A:.004534,B:.004464,C:.010424,K:.0083,L:.004706,G:.015087,M:.004393,N:.004393,O:.008652,x:.008322,g:.004393,y:.004317,z:.003901,AB:.004118,BB:.004081,CB:.008162,DB:.004335,EB:.004464,FB:.016324,GB:.003867,HB:.016324,IB:.003773,JB:.003974,KB:.008162,LB:.007948,MB:.003974,NB:.003867,OB:.008162,PB:.020405,QB:.036729,RB:.003867,SB:.004081,TB:.008162,UB:.008162,VB:.003867,WB:.004081,XB:.073458,YB:.004081,ZB:.015772,vB:.003773,aB:.016324,wB:.008162,bB:.003773,cB:.012243,dB:.003943,eB:.008162,fB:.028567,gB:.008162,hB:.008162,iB:.036729,jB:.016324,kB:.012243,lB:.020405,h:.008162,mB:.036729,nB:.048972,oB:.044891,pB:.016324,qB:.024486,P:.134673,Q:.036729,R:.04081,S:.065296,T:.04081,U:.089782,V:.065296,W:.097944,X:.020405,Y:.036729,Z:.04081,a:.077539,b:.044891,c:.085701,d:.044891,e:.032648,i:.04081,j:.053053,k:.04081,l:.053053,m:.053053,n:.048972,o:.073458,p:.355047,q:.114268,r:.106106,s:.077539,t:.126511,u:.399938,v:2.73019,f:7.54169,H:10.7208,yB:.020405,zB:.020405,IC:.004081,JC:0},B:"webkit",C:["","","","","I","w","J","D","E","F","A","B","C","K","L","G","M","N","O","x","g","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","vB","aB","wB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","lB","h","mB","nB","oB","pB","qB","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","i","j","k","l","m","n","o","p","q","r","s","t","u","v","f","H","yB","zB","IC","JC"],E:"Chrome",F:{0:1348531200,1:1352246400,2:1357862400,3:1361404800,4:1364428800,5:1369094400,6:1374105600,7:1376956800,8:1384214400,9:1389657600,I:1264377600,w:1274745600,J:1283385600,D:1287619200,E:1291248e3,F:1296777600,A:1299542400,B:1303862400,C:1307404800,K:1312243200,L:1316131200,G:1316131200,M:1319500800,N:1323734400,O:1328659200,x:1332892800,g:133704e4,y:1340668800,z:1343692800,AB:1392940800,BB:1397001600,CB:1400544e3,DB:1405468800,EB:1409011200,FB:141264e4,GB:1416268800,HB:1421798400,IB:1425513600,JB:1429401600,KB:143208e4,LB:1437523200,MB:1441152e3,NB:1444780800,OB:1449014400,PB:1453248e3,QB:1456963200,RB:1460592e3,SB:1464134400,TB:1469059200,UB:1472601600,VB:1476230400,WB:1480550400,XB:1485302400,YB:1489017600,ZB:149256e4,vB:1496707200,aB:1500940800,wB:1504569600,bB:1508198400,cB:1512518400,dB:1516752e3,eB:1520294400,fB:1523923200,gB:1527552e3,hB:1532390400,iB:1536019200,jB:1539648e3,kB:1543968e3,lB:154872e4,h:1552348800,mB:1555977600,nB:1559606400,oB:1564444800,pB:1568073600,qB:1571702400,P:1575936e3,Q:1580860800,R:1586304e3,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272e3,a:1621987200,b:1626739200,c:1630368e3,d:1632268800,e:1634601600,i:1637020800,j:1641340800,k:1643673600,l:1646092800,m:1648512e3,n:1650931200,o:1653350400,p:1655769600,q:1659398400,r:1661817600,s:1664236800,t:1666656e3,u:166968e4,v:1673308800,f:1675728e3,H:1678147200,yB:1680566400,zB:null,IC:null,JC:null}},E:{A:{I:0,w:.008322,J:.004656,D:.004465,E:.003974,F:.003929,A:.004425,B:.004318,C:.003801,K:.020405,L:.102025,G:.024486,KC:0,"0B":.008692,LC:.008162,MC:.00456,NC:.004283,OC:.028567,"1B":.007802,rB:.008162,sB:.036729,"2B":.183645,PC:.289751,QC:.044891,"3B":.036729,"4B":.093863,"5B":.171402,"6B":.754985,tB:.08162,"7B":.261184,"8B":.465234,"9B":1.69361,AC:.028567,BC:0,RC:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","KC","0B","I","w","LC","J","MC","D","NC","E","F","OC","A","1B","B","rB","C","sB","K","2B","L","PC","G","QC","3B","4B","5B","6B","tB","7B","8B","9B","AC","BC","RC",""],E:"Safari",F:{KC:1205798400,"0B":1226534400,I:1244419200,w:1275868800,LC:131112e4,J:1343174400,MC:13824e5,D:13824e5,NC:1410998400,E:1413417600,F:1443657600,OC:1458518400,A:1474329600,"1B":1490572800,B:1505779200,rB:1522281600,C:1537142400,sB:1553472e3,K:1568851200,"2B":1585008e3,L:1600214400,PC:1619395200,G:1632096e3,QC:1635292800,"3B":1639353600,"4B":1647216e3,"5B":1652745600,"6B":1658275200,tB:1662940800,"7B":1666569600,"8B":1670889600,"9B":1674432e3,AC:1679875200,BC:null,RC:null}},F:{A:{0:.013434,1:.006702,2:.006015,3:.005595,4:.004393,5:.008162,6:.004879,7:.004879,8:.003861,9:.005152,F:.0082,B:.016581,C:.004317,G:.00685,M:.00685,N:.00685,O:.005014,x:.006015,g:.004879,y:.006597,z:.006597,AB:.005014,BB:.009758,CB:.004879,DB:.004081,EB:.004283,FB:.004367,GB:.004534,HB:.004081,IB:.004227,JB:.004418,KB:.004161,LB:.004227,MB:.004725,NB:.012243,OB:.008942,PB:.004707,QB:.004827,RB:.004707,SB:.004707,TB:.004326,UB:.008922,VB:.014349,WB:.004425,XB:.00472,YB:.004425,ZB:.004425,aB:.00472,bB:.004532,cB:.004566,dB:.02283,eB:.00867,fB:.004656,gB:.004642,hB:.003929,iB:.00944,jB:.004293,kB:.003929,lB:.004298,h:.096692,mB:.008162,nB:.004141,oB:.004257,pB:.003939,qB:.008236,P:.003855,Q:.003939,R:.008514,xB:.003939,S:.003939,T:.003702,U:.004081,V:.003855,W:.003855,X:.003929,Y:.003861,Z:.011703,a:.007546,b:.011829,c:.069498,d:.020405,e:.514206,SC:.00685,TC:0,UC:.008392,VC:.004706,rB:.006229,CC:.004879,WC:.008786,sB:.00472},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","F","SC","TC","UC","VC","B","rB","CC","WC","C","sB","G","M","N","O","x","g","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","aB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","lB","h","mB","nB","oB","pB","qB","P","Q","R","xB","S","T","U","V","W","X","Y","Z","a","b","c","d","e","","",""],E:"Opera",F:{0:1405987200,1:1409616e3,2:1413331200,3:1417132800,4:1422316800,5:1425945600,6:1430179200,7:1433808e3,8:1438646400,9:1442448e3,F:1150761600,SC:1223424e3,TC:1251763200,UC:1267488e3,VC:1277942400,B:1292457600,rB:1302566400,CC:1309219200,WC:1323129600,C:1323129600,sB:1352073600,G:1372723200,M:1377561600,N:1381104e3,O:1386288e3,x:1390867200,g:1393891200,y:1399334400,z:1401753600,AB:1445904e3,BB:1449100800,CB:1454371200,DB:1457308800,EB:146232e4,FB:1465344e3,GB:1470096e3,HB:1474329600,IB:1477267200,JB:1481587200,KB:1486425600,LB:1490054400,MB:1494374400,NB:1498003200,OB:1502236800,PB:1506470400,QB:1510099200,RB:1515024e3,SB:1517961600,TB:1521676800,UB:1525910400,VB:1530144e3,WB:1534982400,XB:1537833600,YB:1543363200,ZB:1548201600,aB:1554768e3,bB:1561593600,cB:1566259200,dB:1570406400,eB:1573689600,fB:1578441600,gB:1583971200,hB:1587513600,iB:1592956800,jB:1595894400,kB:1600128e3,lB:1603238400,h:161352e4,mB:1612224e3,nB:1616544e3,oB:1619568e3,pB:1623715200,qB:1627948800,P:1631577600,Q:1633392e3,R:1635984e3,xB:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152e3,Z:1660780800,a:1663113600,b:1668816e3,c:1668643200,d:1671062400,e:1675209600},D:{F:"o",B:"o",C:"o",SC:"o",TC:"o",UC:"o",VC:"o",rB:"o",CC:"o",WC:"o",sB:"o"}},G:{A:{E:0,"0B":0,XC:0,DC:.00316399,YC:.00474599,ZC:.00316399,aC:.014238,bC:.00790998,cC:.018984,dC:.0569519,eC:.00316399,fC:.0696078,gC:.0205659,hC:.0237299,iC:.0205659,jC:.376515,kC:.012656,lC:.0348039,mC:.0316399,nC:.0996657,oC:.259447,pC:.480927,qC:.14238,"3B":.177184,"4B":.207241,"5B":.357531,"6B":1.01406,tB:1.11214,"7B":2.47741,"8B":1.67533,"9B":6.04164,AC:.11865,BC:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","0B","XC","DC","YC","ZC","aC","E","bC","cC","dC","eC","fC","gC","hC","iC","jC","kC","lC","mC","nC","oC","pC","qC","3B","4B","5B","6B","tB","7B","8B","9B","AC","BC","",""],E:"Safari on iOS",F:{"0B":1270252800,XC:1283904e3,DC:1299628800,YC:1331078400,ZC:1359331200,aC:1394409600,E:1410912e3,bC:1413763200,cC:1442361600,dC:1458518400,eC:1473724800,fC:1490572800,gC:1505779200,hC:1522281600,iC:1537142400,jC:1553472e3,kC:1568851200,lC:1572220800,mC:1580169600,nC:1585008e3,oC:1600214400,pC:1619395200,qC:1632096e3,"3B":1639353600,"4B":1647216e3,"5B":1652659200,"6B":1658275200,tB:1662940800,"7B":1666569600,"8B":1670889600,"9B":1674432e3,AC:1679875200,BC:null}},H:{A:{rC:1.0085},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rC","","",""],E:"Opera Mini",F:{rC:1426464e3}},I:{A:{uB:0,I:.0240008,H:0,sC:0,tC:.0720023,uC:0,vC:.0160005,DC:.0720023,wC:0,xC:.248008},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sC","tC","uC","uB","I","vC","DC","wC","xC","H","","",""],E:"Android Browser",F:{sC:1256515200,tC:1274313600,uC:1291593600,uB:1298332800,I:1318896e3,vC:1341792e3,DC:1374624e3,wC:1386547200,xC:1401667200,H:1678147200}},J:{A:{D:0,A:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","D","A","","",""],E:"Blackberry Browser",F:{D:1325376e3,A:1359504e3}},K:{A:{A:0,B:0,C:0,h:.0111391,rB:0,CC:0,sB:0},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","rB","CC","C","sB","h","","",""],E:"Opera Mobile",F:{A:1287100800,B:1300752e3,rB:1314835200,CC:1318291200,C:1330300800,sB:1349740800,h:1673827200},D:{h:"webkit"}},L:{A:{H:40.8907},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","H","","",""],E:"Chrome for Android",F:{H:1678147200}},M:{A:{f:.2959},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","f","","",""],E:"Firefox for Android",F:{f:1676332800}},N:{A:{A:.0115934,B:.022664},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","","",""],E:"IE Mobile",F:{A:1340150400,B:1353456e3}},O:{A:{yC:.905454},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","yC","","",""],E:"UC Browser for Android",F:{yC:1634688e3},D:{yC:"webkit"}},P:{A:{I:.147621,g:1.90853,zC:.0103543,"0C":.010304,"1C":.0527219,"2C":.0103584,"3C":.0104443,"1B":.0105043,"4C":.0210887,"5C":.0103982,"6C":.0316331,"7C":.0316331,"8C":.0210887,tB:.0527219,"9C":.0632662,AD:.0738106,BD:.253065},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","I","zC","0C","1C","2C","3C","1B","4C","5C","6C","7C","8C","tB","9C","AD","BD","g","","",""],E:"Samsung Internet",F:{I:1461024e3,zC:1481846400,"0C":1509408e3,"1C":1528329600,"2C":1546128e3,"3C":1554163200,"1B":1567900800,"4C":1582588800,"5C":1593475200,"6C":1605657600,"7C":1618531200,"8C":1629072e3,tB:1640736e3,"9C":1651708800,AD:1659657600,BD:1667260800,g:1677369600}},Q:{A:{"2B":.11836},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2B","","",""],E:"QQ Browser",F:{"2B":1663718400}},R:{A:{CD:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CD","","",""],E:"Baidu Browser",F:{CD:1663027200}},S:{A:{DD:.071016,ED:0},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DD","ED","","",""],E:"KaiOS Browser",F:{DD:1527811200,ED:1631664e3}}}},9720:e=>{e.exports={0:"23",1:"24",2:"25",3:"26",4:"27",5:"28",6:"29",7:"30",8:"31",9:"32",A:"10",B:"11",C:"12",D:"7",E:"8",F:"9",G:"15",H:"111",I:"4",J:"6",K:"13",L:"14",M:"16",N:"17",O:"18",P:"79",Q:"80",R:"81",S:"83",T:"84",U:"85",V:"86",W:"87",X:"88",Y:"89",Z:"90",a:"91",b:"92",c:"93",d:"94",e:"95",f:"110",g:"20",h:"73",i:"96",j:"97",k:"98",l:"99",m:"100",n:"101",o:"102",p:"103",q:"104",r:"105",s:"106",t:"107",u:"108",v:"109",w:"5",x:"19",y:"21",z:"22",AB:"33",BB:"34",CB:"35",DB:"36",EB:"37",FB:"38",GB:"39",HB:"40",IB:"41",JB:"42",KB:"43",LB:"44",MB:"45",NB:"46",OB:"47",PB:"48",QB:"49",RB:"50",SB:"51",TB:"52",UB:"53",VB:"54",WB:"55",XB:"56",YB:"57",ZB:"58",aB:"60",bB:"62",cB:"63",dB:"64",eB:"65",fB:"66",gB:"67",hB:"68",iB:"69",jB:"70",kB:"71",lB:"72",mB:"74",nB:"75",oB:"76",pB:"77",qB:"78",rB:"11.1",sB:"12.1",tB:"16.0",uB:"3",vB:"59",wB:"61",xB:"82",yB:"112",zB:"113","0B":"3.2","1B":"10.1","2B":"13.1","3B":"15.2-15.3","4B":"15.4","5B":"15.5","6B":"15.6","7B":"16.1","8B":"16.2","9B":"16.3",AC:"16.4",BC:"16.5",CC:"11.5",DC:"4.2-4.3",EC:"5.5",FC:"2",GC:"3.5",HC:"3.6",IC:"114",JC:"115",KC:"3.1",LC:"5.1",MC:"6.1",NC:"7.1",OC:"9.1",PC:"14.1",QC:"15.1",RC:"TP",SC:"9.5-9.6",TC:"10.0-10.1",UC:"10.5",VC:"10.6",WC:"11.6",XC:"4.0-4.1",YC:"5.0-5.1",ZC:"6.0-6.1",aC:"7.0-7.1",bC:"8.1-8.4",cC:"9.0-9.2",dC:"9.3",eC:"10.0-10.2",fC:"10.3",gC:"11.0-11.2",hC:"11.3-11.4",iC:"12.0-12.1",jC:"12.2-12.5",kC:"13.0-13.1",lC:"13.2",mC:"13.3",nC:"13.4-13.7",oC:"14.0-14.4",pC:"14.5-14.8",qC:"15.0-15.1",rC:"all",sC:"2.1",tC:"2.2",uC:"2.3",vC:"4.1",wC:"4.4",xC:"4.4.3-4.4.4",yC:"13.4",zC:"5.0-5.4","0C":"6.2-6.4","1C":"7.2-7.4","2C":"8.2","3C":"9.2","4C":"11.1-11.2","5C":"12.0","6C":"13.0","7C":"14.0","8C":"15.0","9C":"17.0",AD:"18.0",BD:"19.0",CD:"13.18",DD:"2.5",ED:"3.0-3.1"}},4191:e=>{e.exports={A:"ie",B:"edge",C:"firefox",D:"chrome",E:"safari",F:"opera",G:"ios_saf",H:"op_mini",I:"android",J:"bb",K:"op_mob",L:"and_chr",M:"and_ff",N:"ie_mob",O:"and_uc",P:"samsung",Q:"and_qq",R:"baidu",S:"kaios"}},9043:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"G M N O",33:"C K L P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB GC HC"},D:{33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"L G PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",16:"KC 0B",33:"I w J D E F A B C K LC MC NC OC 1B rB sB 2B"},F:{2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{1:"oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",16:"0B XC DC YC",33:"E ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC"},H:{2:"rC"},I:{16:"uB sC tC uC",33:"I H vC DC wC xC"},J:{33:"D A"},K:{16:"A B C rB CC sB",33:"h"},L:{33:"H"},M:{1:"f"},N:{2:"A B"},O:{33:"yC"},P:{33:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{33:"2B"},R:{33:"CD"},S:{1:"DD ED"}},B:7,C:"Background-clip: text"}},8594:e=>{e.exports={A:{A:{1:"F A B",2:"J D E EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC",36:"HC"},D:{1:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",516:"I w J D E F A B C K L"},E:{1:"D E F A B C K L G NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",772:"I w J KC 0B LC MC"},F:{1:"0 1 2 3 4 5 6 7 8 9 B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e UC VC rB CC WC sB",2:"F SC",36:"TC"},G:{1:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",4:"0B XC DC ZC",516:"YC"},H:{132:"rC"},I:{1:"H wC xC",36:"sC",516:"uB I vC DC",548:"tC uC"},J:{1:"D A"},K:{1:"A B C h rB CC sB"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS3 Background-image options"}},6374:e=>{e.exports={A:{A:{1:"B",2:"J D E F A EC"},B:{1:"L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",129:"C K"},C:{1:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB",260:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB",804:"I w J D E F A B C K L GC HC"},D:{1:"XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",260:"SB TB UB VB WB",388:"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB",1412:"0 1 2 3 4 5 6 G M N O x g y z",1956:"I w J D E F A B C K L"},E:{1:"4B 5B 6B tB 7B 8B 9B AC BC RC",129:"A B C K L G OC 1B rB sB 2B PC QC 3B",1412:"J D E F MC NC",1956:"I w KC 0B LC"},F:{1:"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F SC TC",260:"FB GB HB IB JB",388:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB",1796:"UC VC",1828:"B C rB CC WC sB"},G:{1:"4B 5B 6B tB 7B 8B 9B AC BC",129:"dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B",1412:"E ZC aC bC cC",1956:"0B XC DC YC"},H:{1828:"rC"},I:{1:"H",388:"wC xC",1956:"uB I sC tC uC vC DC"},J:{1412:"A",1924:"D"},K:{1:"h",2:"A",1828:"B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{1:"B",2:"A"},O:{1:"yC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",260:"zC 0C",388:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",260:"DD"}},B:4,C:"CSS3 Border images"}},5670:e=>{e.exports={A:{A:{1:"F A B",2:"J D E EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",257:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB",289:"uB GC HC",292:"FC"},D:{1:"0 1 2 3 4 5 6 7 8 9 w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"I"},E:{1:"w D E F A B C K L G NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"I KC 0B",129:"J LC MC"},F:{1:"0 1 2 3 4 5 6 7 8 9 B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e UC VC rB CC WC sB",2:"F SC TC"},G:{1:"E XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"0B"},H:{2:"rC"},I:{1:"uB I H tC uC vC DC wC xC",33:"sC"},J:{1:"D A"},K:{1:"B C h rB CC sB",2:"A"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",257:"DD"}},B:4,C:"CSS3 Border-radius (rounded corners)"}},7742:e=>{e.exports={A:{A:{2:"J D E EC",260:"F",516:"A B"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC HC",33:"I w J D E F A B C K L G"},D:{1:"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G M N O",33:"0 1 2 x g y z"},E:{1:"D E F A B C K L G MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w KC 0B LC",33:"J"},F:{1:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB"},G:{1:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",33:"ZC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC",132:"wC xC"},J:{1:"A",2:"D"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"calc() as CSS unit value"}},5919:e=>{e.exports={A:{A:{1:"A B",2:"J D E F EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I GC HC",33:"w J D E F A B C K L G"},D:{1:"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"KC 0B",33:"J D E LC MC NC",292:"I w"},F:{1:"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F B SC TC UC VC rB CC WC",33:"0 1 2 3 4 5 6 C G M N O x g y z"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"E ZC aC bC",164:"0B XC DC YC"},H:{2:"rC"},I:{1:"H",33:"I vC DC wC xC",164:"uB sC tC uC"},J:{33:"D A"},K:{1:"h sB",2:"A B C rB CC"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:5,C:"CSS Animation"}},1054:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",16:"FC",33:"0 1 2 3 4 5 6 7 8 9 uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB GC HC"},D:{1:"eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",16:"I w J D E F A B C K L",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",16:"I w J KC 0B LC",33:"D E MC NC"},F:{1:"TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",16:"0B XC DC YC",33:"E ZC aC bC"},H:{2:"rC"},I:{1:"H",16:"uB I sC tC uC vC DC",33:"wC xC"},J:{16:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",16:"I",33:"zC 0C 1C 2C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",33:"DD"}},B:5,C:"CSS :any-link selector"}},6440:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",33:"S",164:"P Q R",388:"C K L G M N O"},C:{1:"Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",164:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P",676:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB GC HC"},D:{1:"T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"S",164:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R"},E:{1:"4B 5B 6B tB 7B 8B 9B AC BC RC",164:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B"},F:{1:"h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"jB kB lB",164:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB"},G:{1:"4B 5B 6B tB 7B 8B 9B AC BC",164:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B"},H:{2:"rC"},I:{1:"H",164:"uB I sC tC uC vC DC wC xC"},J:{164:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A",388:"B"},O:{164:"yC"},P:{164:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{164:"2B"},R:{1:"CD"},S:{1:"ED",164:"DD"}},B:5,C:"CSS Appearance"}},4739:e=>{e.exports={A:{D:{33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},L:{33:"H"},B:{2:"C K L G M N O",33:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U GC HC"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},K:{2:"A B C rB CC sB",33:"h"},E:{1:"G QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"RC",33:"I w J D E F A B C K L KC 0B LC MC NC OC 1B rB sB 2B PC"},G:{1:"qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC"},P:{33:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},I:{2:"uB I sC tC uC vC DC",33:"H wC xC"}},B:6,C:":autofill CSS pseudo-class"}},5546:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M",257:"N O"},C:{1:"p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB GC HC",578:"jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o"},D:{1:"oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB",194:"OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB"},E:{2:"I w J D E KC 0B LC MC NC",33:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{1:"dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB SC TC UC VC rB CC WC sB",194:"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB"},G:{2:"E 0B XC DC YC ZC aC bC",33:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g 5C 6C 7C 8C tB 9C AD BD",2:"I",194:"zC 0C 1C 2C 3C 1B 4C"},Q:{2:"2B"},R:{1:"CD"},S:{2:"DD ED"}},B:7,C:"CSS Backdrop Filter"}},2718:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O",164:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 FC uB I w J D E F A B C K L G M N O x g y z GC HC"},D:{2:"I w J D E F A B C K L G M N O x g y",164:"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{2:"I w J KC 0B LC",164:"D E F A B C K L G MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{2:"F SC TC UC VC",129:"B C rB CC WC sB",164:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{2:"0B XC DC YC ZC",164:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{132:"rC"},I:{2:"uB I sC tC uC vC DC",164:"H wC xC"},J:{2:"D",164:"A"},K:{2:"A",129:"B C rB CC sB",164:"h"},L:{164:"H"},M:{1:"f"},N:{2:"A B"},O:{164:"yC"},P:{164:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{164:"2B"},R:{164:"CD"},S:{1:"DD ED"}},B:4,C:"CSS box-decoration-break"}},4890:e=>{e.exports={A:{A:{1:"F A B",2:"J D E EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB",33:"GC HC"},D:{1:"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"I w J D E F"},E:{1:"J D E F A B C K L G LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"w",164:"I KC 0B"},F:{1:"0 1 2 3 4 5 6 7 8 9 B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e UC VC rB CC WC sB",2:"F SC TC"},G:{1:"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"XC DC",164:"0B"},H:{2:"rC"},I:{1:"I H vC DC wC xC",164:"uB sC tC uC"},J:{1:"A",33:"D"},K:{1:"B C h rB CC sB",2:"A"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS3 Box-shadow"}},3275:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N",260:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",3138:"O"},C:{1:"VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB",132:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB GC HC",644:"OB PB QB RB SB TB UB"},D:{2:"0 I w J D E F A B C K L G M N O x g y z",260:"WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",292:"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB"},E:{2:"I w J KC 0B LC MC",260:"L G 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",292:"D E F A B C K NC OC 1B rB sB"},F:{2:"F B C SC TC UC VC rB CC WC sB",260:"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",292:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB"},G:{2:"0B XC DC YC ZC",260:"kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",292:"E aC bC cC dC eC fC gC hC iC jC"},H:{2:"rC"},I:{2:"uB I sC tC uC vC DC",260:"H",292:"wC xC"},J:{2:"D A"},K:{2:"A B C rB CC sB",260:"h"},L:{260:"H"},M:{1:"f"},N:{2:"A B"},O:{260:"yC"},P:{292:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{260:"2B"},R:{260:"CD"},S:{1:"ED",644:"DD"}},B:4,C:"CSS clip-path property (for HTML)"}},7907:e=>{e.exports={A:{A:{2:"J EC",2340:"D E F A B"},B:{2:"C K L G M N O",1025:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC",513:"eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b",545:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB HC"},D:{2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB",1025:"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"A B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w KC 0B LC",164:"J",4644:"D E F MC NC OC"},F:{2:"0 1 2 3 4 F B G M N O x g y z SC TC UC VC rB CC",545:"C WC sB",1025:"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{1:"eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC",4260:"YC ZC",4644:"E aC bC cC dC"},H:{2:"rC"},I:{2:"uB I sC tC uC vC DC wC xC",1025:"H"},J:{2:"D",4260:"A"},K:{2:"A B rB CC",545:"C sB",1025:"h"},L:{1025:"H"},M:{1:"f"},N:{2340:"A B"},O:{1025:"yC"},P:{1025:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1025:"2B"},R:{1025:"CD"},S:{1:"ED",4097:"DD"}},B:4,C:"Crisp edges/pixelated images"}},4143:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O",33:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},D:{2:"I w J D E F A B C K L G M",33:"0 1 2 3 4 5 6 7 8 9 N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"A B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w KC 0B",33:"J D E F LC MC NC OC"},F:{2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{1:"eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC",33:"E YC ZC aC bC cC dC"},H:{2:"rC"},I:{2:"uB I sC tC uC vC DC",33:"H wC xC"},J:{2:"D A"},K:{2:"A B C rB CC sB",33:"h"},L:{33:"H"},M:{2:"f"},N:{2:"A B"},O:{33:"yC"},P:{33:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{33:"2B"},R:{33:"CD"},S:{2:"DD ED"}},B:4,C:"CSS Cross-Fade Function"}},5683:e=>{e.exports={A:{A:{2:"J D E F EC",164:"A B"},B:{66:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",164:"C K L G M N O"},C:{2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},D:{2:"0 1 2 3 4 5 I w J D E F A B C K L G M N O x g y z",66:"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{2:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB SC TC UC VC rB CC WC sB",66:"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{292:"rC"},I:{2:"uB I H sC tC uC vC DC wC xC"},J:{2:"D A"},K:{2:"A h",292:"B C rB CC sB"},L:{2:"H"},M:{2:"f"},N:{164:"A B"},O:{2:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{66:"2B"},R:{2:"CD"},S:{2:"DD ED"}},B:5,C:"CSS Device Adaptation"}},8941:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",164:"FC uB GC HC"},D:{2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{2:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e SC TC UC VC rB CC WC sB"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{2:"uB I H sC tC uC vC DC wC xC"},J:{2:"D A"},K:{2:"A B C h rB CC sB"},L:{2:"H"},M:{33:"f"},N:{2:"A B"},O:{2:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{2:"2B"},R:{2:"CD"},S:{33:"DD ED"}},B:5,C:"CSS element() function"}},2837:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F A B C K L G M N O x g y GC HC"},D:{1:"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 I w J D E F A B C K L G M N O x g y z"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D E KC 0B LC MC NC"},F:{1:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F B C SC TC UC VC rB CC WC"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC"},H:{1:"rC"},I:{1:"H wC xC",2:"uB I sC tC uC vC DC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS Feature Queries"}},4787:e=>{e.exports={A:{D:{1:"Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X"},L:{1:"H"},B:{1:"Y Z a b c d e i j k l m n o p q r s t u v f H",33:"C K L G M N O P Q R S T U V W X"},C:{1:"xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R GC HC"},M:{1:"f"},A:{2:"J D E F EC",33:"A B"},F:{1:"nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"G PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"RC",33:"I w J D E F A B C K L KC 0B LC MC NC OC 1B rB sB 2B"},G:{1:"pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC"},P:{1:"g 8C tB 9C AD BD",33:"I zC 0C 1C 2C 3C 1B 4C 5C 6C 7C"},I:{1:"H",2:"uB I sC tC uC vC DC",33:"wC xC"}},B:6,C:"::file-selector-button CSS pseudo-element"}},7370:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},D:{2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D E KC 0B LC MC NC",33:"F"},F:{2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e SC TC UC VC rB CC WC sB"},G:{1:"eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC",33:"cC dC"},H:{2:"rC"},I:{2:"uB I H sC tC uC vC DC wC xC"},J:{2:"D A"},K:{2:"A B C h rB CC sB"},L:{2:"H"},M:{2:"f"},N:{2:"A B"},O:{2:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{2:"2B"},R:{2:"CD"},S:{2:"DD ED"}},B:5,C:"CSS filter() function"}},8658:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",1028:"K L G M N O",1346:"C"},C:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC",196:"BB",516:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB HC"},D:{1:"UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G M N",33:"0 1 2 3 4 5 6 7 8 9 O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB"},E:{1:"A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w KC 0B LC",33:"J D E F MC NC"},F:{1:"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB"},G:{1:"dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",33:"E ZC aC bC cC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC",33:"wC xC"},J:{2:"D",33:"A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",33:"I zC 0C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:5,C:"CSS Filter Effects"}},2924:e=>{e.exports={A:{A:{1:"A B",2:"J D E F EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC",260:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB",292:"I w J D E F A B C K L G HC"},D:{1:"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 A B C K L G M N O x g y z",548:"I w J D E F"},E:{1:"4B 5B 6B tB 7B 8B 9B AC BC RC",2:"KC 0B",260:"D E F A B C K L G MC NC OC 1B rB sB 2B PC QC 3B",292:"J LC",804:"I w"},F:{1:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F B SC TC UC VC",33:"C WC",164:"rB CC"},G:{1:"4B 5B 6B tB 7B 8B 9B AC BC",260:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B",292:"YC ZC",804:"0B XC DC"},H:{2:"rC"},I:{1:"H wC xC",33:"I vC DC",548:"uB sC tC uC"},J:{1:"A",548:"D"},K:{1:"h sB",2:"A B",33:"C",164:"rB CC"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS Gradients"}},6818:e=>{e.exports={A:{A:{2:"J D E EC",8:"F",292:"A B"},B:{1:"M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",292:"C K L G"},C:{1:"VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F A B C K L G M N O GC HC",8:"0 1 2 3 4 5 6 7 8 9 x g y z AB BB CB DB EB FB GB",584:"HB IB JB KB LB MB NB OB PB QB RB SB",1025:"TB UB"},D:{1:"ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 I w J D E F A B C K L G M N O x g y z",8:"2 3 4 5",200:"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB",1025:"YB"},E:{1:"B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w KC 0B LC",8:"J D E F A MC NC OC"},F:{1:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 F B C G M N O x g y z SC TC UC VC rB CC WC sB",200:"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB"},G:{1:"fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",8:"E ZC aC bC cC dC eC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC",8:"DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{292:"A B"},O:{1:"yC"},P:{1:"g 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"zC",8:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS Grid Layout (level 1)"}},7694:e=>{e.exports={A:{A:{2:"J D E F EC",33:"A B"},B:{1:"r s t u v f H",33:"C K L G M N O",132:"P Q R S T U V W",260:"X Y Z a b c d e i j k l m n o p q"},C:{1:"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w GC HC",33:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB"},D:{1:"X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB",132:"WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W"},E:{2:"I w KC 0B",33:"J D E F A B C K L G LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{1:"a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB SC TC UC VC rB CC WC sB",132:"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z"},G:{2:"0B XC",33:"E DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{4:"yC"},P:{1:"g 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I",132:"zC"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS Hyphenation"}},3524:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O",164:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U GC HC",66:"V W",2305:"Y Z a b c d e i j k l m n o p q r s t u v f H yB",2820:"X"},D:{2:"I w J D E F A B C K L G M N O x g",164:"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB",2049:"zB IC JC"},E:{1:"RC",2:"I w KC 0B LC",132:"A B C K 1B rB sB 2B",164:"J D E F MC NC OC",1540:"L G PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},F:{2:"F B C SC TC UC VC rB CC WC sB",164:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{2:"0B XC DC YC",132:"eC fC gC hC iC jC kC lC mC nC",164:"E ZC aC bC cC dC",1540:"oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{2:"uB I sC tC uC vC DC",164:"H wC xC"},J:{2:"D",164:"A"},K:{2:"A B C rB CC sB",164:"h"},L:{164:"H"},M:{2305:"f"},N:{2:"A B"},O:{164:"yC"},P:{164:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{164:"2B"},R:{164:"CD"},S:{2:"DD ED"}},B:5,C:"CSS image-set"}},3403:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O",1028:"W X",1540:"P Q R S T U V"},C:{1:"fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC",164:"0 1 2 3 4 5 6 7 8 9 uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB GC HC",1540:"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB"},D:{1:"Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",292:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB",1028:"W X",1540:"iB jB kB lB h mB nB oB pB qB P Q R S T U V"},E:{1:"G QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",292:"I w J D E F A B C KC 0B LC MC NC OC 1B rB",1540:"K L sB 2B",5124:"PC"},F:{1:"oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",292:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB",1028:"mB nB",1540:"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h"},G:{1:"qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",292:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC",1540:"jC kC lC mC nC oC",5124:"pC"},H:{2:"rC"},I:{1:"H",292:"uB I sC tC uC vC DC wC xC"},J:{292:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{292:"yC"},P:{1:"g 8C tB 9C AD BD",292:"I zC 0C 1C 2C 3C",1540:"1B 4C 5C 6C 7C"},Q:{1540:"2B"},R:{1:"CD"},S:{1:"ED",1540:"DD"}},B:5,C:"CSS Logical Properties"}},4634:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M",164:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",3138:"N",12292:"O"},C:{1:"UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB",260:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB GC HC"},D:{164:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"4B 5B 6B tB 7B 8B 9B AC BC RC",2:"KC 0B",164:"I w J D E F A B C K L G LC MC NC OC 1B rB sB 2B PC QC 3B"},F:{2:"F B C SC TC UC VC rB CC WC sB",164:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{1:"4B 5B 6B tB 7B 8B 9B AC BC",164:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B"},H:{2:"rC"},I:{164:"H wC xC",676:"uB I sC tC uC vC DC"},J:{164:"D A"},K:{2:"A B C rB CC sB",164:"h"},L:{164:"H"},M:{1:"f"},N:{2:"A B"},O:{164:"yC"},P:{164:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{164:"2B"},R:{164:"CD"},S:{1:"ED",260:"DD"}},B:4,C:"CSS Masks"}},4063:e=>{e.exports={A:{A:{2:"J D E EC",132:"F A B"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",1028:"C K L G M N O"},C:{1:"bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB",260:"I w J D E F A B C K L G GC HC",1028:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB"},D:{1:"hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",548:"0 1 2 3 4 5 I w J D E F A B C K L G M N O x g y z",1028:"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB"},E:{1:"tB 7B 8B 9B AC BC RC",2:"KC 0B",548:"I w J D E F A B C K L G LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B"},F:{1:"WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F",548:"B C SC TC UC VC rB CC WC",1028:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB"},G:{1:"tB 7B 8B 9B AC BC",16:"0B",548:"E XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B"},H:{132:"rC"},I:{1:"H",16:"sC tC",548:"uB I uC vC DC",1028:"wC xC"},J:{548:"D A"},K:{1:"h sB",548:"A B C rB CC"},L:{1:"H"},M:{1:"f"},N:{132:"A B"},O:{1:"yC"},P:{1:"g 1B 4C 5C 6C 7C 8C tB 9C AD BD",1028:"I zC 0C 1C 2C 3C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"Media Queries: resolution feature"}},4450:e=>{e.exports={A:{A:{2:"J D E F EC",132:"A B"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",132:"C K L G M N",516:"O"},C:{1:"vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB GC HC"},D:{1:"eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB",260:"cB dB"},E:{1:"tB 7B 8B 9B AC BC RC",2:"I w J D E F A B C K L KC 0B LC MC NC OC 1B rB sB 2B",1090:"G PC QC 3B 4B 5B 6B"},F:{1:"TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB SC TC UC VC rB CC WC sB",260:"RB SB"},G:{1:"tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC",1090:"pC qC 3B 4B 5B 6B"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{132:"A B"},O:{1:"yC"},P:{1:"g 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC 0C 1C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",2:"DD"}},B:5,C:"CSS overscroll-behavior"}},9819:e=>{e.exports={A:{A:{2:"J D E F EC",292:"A B"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC HC",164:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},D:{1:"OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D E KC 0B LC MC NC"},F:{1:"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB SC TC UC VC rB CC WC sB"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",164:"DD"}},B:5,C:":placeholder-shown CSS pseudo-class"}},9201:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",36:"C K L G M N O"},C:{1:"SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F A B C K L G M N O GC HC",33:"0 1 2 3 4 5 6 7 8 9 x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB"},D:{1:"YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",36:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB"},E:{1:"B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I KC 0B",36:"w J D E F A LC MC NC OC"},F:{1:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",36:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB"},G:{1:"fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC",36:"E DC YC ZC aC bC cC dC eC"},H:{2:"rC"},I:{1:"H",36:"uB I sC tC uC vC DC wC xC"},J:{36:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{36:"A B"},O:{1:"yC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",36:"I zC 0C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",33:"DD"}},B:5,C:"::placeholder CSS pseudo-element"}},9629:e=>{e.exports={A:{D:{2:"I w J D E F A B C K L G M",33:"0 1 2 3 4 5 6 7 8 9 N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},L:{33:"H"},B:{2:"C K L G M N O",33:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB GC HC",33:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},K:{2:"A B C rB CC sB",33:"h"},E:{1:"4B 5B 6B tB 7B 8B 9B AC BC",2:"I w KC 0B LC RC",33:"J D E F A B C K L G MC NC OC 1B rB sB 2B PC QC 3B"},G:{1:"4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",33:"E ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B"},P:{33:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},I:{2:"uB I sC tC uC vC DC",33:"H wC xC"}},B:6,C:"print-color-adjust property"}},1090:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C"},C:{1:"qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",16:"FC",33:"0 1 2 3 4 5 6 7 8 9 uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB GC HC"},D:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",16:"I w J D E F A B C K L",132:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",16:"KC 0B",132:"I w J D E LC MC NC"},F:{1:"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",16:"F B SC TC UC VC rB",132:"C G M N O x g y z CC WC sB"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",16:"0B XC",132:"E DC YC ZC aC bC"},H:{2:"rC"},I:{1:"H",16:"sC tC",132:"uB I uC vC DC wC xC"},J:{1:"A",132:"D"},K:{1:"h",2:"A B rB",132:"C CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",33:"DD"}},B:1,C:"CSS :read-only and :read-write selectors"}},5735:e=>{e.exports={A:{A:{2:"J D E F EC",420:"A B"},B:{2:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",420:"C K L G M N O"},C:{2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},D:{2:"I w J D E F A B C K L CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",36:"G M N O",66:"0 1 2 3 4 5 6 7 8 9 x g y z AB BB"},E:{2:"I w J C K L G KC 0B LC rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"D E F A B MC NC OC 1B"},F:{2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e SC TC UC VC rB CC WC sB"},G:{2:"0B XC DC YC ZC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"E aC bC cC dC eC fC gC"},H:{2:"rC"},I:{2:"uB I H sC tC uC vC DC wC xC"},J:{2:"D A"},K:{2:"A B C h rB CC sB"},L:{2:"H"},M:{2:"f"},N:{420:"A B"},O:{2:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{2:"2B"},R:{2:"CD"},S:{2:"DD ED"}},B:5,C:"CSS Regions"}},1922:e=>{e.exports={A:{A:{1:"F A B",2:"J D E EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",33:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB GC HC"},D:{1:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{1:"0 1 2 3 4 5 6 7 8 9 B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e SC TC UC VC rB CC WC sB",2:"F"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H wC xC",2:"uB I sC tC uC vC DC"},J:{1:"A",2:"D"},K:{1:"C h CC sB",16:"A B rB"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",33:"DD"}},B:5,C:"::selection CSS pseudo-element"}},9678:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB GC HC",322:"SB TB UB VB WB XB YB ZB vB aB wB"},D:{1:"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB",194:"BB CB DB"},E:{1:"B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D KC 0B LC MC",33:"E F A NC OC"},F:{1:"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 F B C G M N O x g y z SC TC UC VC rB CC WC sB"},G:{1:"fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC aC",33:"E bC cC dC eC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",2:"DD"}},B:4,C:"CSS Shapes Level 1"}},8956:e=>{e.exports={A:{A:{2:"J D E F EC",6308:"A",6436:"B"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",6436:"C K L G M N O"},C:{1:"hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GC HC",2052:"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB"},D:{1:"iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB",8258:"fB gB hB"},E:{1:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D E KC 0B LC MC NC",3108:"F A OC 1B"},F:{1:"dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB SC TC UC VC rB CC WC sB",8258:"VB WB XB YB ZB aB bB cB"},G:{1:"gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC",3108:"cC dC eC fC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC 0C 1C 2C 3C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",2052:"DD"}},B:4,C:"CSS Scroll Snap"}},81:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"a b c d e i j k l m n o p q r s t u v f H",2:"C K L G",1028:"P Q R S T U V W X Y Z",4100:"M N O"},C:{1:"vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 FC uB I w J D E F A B C K L G M N O x g y z GC HC",194:"3 4 5 6 7 8",516:"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB"},D:{1:"a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G M N O x g y z EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB",322:"0 1 2 3 4 5 6 7 8 9 AB BB CB DB TB UB VB WB",1028:"XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z"},E:{1:"K L G 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J KC 0B LC",33:"E F A B C NC OC 1B rB sB",2084:"D MC"},F:{1:"qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB SC TC UC VC rB CC WC sB",322:"GB HB IB",1028:"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB"},G:{1:"kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",33:"E bC cC dC eC fC gC hC iC jC",2084:"ZC aC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1028:"yC"},P:{1:"g 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC"},Q:{1028:"2B"},R:{1:"CD"},S:{1:"ED",516:"DD"}},B:5,C:"CSS position:sticky"}},1803:e=>{e.exports={A:{A:{132:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",4:"C K L G M N O"},C:{1:"QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F A B GC HC",33:"0 1 2 3 4 5 6 7 8 9 C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB"},D:{1:"OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB",322:"CB DB EB FB GB HB IB JB KB LB MB NB"},E:{1:"tB 7B 8B 9B AC BC RC",2:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B"},F:{1:"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C G M N O x g y SC TC UC VC rB CC WC sB",578:"0 1 2 3 4 5 6 7 8 9 z AB"},G:{1:"tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{132:"A B"},O:{1:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",33:"DD"}},B:4,C:"CSS3 text-align-last"}},459:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB GC HC",194:"FB GB HB"},D:{1:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},E:{1:"L G PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D E F KC 0B LC MC NC OC",16:"A",33:"B C K 1B rB sB 2B"},F:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB SC TC UC VC rB CC WC sB"},G:{1:"eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"E 0B XC DC YC ZC aC bC cC dC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:2,C:"CSS text-orientation"}},3362:e=>{e.exports={A:{A:{2:"J D EC",161:"E F A B"},B:{2:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",161:"C K L G M N O"},C:{2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},D:{2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{2:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e SC TC UC VC rB CC WC sB"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{2:"uB I H sC tC uC vC DC wC xC"},J:{2:"D A"},K:{2:"A B C h rB CC sB"},L:{2:"H"},M:{2:"f"},N:{16:"A B"},O:{2:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{2:"2B"},R:{2:"CD"},S:{2:"DD ED"}},B:5,C:"CSS Text 4 text-spacing"}},2209:e=>{e.exports={A:{A:{1:"A B",2:"J D E F EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC HC",33:"w J D E F A B C K L G",164:"I"},D:{1:"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 I w J D E F A B C K L G M N O x g y z"},E:{1:"D E F A B C K L G MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"J LC",164:"I w KC 0B"},F:{1:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F SC TC",33:"C",164:"B UC VC rB CC WC"},G:{1:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"ZC",164:"0B XC DC YC"},H:{2:"rC"},I:{1:"H wC xC",33:"uB I sC tC uC vC DC"},J:{1:"A",33:"D"},K:{1:"h sB",33:"C",164:"A B rB CC"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:5,C:"CSS3 Transitions"}},1294:e=>{e.exports={A:{D:{2:"I w J D E F A B C K L G M N O x g y",33:"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},L:{33:"H"},B:{2:"C K L G M N O",33:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{2:"FC",33:"0 1 2 3 4 5 6 7 8 9 uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},M:{33:"f"},A:{2:"J D E F A B EC"},F:{2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},K:{2:"A B C rB CC sB",33:"h"},E:{2:"I w J KC 0B LC MC RC",33:"D E F A B C K L G NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},G:{2:"0B XC DC YC ZC",33:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},P:{2:"I",33:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},I:{2:"uB I sC tC uC vC DC",33:"H wC xC"}},B:6,C:"width: stretch property"}},6797:e=>{e.exports={A:{A:{132:"J D E F A B EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB GC HC",322:"DB EB FB GB HB"},D:{1:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J",16:"D",33:"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},E:{1:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I KC 0B",16:"w",33:"J D E F A LC MC NC OC 1B"},F:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB"},G:{1:"gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",16:"0B XC DC",33:"E YC ZC aC bC cC dC eC fC"},H:{2:"rC"},I:{1:"H",2:"sC tC uC",33:"uB I vC DC wC xC"},J:{33:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{36:"A B"},O:{1:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",33:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:2,C:"CSS writing-mode property"}},6216:e=>{e.exports={A:{A:{1:"E F A B",8:"J D EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",33:"0 1 2 3 4 5 FC uB I w J D E F A B C K L G M N O x g y z GC HC"},D:{1:"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"I w J D E F"},E:{1:"J D E F A B C K L G LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"I w KC 0B"},F:{1:"0 1 2 3 4 5 6 7 8 9 B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e SC TC UC VC rB CC WC sB",2:"F"},G:{1:"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"0B XC DC"},H:{1:"rC"},I:{1:"I H vC DC wC xC",33:"uB sC tC uC"},J:{1:"A",33:"D"},K:{1:"A B C h rB CC sB"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:5,C:"CSS3 Box-sizing"}},577:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L"},C:{1:"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",33:"0 1 2 3 FC uB I w J D E F A B C K L G M N O x g y z GC HC"},D:{1:"hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB"},E:{1:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"I w J D E F A KC 0B LC MC NC OC 1B"},F:{1:"C WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e WC sB",2:"F B SC TC UC VC rB CC",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{33:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{2:"f"},N:{2:"A B"},O:{1:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{2:"DD ED"}},B:2,C:"CSS grab & grabbing cursors"}},2136:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",33:"0 FC uB I w J D E F A B C K L G M N O x g y z GC HC"},D:{1:"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"I w J D E KC 0B LC MC NC"},F:{1:"1 2 3 4 5 6 7 8 9 C AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e WC sB",2:"F B SC TC UC VC rB CC",33:"0 G M N O x g y z"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{33:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{2:"f"},N:{2:"A B"},O:{1:"yC"},P:{2:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{2:"DD ED"}},B:2,C:"CSS3 Cursors: zoom-in & zoom-out"}},5048:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC HC",33:"UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z",164:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB"},D:{1:"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G M N O x g",132:"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB"},E:{1:"L G 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J KC 0B LC",132:"D E F A B C K MC NC OC 1B rB sB"},F:{1:"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F SC TC UC",132:"0 1 2 3 4 5 G M N O x g y z",164:"B C VC rB CC WC sB"},G:{1:"nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC",132:"E aC bC cC dC eC fC gC hC iC jC kC lC mC"},H:{164:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC",132:"wC xC"},J:{132:"D A"},K:{1:"h",2:"A",164:"B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{164:"DD ED"}},B:4,C:"CSS3 tab-size"}},8278:e=>{e.exports={A:{A:{2:"J D E F EC",1028:"B",1316:"A"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",164:"FC uB I w J D E F A B C K L G M N O x g y GC HC",516:"0 1 2 3 4 z"},D:{1:"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 y z",164:"I w J D E F A B C K L G M N O x g"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"D E MC NC",164:"I w J KC 0B LC"},F:{1:"0 1 2 3 4 5 6 7 8 9 N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F B C SC TC UC VC rB CC WC",33:"G M"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"E aC bC",164:"0B XC DC YC ZC"},H:{1:"rC"},I:{1:"H wC xC",164:"uB I sC tC uC vC DC"},J:{1:"A",164:"D"},K:{1:"h sB",2:"A B C rB CC"},L:{1:"H"},M:{1:"f"},N:{1:"B",292:"A"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS Flexible Box Layout Module"}},9556:e=>{e.exports={A:{A:{1:"A B",2:"J D E F EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB GC HC",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB",164:"I w J D E F A B C K L"},D:{1:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G",33:"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB",292:"M N O x g"},E:{1:"A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"D E F KC 0B MC NC",4:"I w J LC"},F:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB"},G:{1:"dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"E aC bC cC",4:"0B XC DC YC ZC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC",33:"wC xC"},J:{2:"D",33:"A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",33:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:2,C:"CSS font-feature-settings"}},2793:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 FC uB I w J D E F A B C K L G M N O x g y z GC HC",194:"1 2 3 4 5 6 7 8 9 AB"},D:{1:"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 I w J D E F A B C K L G M N O x g y z",33:"6 7 8 9"},E:{1:"A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J KC 0B LC MC",33:"D E F NC"},F:{1:"0 1 2 3 4 5 6 7 8 9 g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C G SC TC UC VC rB CC WC sB",33:"M N O x"},G:{1:"iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC aC",33:"E bC cC dC eC fC gC hC"},H:{2:"rC"},I:{1:"H xC",2:"uB I sC tC uC vC DC",33:"wC"},J:{2:"D",33:"A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS3 font-kerning"}},9882:e=>{e.exports={A:{A:{2:"J D E F A EC",548:"B"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",516:"C K L G M N O"},C:{1:"dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F GC HC",676:"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB",1700:"OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB"},D:{1:"kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L",676:"G M N O x",804:"0 1 2 3 4 5 6 7 8 9 g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB"},E:{1:"AC BC RC",2:"I w KC 0B",548:"4B 5B 6B tB 7B 8B 9B",676:"LC",804:"J D E F A B C K L G MC NC OC 1B rB sB 2B PC QC 3B"},F:{1:"dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F B C SC TC UC VC rB CC WC",804:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB"},G:{2:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC",2052:"iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{2:"uB I H sC tC uC vC DC wC xC"},J:{2:"D",292:"A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A",548:"B"},O:{1:"yC"},P:{1:"g 1B 4C 5C 6C 7C 8C tB 9C AD BD",804:"I zC 0C 1C 2C 3C"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:1,C:"Full Screen API"}},3017:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O",1025:"d e i j k l m n o p q r s t u v f H",1537:"P Q R S T U V W X Y Z a b c"},C:{2:"FC",932:"0 1 2 3 4 5 6 7 8 9 uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB GC HC",2308:"fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB"},D:{2:"I w J D E F A B C K L G M N O x g y",545:"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB",1025:"d e i j k l m n o p q r s t u v f H yB zB IC JC",1537:"NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c"},E:{1:"tB 7B 8B 9B AC BC RC",2:"I w J KC 0B LC",516:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B",548:"F A OC 1B",676:"D E MC NC"},F:{2:"F B C SC TC UC VC rB CC WC sB",513:"BB",545:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z",1025:"e",1537:"AB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d"},G:{1:"tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC",516:"oC pC qC 3B 4B 5B 6B",548:"cC dC eC fC gC hC iC jC kC lC mC nC",676:"E aC bC"},H:{2:"rC"},I:{2:"uB I sC tC uC vC DC",545:"wC xC",1025:"H"},J:{2:"D",545:"A"},K:{2:"A B C rB CC sB",1025:"h"},L:{1025:"H"},M:{2308:"f"},N:{2:"A B"},O:{1537:"yC"},P:{545:"I",1025:"g 9C AD BD",1537:"zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB"},Q:{1537:"2B"},R:{1537:"CD"},S:{932:"DD",2308:"ED"}},B:5,C:"Intrinsic & Extrinsic Sizing"}},7892:e=>{e.exports={A:{D:{1:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F A B C K L G M GC HC",33:"0 1 2 3 4 5 6 7 8 9 N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB SC TC UC VC rB CC WC sB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"I w J KC 0B LC MC RC",33:"D E F A NC OC 1B"},G:{1:"gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC",33:"E aC bC cC dC eC fC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"isolate-override from unicode-bidi"}},6017:e=>{e.exports={A:{D:{1:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G",33:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F GC HC",33:"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"I w KC 0B LC RC",33:"J D E F A MC NC OC 1B"},G:{1:"gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",33:"E ZC aC bC cC dC eC fC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"isolate from unicode-bidi"}},3010:e=>{e.exports={A:{D:{1:"PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F GC HC",33:"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB SC TC UC VC rB CC WC sB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"B C K L G rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"I w KC 0B LC RC",33:"J D E F A MC NC OC 1B"},G:{1:"gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC",33:"E ZC aC bC cC dC eC fC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"plaintext from unicode-bidi"}},2337:e=>{e.exports={A:{D:{1:"YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w GC HC",33:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB SC TC UC VC rB CC WC sB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"K L G sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"I w J D KC 0B LC MC NC RC",33:"E F A B C OC 1B rB"},G:{1:"jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC aC",33:"E bC cC dC eC fC gC hC iC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC 0C"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"text-decoration-color property"}},4189:e=>{e.exports={A:{D:{1:"YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w GC HC",33:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB SC TC UC VC rB CC WC sB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"K L G sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"I w J D KC 0B LC MC NC RC",33:"E F A B C OC 1B rB"},G:{1:"jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC aC",33:"E bC cC dC eC fC gC hC iC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC 0C"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"text-decoration-line property"}},9176:e=>{e.exports={A:{D:{1:"YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w GC HC"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB SC TC UC VC rB CC WC sB"},K:{1:"h",2:"A B C rB CC sB"},E:{2:"I w J D KC 0B LC MC NC RC",33:"E F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},G:{2:"0B XC DC YC ZC aC",33:"E bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC 0C"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"text-decoration shorthand property"}},7295:e=>{e.exports={A:{D:{1:"YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB"},L:{1:"H"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G M N O"},C:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w GC HC",33:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB"},M:{1:"f"},A:{2:"J D E F A B EC"},F:{1:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB SC TC UC VC rB CC WC sB"},K:{1:"h",2:"A B C rB CC sB"},E:{1:"K L G sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"I w J D KC 0B LC MC NC RC",33:"E F A B C OC 1B rB"},G:{1:"jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC aC",33:"E bC cC dC eC fC gC hC iC"},P:{1:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I zC 0C"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"}},B:6,C:"text-decoration-style property"}},1742:e=>{e.exports={A:{A:{1:"A B",2:"J D E F EC"},B:{1:"C K L G M N O",516:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{132:"TB UB VB WB XB YB ZB vB aB wB bB cB dB",164:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB GC HC",516:"eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a",1028:"b c d e i j k l m n o p q r s t u v f H yB zB"},D:{420:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB",516:"RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"A B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",132:"F OC",164:"D E NC",420:"I w J KC 0B LC MC"},F:{1:"C rB CC WC sB",2:"F B SC TC UC VC",420:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB",516:"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{1:"eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",132:"cC dC",164:"E aC bC",420:"0B XC DC YC ZC"},H:{1:"rC"},I:{420:"uB I sC tC uC vC DC wC xC",516:"H"},J:{420:"D A"},K:{1:"C rB CC sB",2:"A B",516:"h"},L:{516:"H"},M:{1028:"f"},N:{1:"A B"},O:{516:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",420:"I"},Q:{516:"2B"},R:{516:"CD"},S:{164:"DD ED"}},B:4,C:"CSS3 Multiple column layout"}},955:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",2:"C K L G",260:"M N O"},C:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB GC HC"},D:{1:"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 3 4 5 6 7 8 I w J D E F A B C K L G M N O x g y z"},E:{1:"A B C K L G 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J D KC 0B LC MC",132:"E F NC OC"},F:{1:"0 1 2 3 4 5 6 7 8 9 x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F G M N O SC TC UC",33:"B C VC rB CC WC sB"},G:{1:"eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC aC",132:"E bC cC dC"},H:{33:"rC"},I:{1:"H xC",2:"uB I sC tC uC vC DC wC"},J:{2:"D A"},K:{1:"h",2:"A",33:"B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS3 object-fit/object-position"}},2396:e=>{e.exports={A:{A:{1:"B",2:"J D E F EC",164:"A"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w GC HC",8:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB",328:"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB"},D:{1:"WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B C K L G M N O x g y",8:"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB",584:"TB UB VB"},E:{1:"K L G 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J KC 0B LC",8:"D E F A B C MC NC OC 1B rB",1096:"sB"},F:{1:"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",8:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB",584:"GB HB IB"},G:{1:"lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",8:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC",6148:"kC"},H:{2:"rC"},I:{1:"H",8:"uB I sC tC uC vC DC wC xC"},J:{8:"D A"},K:{1:"h",2:"A",8:"B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{1:"B",36:"A"},O:{1:"yC"},P:{1:"g 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"zC",8:"I"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",328:"DD"}},B:2,C:"Pointer events"}},7272:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{2:"C K L G M N O",2052:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{2:"FC uB I w GC HC",1028:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",1060:"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O x g y z AB BB CB"},D:{2:"0 1 2 I w J D E F A B C K L G M N O x g y z",226:"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB",2052:"YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{2:"I w J D KC 0B LC MC",772:"K L G sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",804:"E F A B C OC 1B rB",1316:"NC"},F:{2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB SC TC UC VC rB CC WC sB",226:"CB DB EB FB GB HB IB JB KB",2052:"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e"},G:{2:"0B XC DC YC ZC aC",292:"E bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{2:"A B C rB CC sB",2052:"h"},L:{2052:"H"},M:{1028:"f"},N:{2:"A B"},O:{2052:"yC"},P:{2:"I zC 0C",2052:"g 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{2052:"2B"},R:{2052:"CD"},S:{1028:"DD ED"}},B:4,C:"text-decoration styling"}},7975:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"l m n o p q r s t u v f H",2:"C K L G M N O",164:"P Q R S T U V W X Y Z a b c d e i j k"},C:{1:"NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB GC HC",322:"MB"},D:{1:"l m n o p q r s t u v f H yB zB IC JC",2:"0 1 I w J D E F A B C K L G M N O x g y z",164:"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k"},E:{1:"E F A B C K L G NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",2:"I w J KC 0B LC",164:"D MC"},F:{1:"V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",164:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U"},G:{1:"E aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",2:"0B XC DC YC ZC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC",164:"wC xC"},J:{2:"D",164:"A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{2:"A B"},O:{164:"yC"},P:{1:"g AD BD",164:"I zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C"},Q:{164:"2B"},R:{164:"CD"},S:{1:"DD ED"}},B:4,C:"text-emphasis styling"}},8908:e=>{e.exports={A:{A:{1:"J D E F A B",2:"EC"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",8:"FC uB I w J GC HC"},D:{1:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC"},E:{1:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC"},F:{1:"0 1 2 3 4 5 6 7 8 9 B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e rB CC WC sB",33:"F SC TC UC VC"},G:{1:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{1:"rC"},I:{1:"uB I H sC tC uC vC DC wC xC"},J:{1:"D A"},K:{1:"h sB",33:"A B C rB CC"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:2,C:"CSS3 Text-overflow"}},8867:e=>{e.exports={A:{A:{2:"J D E F A B EC"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",33:"C K L G M N O"},C:{2:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB GC HC"},D:{1:"VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"0 1 2 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB",258:"3"},E:{2:"I w J D E F A B C K L G KC 0B MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",258:"LC"},F:{1:"KB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"0 1 2 3 4 5 6 7 8 9 F B C G M N O x g y z AB BB CB DB EB FB GB HB IB JB LB SC TC UC VC rB CC WC sB"},G:{2:"0B XC DC",33:"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",2:"uB I sC tC uC vC DC wC xC"},J:{2:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{33:"f"},N:{161:"A B"},O:{1:"yC"},P:{1:"g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",2:"I"},Q:{1:"2B"},R:{1:"CD"},S:{2:"DD ED"}},B:7,C:"CSS text-size-adjust"}},3726:e=>{e.exports={A:{A:{2:"EC",8:"J D E",129:"A B",161:"F"},B:{1:"N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",129:"C K L G M"},C:{1:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB",33:"I w J D E F A B C K L G GC HC"},D:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB"},E:{1:"F A B C K L G OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC RC",33:"I w J D E KC 0B LC MC NC"},F:{1:"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e sB",2:"F SC TC",33:"B C G M N O x g y z UC VC rB CC WC"},G:{1:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC",33:"E 0B XC DC YC ZC aC bC"},H:{2:"rC"},I:{1:"H",33:"uB I sC tC uC vC DC wC xC"},J:{33:"D A"},K:{1:"B C h rB CC sB",2:"A"},L:{1:"H"},M:{1:"f"},N:{1:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:4,C:"CSS3 2D Transforms"}},3022:e=>{e.exports={A:{A:{2:"J D E F EC",132:"A B"},B:{1:"C K L G M N O P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H"},C:{1:"0 1 2 3 4 5 6 7 8 9 M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",2:"FC uB I w J D E F GC HC",33:"A B C K L G"},D:{1:"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",2:"I w J D E F A B",33:"0 1 2 3 4 5 6 7 8 9 C K L G M N O x g y z AB BB CB"},E:{1:"4B 5B 6B tB 7B 8B 9B AC BC RC",2:"KC 0B",33:"I w J D E LC MC NC",257:"F A B C K L G OC 1B rB sB 2B PC QC 3B"},F:{1:"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"G M N O x g y z"},G:{1:"4B 5B 6B tB 7B 8B 9B AC BC",33:"E 0B XC DC YC ZC aC bC",257:"cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B"},H:{2:"rC"},I:{1:"H",2:"sC tC uC",33:"uB I vC DC wC xC"},J:{33:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{132:"A B"},O:{1:"yC"},P:{1:"I g zC 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD"},Q:{1:"2B"},R:{1:"CD"},S:{1:"DD ED"}},B:5,C:"CSS3 3D Transforms"}},6957:e=>{e.exports={A:{A:{2:"J D E F EC",33:"A B"},B:{1:"P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H",33:"C K L G M N O"},C:{1:"iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB",33:"0 1 2 3 4 5 6 7 8 9 FC uB I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB GC HC"},D:{1:"VB WB XB YB ZB vB aB wB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R S T U V W X Y Z a b c d e i j k l m n o p q r s t u v f H yB zB IC JC",33:"0 1 2 3 4 5 6 7 8 9 I w J D E F A B C K L G M N O x g y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB"},E:{1:"RC",33:"I w J D E F A B C K L G KC 0B LC MC NC OC 1B rB sB 2B PC QC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},F:{1:"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB h mB nB oB pB qB P Q R xB S T U V W X Y Z a b c d e",2:"F B C SC TC UC VC rB CC WC sB",33:"0 1 2 3 4 5 6 7 8 9 G M N O x g y z AB BB CB DB EB FB GB HB"},G:{33:"E 0B XC DC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC oC pC qC 3B 4B 5B 6B tB 7B 8B 9B AC BC"},H:{2:"rC"},I:{1:"H",33:"uB I sC tC uC vC DC wC xC"},J:{33:"D A"},K:{1:"h",2:"A B C rB CC sB"},L:{1:"H"},M:{1:"f"},N:{33:"A B"},O:{1:"yC"},P:{1:"g 0C 1C 2C 3C 1B 4C 5C 6C 7C 8C tB 9C AD BD",33:"I zC"},Q:{1:"2B"},R:{1:"CD"},S:{1:"ED",33:"DD"}},B:5,C:"CSS user-select: none"}},6555:e=>{e.exports={1:"ls",2:"rec",3:"pr",4:"cr",5:"wd",6:"other",7:"unoff"}},5836:e=>{e.exports={y:1,n:2,a:4,p:8,u:16,x:32,d:64}},6527:(e,t,r)=>{"use strict";var n=r(6368).browsers,o=r(9214).browserVersions,i=r(8779);function a(e){return Object.keys(e).reduce((function(t,r){return t[o[r]]=e[r],t}),{})}e.exports.agents=Object.keys(i).reduce((function(e,t){var r=i[t];return e[n[t]]=Object.keys(r).reduce((function(e,t){return"A"===t?e.usage_global=a(r[t]):"C"===t?e.versions=r[t].reduce((function(e,t){return""===t?e.push(null):e.push(o[t]),e}),[]):"D"===t?e.prefix_exceptions=a(r[t]):"E"===t?e.browser=r[t]:"F"===t?e.release_date=Object.keys(r[t]).reduce((function(e,n){return e[o[n]]=r[t][n],e}),{}):e.prefix=r[t],e}),{}),e}),{})},9214:(e,t,r)=>{e.exports.browserVersions=r(9720)},6368:(e,t,r)=>{e.exports.browsers=r(4191)},1801:(e,t,r)=>{"use strict";var n=r(6555),o=r(5836),i=r(6368).browsers,a=r(9214).browserVersions,u=Math.log(2);function B(e){var t={status:n[e.B],title:e.C};return t.stats=Object.keys(e.A).reduce((function(t,r){var n=e.A[r];return t[i[r]]=Object.keys(n).reduce((function(e,t){var r=n[t].split(" "),i=function(e){for(var t=Object.keys(o).reduce((function(t,r){return e&o[r]&&t.push(r),t}),[]),r=e>>7,n=[];r;){var i=Math.floor(Math.log(r)/u)+1;n.unshift("#".concat(i)),r-=Math.pow(2,i-1)}return t.concat(n).join(" ")}(t);return r.forEach((function(t){return e[a[t]]=i})),e}),{}),t}),{}),t}e.exports=B,e.exports.default=B},3643:e=>{e.exports={"0.20":"39",.21:"41",.22:"41",.23:"41",.24:"41",.25:"42",.26:"42",.27:"43",.28:"43",.29:"43","0.30":"44",.31:"45",.32:"45",.33:"45",.34:"45",.35:"45",.36:"47",.37:"49","1.0":"49",1.1:"50",1.2:"51",1.3:"52",1.4:"53",1.5:"54",1.6:"56",1.7:"58",1.8:"59","2.0":"61",2.1:"61","3.0":"66",3.1:"66","4.0":"69",4.1:"69",4.2:"69","5.0":"73","6.0":"76",6.1:"76","7.0":"78",7.1:"78",7.2:"78",7.3:"78","8.0":"80",8.1:"80",8.2:"80",8.3:"80",8.4:"80",8.5:"80","9.0":"83",9.1:"83",9.2:"83",9.3:"83",9.4:"83","10.0":"85",10.1:"85",10.2:"85",10.3:"85",10.4:"85","11.0":"87",11.1:"87",11.2:"87",11.3:"87",11.4:"87",11.5:"87","12.0":"89",12.1:"89",12.2:"89","13.0":"91",13.1:"91",13.2:"91",13.3:"91",13.4:"91",13.5:"91",13.6:"91","14.0":"93",14.1:"93",14.2:"93","15.0":"94",15.1:"94",15.2:"94",15.3:"94",15.4:"94",15.5:"94","16.0":"96",16.1:"96",16.2:"96","17.0":"98",17.1:"98",17.2:"98",17.3:"98",17.4:"98","18.0":"100",18.1:"100",18.2:"100",18.3:"100","19.0":"102",19.1:"102","20.0":"104",20.1:"104",20.2:"104",20.3:"104","21.0":"106",21.1:"106",21.2:"106",21.3:"106",21.4:"106","22.0":"108",22.1:"108",22.2:"108",22.3:"108","23.0":"110",23.1:"110",23.2:"110","24.0":"112",24.1:"112","25.0":"114"}},7942:function(e,t){var r;function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}!function(o){"use strict";var i={s:1,n:0,d:1};function a(e,t){if(isNaN(e=parseInt(e,10)))throw l.InvalidParameter;return e*t}function u(e,t){if(0===t)throw l.DivisionByZero;var r=Object.create(l.prototype);r.s=e<0?-1:1;var n=c(e=e<0?-e:e,t);return r.n=e/n,r.d=t/n,r}function B(e){for(var t={},r=e,n=2,o=4;o<=r;){for(;r%n==0;)r/=n,t[n]=(t[n]||0)+1;o+=1+2*n++}return r!==e?r>1&&(t[r]=(t[r]||0)+1):t[e]=(t[e]||0)+1,t}var s=function(e,t){var r,o=0,u=1,B=1,s=0,c=0,f=0,p=1,y=1,C=0,d=1,h=1,v=1,b=1e7;if(null==e);else if(void 0!==t){if(B=(o=e)*(u=t),o%1!=0||u%1!=0)throw l.NonIntegerParameter}else switch(n(e)){case"object":if("d"in e&&"n"in e)o=e.n,u=e.d,"s"in e&&(o*=e.s);else{if(!(0 in e))throw l.InvalidParameter;o=e[0],1 in e&&(u=e[1])}B=o*u;break;case"number":if(e<0&&(B=e,e=-e),e%1==0)o=e;else if(e>0){for(e>=1&&(e/=y=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));d<=b&&v<=b;){if(e===(r=(C+h)/(d+v))){d+v<=b?(o=C+h,u=d+v):v>d?(o=h,u=v):(o=C,u=d);break}e>r?(C+=h,d+=v):(h+=C,v+=d),d>b?(o=h,u=v):(o=C,u=d)}o*=y}else(isNaN(e)||isNaN(t))&&(u=o=NaN);break;case"string":if(null===(d=e.match(/\d+|./g)))throw l.InvalidParameter;if("-"===d[C]?(B=-1,C++):"+"===d[C]&&C++,d.length===C+1?c=a(d[C++],B):"."===d[C+1]||"."===d[C]?("."!==d[C]&&(s=a(d[C++],B)),(1+ ++C===d.length||"("===d[C+1]&&")"===d[C+3]||"'"===d[C+1]&&"'"===d[C+3])&&(c=a(d[C],B),p=Math.pow(10,d[C].length),C++),("("===d[C]&&")"===d[C+2]||"'"===d[C]&&"'"===d[C+2])&&(f=a(d[C+1],B),y=Math.pow(10,d[C+1].length)-1,C+=3)):"/"===d[C+1]||":"===d[C+1]?(c=a(d[C],B),p=a(d[C+2],1),C+=3):"/"===d[C+3]&&" "===d[C+1]&&(s=a(d[C],B),c=a(d[C+2],B),p=a(d[C+4],1),C+=5),d.length<=C){B=o=f+(u=p*y)*s+y*c;break}default:throw l.InvalidParameter}if(0===u)throw l.DivisionByZero;i.s=B<0?-1:1,i.n=Math.abs(o),i.d=Math.abs(u)};function c(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}function l(e,t){if(s(e,t),!(this instanceof l))return u(i.s*i.n,i.d);e=c(i.d,i.n),this.s=i.s,this.n=i.n/e,this.d=i.d/e}l.DivisionByZero=new Error("Division by Zero"),l.InvalidParameter=new Error("Invalid argument"),l.NonIntegerParameter=new Error("Parameters must be integer"),l.prototype={s:1,n:0,d:1,abs:function(){return u(this.n,this.d)},neg:function(){return u(-this.s*this.n,this.d)},add:function(e,t){return s(e,t),u(this.s*this.n*i.d+i.s*this.d*i.n,this.d*i.d)},sub:function(e,t){return s(e,t),u(this.s*this.n*i.d-i.s*this.d*i.n,this.d*i.d)},mul:function(e,t){return s(e,t),u(this.s*i.s*this.n*i.n,this.d*i.d)},div:function(e,t){return s(e,t),u(this.s*i.s*this.n*i.d,this.d*i.n)},clone:function(){return u(this.s*this.n,this.d)},mod:function(e,t){if(isNaN(this.n)||isNaN(this.d))return new l(NaN);if(void 0===e)return u(this.s*this.n%this.d,1);if(s(e,t),0===i.n&&0===this.d)throw l.DivisionByZero;return u(this.s*(i.d*this.n)%(i.n*this.d),i.d*this.d)},gcd:function(e,t){return s(e,t),u(c(i.n,this.n)*c(i.d,this.d),i.d*this.d)},lcm:function(e,t){return s(e,t),0===i.n&&0===this.n?u(0,1):u(i.n*this.n,c(i.n,this.n)*c(i.d,this.d))},ceil:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new l(NaN):u(Math.ceil(e*this.s*this.n/this.d),e)},floor:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new l(NaN):u(Math.floor(e*this.s*this.n/this.d),e)},round:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new l(NaN):u(Math.round(e*this.s*this.n/this.d),e)},inverse:function(){return u(this.s*this.d,this.n)},pow:function(e,t){if(s(e,t),1===i.d)return i.s<0?u(Math.pow(this.s*this.d,i.n),Math.pow(this.n,i.n)):u(Math.pow(this.s*this.n,i.n),Math.pow(this.d,i.n));if(this.s<0)return null;var r=B(this.n),n=B(this.d),o=1,a=1;for(var c in r)if("1"!==c){if("0"===c){o=0;break}if(r[c]*=i.n,r[c]%i.d!=0)return null;r[c]/=i.d,o*=Math.pow(c,r[c])}for(var c in n)if("1"!==c){if(n[c]*=i.n,n[c]%i.d!=0)return null;n[c]/=i.d,a*=Math.pow(c,n[c])}return i.s<0?u(a,o):u(o,a)},equals:function(e,t){return s(e,t),this.s*this.n*i.d==i.s*i.n*this.d},compare:function(e,t){s(e,t);var r=this.s*this.n*i.d-i.s*i.n*this.d;return(0<r)-(r<0)},simplify:function(e){if(isNaN(this.n)||isNaN(this.d))return this;e=e||.001;for(var t=this.abs(),r=t.toContinued(),n=1;n<r.length;n++){for(var o=u(r[n-1],1),i=n-2;i>=0;i--)o=o.inverse().add(r[i]);if(o.sub(t).abs().valueOf()<e)return o.mul(this.s)}return this},divisible:function(e,t){return s(e,t),!(!(i.n*this.d)||this.n*i.d%(i.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var t,r="",n=this.n,o=this.d;return this.s<0&&(r+="-"),1===o?r+=n:(e&&(t=Math.floor(n/o))>0&&(r+=t,r+=" ",n%=o),r+=n,r+="/",r+=o),r},toLatex:function(e){var t,r="",n=this.n,o=this.d;return this.s<0&&(r+="-"),1===o?r+=n:(e&&(t=Math.floor(n/o))>0&&(r+=t,n%=o),r+="\\frac{",r+=n,r+="}{",r+=o,r+="}"),r},toContinued:function(){var e,t=this.n,r=this.d,n=[];if(isNaN(t)||isNaN(r))return n;do{n.push(Math.floor(t/r)),e=t%r,t=r,r=e}while(1!==t);return n},toString:function(e){var t=this.n,r=this.d;if(isNaN(t)||isNaN(r))return"NaN";e=e||15;var n=function(e,t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var r=10%t,n=1;1!==r;n++)if(r=10*r%t,n>2e3)return 0;return n}(0,r),o=function(e,t,r){for(var n=1,o=function(e,t,r){for(var n=1;t>0;e=e*e%r,t>>=1)1&t&&(n=n*e%r);return n}(10,r,t),i=0;i<300;i++){if(n===o)return i;n=10*n%t,o=10*o%t}return 0}(0,r,n),i=this.s<0?"-":"";if(i+=t/r|0,t%=r,(t*=10)&&(i+="."),n){for(var a=o;a--;)i+=t/r|0,t%=r,t*=10;for(i+="(",a=n;a--;)i+=t/r|0,t%=r,t*=10;i+=")"}else for(a=e;t&&a--;)i+=t/r|0,t%=r,t*=10;return i}},void 0===(r=function(){return l}.apply(t,[]))||(e.exports=r)}()},9619:e=>{"use strict";function t(e,t,r){var n=t-e;return((r-e)%n+n)%n+e}function r(e,t,r){return Math.max(e,Math.min(t,r))}function n(e,t,r,n,i){if(!o(e,t,r,n,i))throw new Error(r+" is outside of range ["+e+","+t+")");return r}function o(e,t,r,n,o){return!(r<e||r>t||o&&r===t||n&&r===e)}function i(e,t,r,n){return(r?"(":"[")+e+","+t+(n?")":"]")}e.exports={wrap:t,limit:r,validate:n,test:o,curry:function(e,a,u,B){var s=i.bind(null,e,a,u,B);return{wrap:t.bind(null,e,a),limit:r.bind(null,e,a),validate:function(t){return n(e,a,t,u,B)},test:function(t){return o(e,a,t,u,B)},toString:s,name:s}},name:i}},4605:e=>{var t=String,r=function(){return{isColorSupported:!1,reset:t,bold:t,dim:t,italic:t,underline:t,inverse:t,hidden:t,strikethrough:t,black:t,red:t,green:t,yellow:t,blue:t,magenta:t,cyan:t,white:t,gray:t,bgBlack:t,bgRed:t,bgGreen:t,bgYellow:t,bgBlue:t,bgMagenta:t,bgCyan:t,bgWhite:t}};e.exports=r(),e.exports.createColors=r},5527:(e,t,r)=>{var n=r(8294),o=r(1958),i=r(2833);function a(e){return this instanceof a?(this.nodes=n(e),this):new a(e)}a.prototype.toString=function(){return Array.isArray(this.nodes)?i(this.nodes):""},a.prototype.walk=function(e,t){return o(this.nodes,e,t),this},a.unit=r(2730),a.walk=o,a.stringify=i,e.exports=a},8294:e=>{var t="(".charCodeAt(0),r=")".charCodeAt(0),n="'".charCodeAt(0),o='"'.charCodeAt(0),i="\\".charCodeAt(0),a="/".charCodeAt(0),u=",".charCodeAt(0),B=":".charCodeAt(0),s="*".charCodeAt(0),c="u".charCodeAt(0),l="U".charCodeAt(0),f="+".charCodeAt(0),p=/^[a-f0-9?-]+$/i;e.exports=function(e){for(var y,C,d,h,v,b,m,g,w,O=[],j=e,S=0,x=j.charCodeAt(S),P=j.length,k=[{nodes:O}],A=0,E="",D="",R="";S<P;)if(x<=32){y=S;do{y+=1,x=j.charCodeAt(y)}while(x<=32);h=j.slice(S,y),d=O[O.length-1],x===r&&A?R=h:d&&"div"===d.type?(d.after=h,d.sourceEndIndex+=h.length):x===u||x===B||x===a&&j.charCodeAt(y+1)!==s&&(!w||w&&"function"===w.type&&"calc"!==w.value)?D=h:O.push({type:"space",sourceIndex:S,sourceEndIndex:y,value:h}),S=y}else if(x===n||x===o){y=S,h={type:"string",sourceIndex:S,quote:C=x===n?"'":'"'};do{if(v=!1,~(y=j.indexOf(C,y+1)))for(b=y;j.charCodeAt(b-1)===i;)b-=1,v=!v;else y=(j+=C).length-1,h.unclosed=!0}while(v);h.value=j.slice(S+1,y),h.sourceEndIndex=h.unclosed?y:y+1,O.push(h),S=y+1,x=j.charCodeAt(S)}else if(x===a&&j.charCodeAt(S+1)===s)h={type:"comment",sourceIndex:S,sourceEndIndex:(y=j.indexOf("*/",S))+2},-1===y&&(h.unclosed=!0,y=j.length,h.sourceEndIndex=y),h.value=j.slice(S+2,y),O.push(h),S=y+2,x=j.charCodeAt(S);else if(x!==a&&x!==s||!w||"function"!==w.type||"calc"!==w.value)if(x===a||x===u||x===B)h=j[S],O.push({type:"div",sourceIndex:S-D.length,sourceEndIndex:S+h.length,value:h,before:D,after:""}),D="",S+=1,x=j.charCodeAt(S);else if(t===x){y=S;do{y+=1,x=j.charCodeAt(y)}while(x<=32);if(g=S,h={type:"function",sourceIndex:S-E.length,value:E,before:j.slice(g+1,y)},S=y,"url"===E&&x!==n&&x!==o){y-=1;do{if(v=!1,~(y=j.indexOf(")",y+1)))for(b=y;j.charCodeAt(b-1)===i;)b-=1,v=!v;else y=(j+=")").length-1,h.unclosed=!0}while(v);m=y;do{m-=1,x=j.charCodeAt(m)}while(x<=32);g<m?(h.nodes=S!==m+1?[{type:"word",sourceIndex:S,sourceEndIndex:m+1,value:j.slice(S,m+1)}]:[],h.unclosed&&m+1!==y?(h.after="",h.nodes.push({type:"space",sourceIndex:m+1,sourceEndIndex:y,value:j.slice(m+1,y)})):(h.after=j.slice(m+1,y),h.sourceEndIndex=y)):(h.after="",h.nodes=[]),S=y+1,h.sourceEndIndex=h.unclosed?y:S,x=j.charCodeAt(S),O.push(h)}else A+=1,h.after="",h.sourceEndIndex=S+1,O.push(h),k.push(h),O=h.nodes=[],w=h;E=""}else if(r===x&&A)S+=1,x=j.charCodeAt(S),w.after=R,w.sourceEndIndex+=R.length,R="",A-=1,k[k.length-1].sourceEndIndex=S,k.pop(),O=(w=k[A]).nodes;else{y=S;do{x===i&&(y+=1),y+=1,x=j.charCodeAt(y)}while(y<P&&!(x<=32||x===n||x===o||x===u||x===B||x===a||x===t||x===s&&w&&"function"===w.type&&"calc"===w.value||x===a&&"function"===w.type&&"calc"===w.value||x===r&&A));h=j.slice(S,y),t===x?E=h:c!==h.charCodeAt(0)&&l!==h.charCodeAt(0)||f!==h.charCodeAt(1)||!p.test(h.slice(2))?O.push({type:"word",sourceIndex:S,sourceEndIndex:y,value:h}):O.push({type:"unicode-range",sourceIndex:S,sourceEndIndex:y,value:h}),S=y}else h=j[S],O.push({type:"word",sourceIndex:S-D.length,sourceEndIndex:S+h.length,value:h}),S+=1,x=j.charCodeAt(S);for(S=k.length-1;S;S-=1)k[S].unclosed=!0,k[S].sourceEndIndex=j.length;return k[0].nodes}},2833:e=>{function t(e,t){var n,o,i=e.type,a=e.value;return t&&void 0!==(o=t(e))?o:"word"===i||"space"===i?a:"string"===i?(n=e.quote||"")+a+(e.unclosed?"":n):"comment"===i?"/*"+a+(e.unclosed?"":"*/"):"div"===i?(e.before||"")+a+(e.after||""):Array.isArray(e.nodes)?(n=r(e.nodes,t),"function"!==i?n:a+"("+(e.before||"")+n+(e.after||"")+(e.unclosed?"":")")):a}function r(e,r){var n,o;if(Array.isArray(e)){for(n="",o=e.length-1;~o;o-=1)n=t(e[o],r)+n;return n}return t(e,r)}e.exports=r},2730:e=>{var t="-".charCodeAt(0),r="+".charCodeAt(0),n=".".charCodeAt(0),o="e".charCodeAt(0),i="E".charCodeAt(0);e.exports=function(e){var a,u,B,s=0,c=e.length;if(0===c||!function(e){var o,i=e.charCodeAt(0);if(i===r||i===t){if((o=e.charCodeAt(1))>=48&&o<=57)return!0;var a=e.charCodeAt(2);return o===n&&a>=48&&a<=57}return i===n?(o=e.charCodeAt(1))>=48&&o<=57:i>=48&&i<=57}(e))return!1;for((a=e.charCodeAt(s))!==r&&a!==t||s++;s<c&&!((a=e.charCodeAt(s))<48||a>57);)s+=1;if(a=e.charCodeAt(s),u=e.charCodeAt(s+1),a===n&&u>=48&&u<=57)for(s+=2;s<c&&!((a=e.charCodeAt(s))<48||a>57);)s+=1;if(a=e.charCodeAt(s),u=e.charCodeAt(s+1),B=e.charCodeAt(s+2),(a===o||a===i)&&(u>=48&&u<=57||(u===r||u===t)&&B>=48&&B<=57))for(s+=u===r||u===t?3:2;s<c&&!((a=e.charCodeAt(s))<48||a>57);)s+=1;return{number:e.slice(0,s),unit:e.slice(s)}}},1958:e=>{e.exports=function e(t,r,n){var o,i,a,u;for(o=0,i=t.length;o<i;o+=1)a=t[o],n||(u=r(a,o,t)),!1!==u&&"function"===a.type&&Array.isArray(a.nodes)&&e(a.nodes,r,n),n&&r(a,o,t)}},8512:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var B=r(2469),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,r,B,s,c=(B=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(B);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=c.call(this,e)).type="atrule",t}return t=l,r=[{key:"append",value:function(){var e;this.proxyOf.nodes||(this.nodes=[]);for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return(e=i(u(l.prototype),"append",this)).call.apply(e,[this].concat(r))}},{key:"prepend",value:function(){var e;this.proxyOf.nodes||(this.nodes=[]);for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return(e=i(u(l.prototype),"prepend",this)).call.apply(e,[this].concat(r))}}],r&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(B);e.exports=s,s.default=s,B.registerAtRule(s)},290:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}var a=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&o(e,t)}(B,e);var t,r,a,u=(r=B,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=i(r);if(a){var o=i(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function B(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,B),(t=u.call(this,e)).type="comment",t}return t=B,Object.defineProperty(t,"prototype",{writable:!1}),t}(r(7563));e.exports=a,a.default=a},2469:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}function B(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=s(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){u=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(u)throw i}}}}function s(e,t){if(e){if("string"==typeof e)return c(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var l,f,p,y,C=r(4922),d=C.isClean,h=C.my,v=r(5496),b=r(290);function m(e){return e.map((function(e){return e.nodes&&(e.nodes=m(e.nodes)),delete e.source,e}))}function g(e){if(e[d]=!1,e.proxyOf.nodes){var t,r=B(e.proxyOf.nodes);try{for(r.s();!(t=r.n()).done;)g(t.value)}catch(e){r.e(e)}finally{r.f()}}}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(O,e);var t,r,y,C,w=(y=O,C=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(y);if(C){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function O(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,O),w.apply(this,arguments)}return t=O,r=[{key:"push",value:function(e){return e.parent=this,this.proxyOf.nodes.push(e),this}},{key:"each",value:function(e){if(this.proxyOf.nodes){for(var t,r,n=this.getIterator();this.indexes[n]<this.proxyOf.nodes.length&&(t=this.indexes[n],!1!==(r=e(this.proxyOf.nodes[t],t)));)this.indexes[n]+=1;return delete this.indexes[n],r}}},{key:"walk",value:function(e){return this.each((function(t,r){var n;try{n=e(t,r)}catch(e){throw t.addToError(e)}return!1!==n&&t.walk&&(n=t.walk(e)),n}))}},{key:"walkDecls",value:function(e,t){return t?e instanceof RegExp?this.walk((function(r,n){if("decl"===r.type&&e.test(r.prop))return t(r,n)})):this.walk((function(r,n){if("decl"===r.type&&r.prop===e)return t(r,n)})):(t=e,this.walk((function(e,r){if("decl"===e.type)return t(e,r)})))}},{key:"walkRules",value:function(e,t){return t?e instanceof RegExp?this.walk((function(r,n){if("rule"===r.type&&e.test(r.selector))return t(r,n)})):this.walk((function(r,n){if("rule"===r.type&&r.selector===e)return t(r,n)})):(t=e,this.walk((function(e,r){if("rule"===e.type)return t(e,r)})))}},{key:"walkAtRules",value:function(e,t){return t?e instanceof RegExp?this.walk((function(r,n){if("atrule"===r.type&&e.test(r.name))return t(r,n)})):this.walk((function(r,n){if("atrule"===r.type&&r.name===e)return t(r,n)})):(t=e,this.walk((function(e,r){if("atrule"===e.type)return t(e,r)})))}},{key:"walkComments",value:function(e){return this.walk((function(t,r){if("comment"===t.type)return e(t,r)}))}},{key:"append",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var n=0,o=t;n<o.length;n++){var i,a=o[n],u=B(this.normalize(a,this.last));try{for(u.s();!(i=u.n()).done;){var s=i.value;this.proxyOf.nodes.push(s)}}catch(e){u.e(e)}finally{u.f()}}return this.markDirty(),this}},{key:"prepend",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n,o=B(t=t.reverse());try{for(o.s();!(n=o.n()).done;){var i,a=n.value,u=this.normalize(a,this.first,"prepend").reverse(),s=B(u);try{for(s.s();!(i=s.n()).done;){var c=i.value;this.proxyOf.nodes.unshift(c)}}catch(e){s.e(e)}finally{s.f()}for(var l in this.indexes)this.indexes[l]=this.indexes[l]+u.length}}catch(e){o.e(e)}finally{o.f()}return this.markDirty(),this}},{key:"cleanRaws",value:function(e){if(i(u(O.prototype),"cleanRaws",this).call(this,e),this.nodes){var t,r=B(this.nodes);try{for(r.s();!(t=r.n()).done;)t.value.cleanRaws(e)}catch(e){r.e(e)}finally{r.f()}}}},{key:"insertBefore",value:function(e,t){var r=this.index(e),n=0===r&&"prepend",o=this.normalize(t,this.proxyOf.nodes[r],n).reverse();r=this.index(e);var i,a,u=B(o);try{for(u.s();!(i=u.n()).done;){var s=i.value;this.proxyOf.nodes.splice(r,0,s)}}catch(e){u.e(e)}finally{u.f()}for(var c in this.indexes)r<=(a=this.indexes[c])&&(this.indexes[c]=a+o.length);return this.markDirty(),this}},{key:"insertAfter",value:function(e,t){var r=this.index(e),n=this.normalize(t,this.proxyOf.nodes[r]).reverse();r=this.index(e);var o,i,a=B(n);try{for(a.s();!(o=a.n()).done;){var u=o.value;this.proxyOf.nodes.splice(r+1,0,u)}}catch(e){a.e(e)}finally{a.f()}for(var s in this.indexes)r<(i=this.indexes[s])&&(this.indexes[s]=i+n.length);return this.markDirty(),this}},{key:"removeChild",value:function(e){var t;for(var r in e=this.index(e),this.proxyOf.nodes[e].parent=void 0,this.proxyOf.nodes.splice(e,1),this.indexes)(t=this.indexes[r])>=e&&(this.indexes[r]=t-1);return this.markDirty(),this}},{key:"removeAll",value:function(){var e,t=B(this.proxyOf.nodes);try{for(t.s();!(e=t.n()).done;)e.value.parent=void 0}catch(e){t.e(e)}finally{t.f()}return this.proxyOf.nodes=[],this.markDirty(),this}},{key:"replaceValues",value:function(e,t,r){return r||(r=t,t={}),this.walkDecls((function(n){t.props&&!t.props.includes(n.prop)||t.fast&&!n.value.includes(t.fast)||(n.value=n.value.replace(e,r))})),this.markDirty(),this}},{key:"every",value:function(e){return this.nodes.every(e)}},{key:"some",value:function(e){return this.nodes.some(e)}},{key:"index",value:function(e){return"number"==typeof e?e:(e.proxyOf&&(e=e.proxyOf),this.proxyOf.nodes.indexOf(e))}},{key:"first",get:function(){if(this.proxyOf.nodes)return this.proxyOf.nodes[0]}},{key:"last",get:function(){if(this.proxyOf.nodes)return this.proxyOf.nodes[this.proxyOf.nodes.length-1]}},{key:"normalize",value:function(e,t){var r=this;if("string"==typeof e)e=m(l(e).nodes);else if(Array.isArray(e)){var n,o=B(e=e.slice(0));try{for(o.s();!(n=o.n()).done;){var i=n.value;i.parent&&i.parent.removeChild(i,"ignore")}}catch(e){o.e(e)}finally{o.f()}}else if("root"===e.type&&"document"!==this.type){var a,u=B(e=e.nodes.slice(0));try{for(u.s();!(a=u.n()).done;){var s=a.value;s.parent&&s.parent.removeChild(s,"ignore")}}catch(e){u.e(e)}finally{u.f()}}else if(e.type)e=[e];else if(e.prop){if(void 0===e.value)throw new Error("Value field is missed in node creation");"string"!=typeof e.value&&(e.value=String(e.value)),e=[new v(e)]}else if(e.selector)e=[new f(e)];else if(e.name)e=[new p(e)];else{if(!e.text)throw new Error("Unknown node type in node creation");e=[new b(e)]}var c=e.map((function(e){return e[h]||O.rebuild(e),(e=e.proxyOf).parent&&e.parent.removeChild(e),e[d]&&g(e),void 0===e.raws.before&&t&&void 0!==t.raws.before&&(e.raws.before=t.raws.before.replace(/\S/g,"")),e.parent=r.proxyOf,e}));return c}},{key:"getProxyProcessor",value:function(){return{set:function(e,t,r){return e[t]===r||(e[t]=r,"name"!==t&&"params"!==t&&"selector"!==t||e.markDirty()),!0},get:function(e,t){return"proxyOf"===t?e:e[t]?"each"===t||"string"==typeof t&&t.startsWith("walk")?function(){for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];return e[t].apply(e,function(e){if(Array.isArray(e))return c(e)}(i=n.map((function(e){return"function"==typeof e?function(t,r){return e(t.toProxy(),r)}:e})))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(i)||s(i)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());var i}:"every"===t||"some"===t?function(r){return e[t]((function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];return r.apply(void 0,[e.toProxy()].concat(n))}))}:"root"===t?function(){return e.root().toProxy()}:"nodes"===t?e.nodes.map((function(e){return e.toProxy()})):"first"===t||"last"===t?e[t].toProxy():e[t]:e[t]}}}},{key:"getIterator",value:function(){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach+=1;var e=this.lastEach;return this.indexes[e]=0,e}}],r&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),O}(r(7563));w.registerParse=function(e){l=e},w.registerRule=function(e){f=e},w.registerAtRule=function(e){p=e},w.registerRoot=function(e){y=e},e.exports=w,w.default=w,w.rebuild=function(e){"atrule"===e.type?Object.setPrototypeOf(e,p.prototype):"rule"===e.type?Object.setPrototypeOf(e,f.prototype):"decl"===e.type?Object.setPrototypeOf(e,v.prototype):"comment"===e.type?Object.setPrototypeOf(e,b.prototype):"root"===e.type&&Object.setPrototypeOf(e,y.prototype),e[h]=!0,e.nodes&&e.nodes.forEach((function(e){w.rebuild(e)}))}},8495:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function a(e){var t="function"==typeof Map?new Map:void 0;return a=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf("[native code]")))return e;var r;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return u(e,arguments,c(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),s(n,e)},a(e)}function u(e,t,r){return u=B()?Reflect.construct.bind():function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&s(o,r.prototype),o},u.apply(null,arguments)}function B(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function s(e,t){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},s(e,t)}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}var l=r(4605),f=r(2868),p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(y,e);var t,r,a,u,p=(a=y,u=B(),function(){var e,t=c(a);if(u){var r=c(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return i(e)}(this,e)});function y(e,t,r,n,o,a){var u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,y),(u=p.call(this,e)).name="CssSyntaxError",u.reason=e,o&&(u.file=o),n&&(u.source=n),a&&(u.plugin=a),void 0!==t&&void 0!==r&&("number"==typeof t?(u.line=t,u.column=r):(u.line=t.line,u.column=t.column,u.endLine=r.line,u.endColumn=r.column)),u.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(i(u),y),u}return t=y,(r=[{key:"setMessage",value:function(){this.message=this.plugin?this.plugin+": ":"",this.message+=this.file?this.file:"<css input>",void 0!==this.line&&(this.message+=":"+this.line+":"+this.column),this.message+=": "+this.reason}},{key:"showSourceCode",value:function(e){var t=this;if(!this.source)return"";var r=this.source;null==e&&(e=l.isColorSupported),f&&e&&(r=f(r));var n,o,i=r.split(/\r?\n/),a=Math.max(this.line-3,0),u=Math.min(this.line+2,i.length),B=String(u).length;if(e){var s=l.createColors(!0),c=s.bold,p=s.red,y=s.gray;n=function(e){return c(p(e))},o=function(e){return y(e)}}else n=o=function(e){return e};return i.slice(a,u).map((function(e,r){var i=a+1+r,u=" "+(" "+i).slice(-B)+" | ";if(i===t.line){var s=o(u.replace(/\d/g," "))+e.slice(0,t.column-1).replace(/[^\t]/g," ");return n(">")+o(u)+e+"\n "+s+n("^")}return" "+o(u)+e})).join("\n")}},{key:"toString",value:function(){var e=this.showSourceCode();return e&&(e="\n\n"+e+"\n"),this.name+": "+this.message+e}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),y}(a(Error));e.exports=p,p.default=p},5496:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t,r){return(t=B(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,B(n.key),n)}}function B(e){var t=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===n(t)?t:String(t)}function s(e,t){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},s(e,t)}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}var l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(l,e);var t,r,o,a,B=(o=l,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(o);if(a){var r=c(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),e&&void 0!==e.value&&"string"!=typeof e.value&&(e=i(i({},e),{},{value:String(e.value)})),(t=B.call(this,e)).type="decl",t}return t=l,(r=[{key:"variable",get:function(){return this.prop.startsWith("--")||"$"===this.prop[0]}}])&&u(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(r(7563));e.exports=l,l.default=l},7249:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e,t,r){return(t=u(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===n(t)?t:String(t)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var c,l,f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(y,e);var t,r,u,f,p=(u=y,f=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(u);if(f){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function y(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,y),t=p.call(this,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({type:"document"},e)),t.nodes||(t.nodes=[]),t}return t=y,r=[{key:"toResult",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new c(new l,this,e).stringify()}}],r&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),y}(r(2469));f.registerLazyResult=function(e){c=e},f.registerProcessor=function(e){l=e},e.exports=f,f.default=f},5525:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}var o=["inputs"],i=["inputId"];function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){B(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function B(e,t,r){return(t=function(e){var t=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===n(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=r(5496),f=r(1276),p=r(290),y=r(8512),C=r(7405),d=r(8702),h=r(8543);function v(e,t){if(Array.isArray(e))return e.map((function(e){return v(e)}));var r=e.inputs,n=c(e,o);if(r){t=[];var a,B=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return s(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){u=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(u)throw i}}}}(r);try{for(B.s();!(a=B.n()).done;){var b=u(u({},a.value),{},{__proto__:C.prototype});b.map&&(b.map=u(u({},b.map),{},{__proto__:f.prototype})),t.push(b)}}catch(e){B.e(e)}finally{B.f()}}if(n.nodes&&(n.nodes=e.nodes.map((function(e){return v(e,t)}))),n.source){var m=n.source,g=m.inputId,w=c(m,i);n.source=w,null!=g&&(n.source.input=t[g])}if("root"===n.type)return new d(n);if("decl"===n.type)return new l(n);if("rule"===n.type)return new h(n);if("comment"===n.type)return new p(n);if("atrule"===n.type)return new y(n);throw new Error("Unknown node type: "+e.type)}e.exports=v,v.default=v},7405:(e,t,r)=>{"use strict";function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e,t,r){return(t=u(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if("object"!==i(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===i(t)?t:String(t)}var B=r(209),s=B.SourceMapConsumer,c=B.SourceMapGenerator,l=r(7414),f=l.fileURLToPath,p=l.pathToFileURL,y=r(9830),C=y.resolve,d=y.isAbsolute,h=r(2961).nanoid,v=r(2868),b=r(8495),m=r(1276),g=Symbol("fromOffsetCache"),w=Boolean(s&&c),O=Boolean(C&&d),j=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),null==t||"object"===i(t)&&!t.toString)throw new Error("PostCSS received ".concat(t," instead of CSS string"));if(this.css=t.toString(),"\ufeff"===this.css[0]||"￾"===this.css[0]?(this.hasBOM=!0,this.css=this.css.slice(1)):this.hasBOM=!1,r.from&&(!O||/^\w+:\/\//.test(r.from)||d(r.from)?this.file=r.from:this.file=C(r.from)),O&&w){var n=new m(this.css,r);if(n.text){this.map=n;var o=n.consumer().file;!this.file&&o&&(this.file=this.mapResolve(o))}}this.file||(this.id="<input css "+h(6)+">"),this.map&&(this.map.file=this.from)}var t,r;return t=e,r=[{key:"fromOffset",value:function(e){var t;if(this[g])t=this[g];else{var r=this.css.split("\n");t=new Array(r.length);for(var n=0,o=0,i=r.length;o<i;o++)t[o]=n,n+=r[o].length+1;this[g]=t}var a=0;if(e>=t[t.length-1])a=t.length-1;else for(var u,B=t.length-2;a<B;)if(e<t[u=a+(B-a>>1)])B=u-1;else{if(!(e>=t[u+1])){a=u;break}a=u+1}return{line:a+1,col:e-t[a]+1}}},{key:"error",value:function(e,t,r){var n,o,a,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(t&&"object"===i(t)){var B=t,s=r;if("number"==typeof B.offset){var c=this.fromOffset(B.offset);t=c.line,r=c.col}else t=B.line,r=B.column;if("number"==typeof s.offset){var l=this.fromOffset(s.offset);o=l.line,a=l.col}else o=s.line,a=s.column}else if(!r){var f=this.fromOffset(t);t=f.line,r=f.col}var y=this.origin(t,r,o,a);return(n=y?new b(e,void 0===y.endLine?y.line:{line:y.line,column:y.column},void 0===y.endLine?y.column:{line:y.endLine,column:y.endColumn},y.source,y.file,u.plugin):new b(e,void 0===o?t:{line:t,column:r},void 0===o?r:{line:o,column:a},this.css,this.file,u.plugin)).input={line:t,column:r,endLine:o,endColumn:a,source:this.css},this.file&&(p&&(n.input.url=p(this.file).toString()),n.input.file=this.file),n}},{key:"origin",value:function(e,t,r,n){if(!this.map)return!1;var o,i,a=this.map.consumer(),u=a.originalPositionFor({line:e,column:t});if(!u.source)return!1;"number"==typeof r&&(o=a.originalPositionFor({line:r,column:n}));var B={url:(i=d(u.source)?p(u.source):new URL(u.source,this.map.consumer().sourceRoot||p(this.map.mapFile))).toString(),line:u.line,column:u.column,endLine:o&&o.line,endColumn:o&&o.column};if("file:"===i.protocol){if(!f)throw new Error("file: protocol is not available in this PostCSS build");B.file=f(i)}var s=a.sourceContentFor(u.source);return s&&(B.source=s),B}},{key:"mapResolve",value:function(e){return/^\w+:\/\//.test(e)?e:C(this.map.consumer().sourceRoot||this.map.root||".",e)}},{key:"from",get:function(){return this.file||this.id}},{key:"toJSON",value:function(){for(var e={},t=0,r=["hasBOM","css","file","id"];t<r.length;t++){var i=r[t];null!=this[i]&&(e[i]=this[i])}return this.map&&(e.map=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},this.map),e.map.consumerCache&&(e.map.consumerCache=void 0)),e}}],r&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=j,j.default=j,v&&v.registerInput&&v.registerInput(j)},4194:(e,t,r)=>{"use strict";function n(){n=function(){return e};var e={},t=Object.prototype,r=t.hasOwnProperty,o=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",u=i.asyncIterator||"@@asyncIterator",B=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var i=t&&t.prototype instanceof p?t:p,a=Object.create(i.prototype),u=new P(n||[]);return o(a,"_invoke",{value:O(e,r,u)}),a}function l(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f={};function p(){}function C(){}function d(){}var h={};s(h,a,(function(){return this}));var v=Object.getPrototypeOf,b=v&&v(v(k([])));b&&b!==t&&r.call(b,a)&&(h=b);var m=d.prototype=p.prototype=Object.create(h);function g(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){function n(o,i,a,u){var B=l(e[o],e,i);if("throw"!==B.type){var s=B.arg,c=s.value;return c&&"object"==y(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,a,u)}),(function(e){n("throw",e,a,u)})):t.resolve(c).then((function(e){s.value=e,a(s)}),(function(e){return n("throw",e,a,u)}))}u(B.arg)}var i;o(this,"_invoke",{value:function(e,r){function o(){return new t((function(t,o){n(e,r,t,o)}))}return i=i?i.then(o,o):o()}})}function O(e,t,r){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var u=j(a,r);if(u){if(u===f)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var B=l(e,t,r);if("normal"===B.type){if(n=r.done?"completed":"suspendedYield",B.arg===f)continue;return{value:B.arg,done:r.done}}"throw"===B.type&&(n="completed",r.method="throw",r.arg=B.arg)}}}function j(e,t){var r=t.method,n=e.iterator[r];if(void 0===n)return t.delegate=null,"throw"===r&&e.iterator.return&&(t.method="return",t.arg=void 0,j(e,t),"throw"===t.method)||"return"!==r&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+r+"' method")),f;var o=l(n,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,f;var i=o.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,f):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function S(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function P(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function k(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,o=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:A}}function A(){return{value:void 0,done:!0}}return C.prototype=d,o(m,"constructor",{value:d,configurable:!0}),o(d,"constructor",{value:C,configurable:!0}),C.displayName=s(d,B,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===C||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,s(e,B,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},g(w.prototype),s(w.prototype,u,(function(){return this})),e.AsyncIterator=w,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new w(c(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},g(m),s(m,B,"Generator"),s(m,a,(function(){return this})),s(m,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},e.values=k,P.prototype={constructor:P,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(r,n){return a.type="throw",a.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),B=r.call(i,"finallyLoc");if(u&&B){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!B)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),f},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),x(r),f}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;x(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:k(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),f}},e}function o(e,t,r,n,o,i,a){try{var u=e[i](a),B=u.value}catch(e){return void r(e)}u.done?t(B):Promise.resolve(B).then(n,o)}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||u(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=u(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){B=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(B)throw i}}}}function u(e,t){if(e){if("string"==typeof e)return B(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?B(e,t):void 0}}function B(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t,r){return(t=p(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,p(n.key),n)}}function p(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===y(t)?t:String(t)}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}var C=r(4922),d=C.isClean,h=C.my,v=r(3935),b=r(289),m=r(2469),g=r(7249),w=(r(8605),r(7888)),O=r(2634),j=r(8702),S={document:"Document",root:"Root",atrule:"AtRule",rule:"Rule",decl:"Declaration",comment:"Comment"},x={postcssPlugin:!0,prepare:!0,Once:!0,Document:!0,Root:!0,Declaration:!0,Rule:!0,AtRule:!0,Comment:!0,DeclarationExit:!0,RuleExit:!0,AtRuleExit:!0,CommentExit:!0,RootExit:!0,DocumentExit:!0,OnceExit:!0},P={postcssPlugin:!0,prepare:!0,Once:!0},k=0;function A(e){return"object"===y(e)&&"function"==typeof e.then}function E(e){var t=!1,r=S[e.type];return"decl"===e.type?t=e.prop.toLowerCase():"atrule"===e.type&&(t=e.name.toLowerCase()),t&&e.append?[r,r+"-"+t,k,r+"Exit",r+"Exit-"+t]:t?[r,r+"-"+t,r+"Exit",r+"Exit-"+t]:e.append?[r,k,r+"Exit"]:[r,r+"Exit"]}function D(e){return{node:e,events:"document"===e.type?["Document",k,"DocumentExit"]:"root"===e.type?["Root",k,"RootExit"]:E(e),eventIndex:0,visitors:[],visitorIndex:0,iterator:0}}function R(e){return e[d]=!1,e.nodes&&e.nodes.forEach((function(e){return R(e)})),e}var T={},I=function(e){function t(e,r,n){var o,i=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.stringified=!1,this.processed=!1,"object"!==y(r)||null===r||"root"!==r.type&&"document"!==r.type)if(r instanceof t||r instanceof w)o=R(r.root),r.map&&(void 0===n.map&&(n.map={}),n.map.inline||(n.map.inline=!1),n.map.prev=r.map);else{var a=O;n.syntax&&(a=n.syntax.parse),n.parser&&(a=n.parser),a.parse&&(a=a.parse);try{o=a(r,n)}catch(e){this.processed=!0,this.error=e}o&&!o[h]&&m.rebuild(o)}else o=R(r);this.result=new w(e,o,n),this.helpers=c(c({},T),{},{result:this.result,postcss:T}),this.plugins=this.processor.plugins.map((function(e){return"object"===y(e)&&e.prepare?c(c({},e),e.prepare(i.result)):e}))}var r,u,B,s;return r=t,u=[{key:Symbol.toStringTag,get:function(){return"LazyResult"}},{key:"processor",get:function(){return this.result.processor}},{key:"opts",get:function(){return this.result.opts}},{key:"css",get:function(){return this.stringify().css}},{key:"content",get:function(){return this.stringify().content}},{key:"map",get:function(){return this.stringify().map}},{key:"root",get:function(){return this.sync().root}},{key:"messages",get:function(){return this.sync().messages}},{key:"warnings",value:function(){return this.sync().warnings()}},{key:"toString",value:function(){return this.css}},{key:"then",value:function(e,t){return this.async().then(e,t)}},{key:"catch",value:function(e){return this.async().catch(e)}},{key:"finally",value:function(e){return this.async().then(e,e)}},{key:"async",value:function(){return this.error?Promise.reject(this.error):this.processed?Promise.resolve(this.result):(this.processing||(this.processing=this.runAsync()),this.processing)}},{key:"sync",value:function(){if(this.error)throw this.error;if(this.processed)return this.result;if(this.processed=!0,this.processing)throw this.getAsyncError();var e,t=a(this.plugins);try{for(t.s();!(e=t.n()).done;){var r=e.value;if(A(this.runOnRoot(r)))throw this.getAsyncError()}}catch(e){t.e(e)}finally{t.f()}if(this.prepareVisitors(),this.hasListener){for(var n=this.result.root;!n[d];)n[d]=!0,this.walkSync(n);if(this.listeners.OnceExit)if("document"===n.type){var o,i=a(n.nodes);try{for(i.s();!(o=i.n()).done;){var u=o.value;this.visitSync(this.listeners.OnceExit,u)}}catch(e){i.e(e)}finally{i.f()}}else this.visitSync(this.listeners.OnceExit,n)}return this.result}},{key:"stringify",value:function(){if(this.error)throw this.error;if(this.stringified)return this.result;this.stringified=!0,this.sync();var e=this.result.opts,t=b;e.syntax&&(t=e.syntax.stringify),e.stringifier&&(t=e.stringifier),t.stringify&&(t=t.stringify);var r=new v(t,this.result.root,this.result.opts).generate();return this.result.css=r[0],this.result.map=r[1],this.result}},{key:"walkSync",value:function(e){var t=this;e[d]=!0;var r,n=a(E(e));try{for(n.s();!(r=n.n()).done;){var o=r.value;if(o===k)e.nodes&&e.each((function(e){e[d]||t.walkSync(e)}));else{var i=this.listeners[o];if(i&&this.visitSync(i,e.toProxy()))return}}}catch(e){n.e(e)}finally{n.f()}}},{key:"visitSync",value:function(e,t){var r,n=a(e);try{for(n.s();!(r=n.n()).done;){var o=i(r.value,2),u=o[0],B=o[1];this.result.lastPlugin=u;var s=void 0;try{s=B(t,this.helpers)}catch(e){throw this.handleError(e,t.proxyOf)}if("root"!==t.type&&"document"!==t.type&&!t.parent)return!0;if(A(s))throw this.getAsyncError()}}catch(e){n.e(e)}finally{n.f()}}},{key:"runOnRoot",value:function(e){var t=this;this.result.lastPlugin=e;try{if("object"===y(e)&&e.Once){if("document"===this.result.root.type){var r=this.result.root.nodes.map((function(r){return e.Once(r,t.helpers)}));return A(r[0])?Promise.all(r):r}return e.Once(this.result.root,this.helpers)}if("function"==typeof e)return e(this.result.root,this.result)}catch(e){throw this.handleError(e)}}},{key:"getAsyncError",value:function(){throw new Error("Use process(css).then(cb) to work with async plugins")}},{key:"handleError",value:function(e,t){var r=this.result.lastPlugin;try{t&&t.addToError(e),this.error=e,"CssSyntaxError"!==e.name||e.plugin?r.postcssVersion:(e.plugin=r.postcssPlugin,e.setMessage())}catch(e){console&&console.error&&console.error(e)}return e}},{key:"runAsync",value:(B=n().mark((function e(){var t,r,o,u,B,s,c,l,f,p,y=this;return n().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.plugin=0,t=0;case 2:if(!(t<this.plugins.length)){e.next=17;break}if(r=this.plugins[t],!A(o=this.runOnRoot(r))){e.next=14;break}return e.prev=6,e.next=9,o;case 9:e.next=14;break;case 11:throw e.prev=11,e.t0=e.catch(6),this.handleError(e.t0);case 14:t++,e.next=2;break;case 17:if(this.prepareVisitors(),!this.hasListener){e.next=56;break}u=this.result.root;case 20:if(u[d]){e.next=39;break}u[d]=!0,B=[D(u)];case 23:if(!(B.length>0)){e.next=37;break}if(!A(s=this.visitTick(B))){e.next=35;break}return e.prev=26,e.next=29,s;case 29:e.next=35;break;case 31:throw e.prev=31,e.t1=e.catch(26),c=B[B.length-1].node,this.handleError(e.t1,c);case 35:e.next=23;break;case 37:e.next=20;break;case 39:if(!this.listeners.OnceExit){e.next=56;break}l=a(this.listeners.OnceExit),e.prev=41,p=n().mark((function e(){var t,r,o,a;return n().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=i(f.value,2),r=t[0],o=t[1],y.result.lastPlugin=r,e.prev=2,"document"!==u.type){e.next=9;break}return a=u.nodes.map((function(e){return o(e,y.helpers)})),e.next=7,Promise.all(a);case 7:e.next=11;break;case 9:return e.next=11,o(u,y.helpers);case 11:e.next=16;break;case 13:throw e.prev=13,e.t0=e.catch(2),y.handleError(e.t0);case 16:case"end":return e.stop()}}),e,null,[[2,13]])})),l.s();case 44:if((f=l.n()).done){e.next=48;break}return e.delegateYield(p(),"t2",46);case 46:e.next=44;break;case 48:e.next=53;break;case 50:e.prev=50,e.t3=e.catch(41),l.e(e.t3);case 53:return e.prev=53,l.f(),e.finish(53);case 56:return this.processed=!0,e.abrupt("return",this.stringify());case 58:case"end":return e.stop()}}),e,this,[[6,11],[26,31],[41,50,53,56]])})),s=function(){var e=this,t=arguments;return new Promise((function(r,n){var i=B.apply(e,t);function a(e){o(i,r,n,a,u,"next",e)}function u(e){o(i,r,n,a,u,"throw",e)}a(void 0)}))},function(){return s.apply(this,arguments)})},{key:"prepareVisitors",value:function(){var e=this;this.listeners={};var t,r=function(t,r,n){e.listeners[r]||(e.listeners[r]=[]),e.listeners[r].push([t,n])},n=a(this.plugins);try{for(n.s();!(t=n.n()).done;){var o=t.value;if("object"===y(o))for(var i in o){if(!x[i]&&/^[A-Z]/.test(i))throw new Error("Unknown event ".concat(i," in ").concat(o.postcssPlugin,". ")+"Try to update PostCSS (".concat(this.processor.version," now)."));if(!P[i])if("object"===y(o[i]))for(var u in o[i])r(o,"*"===u?i:i+"-"+u.toLowerCase(),o[i][u]);else"function"==typeof o[i]&&r(o,i,o[i])}}}catch(e){n.e(e)}finally{n.f()}this.hasListener=Object.keys(this.listeners).length>0}},{key:"visitTick",value:function(e){var t=e[e.length-1],r=t.node,n=t.visitors;if("root"===r.type||"document"===r.type||r.parent){if(n.length>0&&t.visitorIndex<n.length){var o=i(n[t.visitorIndex],2),a=o[0],u=o[1];t.visitorIndex+=1,t.visitorIndex===n.length&&(t.visitors=[],t.visitorIndex=0),this.result.lastPlugin=a;try{return u(r.toProxy(),this.helpers)}catch(e){throw this.handleError(e,r)}}if(0!==t.iterator){for(var B,s=t.iterator;B=r.nodes[r.indexes[s]];)if(r.indexes[s]+=1,!B[d])return B[d]=!0,void e.push(D(B));t.iterator=0,delete r.indexes[s]}for(var c=t.events;t.eventIndex<c.length;){var l=c[t.eventIndex];if(t.eventIndex+=1,l===k)return void(r.nodes&&r.nodes.length&&(r[d]=!0,t.iterator=r.getIterator()));if(this.listeners[l])return void(t.visitors=this.listeners[l])}e.pop()}else e.pop()}}],u&&f(r.prototype,u),Object.defineProperty(r,"prototype",{writable:!1}),t}();I.registerPostcss=function(e){T=e},e.exports=I,I.default=I,j.registerLazyResult(I),g.registerLazyResult(I)},6985:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var r={split:function(e,r,n){var o,i=[],a="",u=!1,B=0,s=!1,c="",l=!1,f=function(e,r){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==n.return||n.return()}finally{if(B)throw a}}}}(e);try{for(f.s();!(o=f.n()).done;){var p=o.value;l?l=!1:"\\"===p?l=!0:s?p===c&&(s=!1):'"'===p||"'"===p?(s=!0,c=p):"("===p?B+=1:")"===p?B>0&&(B-=1):0===B&&r.includes(p)&&(u=!0),u?(""!==a&&i.push(a.trim()),a="",u=!1):a+=p}}catch(e){f.e(e)}finally{f.f()}return(n||""!==a)&&i.push(a.trim()),i},space:function(e){return r.split(e,[" ","\n","\t"])},comma:function(e){return r.split(e,[","],!0)}};e.exports=r,r.default=r},3935:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var a=r(209),u=a.SourceMapConsumer,B=a.SourceMapGenerator,s=r(9830),c=s.dirname,l=s.resolve,f=s.relative,p=s.sep,y=r(7414).pathToFileURL,C=r(7405),d=Boolean(u&&B),h=Boolean(c&&l&&f&&p),v=function(){function e(t,r,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.stringify=t,this.mapOpts=n.map||{},this.root=r,this.opts=n,this.css=o,this.usesFileUrls=!this.mapOpts.from&&this.mapOpts.absolute}var t,r;return t=e,(r=[{key:"isMap",value:function(){return void 0!==this.opts.map?!!this.opts.map:this.previous().length>0}},{key:"previous",value:function(){var e=this;if(!this.previousMaps)if(this.previousMaps=[],this.root)this.root.walk((function(t){if(t.source&&t.source.input.map){var r=t.source.input.map;e.previousMaps.includes(r)||e.previousMaps.push(r)}}));else{var t=new C(this.css,this.opts);t.map&&this.previousMaps.push(t.map)}return this.previousMaps}},{key:"isInline",value:function(){if(void 0!==this.mapOpts.inline)return this.mapOpts.inline;var e=this.mapOpts.annotation;return(void 0===e||!0===e)&&(!this.previous().length||this.previous().some((function(e){return e.inline})))}},{key:"isSourcesContent",value:function(){return void 0!==this.mapOpts.sourcesContent?this.mapOpts.sourcesContent:!this.previous().length||this.previous().some((function(e){return e.withContent()}))}},{key:"clearAnnotation",value:function(){if(!1!==this.mapOpts.annotation)if(this.root)for(var e,t=this.root.nodes.length-1;t>=0;t--)"comment"===(e=this.root.nodes[t]).type&&0===e.text.indexOf("# sourceMappingURL=")&&this.root.removeChild(t);else this.css&&(this.css=this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm,""))}},{key:"setSourcesContent",value:function(){var e=this,t={};if(this.root)this.root.walk((function(r){if(r.source){var n=r.source.input.from;if(n&&!t[n]){t[n]=!0;var o=e.usesFileUrls?e.toFileUrl(n):e.toUrl(e.path(n));e.map.setSourceContent(o,r.source.input.css)}}}));else if(this.css){var r=this.opts.from?this.toUrl(this.path(this.opts.from)):"<no source>";this.map.setSourceContent(r,this.css)}}},{key:"applyPrevMaps",value:function(){var e,t=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(this.previous());try{for(t.s();!(e=t.n()).done;){var r=e.value,n=this.toUrl(this.path(r.file)),i=r.root||c(r.file),a=void 0;!1===this.mapOpts.sourcesContent?(a=new u(r.text)).sourcesContent&&(a.sourcesContent=a.sourcesContent.map((function(){return null}))):a=r.consumer(),this.map.applySourceMap(a,n,this.toUrl(this.path(i)))}}catch(e){t.e(e)}finally{t.f()}}},{key:"isAnnotation",value:function(){return!!this.isInline()||(void 0!==this.mapOpts.annotation?this.mapOpts.annotation:!this.previous().length||this.previous().some((function(e){return e.annotation})))}},{key:"toBase64",value:function(e){return Buffer?Buffer.from(e).toString("base64"):window.btoa(unescape(encodeURIComponent(e)))}},{key:"addAnnotation",value:function(){var e;e=this.isInline()?"data:application/json;base64,"+this.toBase64(this.map.toString()):"string"==typeof this.mapOpts.annotation?this.mapOpts.annotation:"function"==typeof this.mapOpts.annotation?this.mapOpts.annotation(this.opts.to,this.root):this.outputFile()+".map";var t="\n";this.css.includes("\r\n")&&(t="\r\n"),this.css+=t+"/*# sourceMappingURL="+e+" */"}},{key:"outputFile",value:function(){return this.opts.to?this.path(this.opts.to):this.opts.from?this.path(this.opts.from):"to.css"}},{key:"generateMap",value:function(){if(this.root)this.generateString();else if(1===this.previous().length){var e=this.previous()[0].consumer();e.file=this.outputFile(),this.map=B.fromSourceMap(e)}else this.map=new B({file:this.outputFile()}),this.map.addMapping({source:this.opts.from?this.toUrl(this.path(this.opts.from)):"<no source>",generated:{line:1,column:0},original:{line:1,column:0}});return this.isSourcesContent()&&this.setSourcesContent(),this.root&&this.previous().length>0&&this.applyPrevMaps(),this.isAnnotation()&&this.addAnnotation(),this.isInline()?[this.css]:[this.css,this.map]}},{key:"path",value:function(e){if(0===e.indexOf("<"))return e;if(/^\w+:\/\//.test(e))return e;if(this.mapOpts.absolute)return e;var t=this.opts.to?c(this.opts.to):".";return"string"==typeof this.mapOpts.annotation&&(t=c(l(t,this.mapOpts.annotation))),f(t,e)}},{key:"toUrl",value:function(e){return"\\"===p&&(e=e.replace(/\\/g,"/")),encodeURI(e).replace(/[#?]/g,encodeURIComponent)}},{key:"toFileUrl",value:function(e){if(y)return y(e).toString();throw new Error("`map.absolute` option is not available in this PostCSS build")}},{key:"sourcePath",value:function(e){return this.mapOpts.from?this.toUrl(this.mapOpts.from):this.usesFileUrls?this.toFileUrl(e.source.input.from):this.toUrl(this.path(e.source.input.from))}},{key:"generateString",value:function(){var e=this;this.css="",this.map=new B({file:this.outputFile()});var t,r,n=1,o=1,i="<no source>",a={source:"",generated:{line:0,column:0},original:{line:0,column:0}};this.stringify(this.root,(function(u,B,s){if(e.css+=u,B&&"end"!==s&&(a.generated.line=n,a.generated.column=o-1,B.source&&B.source.start?(a.source=e.sourcePath(B),a.original.line=B.source.start.line,a.original.column=B.source.start.column-1,e.map.addMapping(a)):(a.source=i,a.original.line=1,a.original.column=0,e.map.addMapping(a))),(t=u.match(/\n/g))?(n+=t.length,r=u.lastIndexOf("\n"),o=u.length-r):o+=u.length,B&&"start"!==s){var c=B.parent||{raws:{}};("decl"===B.type||"atrule"===B.type&&!B.nodes)&&B===c.last&&!c.raws.semicolon||(B.source&&B.source.end?(a.source=e.sourcePath(B),a.original.line=B.source.end.line,a.original.column=B.source.end.column-1,a.generated.line=n,a.generated.column=o-2,e.map.addMapping(a)):(a.source=i,a.original.line=1,a.original.column=0,a.generated.line=n,a.generated.column=o-1,e.map.addMapping(a)))}}))}},{key:"generate",value:function(){if(this.clearAnnotation(),h&&d&&this.isMap())return this.generateMap();var e="";return this.stringify(this.root,(function(t){e+=t})),[e]}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=v},811:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var a=r(3935),u=r(289),B=(r(8605),r(2634)),s=r(7888),c=function(e){function t(e,r,n){var i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=r.toString(),this.stringified=!1,this._processor=e,this._css=r,this._opts=n,this._map=void 0;var B=u;this.result=new s(this._processor,i,this._opts),this.result.css=r;var c=this;Object.defineProperty(this.result,"root",{get:function(){return c.root}});var l,f,p=new a(B,i,this._opts,r);if(p.isMap()){var y=(l=p.generate(),f=2,function(e){if(Array.isArray(e))return e}(l)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(l,f)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(l,f)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),C=y[0],d=y[1];C&&(this.result.css=C),d&&(this.result.map=d)}}var r,n;return r=t,(n=[{key:Symbol.toStringTag,get:function(){return"NoWorkResult"}},{key:"processor",get:function(){return this.result.processor}},{key:"opts",get:function(){return this.result.opts}},{key:"css",get:function(){return this.result.css}},{key:"content",get:function(){return this.result.css}},{key:"map",get:function(){return this.result.map}},{key:"root",get:function(){if(this._root)return this._root;var e,t=B;try{e=t(this._css,this._opts)}catch(e){this.error=e}if(this.error)throw this.error;return this._root=e,e}},{key:"messages",get:function(){return[]}},{key:"warnings",value:function(){return[]}},{key:"toString",value:function(){return this._css}},{key:"then",value:function(e,t){return this.async().then(e,t)}},{key:"catch",value:function(e){return this.async().catch(e)}},{key:"finally",value:function(e){return this.async().then(e,e)}},{key:"async",value:function(){return this.error?Promise.reject(this.error):Promise.resolve(this.result)}},{key:"sync",value:function(){if(this.error)throw this.error;return this.result}}])&&i(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();e.exports=c,c.default=c},7563:(e,t,r)=>{"use strict";function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=o(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}function o(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==u(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==u(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===u(o)?o:String(o)),n)}var o}function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}var B=r(4922),s=B.isClean,c=B.my,l=r(8495),f=r(8863),p=r(289);function y(e,t){var r=new e.constructor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&"proxyCache"!==n){var o=e[n],i=u(o);"parent"===n&&"object"===i?t&&(r[n]=t):"source"===n?r[n]=o:Array.isArray(o)?r[n]=o.map((function(e){return y(e,r)})):("object"===i&&null!==o&&(o=y(o)),r[n]=o)}return r}var C=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(var r in function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.raws={},this[s]=!1,this[c]=!0,t)if("nodes"===r){this.nodes=[];var o,i=n(t[r]);try{for(i.s();!(o=i.n()).done;){var a=o.value;"function"==typeof a.clone?this.append(a.clone()):this.append(a)}}catch(e){i.e(e)}finally{i.f()}}else this[r]=t[r]}var t,r;return t=e,r=[{key:"error",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.source){var r=this.rangeBy(t),n=r.start,o=r.end;return this.source.input.error(e,{line:n.line,column:n.column},{line:o.line,column:o.column},t)}return new l(e)}},{key:"warn",value:function(e,t,r){var n={node:this};for(var o in r)n[o]=r[o];return e.warn(t,n)}},{key:"remove",value:function(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}},{key:"toString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p;e.stringify&&(e=e.stringify);var t="";return e(this,(function(e){t+=e})),t}},{key:"assign",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(var t in e)this[t]=e[t];return this}},{key:"clone",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=y(this);for(var r in e)t[r]=e[r];return t}},{key:"cloneBefore",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this.clone(e);return this.parent.insertBefore(this,t),t}},{key:"cloneAfter",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this.clone(e);return this.parent.insertAfter(this,t),t}},{key:"replaceWith",value:function(){if(this.parent){for(var e=this,t=!1,r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];for(var i=0,a=n;i<a.length;i++){var u=a[i];u===this?t=!0:t?(this.parent.insertAfter(e,u),e=u):this.parent.insertBefore(e,u)}t||this.remove()}return this}},{key:"next",value:function(){if(this.parent){var e=this.parent.index(this);return this.parent.nodes[e+1]}}},{key:"prev",value:function(){if(this.parent){var e=this.parent.index(this);return this.parent.nodes[e-1]}}},{key:"before",value:function(e){return this.parent.insertBefore(this,e),this}},{key:"after",value:function(e){return this.parent.insertAfter(this,e),this}},{key:"root",value:function(){for(var e=this;e.parent&&"document"!==e.parent.type;)e=e.parent;return e}},{key:"raw",value:function(e,t){return(new f).raw(this,e,t)}},{key:"cleanRaws",value:function(e){delete this.raws.before,delete this.raws.after,e||delete this.raws.between}},{key:"toJSON",value:function(e,t){var r={},n=null==t;t=t||new Map;var a,B=0;for(var s in this)if(Object.prototype.hasOwnProperty.call(this,s)&&"parent"!==s&&"proxyCache"!==s){var c=this[s];if(Array.isArray(c))r[s]=c.map((function(e){return"object"===u(e)&&e.toJSON?e.toJSON(null,t):e}));else if("object"===u(c)&&c.toJSON)r[s]=c.toJSON(null,t);else if("source"===s){var l=t.get(c.input);null==l&&(l=B,t.set(c.input,B),B++),r[s]={inputId:l,start:c.start,end:c.end}}else r[s]=c}return n&&(r.inputs=(a=t.keys(),function(e){if(Array.isArray(e))return i(e)}(a)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(a)||o(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(e){return e.toJSON()}))),r}},{key:"positionInside",value:function(e){for(var t=this.toString(),r=this.source.start.column,n=this.source.start.line,o=0;o<e;o++)"\n"===t[o]?(r=1,n+=1):r+=1;return{line:n,column:r}}},{key:"positionBy",value:function(e){var t=this.source.start;if(e.index)t=this.positionInside(e.index);else if(e.word){var r=this.toString().indexOf(e.word);-1!==r&&(t=this.positionInside(r))}return t}},{key:"rangeBy",value:function(e){var t={line:this.source.start.line,column:this.source.start.column},r=this.source.end?{line:this.source.end.line,column:this.source.end.column+1}:{line:t.line,column:t.column+1};if(e.word){var n=this.toString().indexOf(e.word);-1!==n&&(t=this.positionInside(n),r=this.positionInside(n+e.word.length))}else e.start?t={line:e.start.line,column:e.start.column}:e.index&&(t=this.positionInside(e.index)),e.end?r={line:e.end.line,column:e.end.column}:e.endIndex?r=this.positionInside(e.endIndex):e.index&&(r=this.positionInside(e.index+1));return(r.line<t.line||r.line===t.line&&r.column<=t.column)&&(r={line:t.line,column:t.column+1}),{start:t,end:r}}},{key:"getProxyProcessor",value:function(){return{set:function(e,t,r){return e[t]===r||(e[t]=r,"prop"!==t&&"value"!==t&&"name"!==t&&"params"!==t&&"important"!==t&&"text"!==t||e.markDirty()),!0},get:function(e,t){return"proxyOf"===t?e:"root"===t?function(){return e.root().toProxy()}:e[t]}}}},{key:"toProxy",value:function(){return this.proxyCache||(this.proxyCache=new Proxy(this,this.getProxyProcessor())),this.proxyCache}},{key:"addToError",value:function(e){if(e.postcssNode=this,e.stack&&this.source&&/\n\s{4}at /.test(e.stack)){var t=this.source;e.stack=e.stack.replace(/\n\s{4}at /,"$&".concat(t.input.from,":").concat(t.start.line,":").concat(t.start.column,"$&"))}return e}},{key:"markDirty",value:function(){if(this[s]){this[s]=!1;for(var e=this;e=e.parent;)e[s]=!1}}},{key:"proxyOf",get:function(){return this}}],r&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=C,C.default=C},2634:(e,t,r)=>{"use strict";var n=r(2469),o=r(39),i=r(7405);function a(e,t){var r=new i(e,t),n=new o(r);try{n.parse()}catch(e){throw e}return n.root}e.exports=a,a.default=a,n.registerParse(a)},39:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(e,t)||i(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){if(e){if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function u(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var B=r(5496),s=r(1928),c=r(290),l=r(8512),f=r(8702),p=r(8543),y={empty:!0,space:!0},C=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.input=t,this.root=new f,this.current=this.root,this.spaces="",this.semicolon=!1,this.customProperty=!1,this.createTokenizer(),this.root.source={input:t,start:{offset:0,line:1,column:1}}}var t,r;return t=e,(r=[{key:"createTokenizer",value:function(){this.tokenizer=s(this.input)}},{key:"parse",value:function(){for(var e;!this.tokenizer.endOfFile();)switch((e=this.tokenizer.nextToken())[0]){case"space":this.spaces+=e[1];break;case";":this.freeSemicolon(e);break;case"}":this.end(e);break;case"comment":this.comment(e);break;case"at-word":this.atrule(e);break;case"{":this.emptyRule(e);break;default:this.other(e)}this.endFile()}},{key:"comment",value:function(e){var t=new c;this.init(t,e[2]),t.source.end=this.getPosition(e[3]||e[2]);var r=e[1].slice(2,-2);if(/^\s*$/.test(r))t.text="",t.raws.left=r,t.raws.right="";else{var n=r.match(/^(\s*)([^]*\S)(\s*)$/);t.text=n[2],t.raws.left=n[1],t.raws.right=n[3]}}},{key:"emptyRule",value:function(e){var t=new p;this.init(t,e[2]),t.selector="",t.raws.between="",this.current=t}},{key:"other",value:function(e){for(var t=!1,r=null,n=!1,o=null,i=[],a=e[1].startsWith("--"),u=[],B=e;B;){if(r=B[0],u.push(B),"("===r||"["===r)o||(o=B),i.push("("===r?")":"]");else if(a&&n&&"{"===r)o||(o=B),i.push("}");else if(0===i.length){if(";"===r){if(n)return void this.decl(u,a);break}if("{"===r)return void this.rule(u);if("}"===r){this.tokenizer.back(u.pop()),t=!0;break}":"===r&&(n=!0)}else r===i[i.length-1]&&(i.pop(),0===i.length&&(o=null));B=this.tokenizer.nextToken()}if(this.tokenizer.endOfFile()&&(t=!0),i.length>0&&this.unclosedBracket(o),t&&n){if(!a)for(;u.length&&("space"===(B=u[u.length-1][0])||"comment"===B);)this.tokenizer.back(u.pop());this.decl(u,a)}else this.unknownWord(u)}},{key:"rule",value:function(e){e.pop();var t=new p;this.init(t,e[0][2]),t.raws.between=this.spacesAndCommentsFromEnd(e),this.raw(t,"selector",e),this.current=t}},{key:"decl",value:function(e,t){var r=new B;this.init(r,e[0][2]);var n,o=e[e.length-1];for(";"===o[0]&&(this.semicolon=!0,e.pop()),r.source.end=this.getPosition(o[3]||o[2]||function(e){for(var t=e.length-1;t>=0;t--){var r=e[t],n=r[3]||r[2];if(n)return n}}(e));"word"!==e[0][0];)1===e.length&&this.unknownWord(e),r.raws.before+=e.shift()[1];for(r.source.start=this.getPosition(e[0][2]),r.prop="";e.length;){var i=e[0][0];if(":"===i||"space"===i||"comment"===i)break;r.prop+=e.shift()[1]}for(r.raws.between="";e.length;){if(":"===(n=e.shift())[0]){r.raws.between+=n[1];break}"word"===n[0]&&/\w/.test(n[1])&&this.unknownWord([n]),r.raws.between+=n[1]}"_"!==r.prop[0]&&"*"!==r.prop[0]||(r.raws.before+=r.prop[0],r.prop=r.prop.slice(1));for(var a,u=[];e.length&&("space"===(a=e[0][0])||"comment"===a);)u.push(e.shift());this.precheckMissedSemicolon(e);for(var s=e.length-1;s>=0;s--){if("!important"===(n=e[s])[1].toLowerCase()){r.important=!0;var c=this.stringFrom(e,s);" !important"!==(c=this.spacesFromEnd(e)+c)&&(r.raws.important=c);break}if("important"===n[1].toLowerCase()){for(var l=e.slice(0),f="",p=s;p>0;p--){var y=l[p][0];if(0===f.trim().indexOf("!")&&"space"!==y)break;f=l.pop()[1]+f}0===f.trim().indexOf("!")&&(r.important=!0,r.raws.important=f,e=l)}if("space"!==n[0]&&"comment"!==n[0])break}var C=e.some((function(e){return"space"!==e[0]&&"comment"!==e[0]}));C&&(r.raws.between+=u.map((function(e){return e[1]})).join(""),u=[]),this.raw(r,"value",u.concat(e),t),r.value.includes(":")&&!t&&this.checkMissedSemicolon(e)}},{key:"atrule",value:function(e){var t,r,n,o=new l;o.name=e[1].slice(1),""===o.name&&this.unnamedAtrule(o,e),this.init(o,e[2]);for(var i=!1,a=!1,u=[],B=[];!this.tokenizer.endOfFile();){if("("===(t=(e=this.tokenizer.nextToken())[0])||"["===t?B.push("("===t?")":"]"):"{"===t&&B.length>0?B.push("}"):t===B[B.length-1]&&B.pop(),0===B.length){if(";"===t){o.source.end=this.getPosition(e[2]),this.semicolon=!0;break}if("{"===t){a=!0;break}if("}"===t){if(u.length>0){for(r=u[n=u.length-1];r&&"space"===r[0];)r=u[--n];r&&(o.source.end=this.getPosition(r[3]||r[2]))}this.end(e);break}u.push(e)}else u.push(e);if(this.tokenizer.endOfFile()){i=!0;break}}o.raws.between=this.spacesAndCommentsFromEnd(u),u.length?(o.raws.afterName=this.spacesAndCommentsFromStart(u),this.raw(o,"params",u),i&&(e=u[u.length-1],o.source.end=this.getPosition(e[3]||e[2]),this.spaces=o.raws.between,o.raws.between="")):(o.raws.afterName="",o.params=""),a&&(o.nodes=[],this.current=o)}},{key:"end",value:function(e){this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.semicolon=!1,this.current.raws.after=(this.current.raws.after||"")+this.spaces,this.spaces="",this.current.parent?(this.current.source.end=this.getPosition(e[2]),this.current=this.current.parent):this.unexpectedClose(e)}},{key:"endFile",value:function(){this.current.parent&&this.unclosedBlock(),this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.current.raws.after=(this.current.raws.after||"")+this.spaces}},{key:"freeSemicolon",value:function(e){if(this.spaces+=e[1],this.current.nodes){var t=this.current.nodes[this.current.nodes.length-1];t&&"rule"===t.type&&!t.raws.ownSemicolon&&(t.raws.ownSemicolon=this.spaces,this.spaces="")}}},{key:"getPosition",value:function(e){var t=this.input.fromOffset(e);return{offset:e,line:t.line,column:t.col}}},{key:"init",value:function(e,t){this.current.push(e),e.source={start:this.getPosition(t),input:this.input},e.raws.before=this.spaces,this.spaces="","comment"!==e.type&&(this.semicolon=!1)}},{key:"raw",value:function(e,t,r,n){for(var o,i,a,u,B=r.length,s="",c=!0,l=0;l<B;l+=1)"space"!==(i=(o=r[l])[0])||l!==B-1||n?"comment"===i?(u=r[l-1]?r[l-1][0]:"empty",a=r[l+1]?r[l+1][0]:"empty",y[u]||y[a]||","===s.slice(-1)?c=!1:s+=o[1]):s+=o[1]:c=!1;if(!c){var f=r.reduce((function(e,t){return e+t[1]}),"");e.raws[t]={value:s,raw:f}}e[t]=s}},{key:"spacesAndCommentsFromEnd",value:function(e){for(var t,r="";e.length&&("space"===(t=e[e.length-1][0])||"comment"===t);)r=e.pop()[1]+r;return r}},{key:"spacesAndCommentsFromStart",value:function(e){for(var t,r="";e.length&&("space"===(t=e[0][0])||"comment"===t);)r+=e.shift()[1];return r}},{key:"spacesFromEnd",value:function(e){for(var t="";e.length&&"space"===e[e.length-1][0];)t=e.pop()[1]+t;return t}},{key:"stringFrom",value:function(e,t){for(var r="",n=t;n<e.length;n++)r+=e[n][1];return e.splice(t,e.length-t),r}},{key:"colon",value:function(e){var t,r,n,a,u=0,B=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=i(e))){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(e.entries());try{for(B.s();!(a=B.n()).done;){var s=o(a.value,2),c=s[0];if("("===(r=(t=s[1])[0])&&(u+=1),")"===r&&(u-=1),0===u&&":"===r){if(n){if("word"===n[0]&&"progid"===n[1])continue;return c}this.doubleColon(t)}n=t}}catch(e){B.e(e)}finally{B.f()}return!1}},{key:"unclosedBracket",value:function(e){throw this.input.error("Unclosed bracket",{offset:e[2]},{offset:e[2]+1})}},{key:"unknownWord",value:function(e){throw this.input.error("Unknown word",{offset:e[0][2]},{offset:e[0][2]+e[0][1].length})}},{key:"unexpectedClose",value:function(e){throw this.input.error("Unexpected }",{offset:e[2]},{offset:e[2]+1})}},{key:"unclosedBlock",value:function(){var e=this.current.source.start;throw this.input.error("Unclosed block",e.line,e.column)}},{key:"doubleColon",value:function(e){throw this.input.error("Double colon",{offset:e[2]},{offset:e[2]+e[1].length})}},{key:"unnamedAtrule",value:function(e,t){throw this.input.error("At-rule without name",{offset:t[2]},{offset:t[2]+t[1].length})}},{key:"precheckMissedSemicolon",value:function(){}},{key:"checkMissedSemicolon",value:function(e){var t=this.colon(e);if(!1!==t){for(var r,n=0,o=t-1;o>=0&&("space"===(r=e[o])[0]||2!==(n+=1));o--);throw this.input.error("Missed semicolon","word"===r[0]?r[3]+1:r[2])}}}])&&u(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=C},7861:(e,t,r)=>{"use strict";var n=r(8495),o=r(5496),i=r(4194),a=r(2469),u=r(3510),B=r(289),s=r(5525),c=r(7249),l=r(2637),f=r(290),p=r(8512),y=r(7888),C=r(7405),d=r(2634),h=r(6985),v=r(8543),b=r(8702),m=r(7563);function g(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return 1===t.length&&Array.isArray(t[0])&&(t=t[0]),new u(t)}g.plugin=function(e,t){var r,n=!1;function o(){console&&console.warn&&!n&&(n=!0,console.warn(e+": postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration"),process.env.LANG&&process.env.LANG.startsWith("cn")&&console.warn(e+": 里面 postcss.plugin 被弃用. 迁移指南:\nhttps://www.w3ctech.com/topic/2226"));var r=t.apply(void 0,arguments);return r.postcssPlugin=e,r.postcssVersion=(new u).version,r}return Object.defineProperty(o,"postcss",{get:function(){return r||(r=o()),r}}),o.process=function(e,t,r){return g([o(r)]).process(e,t)},o},g.stringify=B,g.parse=d,g.fromJSON=s,g.list=h,g.comment=function(e){return new f(e)},g.atRule=function(e){return new p(e)},g.decl=function(e){return new o(e)},g.rule=function(e){return new v(e)},g.root=function(e){return new b(e)},g.document=function(e){return new c(e)},g.CssSyntaxError=n,g.Declaration=o,g.Container=a,g.Processor=u,g.Document=c,g.Comment=f,g.Warning=l,g.AtRule=p,g.Result=y,g.Input=C,g.Rule=v,g.Root=b,g.Node=m,i.registerPostcss(g),e.exports=g,g.default=g},1276:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var i=r(209),a=i.SourceMapConsumer,u=i.SourceMapGenerator,B=r(4777),s=B.existsSync,c=B.readFileSync,l=r(9830),f=l.dirname,p=l.join,y=function(){function e(t,r){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!1!==r.map){this.loadAnnotation(t),this.inline=this.startWith(this.annotation,"data:");var n=r.map?r.map.prev:void 0,o=this.loadMap(r.from,n);!this.mapFile&&r.from&&(this.mapFile=r.from),this.mapFile&&(this.root=f(this.mapFile)),o&&(this.text=o)}}var t,r;return t=e,(r=[{key:"consumer",value:function(){return this.consumerCache||(this.consumerCache=new a(this.text)),this.consumerCache}},{key:"withContent",value:function(){return!!(this.consumer().sourcesContent&&this.consumer().sourcesContent.length>0)}},{key:"startWith",value:function(e,t){return!!e&&e.substr(0,t.length)===t}},{key:"getAnnotationURL",value:function(e){return e.replace(/^\/\*\s*# sourceMappingURL=/,"").trim()}},{key:"loadAnnotation",value:function(e){var t=e.match(/\/\*\s*# sourceMappingURL=/gm);if(t){var r=e.lastIndexOf(t.pop()),n=e.indexOf("*/",r);r>-1&&n>-1&&(this.annotation=this.getAnnotationURL(e.substring(r,n)))}}},{key:"decodeInline",value:function(e){var t;if(/^data:application\/json;charset=utf-?8,/.test(e)||/^data:application\/json,/.test(e))return decodeURIComponent(e.substr(RegExp.lastMatch.length));if(/^data:application\/json;charset=utf-?8;base64,/.test(e)||/^data:application\/json;base64,/.test(e))return t=e.substr(RegExp.lastMatch.length),Buffer?Buffer.from(t,"base64").toString():window.atob(t);var r=e.match(/data:application\/json;([^,]+),/)[1];throw new Error("Unsupported source map encoding "+r)}},{key:"loadFile",value:function(e){if(this.root=f(e),s(e))return this.mapFile=e,c(e,"utf-8").toString().trim()}},{key:"loadMap",value:function(e,t){if(!1===t)return!1;if(t){if("string"==typeof t)return t;if("function"!=typeof t){if(t instanceof a)return u.fromSourceMap(t).toString();if(t instanceof u)return t.toString();if(this.isMap(t))return JSON.stringify(t);throw new Error("Unsupported previous source map format: "+t.toString())}var r=t(e);if(r){var n=this.loadFile(r);if(!n)throw new Error("Unable to load previous source map: "+r.toString());return n}}else{if(this.inline)return this.decodeInline(this.annotation);if(this.annotation){var o=this.annotation;return e&&(o=p(f(e),o)),this.loadFile(o)}}}},{key:"isMap",value:function(e){return"object"===n(e)&&("string"==typeof e.mappings||"string"==typeof e._mappings||Array.isArray(e.sections))}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=y,y.default=y},3510:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var a=r(811),u=r(4194),B=r(7249),s=r(8702),c=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.version="8.4.21",this.plugins=this.normalize(t)}var t,r;return t=e,r=[{key:"use",value:function(e){return this.plugins=this.plugins.concat(this.normalize([e])),this}},{key:"process",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return 0===this.plugins.length&&void 0===t.parser&&void 0===t.stringifier&&void 0===t.syntax?new a(this,e,t):new u(this,e,t)}},{key:"normalize",value:function(e){var t,r=[],i=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(e);try{for(i.s();!(t=i.n()).done;){var a=t.value;if(!0===a.postcss?a=a():a.postcss&&(a=a.postcss),"object"===n(a)&&Array.isArray(a.plugins))r=r.concat(a.plugins);else if("object"===n(a)&&a.postcssPlugin)r.push(a);else if("function"==typeof a)r.push(a);else if("object"!==n(a)||!a.parse&&!a.stringify)throw new Error(a+" is not a PostCSS plugin")}}catch(e){i.e(e)}finally{i.f()}return r}}],r&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=c,c.default=c,s.registerProcessor(c),B.registerProcessor(c)},7888:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var i=r(2637),a=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.processor=t,this.messages=[],this.root=r,this.opts=n,this.css=void 0,this.map=void 0}var t,r;return t=e,r=[{key:"toString",value:function(){return this.css}},{key:"warn",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t.plugin||this.lastPlugin&&this.lastPlugin.postcssPlugin&&(t.plugin=this.lastPlugin.postcssPlugin);var r=new i(e,t);return this.messages.push(r),r}},{key:"warnings",value:function(){return this.messages.filter((function(e){return"warning"===e.type}))}},{key:"content",get:function(){return this.css}}],r&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=a,a.default=a},8702:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},a.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var s,c,l=r(2469),f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(y,e);var t,r,l,f,p=(l=y,f=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(l);if(f){var r=B(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function y(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,y),(t=p.call(this,e)).type="root",t.nodes||(t.nodes=[]),t}return t=y,r=[{key:"removeChild",value:function(e,t){var r=this.index(e);return!t&&0===r&&this.nodes.length>1&&(this.nodes[1].raws.before=this.nodes[r].raws.before),a(B(y.prototype),"removeChild",this).call(this,e)}},{key:"normalize",value:function(e,t,r){var n=a(B(y.prototype),"normalize",this).call(this,e);if(t)if("prepend"===r)this.nodes.length>1?t.raws.before=this.nodes[1].raws.before:delete t.raws.before;else if(this.first!==t){var i,u=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,u=!0,B=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return u=e.done,e},e:function(e){B=!0,a=e},f:function(){try{u||null==r.return||r.return()}finally{if(B)throw a}}}}(n);try{for(u.s();!(i=u.n()).done;)i.value.raws.before=t.raws.before}catch(e){u.e(e)}finally{u.f()}}return n}},{key:"toResult",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new s(new c,this,e).stringify()}}],r&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),y}(l);f.registerLazyResult=function(e){s=e},f.registerProcessor=function(e){c=e},e.exports=f,f.default=f,l.registerRoot(f)},8543:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var u=r(2469),B=r(6985),s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}(l,e);var t,r,u,s,c=(u=l,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(u);if(s){var r=a(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=c.call(this,e)).type="rule",t.nodes||(t.nodes=[]),t}return t=l,(r=[{key:"selectors",get:function(){return B.comma(this.selector)},set:function(e){var t=this.selector?this.selector.match(/,\s*/):null,r=t?t[0]:","+this.raw("between","beforeOpen");this.selector=e.join(r)}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),l}(u);e.exports=s,s.default=s,u.registerRule(s)},8863:e=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n={colon:": ",indent:"    ",beforeDecl:"\n",beforeRule:"\n",beforeOpen:" ",beforeClose:"\n",beforeComment:"\n",after:"\n",emptyBody:"",commentLeft:" ",commentRight:" ",semicolon:!1},o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.builder=t}var t,o;return t=e,(o=[{key:"stringify",value:function(e,t){if(!this[e.type])throw new Error("Unknown AST node type "+e.type+". Maybe you need to change PostCSS stringifier.");this[e.type](e,t)}},{key:"document",value:function(e){this.body(e)}},{key:"root",value:function(e){this.body(e),e.raws.after&&this.builder(e.raws.after)}},{key:"comment",value:function(e){var t=this.raw(e,"left","commentLeft"),r=this.raw(e,"right","commentRight");this.builder("/*"+t+e.text+r+"*/",e)}},{key:"decl",value:function(e,t){var r=this.raw(e,"between","colon"),n=e.prop+r+this.rawValue(e,"value");e.important&&(n+=e.raws.important||" !important"),t&&(n+=";"),this.builder(n,e)}},{key:"rule",value:function(e){this.block(e,this.rawValue(e,"selector")),e.raws.ownSemicolon&&this.builder(e.raws.ownSemicolon,e,"end")}},{key:"atrule",value:function(e,t){var r="@"+e.name,n=e.params?this.rawValue(e,"params"):"";if(void 0!==e.raws.afterName?r+=e.raws.afterName:n&&(r+=" "),e.nodes)this.block(e,r+n);else{var o=(e.raws.between||"")+(t?";":"");this.builder(r+n+o,e)}}},{key:"body",value:function(e){for(var t=e.nodes.length-1;t>0&&"comment"===e.nodes[t].type;)t-=1;for(var r=this.raw(e,"semicolon"),n=0;n<e.nodes.length;n++){var o=e.nodes[n],i=this.raw(o,"before");i&&this.builder(i),this.stringify(o,t!==n||r)}}},{key:"block",value:function(e,t){var r,n=this.raw(e,"between","beforeOpen");this.builder(t+n+"{",e,"start"),e.nodes&&e.nodes.length?(this.body(e),r=this.raw(e,"after")):r=this.raw(e,"after","emptyBody"),r&&this.builder(r),this.builder("}",e,"end")}},{key:"raw",value:function(e,t,r){var o;if(r||(r=t),t&&void 0!==(o=e.raws[t]))return o;var i=e.parent;if("before"===r){if(!i||"root"===i.type&&i.first===e)return"";if(i&&"document"===i.type)return""}if(!i)return n[r];var a=e.root();if(a.rawCache||(a.rawCache={}),void 0!==a.rawCache[r])return a.rawCache[r];if("before"===r||"after"===r)return this.beforeAfter(e,r);var u,B="raw"+((u=r)[0].toUpperCase()+u.slice(1));return this[B]?o=this[B](a,e):a.walk((function(e){if(void 0!==(o=e.raws[t]))return!1})),void 0===o&&(o=n[r]),a.rawCache[r]=o,o}},{key:"rawSemicolon",value:function(e){var t;return e.walk((function(e){if(e.nodes&&e.nodes.length&&"decl"===e.last.type&&void 0!==(t=e.raws.semicolon))return!1})),t}},{key:"rawEmptyBody",value:function(e){var t;return e.walk((function(e){if(e.nodes&&0===e.nodes.length&&void 0!==(t=e.raws.after))return!1})),t}},{key:"rawIndent",value:function(e){return e.raws.indent?e.raws.indent:(e.walk((function(r){var n=r.parent;if(n&&n!==e&&n.parent&&n.parent===e&&void 0!==r.raws.before){var o=r.raws.before.split("\n");return t=(t=o[o.length-1]).replace(/\S/g,""),!1}})),t);var t}},{key:"rawBeforeComment",value:function(e,t){var r;return e.walkComments((function(e){if(void 0!==e.raws.before)return(r=e.raws.before).includes("\n")&&(r=r.replace(/[^\n]+$/,"")),!1})),void 0===r?r=this.raw(t,null,"beforeDecl"):r&&(r=r.replace(/\S/g,"")),r}},{key:"rawBeforeDecl",value:function(e,t){var r;return e.walkDecls((function(e){if(void 0!==e.raws.before)return(r=e.raws.before).includes("\n")&&(r=r.replace(/[^\n]+$/,"")),!1})),void 0===r?r=this.raw(t,null,"beforeRule"):r&&(r=r.replace(/\S/g,"")),r}},{key:"rawBeforeRule",value:function(e){var t;return e.walk((function(r){if(r.nodes&&(r.parent!==e||e.first!==r)&&void 0!==r.raws.before)return(t=r.raws.before).includes("\n")&&(t=t.replace(/[^\n]+$/,"")),!1})),t&&(t=t.replace(/\S/g,"")),t}},{key:"rawBeforeClose",value:function(e){var t;return e.walk((function(e){if(e.nodes&&e.nodes.length>0&&void 0!==e.raws.after)return(t=e.raws.after).includes("\n")&&(t=t.replace(/[^\n]+$/,"")),!1})),t&&(t=t.replace(/\S/g,"")),t}},{key:"rawBeforeOpen",value:function(e){var t;return e.walk((function(e){if("decl"!==e.type&&void 0!==(t=e.raws.between))return!1})),t}},{key:"rawColon",value:function(e){var t;return e.walkDecls((function(e){if(void 0!==e.raws.between)return t=e.raws.between.replace(/[^\s:]/g,""),!1})),t}},{key:"beforeAfter",value:function(e,t){var r;r="decl"===e.type?this.raw(e,null,"beforeDecl"):"comment"===e.type?this.raw(e,null,"beforeComment"):"before"===t?this.raw(e,null,"beforeRule"):this.raw(e,null,"beforeClose");for(var n=e.parent,o=0;n&&"root"!==n.type;)o+=1,n=n.parent;if(r.includes("\n")){var i=this.raw(e,null,"indent");if(i.length)for(var a=0;a<o;a++)r+=i}return r}},{key:"rawValue",value:function(e,t){var r=e[t],n=e.raws[t];return n&&n.value===r?n.raw:r}}])&&r(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=o,o.default=o},289:(e,t,r)=>{"use strict";var n=r(8863);function o(e,t){new n(t).stringify(e)}e.exports=o,o.default=o},4922:e=>{"use strict";e.exports.isClean=Symbol("isClean"),e.exports.my=Symbol("my")},1928:e=>{"use strict";var t="'".charCodeAt(0),r='"'.charCodeAt(0),n="\\".charCodeAt(0),o="/".charCodeAt(0),i="\n".charCodeAt(0),a=" ".charCodeAt(0),u="\f".charCodeAt(0),B="\t".charCodeAt(0),s="\r".charCodeAt(0),c="[".charCodeAt(0),l="]".charCodeAt(0),f="(".charCodeAt(0),p=")".charCodeAt(0),y="{".charCodeAt(0),C="}".charCodeAt(0),d=";".charCodeAt(0),h="*".charCodeAt(0),v=":".charCodeAt(0),b="@".charCodeAt(0),m=/[\t\n\f\r "#'()/;[\\\]{}]/g,g=/[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g,w=/.[\n"'(/\\]/,O=/[\da-f]/i;e.exports=function(e){var j,S,x,P,k,A,E,D,R,T,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_=e.css.valueOf(),F=I.ignoreErrors,M=_.length,L=0,G=[],N=[];function H(t){throw e.error("Unclosed "+t,L)}return{back:function(e){N.push(e)},nextToken:function(e){if(N.length)return N.pop();if(!(L>=M)){var I=!!e&&e.ignoreUnclosed;switch(j=_.charCodeAt(L)){case i:case a:case B:case s:case u:S=L;do{S+=1,j=_.charCodeAt(S)}while(j===a||j===i||j===B||j===s||j===u);T=["space",_.slice(L,S)],L=S-1;break;case c:case l:case y:case C:case v:case d:case p:var U=String.fromCharCode(j);T=[U,U,L];break;case f:if(D=G.length?G.pop()[1]:"",R=_.charCodeAt(L+1),"url"===D&&R!==t&&R!==r&&R!==a&&R!==i&&R!==B&&R!==u&&R!==s){S=L;do{if(A=!1,-1===(S=_.indexOf(")",S+1))){if(F||I){S=L;break}H("bracket")}for(E=S;_.charCodeAt(E-1)===n;)E-=1,A=!A}while(A);T=["brackets",_.slice(L,S+1),L,S],L=S}else S=_.indexOf(")",L+1),P=_.slice(L,S+1),-1===S||w.test(P)?T=["(","(",L]:(T=["brackets",P,L,S],L=S);break;case t:case r:x=j===t?"'":'"',S=L;do{if(A=!1,-1===(S=_.indexOf(x,S+1))){if(F||I){S=L+1;break}H("string")}for(E=S;_.charCodeAt(E-1)===n;)E-=1,A=!A}while(A);T=["string",_.slice(L,S+1),L,S],L=S;break;case b:m.lastIndex=L+1,m.test(_),S=0===m.lastIndex?_.length-1:m.lastIndex-2,T=["at-word",_.slice(L,S+1),L,S],L=S;break;case n:for(S=L,k=!0;_.charCodeAt(S+1)===n;)S+=1,k=!k;if(j=_.charCodeAt(S+1),k&&j!==o&&j!==a&&j!==i&&j!==B&&j!==s&&j!==u&&(S+=1,O.test(_.charAt(S)))){for(;O.test(_.charAt(S+1));)S+=1;_.charCodeAt(S+1)===a&&(S+=1)}T=["word",_.slice(L,S+1),L,S],L=S;break;default:j===o&&_.charCodeAt(L+1)===h?(0===(S=_.indexOf("*/",L+2)+1)&&(F||I?S=_.length:H("comment")),T=["comment",_.slice(L,S+1),L,S],L=S):(g.lastIndex=L+1,g.test(_),S=0===g.lastIndex?_.length-1:g.lastIndex-2,T=["word",_.slice(L,S+1),L,S],G.push(T),L=S)}return L++,T}},endOfFile:function(){return 0===N.length&&L>=M},position:function(){return L}}}},8605:e=>{"use strict";var t={};e.exports=function(e){t[e]||(t[e]=!0,"undefined"!=typeof console&&console.warn&&console.warn(e))}},2637:e=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.type="warning",this.text=t,r.node&&r.node.source){var n=r.node.rangeBy(r);this.line=n.start.line,this.column=n.start.column,this.endLine=n.end.line,this.endColumn=n.end.column}for(var o in r)this[o]=r[o]}var t,n;return t=e,(n=[{key:"toString",value:function(){return this.node?this.node.error(this.text,{plugin:this.plugin,index:this.index,word:this.word}).message:this.plugin?this.plugin+": "+this.text:this.text}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.exports=n,n.default=n},2950:()=>{},2868:()=>{},4777:()=>{},9830:()=>{},209:()=>{},7414:()=>{},2961:e=>{e.exports={nanoid:(e=21)=>{let t="",r=e;for(;r--;)t+="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"[64*Math.random()|0];return t},customAlphabet:(e,t=21)=>(r=t)=>{let n="",o=r;for(;o--;)n+=e[Math.random()*e.length|0];return n}}},6052:e=>{"use strict";e.exports=JSON.parse('[{"name":"nodejs","version":"0.2.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.3.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.4.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.5.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.6.0","date":"2011-11-04","lts":false,"security":false},{"name":"nodejs","version":"0.7.0","date":"2012-01-17","lts":false,"security":false},{"name":"nodejs","version":"0.8.0","date":"2012-06-22","lts":false,"security":false},{"name":"nodejs","version":"0.9.0","date":"2012-07-20","lts":false,"security":false},{"name":"nodejs","version":"0.10.0","date":"2013-03-11","lts":false,"security":false},{"name":"nodejs","version":"0.11.0","date":"2013-03-28","lts":false,"security":false},{"name":"nodejs","version":"0.12.0","date":"2015-02-06","lts":false,"security":false},{"name":"nodejs","version":"4.0.0","date":"2015-09-08","lts":false,"security":false},{"name":"nodejs","version":"4.1.0","date":"2015-09-17","lts":false,"security":false},{"name":"nodejs","version":"4.2.0","date":"2015-10-12","lts":"Argon","security":false},{"name":"nodejs","version":"4.3.0","date":"2016-02-09","lts":"Argon","security":false},{"name":"nodejs","version":"4.4.0","date":"2016-03-08","lts":"Argon","security":false},{"name":"nodejs","version":"4.5.0","date":"2016-08-16","lts":"Argon","security":false},{"name":"nodejs","version":"4.6.0","date":"2016-09-27","lts":"Argon","security":true},{"name":"nodejs","version":"4.7.0","date":"2016-12-06","lts":"Argon","security":false},{"name":"nodejs","version":"4.8.0","date":"2017-02-21","lts":"Argon","security":false},{"name":"nodejs","version":"4.9.0","date":"2018-03-28","lts":"Argon","security":true},{"name":"nodejs","version":"5.0.0","date":"2015-10-29","lts":false,"security":false},{"name":"nodejs","version":"5.1.0","date":"2015-11-17","lts":false,"security":false},{"name":"nodejs","version":"5.2.0","date":"2015-12-09","lts":false,"security":false},{"name":"nodejs","version":"5.3.0","date":"2015-12-15","lts":false,"security":false},{"name":"nodejs","version":"5.4.0","date":"2016-01-06","lts":false,"security":false},{"name":"nodejs","version":"5.5.0","date":"2016-01-21","lts":false,"security":false},{"name":"nodejs","version":"5.6.0","date":"2016-02-09","lts":false,"security":false},{"name":"nodejs","version":"5.7.0","date":"2016-02-23","lts":false,"security":false},{"name":"nodejs","version":"5.8.0","date":"2016-03-09","lts":false,"security":false},{"name":"nodejs","version":"5.9.0","date":"2016-03-16","lts":false,"security":false},{"name":"nodejs","version":"5.10.0","date":"2016-04-01","lts":false,"security":false},{"name":"nodejs","version":"5.11.0","date":"2016-04-21","lts":false,"security":false},{"name":"nodejs","version":"5.12.0","date":"2016-06-23","lts":false,"security":false},{"name":"nodejs","version":"6.0.0","date":"2016-04-26","lts":false,"security":false},{"name":"nodejs","version":"6.1.0","date":"2016-05-05","lts":false,"security":false},{"name":"nodejs","version":"6.2.0","date":"2016-05-17","lts":false,"security":false},{"name":"nodejs","version":"6.3.0","date":"2016-07-06","lts":false,"security":false},{"name":"nodejs","version":"6.4.0","date":"2016-08-12","lts":false,"security":false},{"name":"nodejs","version":"6.5.0","date":"2016-08-26","lts":false,"security":false},{"name":"nodejs","version":"6.6.0","date":"2016-09-14","lts":false,"security":false},{"name":"nodejs","version":"6.7.0","date":"2016-09-27","lts":false,"security":true},{"name":"nodejs","version":"6.8.0","date":"2016-10-12","lts":false,"security":false},{"name":"nodejs","version":"6.9.0","date":"2016-10-18","lts":"Boron","security":false},{"name":"nodejs","version":"6.10.0","date":"2017-02-21","lts":"Boron","security":false},{"name":"nodejs","version":"6.11.0","date":"2017-06-06","lts":"Boron","security":false},{"name":"nodejs","version":"6.12.0","date":"2017-11-06","lts":"Boron","security":false},{"name":"nodejs","version":"6.13.0","date":"2018-02-10","lts":"Boron","security":false},{"name":"nodejs","version":"6.14.0","date":"2018-03-28","lts":"Boron","security":true},{"name":"nodejs","version":"6.15.0","date":"2018-11-27","lts":"Boron","security":true},{"name":"nodejs","version":"6.16.0","date":"2018-12-26","lts":"Boron","security":false},{"name":"nodejs","version":"6.17.0","date":"2019-02-28","lts":"Boron","security":true},{"name":"nodejs","version":"7.0.0","date":"2016-10-25","lts":false,"security":false},{"name":"nodejs","version":"7.1.0","date":"2016-11-08","lts":false,"security":false},{"name":"nodejs","version":"7.2.0","date":"2016-11-22","lts":false,"security":false},{"name":"nodejs","version":"7.3.0","date":"2016-12-20","lts":false,"security":false},{"name":"nodejs","version":"7.4.0","date":"2017-01-04","lts":false,"security":false},{"name":"nodejs","version":"7.5.0","date":"2017-01-31","lts":false,"security":false},{"name":"nodejs","version":"7.6.0","date":"2017-02-21","lts":false,"security":false},{"name":"nodejs","version":"7.7.0","date":"2017-02-28","lts":false,"security":false},{"name":"nodejs","version":"7.8.0","date":"2017-03-29","lts":false,"security":false},{"name":"nodejs","version":"7.9.0","date":"2017-04-11","lts":false,"security":false},{"name":"nodejs","version":"7.10.0","date":"2017-05-02","lts":false,"security":false},{"name":"nodejs","version":"8.0.0","date":"2017-05-30","lts":false,"security":false},{"name":"nodejs","version":"8.1.0","date":"2017-06-08","lts":false,"security":false},{"name":"nodejs","version":"8.2.0","date":"2017-07-19","lts":false,"security":false},{"name":"nodejs","version":"8.3.0","date":"2017-08-08","lts":false,"security":false},{"name":"nodejs","version":"8.4.0","date":"2017-08-15","lts":false,"security":false},{"name":"nodejs","version":"8.5.0","date":"2017-09-12","lts":false,"security":false},{"name":"nodejs","version":"8.6.0","date":"2017-09-26","lts":false,"security":false},{"name":"nodejs","version":"8.7.0","date":"2017-10-11","lts":false,"security":false},{"name":"nodejs","version":"8.8.0","date":"2017-10-24","lts":false,"security":false},{"name":"nodejs","version":"8.9.0","date":"2017-10-31","lts":"Carbon","security":false},{"name":"nodejs","version":"8.10.0","date":"2018-03-06","lts":"Carbon","security":false},{"name":"nodejs","version":"8.11.0","date":"2018-03-28","lts":"Carbon","security":true},{"name":"nodejs","version":"8.12.0","date":"2018-09-10","lts":"Carbon","security":false},{"name":"nodejs","version":"8.13.0","date":"2018-11-20","lts":"Carbon","security":false},{"name":"nodejs","version":"8.14.0","date":"2018-11-27","lts":"Carbon","security":true},{"name":"nodejs","version":"8.15.0","date":"2018-12-26","lts":"Carbon","security":false},{"name":"nodejs","version":"8.16.0","date":"2019-04-16","lts":"Carbon","security":false},{"name":"nodejs","version":"8.17.0","date":"2019-12-17","lts":"Carbon","security":true},{"name":"nodejs","version":"9.0.0","date":"2017-10-31","lts":false,"security":false},{"name":"nodejs","version":"9.1.0","date":"2017-11-07","lts":false,"security":false},{"name":"nodejs","version":"9.2.0","date":"2017-11-14","lts":false,"security":false},{"name":"nodejs","version":"9.3.0","date":"2017-12-12","lts":false,"security":false},{"name":"nodejs","version":"9.4.0","date":"2018-01-10","lts":false,"security":false},{"name":"nodejs","version":"9.5.0","date":"2018-01-31","lts":false,"security":false},{"name":"nodejs","version":"9.6.0","date":"2018-02-21","lts":false,"security":false},{"name":"nodejs","version":"9.7.0","date":"2018-03-01","lts":false,"security":false},{"name":"nodejs","version":"9.8.0","date":"2018-03-07","lts":false,"security":false},{"name":"nodejs","version":"9.9.0","date":"2018-03-21","lts":false,"security":false},{"name":"nodejs","version":"9.10.0","date":"2018-03-28","lts":false,"security":true},{"name":"nodejs","version":"9.11.0","date":"2018-04-04","lts":false,"security":false},{"name":"nodejs","version":"10.0.0","date":"2018-04-24","lts":false,"security":false},{"name":"nodejs","version":"10.1.0","date":"2018-05-08","lts":false,"security":false},{"name":"nodejs","version":"10.2.0","date":"2018-05-23","lts":false,"security":false},{"name":"nodejs","version":"10.3.0","date":"2018-05-29","lts":false,"security":false},{"name":"nodejs","version":"10.4.0","date":"2018-06-06","lts":false,"security":false},{"name":"nodejs","version":"10.5.0","date":"2018-06-20","lts":false,"security":false},{"name":"nodejs","version":"10.6.0","date":"2018-07-04","lts":false,"security":false},{"name":"nodejs","version":"10.7.0","date":"2018-07-18","lts":false,"security":false},{"name":"nodejs","version":"10.8.0","date":"2018-08-01","lts":false,"security":false},{"name":"nodejs","version":"10.9.0","date":"2018-08-15","lts":false,"security":false},{"name":"nodejs","version":"10.10.0","date":"2018-09-06","lts":false,"security":false},{"name":"nodejs","version":"10.11.0","date":"2018-09-19","lts":false,"security":false},{"name":"nodejs","version":"10.12.0","date":"2018-10-10","lts":false,"security":false},{"name":"nodejs","version":"10.13.0","date":"2018-10-30","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.14.0","date":"2018-11-27","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.15.0","date":"2018-12-26","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.16.0","date":"2019-05-28","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.17.0","date":"2019-10-22","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.18.0","date":"2019-12-17","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.19.0","date":"2020-02-05","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.20.0","date":"2020-03-26","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.21.0","date":"2020-06-02","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.22.0","date":"2020-07-21","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.23.0","date":"2020-10-27","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.24.0","date":"2021-02-23","lts":"Dubnium","security":true},{"name":"nodejs","version":"11.0.0","date":"2018-10-23","lts":false,"security":false},{"name":"nodejs","version":"11.1.0","date":"2018-10-30","lts":false,"security":false},{"name":"nodejs","version":"11.2.0","date":"2018-11-15","lts":false,"security":false},{"name":"nodejs","version":"11.3.0","date":"2018-11-27","lts":false,"security":true},{"name":"nodejs","version":"11.4.0","date":"2018-12-07","lts":false,"security":false},{"name":"nodejs","version":"11.5.0","date":"2018-12-18","lts":false,"security":false},{"name":"nodejs","version":"11.6.0","date":"2018-12-26","lts":false,"security":false},{"name":"nodejs","version":"11.7.0","date":"2019-01-17","lts":false,"security":false},{"name":"nodejs","version":"11.8.0","date":"2019-01-24","lts":false,"security":false},{"name":"nodejs","version":"11.9.0","date":"2019-01-30","lts":false,"security":false},{"name":"nodejs","version":"11.10.0","date":"2019-02-14","lts":false,"security":false},{"name":"nodejs","version":"11.11.0","date":"2019-03-05","lts":false,"security":false},{"name":"nodejs","version":"11.12.0","date":"2019-03-14","lts":false,"security":false},{"name":"nodejs","version":"11.13.0","date":"2019-03-28","lts":false,"security":false},{"name":"nodejs","version":"11.14.0","date":"2019-04-10","lts":false,"security":false},{"name":"nodejs","version":"11.15.0","date":"2019-04-30","lts":false,"security":false},{"name":"nodejs","version":"12.0.0","date":"2019-04-23","lts":false,"security":false},{"name":"nodejs","version":"12.1.0","date":"2019-04-29","lts":false,"security":false},{"name":"nodejs","version":"12.2.0","date":"2019-05-07","lts":false,"security":false},{"name":"nodejs","version":"12.3.0","date":"2019-05-21","lts":false,"security":false},{"name":"nodejs","version":"12.4.0","date":"2019-06-04","lts":false,"security":false},{"name":"nodejs","version":"12.5.0","date":"2019-06-26","lts":false,"security":false},{"name":"nodejs","version":"12.6.0","date":"2019-07-03","lts":false,"security":false},{"name":"nodejs","version":"12.7.0","date":"2019-07-23","lts":false,"security":false},{"name":"nodejs","version":"12.8.0","date":"2019-08-06","lts":false,"security":false},{"name":"nodejs","version":"12.9.0","date":"2019-08-20","lts":false,"security":false},{"name":"nodejs","version":"12.10.0","date":"2019-09-04","lts":false,"security":false},{"name":"nodejs","version":"12.11.0","date":"2019-09-25","lts":false,"security":false},{"name":"nodejs","version":"12.12.0","date":"2019-10-11","lts":false,"security":false},{"name":"nodejs","version":"12.13.0","date":"2019-10-21","lts":"Erbium","security":false},{"name":"nodejs","version":"12.14.0","date":"2019-12-17","lts":"Erbium","security":true},{"name":"nodejs","version":"12.15.0","date":"2020-02-05","lts":"Erbium","security":true},{"name":"nodejs","version":"12.16.0","date":"2020-02-11","lts":"Erbium","security":false},{"name":"nodejs","version":"12.17.0","date":"2020-05-26","lts":"Erbium","security":false},{"name":"nodejs","version":"12.18.0","date":"2020-06-02","lts":"Erbium","security":true},{"name":"nodejs","version":"12.19.0","date":"2020-10-06","lts":"Erbium","security":false},{"name":"nodejs","version":"12.20.0","date":"2020-11-24","lts":"Erbium","security":false},{"name":"nodejs","version":"12.21.0","date":"2021-02-23","lts":"Erbium","security":true},{"name":"nodejs","version":"12.22.0","date":"2021-03-30","lts":"Erbium","security":false},{"name":"nodejs","version":"13.0.0","date":"2019-10-22","lts":false,"security":false},{"name":"nodejs","version":"13.1.0","date":"2019-11-05","lts":false,"security":false},{"name":"nodejs","version":"13.2.0","date":"2019-11-21","lts":false,"security":false},{"name":"nodejs","version":"13.3.0","date":"2019-12-03","lts":false,"security":false},{"name":"nodejs","version":"13.4.0","date":"2019-12-17","lts":false,"security":true},{"name":"nodejs","version":"13.5.0","date":"2019-12-18","lts":false,"security":false},{"name":"nodejs","version":"13.6.0","date":"2020-01-07","lts":false,"security":false},{"name":"nodejs","version":"13.7.0","date":"2020-01-21","lts":false,"security":false},{"name":"nodejs","version":"13.8.0","date":"2020-02-05","lts":false,"security":true},{"name":"nodejs","version":"13.9.0","date":"2020-02-18","lts":false,"security":false},{"name":"nodejs","version":"13.10.0","date":"2020-03-04","lts":false,"security":false},{"name":"nodejs","version":"13.11.0","date":"2020-03-12","lts":false,"security":false},{"name":"nodejs","version":"13.12.0","date":"2020-03-26","lts":false,"security":false},{"name":"nodejs","version":"13.13.0","date":"2020-04-14","lts":false,"security":false},{"name":"nodejs","version":"13.14.0","date":"2020-04-29","lts":false,"security":false},{"name":"nodejs","version":"14.0.0","date":"2020-04-21","lts":false,"security":false},{"name":"nodejs","version":"14.1.0","date":"2020-04-29","lts":false,"security":false},{"name":"nodejs","version":"14.2.0","date":"2020-05-05","lts":false,"security":false},{"name":"nodejs","version":"14.3.0","date":"2020-05-19","lts":false,"security":false},{"name":"nodejs","version":"14.4.0","date":"2020-06-02","lts":false,"security":true},{"name":"nodejs","version":"14.5.0","date":"2020-06-30","lts":false,"security":false},{"name":"nodejs","version":"14.6.0","date":"2020-07-20","lts":false,"security":false},{"name":"nodejs","version":"14.7.0","date":"2020-07-29","lts":false,"security":false},{"name":"nodejs","version":"14.8.0","date":"2020-08-11","lts":false,"security":false},{"name":"nodejs","version":"14.9.0","date":"2020-08-27","lts":false,"security":false},{"name":"nodejs","version":"14.10.0","date":"2020-09-08","lts":false,"security":false},{"name":"nodejs","version":"14.11.0","date":"2020-09-15","lts":false,"security":true},{"name":"nodejs","version":"14.12.0","date":"2020-09-22","lts":false,"security":false},{"name":"nodejs","version":"14.13.0","date":"2020-09-29","lts":false,"security":false},{"name":"nodejs","version":"14.14.0","date":"2020-10-15","lts":false,"security":false},{"name":"nodejs","version":"14.15.0","date":"2020-10-27","lts":"Fermium","security":false},{"name":"nodejs","version":"14.16.0","date":"2021-02-23","lts":"Fermium","security":true},{"name":"nodejs","version":"14.17.0","date":"2021-05-11","lts":"Fermium","security":false},{"name":"nodejs","version":"14.18.0","date":"2021-09-28","lts":"Fermium","security":false},{"name":"nodejs","version":"14.19.0","date":"2022-02-01","lts":"Fermium","security":false},{"name":"nodejs","version":"14.20.0","date":"2022-07-07","lts":"Fermium","security":true},{"name":"nodejs","version":"14.21.0","date":"2022-11-01","lts":"Fermium","security":false},{"name":"nodejs","version":"15.0.0","date":"2020-10-20","lts":false,"security":false},{"name":"nodejs","version":"15.1.0","date":"2020-11-04","lts":false,"security":false},{"name":"nodejs","version":"15.2.0","date":"2020-11-10","lts":false,"security":false},{"name":"nodejs","version":"15.3.0","date":"2020-11-24","lts":false,"security":false},{"name":"nodejs","version":"15.4.0","date":"2020-12-09","lts":false,"security":false},{"name":"nodejs","version":"15.5.0","date":"2020-12-22","lts":false,"security":false},{"name":"nodejs","version":"15.6.0","date":"2021-01-14","lts":false,"security":false},{"name":"nodejs","version":"15.7.0","date":"2021-01-25","lts":false,"security":false},{"name":"nodejs","version":"15.8.0","date":"2021-02-02","lts":false,"security":false},{"name":"nodejs","version":"15.9.0","date":"2021-02-18","lts":false,"security":false},{"name":"nodejs","version":"15.10.0","date":"2021-02-23","lts":false,"security":true},{"name":"nodejs","version":"15.11.0","date":"2021-03-03","lts":false,"security":false},{"name":"nodejs","version":"15.12.0","date":"2021-03-17","lts":false,"security":false},{"name":"nodejs","version":"15.13.0","date":"2021-03-31","lts":false,"security":false},{"name":"nodejs","version":"15.14.0","date":"2021-04-06","lts":false,"security":false},{"name":"nodejs","version":"16.0.0","date":"2021-04-20","lts":false,"security":false},{"name":"nodejs","version":"16.1.0","date":"2021-05-04","lts":false,"security":false},{"name":"nodejs","version":"16.2.0","date":"2021-05-19","lts":false,"security":false},{"name":"nodejs","version":"16.3.0","date":"2021-06-03","lts":false,"security":false},{"name":"nodejs","version":"16.4.0","date":"2021-06-23","lts":false,"security":false},{"name":"nodejs","version":"16.5.0","date":"2021-07-14","lts":false,"security":false},{"name":"nodejs","version":"16.6.0","date":"2021-07-29","lts":false,"security":true},{"name":"nodejs","version":"16.7.0","date":"2021-08-18","lts":false,"security":false},{"name":"nodejs","version":"16.8.0","date":"2021-08-25","lts":false,"security":false},{"name":"nodejs","version":"16.9.0","date":"2021-09-07","lts":false,"security":false},{"name":"nodejs","version":"16.10.0","date":"2021-09-22","lts":false,"security":false},{"name":"nodejs","version":"16.11.0","date":"2021-10-08","lts":false,"security":false},{"name":"nodejs","version":"16.12.0","date":"2021-10-20","lts":false,"security":false},{"name":"nodejs","version":"16.13.0","date":"2021-10-26","lts":"Gallium","security":false},{"name":"nodejs","version":"16.14.0","date":"2022-02-08","lts":"Gallium","security":false},{"name":"nodejs","version":"16.15.0","date":"2022-04-26","lts":"Gallium","security":false},{"name":"nodejs","version":"16.16.0","date":"2022-07-07","lts":"Gallium","security":true},{"name":"nodejs","version":"16.17.0","date":"2022-08-16","lts":"Gallium","security":false},{"name":"nodejs","version":"16.18.0","date":"2022-10-12","lts":"Gallium","security":false},{"name":"nodejs","version":"16.19.0","date":"2022-12-13","lts":"Gallium","security":false},{"name":"nodejs","version":"17.0.0","date":"2021-10-19","lts":false,"security":false},{"name":"nodejs","version":"17.1.0","date":"2021-11-09","lts":false,"security":false},{"name":"nodejs","version":"17.2.0","date":"2021-11-30","lts":false,"security":false},{"name":"nodejs","version":"17.3.0","date":"2021-12-17","lts":false,"security":false},{"name":"nodejs","version":"17.4.0","date":"2022-01-18","lts":false,"security":false},{"name":"nodejs","version":"17.5.0","date":"2022-02-10","lts":false,"security":false},{"name":"nodejs","version":"17.6.0","date":"2022-02-22","lts":false,"security":false},{"name":"nodejs","version":"17.7.0","date":"2022-03-09","lts":false,"security":false},{"name":"nodejs","version":"17.8.0","date":"2022-03-22","lts":false,"security":false},{"name":"nodejs","version":"17.9.0","date":"2022-04-07","lts":false,"security":false},{"name":"nodejs","version":"18.0.0","date":"2022-04-18","lts":false,"security":false},{"name":"nodejs","version":"18.1.0","date":"2022-05-03","lts":false,"security":false},{"name":"nodejs","version":"18.2.0","date":"2022-05-17","lts":false,"security":false},{"name":"nodejs","version":"18.3.0","date":"2022-06-02","lts":false,"security":false},{"name":"nodejs","version":"18.4.0","date":"2022-06-16","lts":false,"security":false},{"name":"nodejs","version":"18.5.0","date":"2022-07-06","lts":false,"security":true},{"name":"nodejs","version":"18.6.0","date":"2022-07-13","lts":false,"security":false},{"name":"nodejs","version":"18.7.0","date":"2022-07-26","lts":false,"security":false},{"name":"nodejs","version":"18.8.0","date":"2022-08-24","lts":false,"security":false},{"name":"nodejs","version":"18.9.0","date":"2022-09-07","lts":false,"security":false},{"name":"nodejs","version":"18.10.0","date":"2022-09-28","lts":false,"security":false},{"name":"nodejs","version":"18.11.0","date":"2022-10-13","lts":false,"security":false},{"name":"nodejs","version":"18.12.0","date":"2022-10-25","lts":"Hydrogen","security":false},{"name":"nodejs","version":"18.13.0","date":"2023-01-05","lts":"Hydrogen","security":false},{"name":"nodejs","version":"18.14.0","date":"2023-02-01","lts":"Hydrogen","security":false},{"name":"nodejs","version":"19.0.0","date":"2022-10-17","lts":false,"security":false},{"name":"nodejs","version":"19.1.0","date":"2022-11-14","lts":false,"security":false},{"name":"nodejs","version":"19.2.0","date":"2022-11-29","lts":false,"security":false},{"name":"nodejs","version":"19.3.0","date":"2022-12-14","lts":false,"security":false},{"name":"nodejs","version":"19.4.0","date":"2023-01-05","lts":false,"security":false},{"name":"nodejs","version":"19.5.0","date":"2023-01-24","lts":false,"security":false},{"name":"nodejs","version":"19.6.0","date":"2023-02-01","lts":false,"security":false}]')},8864:e=>{"use strict";e.exports=JSON.parse('{"v0.8":{"start":"2012-06-25","end":"2014-07-31"},"v0.10":{"start":"2013-03-11","end":"2016-10-31"},"v0.12":{"start":"2015-02-06","end":"2016-12-31"},"v4":{"start":"2015-09-08","lts":"2015-10-12","maintenance":"2017-04-01","end":"2018-04-30","codename":"Argon"},"v5":{"start":"2015-10-29","maintenance":"2016-04-30","end":"2016-06-30"},"v6":{"start":"2016-04-26","lts":"2016-10-18","maintenance":"2018-04-30","end":"2019-04-30","codename":"Boron"},"v7":{"start":"2016-10-25","maintenance":"2017-04-30","end":"2017-06-30"},"v8":{"start":"2017-05-30","lts":"2017-10-31","maintenance":"2019-01-01","end":"2019-12-31","codename":"Carbon"},"v9":{"start":"2017-10-01","maintenance":"2018-04-01","end":"2018-06-30"},"v10":{"start":"2018-04-24","lts":"2018-10-30","maintenance":"2020-05-19","end":"2021-04-30","codename":"Dubnium"},"v11":{"start":"2018-10-23","maintenance":"2019-04-22","end":"2019-06-01"},"v12":{"start":"2019-04-23","lts":"2019-10-21","maintenance":"2020-11-30","end":"2022-04-30","codename":"Erbium"},"v13":{"start":"2019-10-22","maintenance":"2020-04-01","end":"2020-06-01"},"v14":{"start":"2020-04-21","lts":"2020-10-27","maintenance":"2021-10-19","end":"2023-04-30","codename":"Fermium"},"v15":{"start":"2020-10-20","maintenance":"2021-04-01","end":"2021-06-01"},"v16":{"start":"2021-04-20","lts":"2021-10-26","maintenance":"2022-10-18","end":"2023-09-11","codename":"Gallium"},"v17":{"start":"2021-10-19","maintenance":"2022-04-01","end":"2022-06-01"},"v18":{"start":"2022-04-19","lts":"2022-10-25","maintenance":"2023-10-18","end":"2025-04-30","codename":"Hydrogen"},"v19":{"start":"2022-10-18","maintenance":"2023-04-01","end":"2023-06-01"},"v20":{"start":"2023-04-18","lts":"2023-10-24","maintenance":"2024-10-22","end":"2026-04-30","codename":""}}')}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}(()=>{"use strict";var e={inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}r(9220);var o=function(){function e(t,r){var n=t.cardData,o=t.userId,i=t.handleCardClick,a=t.handleLikeClick,u=t.handleDeleteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._likes=n.likes,this.cardId=n._id,this._user=o,this._owner=n.owner._id,this._templateSelector=r,this._handleCardClick=i,this._handleLikeClick=a,this._handleDeleteIconClick=u,this._element=this._getTemplate(),this._image=this._element.querySelector(".place__image"),this._label=this._element.querySelector(".place__text"),this._buttonLike=this._element.querySelector(".like__icon"),this._like=this._element.querySelector(".like__quantity"),this._trash=this._element.querySelector(".trash")}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"countLikes",value:function(e){this._like.textContent=e.likes.length,this._likes=e.likes}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._user}))}},{key:"_checkLike",value:function(){var e=this;this._likes.some((function(t){t._id===e._user&&e._buttonLike.classList.add("like__icon_active")}))}},{key:"setLike",value:function(){this._buttonLike.classList.add("like__icon_active")}},{key:"deleteLike",value:function(){this._buttonLike.classList.remove("like__icon_active")}},{key:"_setLikeEventListener",value:function(){var e=this;this._buttonLike.addEventListener("click",(function(){e._handleLikeClick(e)}))}},{key:"_removeDeleteButton",value:function(){this._user!==this._owner&&this._trash.remove()}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setDeleteEventListener",value:function(){var e=this;this._trash.addEventListener("click",(function(){e._handleDeleteIconClick(e.cardId)}))}},{key:"_setImageClickEventListener",value:function(){var e=this;this._image.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_setEventListeners",value:function(){this._setLikeEventListener(),this._setDeleteEventListener(),this._setImageClickEventListener()}},{key:"generateCard",value:function(){return this._image.src=this._link,this._label.textContent=this._name,this._image.alt=this._name,this._like.textContent=this._likes.length,this._checkLike(),this._setEventListeners(),this._removeDeleteButton(),this._element}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==i(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===i(o)?o:String(o)),n)}var o}var u=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(r),this._renderer=n}var t,r;return t=e,r=[{key:"renderElements",value:function(e,t){var r=this;e.forEach((function(e){r._renderer(e,t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}],r&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,f(n.key),n)}}function c(e,t,r){return t&&s(e.prototype,t),r&&s(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function l(e,t,r){return(t=f(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function f(e){var t=function(e,t){if("object"!==B(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===B(t)?t:String(t)}var p=c((function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),l(this,"_showInputError",(function(e,t){var r=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(n._inputErrorClass),r.textContent=t,r.classList.add(n._errorClass)})),l(this,"_hideInputError",(function(e){var t=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(n._inputErrorClass),t.textContent="",t.classList.remove(n._errorClass)})),l(this,"_toggleInputErrorState",(function(e){e.validity.valid?n._hideInputError(e):n._showInputError(e,e.validationMessage)})),l(this,"_hasInvalidInput",(function(){return n._inputList.some((function(e){return!e.validity.valid}))})),l(this,"_disableButton",(function(){n._buttonElement.disabled=!0,n._buttonElement.classList.add(n._inactiveButtonClass)})),l(this,"_activateButton",(function(){n._buttonElement.classList.remove(n._inactiveButtonClass),n._buttonElement.disabled=!1})),l(this,"_toggleButtonState",(function(){n._hasInvalidInput()?n._disableButton():n._activateButton()})),l(this,"resetValidation",(function(){n._toggleButtonState(),n._inputList.forEach((function(e){n._hideInputError(e)}))})),l(this,"_setEventsListeners",(function(){n._toggleButtonState(),n._formElement.addEventListener("reset",(function(){n._disableButton()})),n._inputList.forEach((function(e){e.addEventListener("input",(function(){n._toggleInputErrorState(e),n._toggleButtonState()}))}))})),l(this,"enableValidation",(function(){n._setEventsListeners()})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._errorClass=t.errorClass,this._inputErrorClass=t.inputErrorClass,this._formElement=r,this._buttonElement=r.querySelector(t.submitButtonSelector),this._inputList=Array.from(r.querySelectorAll(t.inputSelector))}));function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===y(o)?o:String(o)),n)}var o}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&C(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==h(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===h(o)?o:String(o)),n)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},b.apply(this,arguments)}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(n);if(o){var r=g(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._formSubmit=t,r._form=r._popup.querySelector(".popup__form"),r._inputs=r._form.querySelectorAll(".popup__input"),r}return t=a,(r=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){return e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._getInputValues()),e.close()})),b(g(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){b(g(a.prototype),"close",this).call(this),this._form.reset()}}])&&v(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(d);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},S.apply(this,arguments)}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(n);if(o){var r=P(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._link=t._popup.querySelector(".popup__image"),t._name=t._popup.querySelector(".popup__text"),t}return t=a,(r=[{key:"open",value:function(e,t){this._link.src=t,this._name.alt=e,this._name.textContent=e,S(P(a.prototype),"open",this).call(this)}}])&&j(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(d);function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}var D=function(){function e(t){var r=t.nameSelector,n=t.statusSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(r),this._status=document.querySelector(n),this._avatar=document.querySelector(o)}var t,r;return t=e,r=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._status.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._status.textContent=e.about,this._avatar.src=e.avatar}}],r&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}var I=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._user=t,this._url=r}var t,r;return t=e,(r=[{key:"_checkingTheServerResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"cards"),{method:"GET",headers:{authorization:this._user}}).then(this._checkingTheServerResponse)}},{key:"setNewCard",value:function(e){return fetch("".concat(this._url,"cards"),{method:"POST",headers:{authorization:this._user,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkingTheServerResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._user}}).then(this._checkingTheServerResponse)}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:{authorization:this._user,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkingTheServerResponse)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._url,"users/me/avatar "),{method:"PATCH",headers:{authorization:this._user,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.avatar})}).then(this._checkingTheServerResponse)}},{key:"setLike",value:function(e){return fetch("".concat(this._url,"cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this._user,"Content-Type":"application/json"}}).then(this._checkingTheServerResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._user,"Content-Type":"application/json"}}).then(this._checkingTheServerResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"cards/").concat(e," "),{method:"DELETE",headers:{authorization:this._user,"Content-Type":"application/json"}}).then(this._checkingTheServerResponse)}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function F(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=G(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},M.apply(this,arguments)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=G(n);if(o){var r=G(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._submit=t._popup.querySelector(".popup__submit_warning"),t}return t=a,(r=[{key:"deleteCard",value:function(e){this._handleDelete=e}},{key:"setEventListeners",value:function(){var e=this;M(G(a.prototype),"setEventListeners",this).call(this),this._submit.addEventListener("click",(function(t){t.preventDefault(),e._handleDelete()}))}}])&&F(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(d);function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var U=document.querySelector(".page"),J=U.querySelector(".profile-info__button"),K=U.querySelector(".profile__button"),Q=U.querySelector(".popup__form_edit-profile"),V=U.querySelector(".popup__form_add-card"),W=U.querySelector(".popup__input_type_name"),Y=U.querySelector(".popup__input_type_status"),Z=U.querySelector(".profile__avatar"),X=U.querySelector(".profile__avatar-container"),q=U.querySelector(".popup__form_edit-avatar"),z=new D({nameSelector:".profile-info__name",statusSelector:".profile-info__status",avatarSelector:".profile__avatar"}),$=new w(".popup_edit-profile",(function(e){Be.setUserInfo(e).then((function(e){z.setUserInfo(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))})),ee=new w(".popup_add-card",(function(e){Be.setNewCard(e).then((function(e){var t=ce(e,ue,".place-card");return le.addItem(t)})),ee.close()})),te=new w(".popup_edit-avatar",(function(e){Be.setAvatar(e).then((function(e){z.setUserInfo(e)})).catch((function(e){console.log("Ошибка: ".concat(e))}))})),re=new N(".popup_warning"),ne=new k(".popup_open-image"),oe=new p(e,Q),ie=new p(e,V),ae=new p(e,q);oe.enableValidation(),ie.enableValidation(),ae.enableValidation();var ue,Be=new I("06e18fd4-8469-488a-86d3-e71284eb84c0","https://mesto.nomoreparties.co/v1/cohort-65/");Promise.all([Be.getInitialCards(),Be.getUserInfo()]).then((function(e){var t,r,n=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],B=!0,s=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;B=!1}else for(;!(B=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);B=!0);}catch(e){s=!0,o=e}finally{try{if(!B&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(t,r)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?H(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];ue=i._id,le.renderElements(o,ue),z.setUserInfo(i),Z.src=i.avatar})).catch((function(e){console.log("Ошибка: ".concat(e))}));var se=function(e,t){ne.open(e,t)},ce=function(e,t,r){var n=new o({cardData:e,userId:t,handleCardClick:se,handleLikeClick:function(e){e.isLiked()?Be.deleteLike(e.cardId).then((function(t){e.deleteLike(),e.countLikes(t)})).catch((function(e){console.log("Ошибка: ".concat(e))})):Be.setLike(e.cardId).then((function(t){e.setLike(),e.countLikes(t)})).catch((function(e){console.log("Ошибка: ".concat(e))}))},handleDeleteIconClick:function(e){re.open(),re.deleteCard((function(){Be.deleteCard(e).then((function(){n.deleteCard(),re.close()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}))}},r);return n.generateCard()},le=new u({renderer:function(e,t){var r=ce(e,t,".place-card");le.addItem(r)}},".places__list");K.addEventListener("click",(function(){ee.open(),ie.resetValidation()})),$.setEventListeners(),ee.setEventListeners(),ne.setEventListeners(),te.setEventListeners(),re.setEventListeners(),J.addEventListener("click",(function(){$.open(),oe.resetValidation();var e=z.getUserInfo();W.value=e.name,Y.value=e.about})),X.addEventListener("click",(function(){te.open()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUUsQ0FBQ0EsRUFBRSxDQUFDQyxFQUFFLFNBQVVDLEVBQUUsVUFBV0MsRUFBRSxTQUFVQyxFQUFFLFNBQVVKLEVBQUUsVUFBV0ssRUFBRSxRQUFTQyxHQUFHLFNBQVVELEVBQUUsS0FBS0UsRUFBRSxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksR0FBRyxHQUFHLElBQUlKLEVBQUUsS0FBS0MsRUFBRSxDQUFDRSxHQUFHLFVBQVVMLEVBQUUsVUFBVUMsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0osRUFBRSxXQUFXSyxFQUFFLFlBQWFBLEVBQUUsQ0FBQ0wsRUFBRSxDQUFDTyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsRUFB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UUMsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTcFksRUFBRSxRQUFTMlosRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLE9BQVFDLEdBQUcsUUFBU0MsR0FBRyxNQUFPQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLE9BQVFDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxPQUFRQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxFQUFFLE9BQVFDLEdBQUcsT0FBUUMsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTdEUsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU3FFLEdBQUcsUUFBU3BFLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTMTlCLEVBQUUsUUFBU0MsRUFBRSxRQUFTaVMsRUFBRSxRQUFTaEwsRUFBRSxRQUFTakYsRUFBRSxRQUFTYyxFQUFFLFFBQVNxcEIsRUFBRSxRQUFTL0wsRUFBRSxRQUFTc2QsRUFBRSxRQUFTQyxFQUFFLFFBQVNsOEIsRUFBRSxRQUFTbThCLEVBQUUsUUFBU2hxQixFQUFFLFFBQVNpcUIsRUFBRSxRQUFTNWhCLEVBQUUsUUFBU3phLEVBQUUsUUFBU3M4QixFQUFFLFFBQVNDLEVBQUUsUUFBU2p2QixFQUFFLFFBQVN6TyxFQUFFLFFBQVEyOUIsRUFBRSxRQUFTdUQsR0FBRyxRQUFTQyxHQUFHLEVBQUVDLEdBQUcsUUFBU0MsR0FBRyxRQUFTcEYsRUFBRSxNQUFNRSxFQUFFLENBQUMsS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssSUFBSUosRUFBRSxVQUFVQyxFQUFFLENBQUMsRUFBSSxXQUFXLEVBQUksV0FBVyxFQUFJLFVBQVcsRUFBSSxXQUFXLEVBQUksVUFBVyxFQUFJLFdBQVcsRUFBSSxXQUFXLEVBQUksV0FBVyxFQUFJLFdBQVcsRUFBSSxVQUFXNEIsR0FBRyxVQUFXQyxHQUFHLFdBQVd1RCxHQUFHLFNBQVdDLEdBQUcsVUFBV3ZELEVBQUUsVUFBV0MsRUFBRSxXQUFXbEMsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXSixFQUFFLFdBQVdLLEVBQUUsVUFBV0UsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFVBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXcFksRUFBRSxXQUFXMlosRUFBRSxVQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsU0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsU0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsU0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxFQUFFLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBV0MsR0FBRyxXQUFXdEUsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV3FFLEdBQUcsVUFBV3BFLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXMTlCLEVBQUUsV0FBV0MsRUFBRSxXQUFXaVMsRUFBRSxVQUFXaEwsRUFBRSxX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SyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssTUFBTUosRUFBRSxTQUFTQyxFQUFFLENBQUMsRUFBSSxXQUFXLEVBQUksV0FBVyxFQUFJLFdBQVcsRUFBSSxXQUFXLEVBQUksV0FBVyxFQUFJLFdBQVcsRUFBSSxXQUFXLEVBQUksV0FBVyxFQUFJLFdBQVcsRUFBSSxXQUFXOEIsRUFBRSxXQUFXQyxFQUFFLFdBQVdsQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxVQUFXQyxFQUFFLFdBQVdKLEVBQUUsV0FBV0ssRUFBRSxXQUFXRSxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdwWSxFQUFFLFdBQVcyWixFQUFFLFNBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxTQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsU0FBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsU0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBV0MsR0FBRyxVQUFXQyxHQUFHLFNBQVdDLEVBQUUsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVd0RSxFQUFFLFVBQVdDLEVBQUUsV0FBV0MsRUFBRSxVQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsVUFBVzE5QixFQUFFLFdBQVdDLEVBQUUsV0FBV2lTLEVBQUUsVUFBV2hMLEVBQUUsV0FBV2pGLEVBQUUsV0FBV2MsRUFBRSxXQUFXcXBCLEVBQUUsV0FBVy9MLEVBQUUsV0FBV3NkLEVBQUUsV0FBV0MsRUFBRSxVQUFXbDhCLEVBQUUsV0FBV204QixFQUFFLFdBQVdocUIsRUFBRSxXQUFXaXFCLEVBQUUsV0FBVzVoQixFQUFFLFdBQVd6YSxFQUFFLFdBQVdzOEIsRUFBRSxVQUFXQyxFQUFFLFNBQVdqdkIsRUFBRSxXQUFXek8sRUFBRSxVQUFXMjlCLEVBQUUsV0FBV3VELEdBQUcsV0FBV0MsR0FBRyxLQUFLRyxHQUFHLEtBQUtDLEdBQUcsT0FBT3hGLEVBQUUsQ0FBQ0gsRUFBRSxDQUFDa0MsRUFBRSxFQUFFQyxFQUFFLFFBQVNsQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNKLEVBQUUsUUFBU0ssRUFBRSxRQUFTRSxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNrRixHQUFHLEVBQUUsS0FBSyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsT0FBUUMsR0FBRyxRQUFTQyxHQUFHLFFBQVMsS0FBSyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBUyxLQUFLLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTLEtBQUssUUFBUyxLQUFLLFFBQVMsS0FBSyxRQUFTLEtBQUssUUFBU0MsR0FBRyxPQUFRLEtBQUssUUFBUyxLQUFLLFFBQVMsS0FBSyxRQUFRQyxHQUFHLFFBQVNDLEdBQUcsRUFBRUMsR0FBRyxHQUFHbkcsRUFBRSxTQUFTRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxLQUFLLEtBQUssSUFBSSxJQUFJLEtBQUssSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSUosRUFBRSxTQUFTQyxFQUFFLENBQUN3RixHQUFHLFdBQVcsS0FBSyxXQUFXMUQsRUFBRSxXQUFXQyxFQUFFLFdBQVcwRCxHQUFHLFNBQVc1RixFQUFFLFdBQVc2RixHQUFHLFFBQVc1RixFQUFFLFFBQVc2RixHQUFHLFdBQVc1RixFQUFFLFdBQVdDLEVBQUUsV0FBVzRGLEdBQUcsV0FBV2hHLEVBQUUsV0FBVyxLQUFLLFdBQVdLLEVBQUUsV0FBVzRGLEdBQUcsV0FBVzFGLEVBQUUsV0FBVzJGLEdBQUcsVUFBVzFGLEVBQUUsV0FBVyxLQUFLLFVBQVdDLEVBQUUsV0FBVzBGLEdBQUcsV0FBV3pGLEVBQUUsVUFBVzBGLEdBQUcsV0FBVyxLQUFLLFdBQVcsS0FBSyxVQUFXLEtBQUssV0FBVyxLQUFLLFdBQVdDLEdBQUcsV0FBVyxLQUFLLFdBQVcsS0FBSyxXQUFXLEtBQUssVUFBV0MsR0FBRyxXQUFXQyxHQUFHLEtBQUtDLEdBQUcsT0FBT3BHLEVBQUUsQ0FBQ0osRUFBRSxDQUFDLEVBQUksUUFBUyxFQUFJLFFBQVMsRUFBSSxRQUFTLEVBQUksUUFBUyxFQUFJLFFBQVMsRUFBSSxRQUFTLEVBQUksUUFBUyxFQUFJLFFBQVMsRUFBSSxRQUFTLEVBQUksUUFBU0ksRUFBRSxNQUFPQyxFQUFFLFFBQVNFLEVBQUUsUUFBU0csRUFBRSxPQUFRQyxFQUFFLE9BQVFDLEVBQUUsT0FBUUMsRUFBRSxRQUFTcFksRUFBRSxRQUFTMlosRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsT0FBUUMsR0FBRyxRQUFTQyxHQUFHLFFBQVNFLEdBQUcsT0FBUUUsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsT0FBUUMsR0FBRyxPQUFRQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLE9BQVFDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEVBQUUsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxRQUFTQyxHQUFHLFFBQVN0RSxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTcUUsR0FBRyxRQUFTcEUsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVNDLEVBQUUsUUFBU0MsRUFBRSxRQUFTQyxFQUFFLFFBQVMxOUIsRUFBRSxRQUFTQyxFQUFFLFFBQVNpUyxFQUFFLFFBQVNoTCxFQUFFLFFBQVNqRixFQUFFLFFBQVMwZ0MsR0FBRyxPQUFRQyxHQUFHLEVBQUVDLEdBQUcsUUFBU0MsR0FBRyxRQUFTWCxHQUFHLFFBQVNZLEdBQUcsUUFBU0MsR0FBRyxRQUFTWixHQUFHLFFBQVM3RixFQUFFLFNBQVNFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEdBQUcsR0FBRyxJQUFJSixFQUFFLFFBQVFDLEVBQUUsQ0FBQyxFQUFJLFdBQVcsRUFBSSxVQUFXLEVBQUksV0FBVyxFQUFJLFdBQVcsRUFBSSxXQUFXLEVBQUksV0FBVyxFQUFJLFdBQVcsRUFBSSxVQUFXLEVBQUksV0FBVyxFQUFJLFVBQVdBLEVBQUUsV0FBV3FHLEdBQUcsVUFBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV3ZHLEVBQUUsV0FBVzRGLEdBQUcsV0FBV1ksR0FBRyxXQUFXQyxHQUFHLFdBQVd2RyxFQUFFLFdBQVcyRixHQUFHLFdBQVd4RixFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxVQUFXQyxFQUFFLFVBQVdwWSxFQUFFLFdBQVcyWixFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsU0FBV0MsR0FBRyxVQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0UsR0FBRyxVQUFXRSxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsRUFBRSxTQUFXQyxHQUFHLFVBQVdDLEdBQUcsVUFBV0MsR0FBRyxVQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV3RFLEVBQUUsV0FBV0MsRUFBRSxVQUFXQyxFQUFFLFVBQVdxRSxHQUFHLFdBQVdwRSxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFdBQVdDLEVBQUUsV0FBV0MsRUFBRSxXQUFXQyxFQUFFLFVBQVdDLEVBQUUsV0FBVzE5QixFQUFFLFdBQVdDLEVBQUUsVUFBV2lTLEVBQUUsV0FBV2hMLEVBQUUsV0FBV2pGLEVBQUUsWUFBWW02QixFQUFFLENBQUNFLEVBQUUsSUFBSUMsRUFBRSxJQUFJRSxFQUFFLElBQUlrRyxHQUFHLElBQUlDLEdBQUcsSUFBSUMsR0FBRyxJQUFJQyxHQUFHLElBQUlYLEdBQUcsSUFBSVksR0FBRyxJQUFJQyxHQUFHLElBQUlaLEdBQUcsTUFBTXhGLEVBQUUsQ0FBQ1YsRUFBRSxDQUFDRyxFQUFFLEVBQUUsS0FBSyxFQUFFNEcsR0FBRyxFQUFFQyxHQUFHLFVBQVdDLEdBQUcsVUFBV0MsR0FBRyxVQUFXQyxHQUFHLFFBQVNDLEdBQUcsVUFBV0MsR0FBRyxRQUFTQyxHQUFHLFNBQVVDLEdBQUcsVUFBV0MsR0FBRyxTQUFVQyxHQUFHLFNBQVVDLEdBQUcsU0FBVUMsR0FBRyxTQUFVQyxHQUFHLFFBQVNDLEdBQUcsUUFBU0MsR0FBRyxTQUFVQyxHQUFHLFNBQVVDLEdBQUcsU0FBVUMsR0FBRyxRQUFTQyxHQUFHLFFBQVNDLEdBQUcsT0FBUSxLQUFLLFFBQVMsS0FBSyxRQUFTLEtBQUssUUFBUyxLQUFLLFFBQVE5QixHQUFHLFFBQVEsS0FBSyxRQUFRLEtBQUssUUFBUSxLQUFLLFFBQVFDLEdBQUcsT0FBUUMsR0FBRyxHQUFHbEcsRUFBRSxTQUFTRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEdBQUcsSUFBSUosRUFBRSxnQkFBZ0JDLEVBQUUsQ0FBQyxLQUFLLFdBQVcyRyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV2hILEVBQUUsVUFBV2lILEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBV0MsR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsVUFBVyxLQUFLLFdBQVcsS0FBSyxVQUFXLEtBQUssV0FBVyxLQUFLLFdBQVc5QixHQUFHLFdBQVcsS0FBSyxXQUFXLEtBQUssV0FBVyxLQUFLLFVBQVdDLEdBQUcsV0FBV0MsR0FBRyxPQUFPeEUsRUFBRSxDQUFDL0IsRUFBRSxDQUFDb0ksR0FBRyxRQUFRL0gsRUFBRSxJQUFJRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxHQUFHLEdBQUcsSUFBSUosRUFBRSxhQUFhQyxFQUFFLENBQUNnSSxHQUFHLFlBQWFsRyxFQUFFLENBQUNsQyxFQUFFLENBQUNpQyxHQUFHLEVBQUVDLEVBQUUsU0FBVUgsRUFBRSxFQUFFc0csR0FBRyxFQUFFQyxHQUFHLFNBQVVDLEdBQUcsRUFBRUMsR0FBRyxTQUFVeEIsR0FBRyxTQUFVeUIsR0FBRyxFQUFFQyxHQUFHLFNBQVVySSxFQUFFLFNBQVNFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLEdBQUcsR0FBRyxJQUFJSixFQUFFLGtCQUFrQkMsRUFBRSxDQUFDaUksR0FBRyxXQUFXQyxHQUFHLFdBQVdDLEdBQUcsV0FBV3RHLEdBQUcsV0FBV0MsRUFBRSxVQUFXc0csR0FBRyxVQUFXeEIsR0FBRyxVQUFXeUIsR0FBRyxXQUFXQyxHQUFHLFdBQVczRyxFQUFFLGFBQWE5QixFQUFFLENBQUNELEVBQUUsQ0FBQ0UsRUFBRSxFQUFFRixFQUFFLEdBQUdLLEVBQUUsU0FBU0UsRUFBRSxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUksR0FBRyxHQUFHLElBQUlKLEVBQUUscUJBQXFCQyxFQUFFLENBQUNGLEVBQUUsVUFBV0YsRUFBRSxZQUFhUSxFQUFFLENBQUNSLEVBQUUsQ0FBQ0EsRUFBRSxFQUFFSyxFQUFFLEVBQUVFLEVBQUUsRUFBRXdFLEVBQUUsU0FBVWtCLEdBQUcsRUFBRVksR0FBRyxFQUFFWCxHQUFHLEdBQUc3RixFQUFFLElBQUlFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUksS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLEdBQUcsR0FBRyxJQUFJSixFQUFFLGVBQWVDLEVBQUUsQ0FBQ0osRUFBRSxXQUFXSyxFQUFFLFVBQVc0RixHQUFHLFdBQVdZLEdBQUcsV0FBV3RHLEVBQUUsV0FBVzJGLEdBQUcsV0FBV25CLEVBQUUsWUFBWTdFLEVBQUUsQ0FBQzZFLEVBQUUsV0FBV3RFLEVBQUUsQ0FBQ1QsRUFBRSxDQUFDK0IsRUFBRSxTQUFTMUIsRUFBRSxTQUFTRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxHQUFHLEdBQUcsSUFBSUosRUFBRSxxQkFBcUJDLEVBQUUsQ0FBQzJCLEVBQUUsYUFBYXBCLEVBQUUsQ0FBQ1gsRUFBRSxDQUFDNTdCLEVBQUUsT0FBUWk4QixFQUFFLE1BQU1FLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLEdBQUcsR0FBRyxJQUFJSixFQUFFLHNCQUFzQkMsRUFBRSxDQUFDaDhCLEVBQUUsYUFBYXc4QixFQUFFLENBQUNaLEVBQUUsQ0FBQ0EsRUFBRSxTQUFVSyxFQUFFLFNBQVVBLEVBQUUsS0FBS0UsRUFBRSxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUksR0FBRyxHQUFHLElBQUlKLEVBQUUsWUFBWUMsRUFBRSxDQUFDSixFQUFFLFdBQVdLLEVBQUUsWUFBYVEsRUFBRSxDQUFDYixFQUFFLENBQUMySSxHQUFHLFNBQVV0SSxFQUFFLFNBQVNFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxJQUFJSixFQUFFLHlCQUF5QkMsRUFBRSxDQUFDdUksR0FBRyxXQUFZekksRUFBRSxDQUFDeUksR0FBRyxXQUFXN0gsRUFBRSxDQUFDZCxFQUFFLENBQUNrQyxFQUFFLFFBQVNFLEVBQUUsUUFBUXdHLEdBQUcsU0FBVSxLQUFLLFFBQVMsS0FBSyxTQUFVLEtBQUssU0FBVSxLQUFLLFNBQVUsS0FBSyxTQUFVLEtBQUssU0FBVSxLQUFLLFNBQVUsS0FBSyxTQUFVLEtBQUssU0FBVSxLQUFLLFNBQVV2QyxHQUFHLFNBQVUsS0FBSyxTQUFVd0MsR0FBRyxTQUFVQyxHQUFHLFNBQVV6SSxFQUFFLFNBQVNFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLEdBQUcsR0FBRyxJQUFJSixFQUFFLG1CQUFtQkMsRUFBRSxDQUFDOEIsRUFBRSxVQUFXMEcsR0FBRyxXQUFXLEtBQUssVUFBVyxLQUFLLFdBQVcsS0FBSyxVQUFXLEtBQUssV0FBVyxLQUFLLFdBQVcsS0FBSyxXQUFXLEtBQUssV0FBVyxLQUFLLFdBQVcsS0FBSyxXQUFXLEtBQUssVUFBV3ZDLEdBQUcsVUFBVyxLQUFLLFdBQVd3QyxHQUFHLFdBQVdDLEdBQUcsV0FBVzFHLEVBQUUsYUFBYXJCLEVBQUUsQ0FBQ2YsRUFBRSxDQUFDLEtBQUssUUFBU0ssRUFBRSxTQUFTRSxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxHQUFHLEdBQUcsSUFBSUosRUFBRSxhQUFhQyxFQUFFLENBQUMsS0FBSyxhQUFhWSxFQUFFLENBQUNoQixFQUFFLENBQUMrSSxHQUFHLEdBQUcxSSxFQUFFLFNBQVNFLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxJQUFJSixFQUFFLGdCQUFnQkMsRUFBRSxDQUFDMkksR0FBRyxhQUFhOUgsRUFBRSxDQUFDakIsRUFBRSxDQUFDZ0osR0FBRyxRQUFTQyxHQUFHLEdBQUc1SSxFQUFFLE1BQU1FLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxLQUFLLEdBQUcsR0FBRyxJQUFJSixFQUFFLGdCQUFnQkMsRUFBRSxDQUFDNEksR0FBRyxXQUFXQyxHQUFHLHVCQ0Exb25CNWlDLEVBQU9DLFFBQVEsQ0FBQyxFQUFJLEtBQUssRUFBSSxLQUFLLEVBQUksS0FBSyxFQUFJLEtBQUssRUFBSSxLQUFLLEVBQUksS0FBSyxFQUFJLEtBQUssRUFBSSxLQUFLLEVBQUksS0FBSyxFQUFJLEtBQUswNUIsRUFBRSxLQUFLSyxFQUFFLEtBQUtFLEVBQUUsS0FBS0wsRUFBRSxJQUFJQyxFQUFFLElBQUlDLEVBQUUsSUFBSU0sRUFBRSxLQUFLcUIsRUFBRSxNQUFNRyxFQUFFLElBQUlqQyxFQUFFLElBQUlPLEVBQUUsS0FBS0MsRUFBRSxLQUFLRSxFQUFFLEtBQUtDLEVBQUUsS0FBS0MsRUFBRSxLQUFLQyxFQUFFLEtBQUtDLEVBQUUsS0FBS0MsRUFBRSxLQUFLQyxFQUFFLEtBQUtDLEVBQUUsS0FBS0MsRUFBRSxLQUFLQyxFQUFFLEtBQUtDLEVBQUUsS0FBS0MsRUFBRSxLQUFLQyxFQUFFLEtBQUtDLEVBQUUsS0FBSzE5QixFQUFFLEtBQUtDLEVBQUUsS0FBS2lTLEVBQUUsS0FBS2hMLEVBQUUsS0FBS2pGLEVBQUUsS0FBSzNCLEVBQUUsTUFBTWcrQixFQUFFLEtBQUsyQyxFQUFFLEtBQUtsK0IsRUFBRSxLQUFLcXBCLEVBQUUsS0FBSy9MLEVBQUUsS0FBS3NkLEVBQUUsS0FBS0MsRUFBRSxNQUFNbDhCLEVBQUUsTUFBTW04QixFQUFFLE1BQU1ocUIsRUFBRSxNQUFNaXFCLEVBQUUsTUFBTTVoQixFQUFFLE1BQU16YSxFQUFFLE1BQU1zOEIsRUFBRSxNQUFNQyxFQUFFLE1BQU1qdkIsRUFBRSxNQUFNc3ZCLEVBQUUsSUFBSTFaLEVBQUUsS0FBSzRaLEVBQUUsS0FBS0MsRUFBRSxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0UsR0FBRyxLQUFLRSxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0UsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUthLEdBQUcsT0FBT0MsR0FBRyxPQUFPRyxHQUFHLE9BQU9wRSxHQUFHLElBQUlnQyxHQUFHLEtBQUtFLEdBQUcsS0FBS2tCLEdBQUcsS0FBS0MsR0FBRyxNQUFNQyxHQUFHLE1BQU0sS0FBSyxNQUFNLEtBQUssT0FBTyxLQUFLLE9BQU8sS0FBSyxZQUFZLEtBQUssT0FBTyxLQUFLLE9BQU8sS0FBSyxPQUFPLEtBQUssT0FBTyxLQUFLLE9BQU8sS0FBSyxPQUFPZSxHQUFHLE9BQU9DLEdBQUcsT0FBT00sR0FBRyxPQUFPRyxHQUFHLFVBQVUxRyxHQUFHLE1BQU0wQixHQUFHLElBQUl3RCxHQUFHLE1BQU1DLEdBQUcsTUFBTUMsR0FBRyxNQUFNQyxHQUFHLE1BQU1DLEdBQUcsTUFBTUMsR0FBRyxNQUFNQyxHQUFHLE1BQU1DLEdBQUcsTUFBTUMsR0FBRyxNQUFNRyxHQUFHLE9BQU9DLEdBQUcsT0FBT0ksR0FBRyxLQUFLQyxHQUFHLFVBQVVDLEdBQUcsWUFBWUMsR0FBRyxPQUFPQyxHQUFHLE9BQU9FLEdBQUcsT0FBT0MsR0FBRyxVQUFVRSxHQUFHLFVBQVVDLEdBQUcsVUFBVUMsR0FBRyxVQUFVQyxHQUFHLFVBQVVDLEdBQUcsVUFBVUMsR0FBRyxNQUFNQyxHQUFHLFlBQVlDLEdBQUcsT0FBT0MsR0FBRyxZQUFZQyxHQUFHLFlBQVlDLEdBQUcsWUFBWUMsR0FBRyxZQUFZQyxHQUFHLFlBQVlDLEdBQUcsT0FBT0MsR0FBRyxPQUFPQyxHQUFHLFlBQVlDLEdBQUcsWUFBWUMsR0FBRyxZQUFZQyxHQUFHLFlBQVlDLEdBQUcsTUFBTUMsR0FBRyxNQUFNQyxHQUFHLE1BQU1DLEdBQUcsTUFBTUMsR0FBRyxNQUFNQyxHQUFHLE1BQU1DLEdBQUcsY0FBY0MsR0FBRyxPQUFPQyxHQUFHLFVBQVUsS0FBSyxVQUFVLEtBQUssVUFBVSxLQUFLLE1BQU0sS0FBSyxNQUFNLEtBQUssWUFBWSxLQUFLLE9BQU8sS0FBSyxPQUFPLEtBQUssT0FBTyxLQUFLLE9BQU8sS0FBSyxPQUFPQyxH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S0FDUCxJQUFPLEtBQ1AsSUFBTyxLQUNQLElBQU8sS0FDUCxNQUFPLEtBQ1AsSUFBTyxLQUNQLE1BQU8sS0FDUCxJQUFPLEtBQ1AsTUFBTyxLQUNQLElBQU8sS0FDUCxJQUFPLEtBQ1AsTUFBTyxLQUNQLE1BQU8sS0FDUCxJQUFPLEtBQ1AsTUFBTyxLQUNQLElBQU8sS0FDUCxJQUFPLEtBQ1AsSUFBTyxLQUNQLE1BQU8sS0FDUCxJQUFPLEtBQ1AsSUFBTyxLQUNQLElBQU8sS0FDUCxJQUFPLEtBQ1AsSUFBTyxLQUNQLE1BQU8sS0FDUCxJQUFPLEtBQ1AsSUFBTyxLQUNQLElBQU8sS0FDUCxJQUFPLEtBQ1AsT0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixPQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixPQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixPQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsT0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsT0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsT0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsT0FBUSxLQUNSLEtBQVEsS0FDUixLQUFRLEtBQ1IsS0FBUSxLQUNSLEtBQVEsS0FDUixPQUFRLE1BQ1IsS0FBUSxNQUNSLEtBQVEsTUFDUixLQUFRLE1BQ1IsT0FBUSxNQUNSLEtBQVEsTUFDUixPQUFRLE1BQ1IsS0FBUSxNQUNSLEtBQVEsTUFDUixLQUFRLE1BQ1IsT0FBUSxNQUNSLEtBQVEsTUFDUixLQUFRLE1BQ1IsS0FBUSxNQUNSLEtBQVEsTUFDUixPQUFRLE1BQ1IsS0FBUSxNQUNSLEtBQVEsTUFDUixLQUFRLE1BQ1IsT0FBUSxNQUNSLEtBQVEsTUFDUixLQUFRLE1BQ1IsT0FBUSxNQUNSLEtBQVEs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QVFxL0IsSUFBSSxXQUFEdmpDLE9BQVl5dUIsR0FBUyxHQUUxRCxFQUNBOC9CLHNCQUF1QixTQUFDTSxHQUN0QndILEdBQWFoUCxPQUNiZ1AsR0FBYWMsWUFBVyxXQUN0QnhCLEdBQUl3QixXQUFXdEksR0FDWmhXLE1BQUssV0FDSmllLEVBQUtLLGFBQ0xkLEdBQWF2cUQsT0FDZixJQUNDNnZDLE9BQU0sU0FBQ2x0QixHQUFZdnFCLFFBQVFxL0IsSUFBSSxXQUFEdmpDLE9BQVl5dUIsR0FBUyxHQUN4RCxHQUNGLEdBQ0N5L0IsR0FFSCxPQURvQjRJLEVBQUtNLGNBRTNCLEVBRU1uQixHQUFRLElBQUl4RixFQUFRLENBQ3hCRSxTQUFVLFNBQUN4L0MsRUFBTWk5QyxHQUNmLElBQU1pSixFQUFXckIsR0FBVzdrRCxFQUFNaTlDLEVBQVEsZUFDMUM2SCxHQUFNQyxRQUFRbUIsRUFDaEIsR0FDQyxpQkFFSG5DLEVBQWVsRixpQkFBaUIsU0FBUyxXQUN2QzZGLEdBQWN4TyxPQUNkbVAsR0FBbUJjLGlCQUNyQixJQVlBN0IsRUFBaUI4QixvQkFDakIxQixHQUFjMEIsb0JBQ2RqQixHQUFlaUIsb0JBQ2ZwQixHQUFnQm9CLG9CQUNoQmxCLEdBQWFrQixvQkFFYnRDLEVBQWtCakYsaUJBQWlCLFNBL0ZuQyxXQUNFeUYsRUFBaUJwTyxPQUNqQmtQLEdBQXFCZSxrQkFDckIsSUFBTTNDLEVBQVdWLEVBQUsyQyxjQUN0QnZCLEVBQVU5MUQsTUFBUW8xRCxFQUFTcjFELEtBQzNCZzJELEVBQVMvMUQsTUFBUW8xRCxFQUFTWCxLQUM1QixJQTJGQXVCLEVBQWdCdkYsaUJBQWlCLFNBQVMsV0FBY21HLEdBQWdCOU8sTUFBTyIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9kYXRhL3ByZWZpeGVzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvYXQtcnVsZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2F1dG9wcmVmaXhlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2JyYWNrZXRzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvYnJvd3NlcnMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9kZWNsYXJhdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2FsaWduLWNvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbGlnbi1pdGVtcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2FsaWduLXNlbGYuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hbmltYXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9hcHBlYXJhbmNlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYXV0b2ZpbGwuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZHJvcC1maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZ3JvdW5kLWNsaXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9iYWNrZ3JvdW5kLXNpemUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ibG9jay1sb2dpY2FsLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYm9yZGVyLWltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvYm9yZGVyLXJhZGl1cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2JyZWFrLXByb3BzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvY3Jvc3MtZmFkZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2Rpc3BsYXktZmxleC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2Rpc3BsYXktZ3JpZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2ZpbGUtc2VsZWN0b3ItYnV0dG9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmlsdGVyLXZhbHVlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmlsdGVyLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC1iYXNpcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2ZsZXgtZGlyZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC1mbG93LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC1ncm93LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZmxleC1zaHJpbmsuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LXNwZWMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LXdyYXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9mbGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZnVsbHNjcmVlbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2dyYWRpZW50LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC1hcmVhLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC1jb2x1bW4tYWxpZ24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLWVuZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2dyaWQtcm93LWFsaWduLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC1yb3ctY29sdW1uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC1yb3dzLWNvbHVtbnMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXN0YXJ0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvZ3JpZC10ZW1wbGF0ZS1hcmVhcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL2dyaWQtdGVtcGxhdGUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9ncmlkLXV0aWxzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvaW1hZ2UtcmVuZGVyaW5nLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvaW1hZ2Utc2V0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvaW5saW5lLWxvZ2ljYWwuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9pbnRyaW5zaWMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9qdXN0aWZ5LWNvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9tYXNrLWJvcmRlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL21hc2stY29tcG9zaXRlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3Mvb3JkZXIuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9vdmVyc2Nyb2xsLWJlaGF2aW9yLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvcGl4ZWxhdGVkLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvcGxhY2Utc2VsZi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3BsYWNlaG9sZGVyLXNob3duLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvcGxhY2Vob2xkZXIuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy9wcmludC1jb2xvci1hZGp1c3QuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWRlY29yYXRpb24tc2tpcC1pbmsuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWRlY29yYXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy90ZXh0LWVtcGhhc2lzLXBvc2l0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvaGFja3MvdHJhbnNmb3JtLWRlY2wuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9oYWNrcy91c2VyLXNlbGVjdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2hhY2tzL3dyaXRpbmctbW9kZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL2luZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9vbGQtc2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9vbGQtdmFsdWUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi9wcmVmaXhlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL3ByZWZpeGVzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvcHJvY2Vzc29yLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvcmVzb2x1dGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL3NlbGVjdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvc3VwcG9ydHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi90cmFuc2l0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYXV0b3ByZWZpeGVyL2xpYi92YWx1ZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXIvbGliL3ZlbmRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9icm93c2Vyc2xpc3QvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9icm93c2Vyc2xpc3QvZXJyb3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvYnJvd3NlcnNsaXN0L2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Jyb3dzZXJzbGlzdC9wYXJzZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9hZ2VudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvYnJvd3NlclZlcnNpb25zLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2Jyb3dzZXJzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2JhY2tncm91bmQtY2xpcC10ZXh0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2JhY2tncm91bmQtaW1nLW9wdHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvYm9yZGVyLWltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2JvcmRlci1yYWRpdXMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY2FsYy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtYW5pbWF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1hbnktbGluay5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtYXBwZWFyYW5jZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtYXV0b2ZpbGwuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWJhY2tkcm9wLWZpbHRlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtYm94ZGVjb3JhdGlvbmJyZWFrLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1ib3hzaGFkb3cuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWNsaXAtcGF0aC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtY3Jpc3AtZWRnZXMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWNyb3NzLWZhZGUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWRldmljZWFkYXB0YXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWVsZW1lbnQtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWZlYXR1cmVxdWVyaWVzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1maWxlLXNlbGVjdG9yLWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZmlsdGVyLWZ1bmN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1maWx0ZXJzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1ncmFkaWVudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWdyaWQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWh5cGhlbnMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWltYWdlLXNldC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtbG9naWNhbC1wcm9wcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtbWFza3MuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLW1lZGlhLXJlc29sdXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLW92ZXJzY3JvbGwtYmVoYXZpb3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXBsYWNlaG9sZGVyLXNob3duLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1wbGFjZWhvbGRlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtcHJpbnQtY29sb3ItYWRqdXN0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1yZWFkLW9ubHktd3JpdGUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXJlZ2lvbnMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXNlbGVjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3Mtc2hhcGVzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1zbmFwcG9pbnRzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1zdGlja3kuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXRleHQtYWxpZ24tbGFzdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtdGV4dC1vcmllbnRhdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtdGV4dC1zcGFjaW5nLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy10cmFuc2l0aW9ucy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3Mtd2lkdGgtc3RyZXRjaC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3Mtd3JpdGluZy1tb2RlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2NzczMtYm94c2l6aW5nLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2NzczMtY3Vyc29ycy1ncmFiLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2NzczMtY3Vyc29ycy1uZXdlci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MzLXRhYnNpemUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvZmxleGJveC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9mb250LWZlYXR1cmUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvZm9udC1rZXJuaW5nLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Z1bGxzY3JlZW4uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvaW50cmluc2ljLXdpZHRoLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL21kbi1jc3MtdW5pY29kZS1iaWRpLWlzb2xhdGUtb3ZlcnJpZGUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLWNzcy11bmljb2RlLWJpZGktaXNvbGF0ZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9tZG4tY3NzLXVuaWNvZGUtYmlkaS1wbGFpbnRleHQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLXRleHQtZGVjb3JhdGlvbi1jb2xvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9tZG4tdGV4dC1kZWNvcmF0aW9uLWxpbmUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLXRleHQtZGVjb3JhdGlvbi1zaG9ydGhhbmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLXRleHQtZGVjb3JhdGlvbi1zdHlsZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9tdWx0aWNvbHVtbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9vYmplY3QtZml0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL3BvaW50ZXIuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvdGV4dC1kZWNvcmF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL3RleHQtZW1waGFzaXMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvdGV4dC1vdmVyZmxvdy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy90ZXh0LXNpemUtYWRqdXN0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL3RyYW5zZm9ybXMyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy90cmFuc2Zvcm1zM2QuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvdXNlci1zZWxlY3Qtbm9uZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGlzdC9saWIvc3RhdHVzZXMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2Rpc3QvbGliL3N1cHBvcnRlZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9jYW5pdXNlLWxpdGUvZGlzdC91bnBhY2tlci9hZ2VudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvY2FuaXVzZS1saXRlL2Rpc3QvdW5wYWNrZXIvYnJvd3NlclZlcnNpb25zLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kaXN0L3VucGFja2VyL2Jyb3dzZXJzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL2Nhbml1c2UtbGl0ZS9kaXN0L3VucGFja2VyL2ZlYXR1cmUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvZWxlY3Ryb24tdG8tY2hyb21pdW0vdmVyc2lvbnMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvZnJhY3Rpb24uanMvZnJhY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXJhbmdlL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3BpY29jb2xvcnMvcGljb2NvbG9ycy5icm93c2VyLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtdmFsdWUtcGFyc2VyL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLXZhbHVlLXBhcnNlci9saWIvcGFyc2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy12YWx1ZS1wYXJzZXIvbGliL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLXZhbHVlLXBhcnNlci9saWIvdW5pdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLXZhbHVlLXBhcnNlci9saWIvd2Fsay5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9hdC1ydWxlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL2NvbW1lbnQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvY29udGFpbmVyLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL2Nzcy1zeW50YXgtZXJyb3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvZGVjbGFyYXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvZG9jdW1lbnQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvZnJvbUpTT04uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvaW5wdXQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvbGF6eS1yZXN1bHQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvbGlzdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9tYXAtZ2VuZXJhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL25vLXdvcmstcmVzdWx0LmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL25vZGUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvcGFyc2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvcGFyc2VyLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL3Bvc3Rjc3MuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvcHJldmlvdXMtbWFwLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL3Byb2Nlc3Nvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9yZXN1bHQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9ub2RlX21vZHVsZXMvcG9zdGNzcy9saWIvcm9vdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9ydWxlLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL3N0cmluZ2lmaWVyLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi9zeW1ib2xzLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL3Rva2VuaXplLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MvbGliL3dhcm4tb25jZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL25vZGVfbW9kdWxlcy9wb3N0Y3NzL2xpYi93YXJuaW5nLmpzIiwid2VicGFjazovL21lc3RvLy4vbm9kZV9tb2R1bGVzL25hbm9pZC9ub24tc2VjdXJlL2luZGV4LmNqcyIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHVucGFjayA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kaXN0L3VucGFja2VyL2ZlYXR1cmUnKVxuXG5mdW5jdGlvbiBicm93c2Vyc1NvcnQoYSwgYikge1xuICBhID0gYS5zcGxpdCgnICcpXG4gIGIgPSBiLnNwbGl0KCcgJylcbiAgaWYgKGFbMF0gPiBiWzBdKSB7XG4gICAgcmV0dXJuIDFcbiAgfSBlbHNlIGlmIChhWzBdIDwgYlswXSkge1xuICAgIHJldHVybiAtMVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBNYXRoLnNpZ24ocGFyc2VGbG9hdChhWzFdKSAtIHBhcnNlRmxvYXQoYlsxXSkpXG4gIH1cbn1cblxuLy8gQ29udmVydCBDYW4gSSBVc2UgZGF0YVxuZnVuY3Rpb24gZihkYXRhLCBvcHRzLCBjYWxsYmFjaykge1xuICBkYXRhID0gdW5wYWNrKGRhdGEpXG5cbiAgaWYgKCFjYWxsYmFjaykge1xuICAgIDtbY2FsbGJhY2ssIG9wdHNdID0gW29wdHMsIHt9XVxuICB9XG5cbiAgbGV0IG1hdGNoID0gb3B0cy5tYXRjaCB8fCAvXFxzeCgkfFxccykvXG4gIGxldCBuZWVkID0gW11cblxuICBmb3IgKGxldCBicm93c2VyIGluIGRhdGEuc3RhdHMpIHtcbiAgICBsZXQgdmVyc2lvbnMgPSBkYXRhLnN0YXRzW2Jyb3dzZXJdXG4gICAgZm9yIChsZXQgdmVyc2lvbiBpbiB2ZXJzaW9ucykge1xuICAgICAgbGV0IHN1cHBvcnQgPSB2ZXJzaW9uc1t2ZXJzaW9uXVxuICAgICAgaWYgKHN1cHBvcnQubWF0Y2gobWF0Y2gpKSB7XG4gICAgICAgIG5lZWQucHVzaChicm93c2VyICsgJyAnICsgdmVyc2lvbilcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjYWxsYmFjayhuZWVkLnNvcnQoYnJvd3NlcnNTb3J0KSlcbn1cblxuLy8gQWRkIGRhdGEgZm9yIGFsbCBwcm9wZXJ0aWVzXG5sZXQgcmVzdWx0ID0ge31cblxuZnVuY3Rpb24gcHJlZml4KG5hbWVzLCBkYXRhKSB7XG4gIGZvciAobGV0IG5hbWUgb2YgbmFtZXMpIHtcbiAgICByZXN1bHRbbmFtZV0gPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhKVxuICB9XG59XG5cbmZ1bmN0aW9uIGFkZChuYW1lcywgZGF0YSkge1xuICBmb3IgKGxldCBuYW1lIG9mIG5hbWVzKSB7XG4gICAgcmVzdWx0W25hbWVdLmJyb3dzZXJzID0gcmVzdWx0W25hbWVdLmJyb3dzZXJzXG4gICAgICAuY29uY2F0KGRhdGEuYnJvd3NlcnMpXG4gICAgICAuc29ydChicm93c2Vyc1NvcnQpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSByZXN1bHRcblxuLy8gQm9yZGVyIFJhZGl1c1xubGV0IHByZWZpeEJvcmRlclJhZGl1cyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2JvcmRlci1yYWRpdXMnKVxuXG5mKHByZWZpeEJvcmRlclJhZGl1cywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFxuICAgIFtcbiAgICAgICdib3JkZXItcmFkaXVzJyxcbiAgICAgICdib3JkZXItdG9wLWxlZnQtcmFkaXVzJyxcbiAgICAgICdib3JkZXItdG9wLXJpZ2h0LXJhZGl1cycsXG4gICAgICAnYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXMnLFxuICAgICAgJ2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXMnXG4gICAgXSxcbiAgICB7XG4gICAgICBtaXN0YWtlczogWycta2h0bWwtJywgJy1tcy0nLCAnLW8tJ10sXG4gICAgICBmZWF0dXJlOiAnYm9yZGVyLXJhZGl1cycsXG4gICAgICBicm93c2Vyc1xuICAgIH1cbiAgKVxuKVxuXG4vLyBCb3ggU2hhZG93XG5sZXQgcHJlZml4Qm94c2hhZG93ID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWJveHNoYWRvdycpXG5cbmYocHJlZml4Qm94c2hhZG93LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydib3gtc2hhZG93J10sIHtcbiAgICBtaXN0YWtlczogWycta2h0bWwtJ10sXG4gICAgZmVhdHVyZTogJ2Nzcy1ib3hzaGFkb3cnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIEFuaW1hdGlvblxubGV0IHByZWZpeEFuaW1hdGlvbiA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1hbmltYXRpb24nKVxuXG5mKHByZWZpeEFuaW1hdGlvbiwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFxuICAgIFtcbiAgICAgICdhbmltYXRpb24nLFxuICAgICAgJ2FuaW1hdGlvbi1uYW1lJyxcbiAgICAgICdhbmltYXRpb24tZHVyYXRpb24nLFxuICAgICAgJ2FuaW1hdGlvbi1kZWxheScsXG4gICAgICAnYW5pbWF0aW9uLWRpcmVjdGlvbicsXG4gICAgICAnYW5pbWF0aW9uLWZpbGwtbW9kZScsXG4gICAgICAnYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudCcsXG4gICAgICAnYW5pbWF0aW9uLXBsYXktc3RhdGUnLFxuICAgICAgJ2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24nLFxuICAgICAgJ0BrZXlmcmFtZXMnXG4gICAgXSxcbiAgICB7XG4gICAgICBtaXN0YWtlczogWycta2h0bWwtJywgJy1tcy0nXSxcbiAgICAgIGZlYXR1cmU6ICdjc3MtYW5pbWF0aW9uJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG4pXG5cbi8vIFRyYW5zaXRpb25cbmxldCBwcmVmaXhUcmFuc2l0aW9uID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXRyYW5zaXRpb25zJylcblxuZihwcmVmaXhUcmFuc2l0aW9uLCBicm93c2VycyA9PlxuICBwcmVmaXgoXG4gICAgW1xuICAgICAgJ3RyYW5zaXRpb24nLFxuICAgICAgJ3RyYW5zaXRpb24tcHJvcGVydHknLFxuICAgICAgJ3RyYW5zaXRpb24tZHVyYXRpb24nLFxuICAgICAgJ3RyYW5zaXRpb24tZGVsYXknLFxuICAgICAgJ3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uJ1xuICAgIF0sXG4gICAge1xuICAgICAgbWlzdGFrZXM6IFsnLWtodG1sLScsICctbXMtJ10sXG4gICAgICBicm93c2VycyxcbiAgICAgIGZlYXR1cmU6ICdjc3MtdHJhbnNpdGlvbnMnXG4gICAgfVxuICApXG4pXG5cbi8vIFRyYW5zZm9ybSAyRFxubGV0IHByZWZpeFRyYW5zZm9ybTJkID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvdHJhbnNmb3JtczJkJylcblxuZihwcmVmaXhUcmFuc2Zvcm0yZCwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsndHJhbnNmb3JtJywgJ3RyYW5zZm9ybS1vcmlnaW4nXSwge1xuICAgIGZlYXR1cmU6ICd0cmFuc2Zvcm1zMmQnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIFRyYW5zZm9ybSAzRFxubGV0IHByZWZpeFRyYW5zZm9ybXMzZCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL3RyYW5zZm9ybXMzZCcpXG5cbmYocHJlZml4VHJhbnNmb3JtczNkLCBicm93c2VycyA9PiB7XG4gIHByZWZpeChbJ3BlcnNwZWN0aXZlJywgJ3BlcnNwZWN0aXZlLW9yaWdpbiddLCB7XG4gICAgZmVhdHVyZTogJ3RyYW5zZm9ybXMzZCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbiAgcmV0dXJuIHByZWZpeChbJ3RyYW5zZm9ybS1zdHlsZSddLCB7XG4gICAgbWlzdGFrZXM6IFsnLW1zLScsICctby0nXSxcbiAgICBicm93c2VycyxcbiAgICBmZWF0dXJlOiAndHJhbnNmb3JtczNkJ1xuICB9KVxufSlcblxuZihwcmVmaXhUcmFuc2Zvcm1zM2QsIHsgbWF0Y2g6IC95XFxzeHx5XFxzIzIvIH0sIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2JhY2tmYWNlLXZpc2liaWxpdHknXSwge1xuICAgIG1pc3Rha2VzOiBbJy1tcy0nLCAnLW8tJ10sXG4gICAgZmVhdHVyZTogJ3RyYW5zZm9ybXMzZCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gR3JhZGllbnRzXG5sZXQgcHJlZml4R3JhZGllbnRzID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWdyYWRpZW50cycpXG5cbmYocHJlZml4R3JhZGllbnRzLCB7IG1hdGNoOiAveVxcc3gvIH0sIGJyb3dzZXJzID0+XG4gIHByZWZpeChcbiAgICBbXG4gICAgICAnbGluZWFyLWdyYWRpZW50JyxcbiAgICAgICdyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50JyxcbiAgICAgICdyYWRpYWwtZ3JhZGllbnQnLFxuICAgICAgJ3JlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQnXG4gICAgXSxcbiAgICB7XG4gICAgICBwcm9wczogW1xuICAgICAgICAnYmFja2dyb3VuZCcsXG4gICAgICAgICdiYWNrZ3JvdW5kLWltYWdlJyxcbiAgICAgICAgJ2JvcmRlci1pbWFnZScsXG4gICAgICAgICdtYXNrJyxcbiAgICAgICAgJ2xpc3Qtc3R5bGUnLFxuICAgICAgICAnbGlzdC1zdHlsZS1pbWFnZScsXG4gICAgICAgICdjb250ZW50JyxcbiAgICAgICAgJ21hc2staW1hZ2UnXG4gICAgICBdLFxuICAgICAgbWlzdGFrZXM6IFsnLW1zLSddLFxuICAgICAgZmVhdHVyZTogJ2Nzcy1ncmFkaWVudHMnLFxuICAgICAgYnJvd3NlcnNcbiAgICB9XG4gIClcbilcblxuZihwcmVmaXhHcmFkaWVudHMsIHsgbWF0Y2g6IC9hXFxzeC8gfSwgYnJvd3NlcnMgPT4ge1xuICBicm93c2VycyA9IGJyb3dzZXJzLm1hcChpID0+IHtcbiAgICBpZiAoL2ZpcmVmb3h8b3AvLnRlc3QoaSkpIHtcbiAgICAgIHJldHVybiBpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBgJHtpfSBvbGRgXG4gICAgfVxuICB9KVxuICByZXR1cm4gYWRkKFxuICAgIFtcbiAgICAgICdsaW5lYXItZ3JhZGllbnQnLFxuICAgICAgJ3JlcGVhdGluZy1saW5lYXItZ3JhZGllbnQnLFxuICAgICAgJ3JhZGlhbC1ncmFkaWVudCcsXG4gICAgICAncmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudCdcbiAgICBdLFxuICAgIHtcbiAgICAgIGZlYXR1cmU6ICdjc3MtZ3JhZGllbnRzJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG59KVxuXG4vLyBCb3ggc2l6aW5nXG5sZXQgcHJlZml4Qm94c2l6aW5nID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzMy1ib3hzaXppbmcnKVxuXG5mKHByZWZpeEJveHNpemluZywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnYm94LXNpemluZyddLCB7XG4gICAgZmVhdHVyZTogJ2NzczMtYm94c2l6aW5nJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBGaWx0ZXIgRWZmZWN0c1xubGV0IHByZWZpeEZpbHRlcnMgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZmlsdGVycycpXG5cbmYocHJlZml4RmlsdGVycywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnZmlsdGVyJ10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLWZpbHRlcnMnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIGZpbHRlcigpIGZ1bmN0aW9uXG5sZXQgcHJlZml4RmlsdGVyRnVuY3Rpb24gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZmlsdGVyLWZ1bmN0aW9uJylcblxuZihwcmVmaXhGaWx0ZXJGdW5jdGlvbiwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnZmlsdGVyLWZ1bmN0aW9uJ10sIHtcbiAgICBwcm9wczogW1xuICAgICAgJ2JhY2tncm91bmQnLFxuICAgICAgJ2JhY2tncm91bmQtaW1hZ2UnLFxuICAgICAgJ2JvcmRlci1pbWFnZScsXG4gICAgICAnbWFzaycsXG4gICAgICAnbGlzdC1zdHlsZScsXG4gICAgICAnbGlzdC1zdHlsZS1pbWFnZScsXG4gICAgICAnY29udGVudCcsXG4gICAgICAnbWFzay1pbWFnZSdcbiAgICBdLFxuICAgIGZlYXR1cmU6ICdjc3MtZmlsdGVyLWZ1bmN0aW9uJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBCYWNrZHJvcC1maWx0ZXJcbmxldCBwcmVmaXhCYWNrZHJvcCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1iYWNrZHJvcC1maWx0ZXInKVxuXG5mKHByZWZpeEJhY2tkcm9wLCB7IG1hdGNoOiAveVxcc3h8eVxccyMyLyB9LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydiYWNrZHJvcC1maWx0ZXInXSwge1xuICAgIGZlYXR1cmU6ICdjc3MtYmFja2Ryb3AtZmlsdGVyJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBlbGVtZW50KCkgZnVuY3Rpb25cbmxldCBwcmVmaXhFbGVtZW50RnVuY3Rpb24gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZWxlbWVudC1mdW5jdGlvbicpXG5cbmYocHJlZml4RWxlbWVudEZ1bmN0aW9uLCBicm93c2VycyA9PlxuICBwcmVmaXgoWydlbGVtZW50J10sIHtcbiAgICBwcm9wczogW1xuICAgICAgJ2JhY2tncm91bmQnLFxuICAgICAgJ2JhY2tncm91bmQtaW1hZ2UnLFxuICAgICAgJ2JvcmRlci1pbWFnZScsXG4gICAgICAnbWFzaycsXG4gICAgICAnbGlzdC1zdHlsZScsXG4gICAgICAnbGlzdC1zdHlsZS1pbWFnZScsXG4gICAgICAnY29udGVudCcsXG4gICAgICAnbWFzay1pbWFnZSdcbiAgICBdLFxuICAgIGZlYXR1cmU6ICdjc3MtZWxlbWVudC1mdW5jdGlvbicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gTXVsdGljb2x1bW5zXG5sZXQgcHJlZml4TXVsdGljb2x1bW5zID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbXVsdGljb2x1bW4nKVxuXG5mKHByZWZpeE11bHRpY29sdW1ucywgYnJvd3NlcnMgPT4ge1xuICBwcmVmaXgoXG4gICAgW1xuICAgICAgJ2NvbHVtbnMnLFxuICAgICAgJ2NvbHVtbi13aWR0aCcsXG4gICAgICAnY29sdW1uLWdhcCcsXG4gICAgICAnY29sdW1uLXJ1bGUnLFxuICAgICAgJ2NvbHVtbi1ydWxlLWNvbG9yJyxcbiAgICAgICdjb2x1bW4tcnVsZS13aWR0aCcsXG4gICAgICAnY29sdW1uLWNvdW50JyxcbiAgICAgICdjb2x1bW4tcnVsZS1zdHlsZScsXG4gICAgICAnY29sdW1uLXNwYW4nLFxuICAgICAgJ2NvbHVtbi1maWxsJ1xuICAgIF0sXG4gICAge1xuICAgICAgZmVhdHVyZTogJ211bHRpY29sdW1uJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG5cbiAgbGV0IG5vZmYgPSBicm93c2Vycy5maWx0ZXIoaSA9PiAhL2ZpcmVmb3gvLnRlc3QoaSkpXG4gIHByZWZpeChbJ2JyZWFrLWJlZm9yZScsICdicmVhay1hZnRlcicsICdicmVhay1pbnNpZGUnXSwge1xuICAgIGZlYXR1cmU6ICdtdWx0aWNvbHVtbicsXG4gICAgYnJvd3NlcnM6IG5vZmZcbiAgfSlcbn0pXG5cbi8vIFVzZXIgc2VsZWN0XG5sZXQgcHJlZml4VXNlclNlbGVjdCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL3VzZXItc2VsZWN0LW5vbmUnKVxuXG5mKHByZWZpeFVzZXJTZWxlY3QsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ3VzZXItc2VsZWN0J10sIHtcbiAgICBtaXN0YWtlczogWycta2h0bWwtJ10sXG4gICAgZmVhdHVyZTogJ3VzZXItc2VsZWN0LW5vbmUnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIEZsZXhpYmxlIEJveCBMYXlvdXRcbmxldCBwcmVmaXhGbGV4Ym94ID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvZmxleGJveCcpXG5cbmYocHJlZml4RmxleGJveCwgeyBtYXRjaDogL2FcXHN4LyB9LCBicm93c2VycyA9PiB7XG4gIGJyb3dzZXJzID0gYnJvd3NlcnMubWFwKGkgPT4ge1xuICAgIGlmICgvaWV8ZmlyZWZveC8udGVzdChpKSkge1xuICAgICAgcmV0dXJuIGlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGAke2l9IDIwMDlgXG4gICAgfVxuICB9KVxuICBwcmVmaXgoWydkaXNwbGF5LWZsZXgnLCAnaW5saW5lLWZsZXgnXSwge1xuICAgIHByb3BzOiBbJ2Rpc3BsYXknXSxcbiAgICBmZWF0dXJlOiAnZmxleGJveCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbiAgcHJlZml4KFsnZmxleCcsICdmbGV4LWdyb3cnLCAnZmxleC1zaHJpbmsnLCAnZmxleC1iYXNpcyddLCB7XG4gICAgZmVhdHVyZTogJ2ZsZXhib3gnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4gIHByZWZpeChcbiAgICBbXG4gICAgICAnZmxleC1kaXJlY3Rpb24nLFxuICAgICAgJ2ZsZXgtd3JhcCcsXG4gICAgICAnZmxleC1mbG93JyxcbiAgICAgICdqdXN0aWZ5LWNvbnRlbnQnLFxuICAgICAgJ29yZGVyJyxcbiAgICAgICdhbGlnbi1pdGVtcycsXG4gICAgICAnYWxpZ24tc2VsZicsXG4gICAgICAnYWxpZ24tY29udGVudCdcbiAgICBdLFxuICAgIHtcbiAgICAgIGZlYXR1cmU6ICdmbGV4Ym94JyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG59KVxuXG5mKHByZWZpeEZsZXhib3gsIHsgbWF0Y2g6IC95XFxzeC8gfSwgYnJvd3NlcnMgPT4ge1xuICBhZGQoWydkaXNwbGF5LWZsZXgnLCAnaW5saW5lLWZsZXgnXSwge1xuICAgIGZlYXR1cmU6ICdmbGV4Ym94JyxcbiAgICBicm93c2Vyc1xuICB9KVxuICBhZGQoWydmbGV4JywgJ2ZsZXgtZ3JvdycsICdmbGV4LXNocmluaycsICdmbGV4LWJhc2lzJ10sIHtcbiAgICBmZWF0dXJlOiAnZmxleGJveCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbiAgYWRkKFxuICAgIFtcbiAgICAgICdmbGV4LWRpcmVjdGlvbicsXG4gICAgICAnZmxleC13cmFwJyxcbiAgICAgICdmbGV4LWZsb3cnLFxuICAgICAgJ2p1c3RpZnktY29udGVudCcsXG4gICAgICAnb3JkZXInLFxuICAgICAgJ2FsaWduLWl0ZW1zJyxcbiAgICAgICdhbGlnbi1zZWxmJyxcbiAgICAgICdhbGlnbi1jb250ZW50J1xuICAgIF0sXG4gICAge1xuICAgICAgZmVhdHVyZTogJ2ZsZXhib3gnLFxuICAgICAgYnJvd3NlcnNcbiAgICB9XG4gIClcbn0pXG5cbi8vIGNhbGMoKSB1bml0XG5sZXQgcHJlZml4Q2FsYyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2NhbGMnKVxuXG5mKHByZWZpeENhbGMsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2NhbGMnXSwge1xuICAgIHByb3BzOiBbJyonXSxcbiAgICBmZWF0dXJlOiAnY2FsYycsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gQmFja2dyb3VuZCBvcHRpb25zXG5sZXQgcHJlZml4QmFja2dyb3VuZE9wdGlvbnMgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9iYWNrZ3JvdW5kLWltZy1vcHRzJylcblxuZihwcmVmaXhCYWNrZ3JvdW5kT3B0aW9ucywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnYmFja2dyb3VuZC1vcmlnaW4nLCAnYmFja2dyb3VuZC1zaXplJ10sIHtcbiAgICBmZWF0dXJlOiAnYmFja2dyb3VuZC1pbWctb3B0cycsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gYmFja2dyb3VuZC1jbGlwOiB0ZXh0XG5sZXQgcHJlZml4QmFja2dyb3VuZENsaXBUZXh0ID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvYmFja2dyb3VuZC1jbGlwLXRleHQnKVxuXG5mKHByZWZpeEJhY2tncm91bmRDbGlwVGV4dCwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnYmFja2dyb3VuZC1jbGlwJ10sIHtcbiAgICBmZWF0dXJlOiAnYmFja2dyb3VuZC1jbGlwLXRleHQnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIEZvbnQgZmVhdHVyZSBzZXR0aW5nc1xubGV0IHByZWZpeEZvbnRGZWF0dXJlID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvZm9udC1mZWF0dXJlJylcblxuZihwcmVmaXhGb250RmVhdHVyZSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFxuICAgIFtcbiAgICAgICdmb250LWZlYXR1cmUtc2V0dGluZ3MnLFxuICAgICAgJ2ZvbnQtdmFyaWFudC1saWdhdHVyZXMnLFxuICAgICAgJ2ZvbnQtbGFuZ3VhZ2Utb3ZlcnJpZGUnXG4gICAgXSxcbiAgICB7XG4gICAgICBmZWF0dXJlOiAnZm9udC1mZWF0dXJlJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG4pXG5cbi8vIENTUyBmb250LWtlcm5pbmcgcHJvcGVydHlcbmxldCBwcmVmaXhGb250S2VybmluZyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2ZvbnQta2VybmluZycpXG5cbmYocHJlZml4Rm9udEtlcm5pbmcsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2ZvbnQta2VybmluZyddLCB7XG4gICAgZmVhdHVyZTogJ2ZvbnQta2VybmluZycsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gQm9yZGVyIGltYWdlXG5sZXQgcHJlZml4Qm9yZGVySW1hZ2UgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9ib3JkZXItaW1hZ2UnKVxuXG5mKHByZWZpeEJvcmRlckltYWdlLCBicm93c2VycyA9PlxuICBwcmVmaXgoWydib3JkZXItaW1hZ2UnXSwge1xuICAgIGZlYXR1cmU6ICdib3JkZXItaW1hZ2UnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIFNlbGVjdGlvbiBzZWxlY3RvclxubGV0IHByZWZpeFNlbGVjdGlvbiA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1zZWxlY3Rpb24nKVxuXG5mKHByZWZpeFNlbGVjdGlvbiwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnOjpzZWxlY3Rpb24nXSwge1xuICAgIHNlbGVjdG9yOiB0cnVlLFxuICAgIGZlYXR1cmU6ICdjc3Mtc2VsZWN0aW9uJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBQbGFjZWhvbGRlciBzZWxlY3RvclxubGV0IHByZWZpeFBsYWNlaG9sZGVyID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXBsYWNlaG9sZGVyJylcblxuZihwcmVmaXhQbGFjZWhvbGRlciwgYnJvd3NlcnMgPT4ge1xuICBwcmVmaXgoWyc6OnBsYWNlaG9sZGVyJ10sIHtcbiAgICBzZWxlY3RvcjogdHJ1ZSxcbiAgICBmZWF0dXJlOiAnY3NzLXBsYWNlaG9sZGVyJyxcbiAgICBicm93c2VyczogYnJvd3NlcnMuY29uY2F0KFsnaWUgMTAgb2xkJywgJ2llIDExIG9sZCcsICdmaXJlZm94IDE4IG9sZCddKVxuICB9KVxufSlcblxuLy8gUGxhY2Vob2xkZXItc2hvd24gc2VsZWN0b3JcbmxldCBwcmVmaXhQbGFjZWhvbGRlclNob3duID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXBsYWNlaG9sZGVyLXNob3duJylcblxuZihwcmVmaXhQbGFjZWhvbGRlclNob3duLCBicm93c2VycyA9PiB7XG4gIHByZWZpeChbJzpwbGFjZWhvbGRlci1zaG93biddLCB7XG4gICAgc2VsZWN0b3I6IHRydWUsXG4gICAgZmVhdHVyZTogJ2Nzcy1wbGFjZWhvbGRlci1zaG93bicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbn0pXG5cbi8vIEh5cGhlbmF0aW9uXG5sZXQgcHJlZml4SHlwaGVucyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1oeXBoZW5zJylcblxuZihwcmVmaXhIeXBoZW5zLCBicm93c2VycyA9PlxuICBwcmVmaXgoWydoeXBoZW5zJ10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLWh5cGhlbnMnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIEZ1bGxzY3JlZW4gc2VsZWN0b3JcbmxldCBwcmVmaXhGdWxsc2NyZWVuID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvZnVsbHNjcmVlbicpXG5cbmYocHJlZml4RnVsbHNjcmVlbiwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnOmZ1bGxzY3JlZW4nXSwge1xuICAgIHNlbGVjdG9yOiB0cnVlLFxuICAgIGZlYXR1cmU6ICdmdWxsc2NyZWVuJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG5mKHByZWZpeEZ1bGxzY3JlZW4sIHsgbWF0Y2g6IC94KFxccyMyfCQpLyB9LCBicm93c2VycyA9PlxuICBwcmVmaXgoWyc6OmJhY2tkcm9wJ10sIHtcbiAgICBzZWxlY3RvcjogdHJ1ZSxcbiAgICBmZWF0dXJlOiAnZnVsbHNjcmVlbicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gRmlsZSBzZWxlY3RvciBidXR0b25cbmxldCBwcmVmaXhGaWxlU2VsZWN0b3JCdXR0b24gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZmlsZS1zZWxlY3Rvci1idXR0b24nKVxuXG5mKHByZWZpeEZpbGVTZWxlY3RvckJ1dHRvbiwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnOjpmaWxlLXNlbGVjdG9yLWJ1dHRvbiddLCB7XG4gICAgc2VsZWN0b3I6IHRydWUsXG4gICAgZmVhdHVyZTogJ2ZpbGUtc2VsZWN0b3ItYnV0dG9uJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyA6YXV0b2ZpbGxcbmxldCBwcmVmaXhBdXRvZmlsbCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1hdXRvZmlsbCcpXG5cbmYocHJlZml4QXV0b2ZpbGwsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJzphdXRvZmlsbCddLCB7XG4gICAgc2VsZWN0b3I6IHRydWUsXG4gICAgZmVhdHVyZTogJ2Nzcy1hdXRvZmlsbCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gVGFiIHNpemVcbmxldCBwcmVmaXhUYWJzaXplID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzMy10YWJzaXplJylcblxuZihwcmVmaXhUYWJzaXplLCBicm93c2VycyA9PlxuICBwcmVmaXgoWyd0YWItc2l6ZSddLCB7XG4gICAgZmVhdHVyZTogJ2NzczMtdGFic2l6ZScsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gSW50cmluc2ljICYgZXh0cmluc2ljIHNpemluZ1xubGV0IHByZWZpeEludHJpbnNpYyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2ludHJpbnNpYy13aWR0aCcpXG5cbmxldCBzaXplUHJvcHMgPSBbXG4gICd3aWR0aCcsXG4gICdtaW4td2lkdGgnLFxuICAnbWF4LXdpZHRoJyxcbiAgJ2hlaWdodCcsXG4gICdtaW4taGVpZ2h0JyxcbiAgJ21heC1oZWlnaHQnLFxuICAnaW5saW5lLXNpemUnLFxuICAnbWluLWlubGluZS1zaXplJyxcbiAgJ21heC1pbmxpbmUtc2l6ZScsXG4gICdibG9jay1zaXplJyxcbiAgJ21pbi1ibG9jay1zaXplJyxcbiAgJ21heC1ibG9jay1zaXplJyxcbiAgJ2dyaWQnLFxuICAnZ3JpZC10ZW1wbGF0ZScsXG4gICdncmlkLXRlbXBsYXRlLXJvd3MnLFxuICAnZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zJyxcbiAgJ2dyaWQtYXV0by1jb2x1bW5zJyxcbiAgJ2dyaWQtYXV0by1yb3dzJ1xuXVxuXG5mKHByZWZpeEludHJpbnNpYywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnbWF4LWNvbnRlbnQnLCAnbWluLWNvbnRlbnQnXSwge1xuICAgIHByb3BzOiBzaXplUHJvcHMsXG4gICAgZmVhdHVyZTogJ2ludHJpbnNpYy13aWR0aCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuZihwcmVmaXhJbnRyaW5zaWMsIHsgbWF0Y2g6IC94fFxccyM0LyB9LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydmaWxsJywgJ2ZpbGwtYXZhaWxhYmxlJ10sIHtcbiAgICBwcm9wczogc2l6ZVByb3BzLFxuICAgIGZlYXR1cmU6ICdpbnRyaW5zaWMtd2lkdGgnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbmYocHJlZml4SW50cmluc2ljLCB7IG1hdGNoOiAveHxcXHMjNS8gfSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnZml0LWNvbnRlbnQnXSwge1xuICAgIHByb3BzOiBzaXplUHJvcHMsXG4gICAgZmVhdHVyZTogJ2ludHJpbnNpYy13aWR0aCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gU3RyZXRjaCB2YWx1ZVxuXG5sZXQgcHJlZml4U3RyZXRjaCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy13aWR0aC1zdHJldGNoJylcblxuZihwcmVmaXhTdHJldGNoLCBicm93c2VycyA9PlxuICBwcmVmaXgoWydzdHJldGNoJ10sIHtcbiAgICBwcm9wczogc2l6ZVByb3BzLFxuICAgIGZlYXR1cmU6ICdjc3Mtd2lkdGgtc3RyZXRjaCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gWm9vbSBjdXJzb3JzXG5sZXQgcHJlZml4Q3Vyc29yc05ld2VyID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzMy1jdXJzb3JzLW5ld2VyJylcblxuZihwcmVmaXhDdXJzb3JzTmV3ZXIsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ3pvb20taW4nLCAnem9vbS1vdXQnXSwge1xuICAgIHByb3BzOiBbJ2N1cnNvciddLFxuICAgIGZlYXR1cmU6ICdjc3MzLWN1cnNvcnMtbmV3ZXInLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIEdyYWIgY3Vyc29yc1xubGV0IHByZWZpeEN1cnNvcnNHcmFiID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzMy1jdXJzb3JzLWdyYWInKVxuXG5mKHByZWZpeEN1cnNvcnNHcmFiLCBicm93c2VycyA9PlxuICBwcmVmaXgoWydncmFiJywgJ2dyYWJiaW5nJ10sIHtcbiAgICBwcm9wczogWydjdXJzb3InXSxcbiAgICBmZWF0dXJlOiAnY3NzMy1jdXJzb3JzLWdyYWInLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIFN0aWNreSBwb3NpdGlvblxubGV0IHByZWZpeFN0aWNreSA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1zdGlja3knKVxuXG5mKHByZWZpeFN0aWNreSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnc3RpY2t5J10sIHtcbiAgICBwcm9wczogWydwb3NpdGlvbiddLFxuICAgIGZlYXR1cmU6ICdjc3Mtc3RpY2t5JyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBQb2ludGVyIEV2ZW50c1xubGV0IHByZWZpeFBvaW50ZXIgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9wb2ludGVyJylcblxuZihwcmVmaXhQb2ludGVyLCBicm93c2VycyA9PlxuICBwcmVmaXgoWyd0b3VjaC1hY3Rpb24nXSwge1xuICAgIGZlYXR1cmU6ICdwb2ludGVyJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBUZXh0IGRlY29yYXRpb25cbmxldCBwcmVmaXhEZWNvcmF0aW9uID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvdGV4dC1kZWNvcmF0aW9uJylcblxuZihwcmVmaXhEZWNvcmF0aW9uLCB7IG1hdGNoOiAveC4qI1syMzVdLyB9LCBicm93c2VycyA9PlxuICBwcmVmaXgoWyd0ZXh0LWRlY29yYXRpb24tc2tpcCcsICd0ZXh0LWRlY29yYXRpb24tc2tpcC1pbmsnXSwge1xuICAgIGZlYXR1cmU6ICd0ZXh0LWRlY29yYXRpb24nLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbmxldCBwcmVmaXhEZWNvcmF0aW9uU2hvcnRoYW5kID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLXRleHQtZGVjb3JhdGlvbi1zaG9ydGhhbmQnKVxuXG5mKHByZWZpeERlY29yYXRpb25TaG9ydGhhbmQsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ3RleHQtZGVjb3JhdGlvbiddLCB7XG4gICAgZmVhdHVyZTogJ3RleHQtZGVjb3JhdGlvbicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxubGV0IHByZWZpeERlY29yYXRpb25Db2xvciA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL21kbi10ZXh0LWRlY29yYXRpb24tY29sb3InKVxuXG5mKHByZWZpeERlY29yYXRpb25Db2xvciwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsndGV4dC1kZWNvcmF0aW9uLWNvbG9yJ10sIHtcbiAgICBmZWF0dXJlOiAndGV4dC1kZWNvcmF0aW9uJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG5sZXQgcHJlZml4RGVjb3JhdGlvbkxpbmUgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9tZG4tdGV4dC1kZWNvcmF0aW9uLWxpbmUnKVxuXG5mKHByZWZpeERlY29yYXRpb25MaW5lLCBicm93c2VycyA9PlxuICBwcmVmaXgoWyd0ZXh0LWRlY29yYXRpb24tbGluZSddLCB7XG4gICAgZmVhdHVyZTogJ3RleHQtZGVjb3JhdGlvbicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxubGV0IHByZWZpeERlY29yYXRpb25TdHlsZSA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL21kbi10ZXh0LWRlY29yYXRpb24tc3R5bGUnKVxuXG5mKHByZWZpeERlY29yYXRpb25TdHlsZSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsndGV4dC1kZWNvcmF0aW9uLXN0eWxlJ10sIHtcbiAgICBmZWF0dXJlOiAndGV4dC1kZWNvcmF0aW9uJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBUZXh0IFNpemUgQWRqdXN0XG5sZXQgcHJlZml4VGV4dFNpemVBZGp1c3QgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy90ZXh0LXNpemUtYWRqdXN0JylcblxuZihwcmVmaXhUZXh0U2l6ZUFkanVzdCwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsndGV4dC1zaXplLWFkanVzdCddLCB7XG4gICAgZmVhdHVyZTogJ3RleHQtc2l6ZS1hZGp1c3QnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIENTUyBNYXNrc1xubGV0IHByZWZpeENzc01hc2tzID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLW1hc2tzJylcblxuZihwcmVmaXhDc3NNYXNrcywgYnJvd3NlcnMgPT4ge1xuICBwcmVmaXgoXG4gICAgW1xuICAgICAgJ21hc2stY2xpcCcsXG4gICAgICAnbWFzay1jb21wb3NpdGUnLFxuICAgICAgJ21hc2staW1hZ2UnLFxuICAgICAgJ21hc2stb3JpZ2luJyxcbiAgICAgICdtYXNrLXJlcGVhdCcsXG4gICAgICAnbWFzay1ib3JkZXItcmVwZWF0JyxcbiAgICAgICdtYXNrLWJvcmRlci1zb3VyY2UnXG4gICAgXSxcbiAgICB7XG4gICAgICBmZWF0dXJlOiAnY3NzLW1hc2tzJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG4gIHByZWZpeChcbiAgICBbXG4gICAgICAnbWFzaycsXG4gICAgICAnbWFzay1wb3NpdGlvbicsXG4gICAgICAnbWFzay1zaXplJyxcbiAgICAgICdtYXNrLWJvcmRlcicsXG4gICAgICAnbWFzay1ib3JkZXItb3V0c2V0JyxcbiAgICAgICdtYXNrLWJvcmRlci13aWR0aCcsXG4gICAgICAnbWFzay1ib3JkZXItc2xpY2UnXG4gICAgXSxcbiAgICB7XG4gICAgICBmZWF0dXJlOiAnY3NzLW1hc2tzJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG59KVxuXG4vLyBDU1MgY2xpcC1wYXRoIHByb3BlcnR5XG5sZXQgcHJlZml4Q2xpcFBhdGggPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtY2xpcC1wYXRoJylcblxuZihwcmVmaXhDbGlwUGF0aCwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnY2xpcC1wYXRoJ10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLWNsaXAtcGF0aCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gRnJhZ21lbnRlZCBCb3JkZXJzIGFuZCBCYWNrZ3JvdW5kc1xubGV0IHByZWZpeEJveGRlY29yYXRpb24gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtYm94ZGVjb3JhdGlvbmJyZWFrJylcblxuZihwcmVmaXhCb3hkZWNvcmF0aW9uLCBicm93c2VycyA9PlxuICBwcmVmaXgoWydib3gtZGVjb3JhdGlvbi1icmVhayddLCB7XG4gICAgZmVhdHVyZTogJ2Nzcy1ib3hkZWNvcmF0aW9uYnJlYWsnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIENTUzMgb2JqZWN0LWZpdC9vYmplY3QtcG9zaXRpb25cbmxldCBwcmVmaXhPYmplY3RGaXQgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9vYmplY3QtZml0JylcblxuZihwcmVmaXhPYmplY3RGaXQsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ29iamVjdC1maXQnLCAnb2JqZWN0LXBvc2l0aW9uJ10sIHtcbiAgICBmZWF0dXJlOiAnb2JqZWN0LWZpdCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gQ1NTIFNoYXBlc1xubGV0IHByZWZpeFNoYXBlcyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1zaGFwZXMnKVxuXG5mKHByZWZpeFNoYXBlcywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnc2hhcGUtbWFyZ2luJywgJ3NoYXBlLW91dHNpZGUnLCAnc2hhcGUtaW1hZ2UtdGhyZXNob2xkJ10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLXNoYXBlcycsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gQ1NTMyB0ZXh0LW92ZXJmbG93XG5sZXQgcHJlZml4VGV4dE92ZXJmbG93ID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvdGV4dC1vdmVyZmxvdycpXG5cbmYocHJlZml4VGV4dE92ZXJmbG93LCBicm93c2VycyA9PlxuICBwcmVmaXgoWyd0ZXh0LW92ZXJmbG93J10sIHtcbiAgICBmZWF0dXJlOiAndGV4dC1vdmVyZmxvdycsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gVmlld3BvcnQgYXQtcnVsZVxubGV0IHByZWZpeERldmljZWFkYXB0YXRpb24gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZGV2aWNlYWRhcHRhdGlvbicpXG5cbmYocHJlZml4RGV2aWNlYWRhcHRhdGlvbiwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnQHZpZXdwb3J0J10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLWRldmljZWFkYXB0YXRpb24nLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIFJlc29sdXRpb24gTWVkaWEgUXVlcmllc1xubGV0IHByZWZpeFJlc29sdXQgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtbWVkaWEtcmVzb2x1dGlvbicpXG5cbmYocHJlZml4UmVzb2x1dCwgeyBtYXRjaDogLyggeCgkfCApfGEgIzIpLyB9LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydAcmVzb2x1dGlvbiddLCB7XG4gICAgZmVhdHVyZTogJ2Nzcy1tZWRpYS1yZXNvbHV0aW9uJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBDU1MgdGV4dC1hbGlnbi1sYXN0XG5sZXQgcHJlZml4VGV4dEFsaWduTGFzdCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy10ZXh0LWFsaWduLWxhc3QnKVxuXG5mKHByZWZpeFRleHRBbGlnbkxhc3QsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ3RleHQtYWxpZ24tbGFzdCddLCB7XG4gICAgZmVhdHVyZTogJ2Nzcy10ZXh0LWFsaWduLWxhc3QnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIENyaXNwIEVkZ2VzIEltYWdlIFJlbmRlcmluZyBBbGdvcml0aG1cbmxldCBwcmVmaXhDcmlzcGVkZ2VzID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWNyaXNwLWVkZ2VzJylcblxuZihwcmVmaXhDcmlzcGVkZ2VzLCB7IG1hdGNoOiAveSB4fGEgeCAjMS8gfSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsncGl4ZWxhdGVkJ10sIHtcbiAgICBwcm9wczogWydpbWFnZS1yZW5kZXJpbmcnXSxcbiAgICBmZWF0dXJlOiAnY3NzLWNyaXNwLWVkZ2VzJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG5mKHByZWZpeENyaXNwZWRnZXMsIHsgbWF0Y2g6IC9hIHggIzIvIH0sIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2ltYWdlLXJlbmRlcmluZyddLCB7XG4gICAgZmVhdHVyZTogJ2Nzcy1jcmlzcC1lZGdlcycsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gTG9naWNhbCBQcm9wZXJ0aWVzXG5sZXQgcHJlZml4TG9naWNhbFByb3BzID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWxvZ2ljYWwtcHJvcHMnKVxuXG5mKHByZWZpeExvZ2ljYWxQcm9wcywgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFxuICAgIFtcbiAgICAgICdib3JkZXItaW5saW5lLXN0YXJ0JyxcbiAgICAgICdib3JkZXItaW5saW5lLWVuZCcsXG4gICAgICAnbWFyZ2luLWlubGluZS1zdGFydCcsXG4gICAgICAnbWFyZ2luLWlubGluZS1lbmQnLFxuICAgICAgJ3BhZGRpbmctaW5saW5lLXN0YXJ0JyxcbiAgICAgICdwYWRkaW5nLWlubGluZS1lbmQnXG4gICAgXSxcbiAgICB7XG4gICAgICBmZWF0dXJlOiAnY3NzLWxvZ2ljYWwtcHJvcHMnLFxuICAgICAgYnJvd3NlcnNcbiAgICB9XG4gIClcbilcblxuZihwcmVmaXhMb2dpY2FsUHJvcHMsIHsgbWF0Y2g6IC94XFxzIzIvIH0sIGJyb3dzZXJzID0+XG4gIHByZWZpeChcbiAgICBbXG4gICAgICAnYm9yZGVyLWJsb2NrLXN0YXJ0JyxcbiAgICAgICdib3JkZXItYmxvY2stZW5kJyxcbiAgICAgICdtYXJnaW4tYmxvY2stc3RhcnQnLFxuICAgICAgJ21hcmdpbi1ibG9jay1lbmQnLFxuICAgICAgJ3BhZGRpbmctYmxvY2stc3RhcnQnLFxuICAgICAgJ3BhZGRpbmctYmxvY2stZW5kJ1xuICAgIF0sXG4gICAge1xuICAgICAgZmVhdHVyZTogJ2Nzcy1sb2dpY2FsLXByb3BzJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG4pXG5cbi8vIENTUyBhcHBlYXJhbmNlXG5sZXQgcHJlZml4QXBwZWFyYW5jZSA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1hcHBlYXJhbmNlJylcblxuZihwcmVmaXhBcHBlYXJhbmNlLCB7IG1hdGNoOiAvIzJ8eC8gfSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnYXBwZWFyYW5jZSddLCB7XG4gICAgZmVhdHVyZTogJ2Nzcy1hcHBlYXJhbmNlJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBDU1MgU2Nyb2xsIHNuYXAgcG9pbnRzXG5sZXQgcHJlZml4U25hcHBvaW50cyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1zbmFwcG9pbnRzJylcblxuZihwcmVmaXhTbmFwcG9pbnRzLCBicm93c2VycyA9PlxuICBwcmVmaXgoXG4gICAgW1xuICAgICAgJ3Njcm9sbC1zbmFwLXR5cGUnLFxuICAgICAgJ3Njcm9sbC1zbmFwLWNvb3JkaW5hdGUnLFxuICAgICAgJ3Njcm9sbC1zbmFwLWRlc3RpbmF0aW9uJyxcbiAgICAgICdzY3JvbGwtc25hcC1wb2ludHMteCcsXG4gICAgICAnc2Nyb2xsLXNuYXAtcG9pbnRzLXknXG4gICAgXSxcbiAgICB7XG4gICAgICBmZWF0dXJlOiAnY3NzLXNuYXBwb2ludHMnLFxuICAgICAgYnJvd3NlcnNcbiAgICB9XG4gIClcbilcblxuLy8gQ1NTIFJlZ2lvbnNcbmxldCBwcmVmaXhSZWdpb25zID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLXJlZ2lvbnMnKVxuXG5mKHByZWZpeFJlZ2lvbnMsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2Zsb3ctaW50bycsICdmbG93LWZyb20nLCAncmVnaW9uLWZyYWdtZW50J10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLXJlZ2lvbnMnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIENTUyBpbWFnZS1zZXRcbmxldCBwcmVmaXhJbWFnZVNldCA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1pbWFnZS1zZXQnKVxuXG5mKHByZWZpeEltYWdlU2V0LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydpbWFnZS1zZXQnXSwge1xuICAgIHByb3BzOiBbXG4gICAgICAnYmFja2dyb3VuZCcsXG4gICAgICAnYmFja2dyb3VuZC1pbWFnZScsXG4gICAgICAnYm9yZGVyLWltYWdlJyxcbiAgICAgICdjdXJzb3InLFxuICAgICAgJ21hc2snLFxuICAgICAgJ21hc2staW1hZ2UnLFxuICAgICAgJ2xpc3Qtc3R5bGUnLFxuICAgICAgJ2xpc3Qtc3R5bGUtaW1hZ2UnLFxuICAgICAgJ2NvbnRlbnQnXG4gICAgXSxcbiAgICBmZWF0dXJlOiAnY3NzLWltYWdlLXNldCcsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gV3JpdGluZyBNb2RlXG5sZXQgcHJlZml4V3JpdGluZ01vZGUgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3Mtd3JpdGluZy1tb2RlJylcblxuZihwcmVmaXhXcml0aW5nTW9kZSwgeyBtYXRjaDogL2F8eC8gfSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnd3JpdGluZy1tb2RlJ10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLXdyaXRpbmctbW9kZScsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gQ3Jvc3MtRmFkZSBGdW5jdGlvblxubGV0IHByZWZpeENyb3NzRmFkZSA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1jcm9zcy1mYWRlJylcblxuZihwcmVmaXhDcm9zc0ZhZGUsIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2Nyb3NzLWZhZGUnXSwge1xuICAgIHByb3BzOiBbXG4gICAgICAnYmFja2dyb3VuZCcsXG4gICAgICAnYmFja2dyb3VuZC1pbWFnZScsXG4gICAgICAnYm9yZGVyLWltYWdlJyxcbiAgICAgICdtYXNrJyxcbiAgICAgICdsaXN0LXN0eWxlJyxcbiAgICAgICdsaXN0LXN0eWxlLWltYWdlJyxcbiAgICAgICdjb250ZW50JyxcbiAgICAgICdtYXNrLWltYWdlJ1xuICAgIF0sXG4gICAgZmVhdHVyZTogJ2Nzcy1jcm9zcy1mYWRlJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyBSZWFkIE9ubHkgc2VsZWN0b3JcbmxldCBwcmVmaXhSZWFkT25seSA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1yZWFkLW9ubHktd3JpdGUnKVxuXG5mKHByZWZpeFJlYWRPbmx5LCBicm93c2VycyA9PlxuICBwcmVmaXgoWyc6cmVhZC1vbmx5JywgJzpyZWFkLXdyaXRlJ10sIHtcbiAgICBzZWxlY3RvcjogdHJ1ZSxcbiAgICBmZWF0dXJlOiAnY3NzLXJlYWQtb25seS13cml0ZScsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gVGV4dCBFbXBoYXNpemVcbmxldCBwcmVmaXhUZXh0RW1waGFzaXMgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy90ZXh0LWVtcGhhc2lzJylcblxuZihwcmVmaXhUZXh0RW1waGFzaXMsIGJyb3dzZXJzID0+XG4gIHByZWZpeChcbiAgICBbXG4gICAgICAndGV4dC1lbXBoYXNpcycsXG4gICAgICAndGV4dC1lbXBoYXNpcy1wb3NpdGlvbicsXG4gICAgICAndGV4dC1lbXBoYXNpcy1zdHlsZScsXG4gICAgICAndGV4dC1lbXBoYXNpcy1jb2xvcidcbiAgICBdLFxuICAgIHtcbiAgICAgIGZlYXR1cmU6ICd0ZXh0LWVtcGhhc2lzJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG4pXG5cbi8vIENTUyBHcmlkIExheW91dFxubGV0IHByZWZpeEdyaWQgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtZ3JpZCcpXG5cbmYocHJlZml4R3JpZCwgYnJvd3NlcnMgPT4ge1xuICBwcmVmaXgoWydkaXNwbGF5LWdyaWQnLCAnaW5saW5lLWdyaWQnXSwge1xuICAgIHByb3BzOiBbJ2Rpc3BsYXknXSxcbiAgICBmZWF0dXJlOiAnY3NzLWdyaWQnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4gIHByZWZpeChcbiAgICBbXG4gICAgICAnZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zJyxcbiAgICAgICdncmlkLXRlbXBsYXRlLXJvd3MnLFxuICAgICAgJ2dyaWQtcm93LXN0YXJ0JyxcbiAgICAgICdncmlkLWNvbHVtbi1zdGFydCcsXG4gICAgICAnZ3JpZC1yb3ctZW5kJyxcbiAgICAgICdncmlkLWNvbHVtbi1lbmQnLFxuICAgICAgJ2dyaWQtcm93JyxcbiAgICAgICdncmlkLWNvbHVtbicsXG4gICAgICAnZ3JpZC1hcmVhJyxcbiAgICAgICdncmlkLXRlbXBsYXRlJyxcbiAgICAgICdncmlkLXRlbXBsYXRlLWFyZWFzJyxcbiAgICAgICdwbGFjZS1zZWxmJ1xuICAgIF0sXG4gICAge1xuICAgICAgZmVhdHVyZTogJ2Nzcy1ncmlkJyxcbiAgICAgIGJyb3dzZXJzXG4gICAgfVxuICApXG59KVxuXG5mKHByZWZpeEdyaWQsIHsgbWF0Y2g6IC9hIHgvIH0sIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ2dyaWQtY29sdW1uLWFsaWduJywgJ2dyaWQtcm93LWFsaWduJ10sIHtcbiAgICBmZWF0dXJlOiAnY3NzLWdyaWQnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIENTUyB0ZXh0LXNwYWNpbmdcbmxldCBwcmVmaXhUZXh0U3BhY2luZyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy10ZXh0LXNwYWNpbmcnKVxuXG5mKHByZWZpeFRleHRTcGFjaW5nLCBicm93c2VycyA9PlxuICBwcmVmaXgoWyd0ZXh0LXNwYWNpbmcnXSwge1xuICAgIGZlYXR1cmU6ICdjc3MtdGV4dC1zcGFjaW5nJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG4vLyA6YW55LWxpbmsgc2VsZWN0b3JcbmxldCBwcmVmaXhBbnlMaW5rID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvY3NzLWFueS1saW5rJylcblxuZihwcmVmaXhBbnlMaW5rLCBicm93c2VycyA9PlxuICBwcmVmaXgoWyc6YW55LWxpbmsnXSwge1xuICAgIHNlbGVjdG9yOiB0cnVlLFxuICAgIGZlYXR1cmU6ICdjc3MtYW55LWxpbmsnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbi8vIHVuaWNvZGUtYmlkaVxuXG5sZXQgYmlkaUlzb2xhdGUgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9tZG4tY3NzLXVuaWNvZGUtYmlkaS1pc29sYXRlJylcblxuZihiaWRpSXNvbGF0ZSwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsnaXNvbGF0ZSddLCB7XG4gICAgcHJvcHM6IFsndW5pY29kZS1iaWRpJ10sXG4gICAgZmVhdHVyZTogJ2Nzcy11bmljb2RlLWJpZGknLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG5cbmxldCBiaWRpUGxhaW50ZXh0ID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLWNzcy11bmljb2RlLWJpZGktcGxhaW50ZXh0JylcblxuZihiaWRpUGxhaW50ZXh0LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydwbGFpbnRleHQnXSwge1xuICAgIHByb3BzOiBbJ3VuaWNvZGUtYmlkaSddLFxuICAgIGZlYXR1cmU6ICdjc3MtdW5pY29kZS1iaWRpJyxcbiAgICBicm93c2Vyc1xuICB9KVxuKVxuXG5sZXQgYmlkaU92ZXJyaWRlID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2RhdGEvZmVhdHVyZXMvbWRuLWNzcy11bmljb2RlLWJpZGktaXNvbGF0ZS1vdmVycmlkZScpXG5cbmYoYmlkaU92ZXJyaWRlLCB7IG1hdGNoOiAveSB4LyB9LCBicm93c2VycyA9PlxuICBwcmVmaXgoWydpc29sYXRlLW92ZXJyaWRlJ10sIHtcbiAgICBwcm9wczogWyd1bmljb2RlLWJpZGknXSxcbiAgICBmZWF0dXJlOiAnY3NzLXVuaWNvZGUtYmlkaScsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gb3ZlcnNjcm9sbC1iZWhhdmlvciBzZWxlY3RvclxubGV0IHByZWZpeE92ZXJzY3JvbGwgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3Mtb3ZlcnNjcm9sbC1iZWhhdmlvcicpXG5cbmYocHJlZml4T3ZlcnNjcm9sbCwgeyBtYXRjaDogL2EgIzEvIH0sIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ292ZXJzY3JvbGwtYmVoYXZpb3InXSwge1xuICAgIGZlYXR1cmU6ICdjc3Mtb3ZlcnNjcm9sbC1iZWhhdmlvcicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gdGV4dC1vcmllbnRhdGlvblxubGV0IHByZWZpeFRleHRPcmllbnRhdGlvbiA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy10ZXh0LW9yaWVudGF0aW9uJylcblxuZihwcmVmaXhUZXh0T3JpZW50YXRpb24sIGJyb3dzZXJzID0+XG4gIHByZWZpeChbJ3RleHQtb3JpZW50YXRpb24nXSwge1xuICAgIGZlYXR1cmU6ICdjc3MtdGV4dC1vcmllbnRhdGlvbicsXG4gICAgYnJvd3NlcnNcbiAgfSlcbilcblxuLy8gcHJpbnQtY29sb3ItYWRqdXN0XG5sZXQgcHJlZml4UHJpbnRBZGp1c3QgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGF0YS9mZWF0dXJlcy9jc3MtcHJpbnQtY29sb3ItYWRqdXN0JylcblxuZihwcmVmaXhQcmludEFkanVzdCwgYnJvd3NlcnMgPT5cbiAgcHJlZml4KFsncHJpbnQtY29sb3ItYWRqdXN0JywgJ2NvbG9yLWFkanVzdCddLCB7XG4gICAgZmVhdHVyZTogJ2Nzcy1wcmludC1jb2xvci1hZGp1c3QnLFxuICAgIGJyb3dzZXJzXG4gIH0pXG4pXG4iLCJsZXQgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJylcblxuY2xhc3MgQXRSdWxlIGV4dGVuZHMgUHJlZml4ZXIge1xuICAvKipcbiAgICogQ2xvbmUgYW5kIGFkZCBwcmVmaXhlcyBmb3IgYXQtcnVsZVxuICAgKi9cbiAgYWRkKHJ1bGUsIHByZWZpeCkge1xuICAgIGxldCBwcmVmaXhlZCA9IHByZWZpeCArIHJ1bGUubmFtZVxuXG4gICAgbGV0IGFscmVhZHkgPSBydWxlLnBhcmVudC5zb21lKFxuICAgICAgaSA9PiBpLm5hbWUgPT09IHByZWZpeGVkICYmIGkucGFyYW1zID09PSBydWxlLnBhcmFtc1xuICAgIClcbiAgICBpZiAoYWxyZWFkeSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKHJ1bGUsIHsgbmFtZTogcHJlZml4ZWQgfSlcbiAgICByZXR1cm4gcnVsZS5wYXJlbnQuaW5zZXJ0QmVmb3JlKHJ1bGUsIGNsb25lZClcbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9uZSBub2RlIHdpdGggcHJlZml4ZXNcbiAgICovXG4gIHByb2Nlc3Mobm9kZSkge1xuICAgIGxldCBwYXJlbnQgPSB0aGlzLnBhcmVudFByZWZpeChub2RlKVxuXG4gICAgZm9yIChsZXQgcHJlZml4IG9mIHRoaXMucHJlZml4ZXMpIHtcbiAgICAgIGlmICghcGFyZW50IHx8IHBhcmVudCA9PT0gcHJlZml4KSB7XG4gICAgICAgIHRoaXMuYWRkKG5vZGUsIHByZWZpeClcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBdFJ1bGVcbiIsImxldCBicm93c2Vyc2xpc3QgPSByZXF1aXJlKCdicm93c2Vyc2xpc3QnKVxubGV0IHsgYWdlbnRzIH0gPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGlzdC91bnBhY2tlci9hZ2VudHMnKVxubGV0IHBpY28gPSByZXF1aXJlKCdwaWNvY29sb3JzJylcblxubGV0IEJyb3dzZXJzID0gcmVxdWlyZSgnLi9icm93c2VycycpXG5sZXQgUHJlZml4ZXMgPSByZXF1aXJlKCcuL3ByZWZpeGVzJylcbmxldCBkYXRhUHJlZml4ZXMgPSByZXF1aXJlKCcuLi9kYXRhL3ByZWZpeGVzJylcbmxldCBnZXRJbmZvID0gcmVxdWlyZSgnLi9pbmZvJylcblxubGV0IGF1dG9wcmVmaXhlckRhdGEgPSB7IGJyb3dzZXJzOiBhZ2VudHMsIHByZWZpeGVzOiBkYXRhUHJlZml4ZXMgfVxuXG5jb25zdCBXQVJOSU5HID1cbiAgJ1xcbicgK1xuICAnICBSZXBsYWNlIEF1dG9wcmVmaXhlciBgYnJvd3NlcnNgIG9wdGlvbiB0byBCcm93c2Vyc2xpc3QgY29uZmlnLlxcbicgK1xuICAnICBVc2UgYGJyb3dzZXJzbGlzdGAga2V5IGluIGBwYWNrYWdlLmpzb25gIG9yIGAuYnJvd3NlcnNsaXN0cmNgIGZpbGUuXFxuJyArXG4gICdcXG4nICtcbiAgJyAgVXNpbmcgYGJyb3dzZXJzYCBvcHRpb24gY2FuIGNhdXNlIGVycm9ycy4gQnJvd3NlcnNsaXN0IGNvbmZpZyBjYW5cXG4nICtcbiAgJyAgYmUgdXNlZCBmb3IgQmFiZWwsIEF1dG9wcmVmaXhlciwgcG9zdGNzcy1ub3JtYWxpemUgYW5kIG90aGVyIHRvb2xzLlxcbicgK1xuICAnXFxuJyArXG4gICcgIElmIHlvdSByZWFsbHkgbmVlZCB0byB1c2Ugb3B0aW9uLCByZW5hbWUgaXQgdG8gYG92ZXJyaWRlQnJvd3NlcnNsaXN0YC5cXG4nICtcbiAgJ1xcbicgK1xuICAnICBMZWFybiBtb3JlIGF0OlxcbicgK1xuICAnICBodHRwczovL2dpdGh1Yi5jb20vYnJvd3NlcnNsaXN0L2Jyb3dzZXJzbGlzdCNyZWFkbWVcXG4nICtcbiAgJyAgaHR0cHM6Ly90d2l0dGVyLmNvbS9icm93c2Vyc2xpc3RcXG4nICtcbiAgJ1xcbidcblxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkob2JqKSA9PT0gJ1tvYmplY3QgT2JqZWN0XSdcbn1cblxubGV0IGNhY2hlID0gbmV3IE1hcCgpXG5cbmZ1bmN0aW9uIHRpbWVDYXBzdWxlKHJlc3VsdCwgcHJlZml4ZXMpIHtcbiAgaWYgKHByZWZpeGVzLmJyb3dzZXJzLnNlbGVjdGVkLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVyblxuICB9XG4gIGlmIChwcmVmaXhlcy5hZGQuc2VsZWN0b3JzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm5cbiAgfVxuICBpZiAoT2JqZWN0LmtleXMocHJlZml4ZXMuYWRkKS5sZW5ndGggPiAyKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgMTEgKi9cbiAgcmVzdWx0Lndhcm4oXG4gICAgJ0F1dG9wcmVmaXhlciB0YXJnZXQgYnJvd3NlcnMgZG8gbm90IG5lZWQgYW55IHByZWZpeGVzLicgK1xuICAgICAgJ1lvdSBkbyBub3QgbmVlZCBBdXRvcHJlZml4ZXIgYW55bW9yZS5cXG4nICtcbiAgICAgICdDaGVjayB5b3VyIEJyb3dzZXJzbGlzdCBjb25maWcgdG8gYmUgc3VyZSB0aGF0IHlvdXIgdGFyZ2V0cyAnICtcbiAgICAgICdhcmUgc2V0IHVwIGNvcnJlY3RseS5cXG4nICtcbiAgICAgICdcXG4nICtcbiAgICAgICcgIExlYXJuIG1vcmUgYXQ6XFxuJyArXG4gICAgICAnICBodHRwczovL2dpdGh1Yi5jb20vcG9zdGNzcy9hdXRvcHJlZml4ZXIjcmVhZG1lXFxuJyArXG4gICAgICAnICBodHRwczovL2dpdGh1Yi5jb20vYnJvd3NlcnNsaXN0L2Jyb3dzZXJzbGlzdCNyZWFkbWVcXG4nICtcbiAgICAgICdcXG4nXG4gIClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwbHVnaW5cblxuZnVuY3Rpb24gcGx1Z2luKC4uLnJlcXMpIHtcbiAgbGV0IG9wdGlvbnNcbiAgaWYgKHJlcXMubGVuZ3RoID09PSAxICYmIGlzUGxhaW5PYmplY3QocmVxc1swXSkpIHtcbiAgICBvcHRpb25zID0gcmVxc1swXVxuICAgIHJlcXMgPSB1bmRlZmluZWRcbiAgfSBlbHNlIGlmIChyZXFzLmxlbmd0aCA9PT0gMCB8fCAocmVxcy5sZW5ndGggPT09IDEgJiYgIXJlcXNbMF0pKSB7XG4gICAgcmVxcyA9IHVuZGVmaW5lZFxuICB9IGVsc2UgaWYgKHJlcXMubGVuZ3RoIDw9IDIgJiYgKEFycmF5LmlzQXJyYXkocmVxc1swXSkgfHwgIXJlcXNbMF0pKSB7XG4gICAgb3B0aW9ucyA9IHJlcXNbMV1cbiAgICByZXFzID0gcmVxc1swXVxuICB9IGVsc2UgaWYgKHR5cGVvZiByZXFzW3JlcXMubGVuZ3RoIC0gMV0gPT09ICdvYmplY3QnKSB7XG4gICAgb3B0aW9ucyA9IHJlcXMucG9wKClcbiAgfVxuXG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fVxuICB9XG5cbiAgaWYgKG9wdGlvbnMuYnJvd3Nlcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdDaGFuZ2UgYGJyb3dzZXJgIG9wdGlvbiB0byBgb3ZlcnJpZGVCcm93c2Vyc2xpc3RgIGluIEF1dG9wcmVmaXhlcidcbiAgICApXG4gIH0gZWxzZSBpZiAob3B0aW9ucy5icm93c2Vyc2xpc3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnQ2hhbmdlIGBicm93c2Vyc2xpc3RgIG9wdGlvbiB0byBgb3ZlcnJpZGVCcm93c2Vyc2xpc3RgIGluIEF1dG9wcmVmaXhlcidcbiAgICApXG4gIH1cblxuICBpZiAob3B0aW9ucy5vdmVycmlkZUJyb3dzZXJzbGlzdCkge1xuICAgIHJlcXMgPSBvcHRpb25zLm92ZXJyaWRlQnJvd3NlcnNsaXN0XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5icm93c2Vycykge1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIHBpY28ucmVkKFdBUk5JTkcucmVwbGFjZSgvYFteYF0rYC9nLCBpID0+IHBpY28ueWVsbG93KGkuc2xpY2UoMSwgLTEpKSkpXG4gICAgICApXG4gICAgfVxuICAgIHJlcXMgPSBvcHRpb25zLmJyb3dzZXJzXG4gIH1cblxuICBsZXQgYnJ3bHN0T3B0cyA9IHtcbiAgICBpZ25vcmVVbmtub3duVmVyc2lvbnM6IG9wdGlvbnMuaWdub3JlVW5rbm93blZlcnNpb25zLFxuICAgIHN0YXRzOiBvcHRpb25zLnN0YXRzLFxuICAgIGVudjogb3B0aW9ucy5lbnZcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRQcmVmaXhlcyhvcHRzKSB7XG4gICAgbGV0IGQgPSBhdXRvcHJlZml4ZXJEYXRhXG4gICAgbGV0IGJyb3dzZXJzID0gbmV3IEJyb3dzZXJzKGQuYnJvd3NlcnMsIHJlcXMsIG9wdHMsIGJyd2xzdE9wdHMpXG4gICAgbGV0IGtleSA9IGJyb3dzZXJzLnNlbGVjdGVkLmpvaW4oJywgJykgKyBKU09OLnN0cmluZ2lmeShvcHRpb25zKVxuXG4gICAgaWYgKCFjYWNoZS5oYXMoa2V5KSkge1xuICAgICAgY2FjaGUuc2V0KGtleSwgbmV3IFByZWZpeGVzKGQucHJlZml4ZXMsIGJyb3dzZXJzLCBvcHRpb25zKSlcbiAgICB9XG5cbiAgICByZXR1cm4gY2FjaGUuZ2V0KGtleSlcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcG9zdGNzc1BsdWdpbjogJ2F1dG9wcmVmaXhlcicsXG5cbiAgICBwcmVwYXJlKHJlc3VsdCkge1xuICAgICAgbGV0IHByZWZpeGVzID0gbG9hZFByZWZpeGVzKHtcbiAgICAgICAgZnJvbTogcmVzdWx0Lm9wdHMuZnJvbSxcbiAgICAgICAgZW52OiBvcHRpb25zLmVudlxuICAgICAgfSlcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgT25jZUV4aXQocm9vdCkge1xuICAgICAgICAgIHRpbWVDYXBzdWxlKHJlc3VsdCwgcHJlZml4ZXMpXG4gICAgICAgICAgaWYgKG9wdGlvbnMucmVtb3ZlICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgcHJlZml4ZXMucHJvY2Vzc29yLnJlbW92ZShyb290LCByZXN1bHQpXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChvcHRpb25zLmFkZCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHByZWZpeGVzLnByb2Nlc3Nvci5hZGQocm9vdCwgcmVzdWx0KVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBpbmZvKG9wdHMpIHtcbiAgICAgIG9wdHMgPSBvcHRzIHx8IHt9XG4gICAgICBvcHRzLmZyb20gPSBvcHRzLmZyb20gfHwgcHJvY2Vzcy5jd2QoKVxuICAgICAgcmV0dXJuIGdldEluZm8obG9hZFByZWZpeGVzKG9wdHMpKVxuICAgIH0sXG5cbiAgICBvcHRpb25zLFxuICAgIGJyb3dzZXJzOiByZXFzXG4gIH1cbn1cblxucGx1Z2luLnBvc3Rjc3MgPSB0cnVlXG5cbi8qKlxuICogQXV0b3ByZWZpeGVyIGRhdGFcbiAqL1xucGx1Z2luLmRhdGEgPSBhdXRvcHJlZml4ZXJEYXRhXG5cbi8qKlxuICogQXV0b3ByZWZpeGVyIGRlZmF1bHQgYnJvd3NlcnNcbiAqL1xucGx1Z2luLmRlZmF1bHRzID0gYnJvd3NlcnNsaXN0LmRlZmF1bHRzXG5cbi8qKlxuICogSW5zcGVjdCB3aXRoIGRlZmF1bHQgQXV0b3ByZWZpeGVyXG4gKi9cbnBsdWdpbi5pbmZvID0gKCkgPT4gcGx1Z2luKCkuaW5mbygpXG4iLCJmdW5jdGlvbiBsYXN0KGFycmF5KSB7XG4gIHJldHVybiBhcnJheVthcnJheS5sZW5ndGggLSAxXVxufVxuXG5sZXQgYnJhY2tldHMgPSB7XG4gIC8qKlxuICAgKiBQYXJzZSBzdHJpbmcgdG8gbm9kZXMgdHJlZVxuICAgKi9cbiAgcGFyc2Uoc3RyKSB7XG4gICAgbGV0IGN1cnJlbnQgPSBbJyddXG4gICAgbGV0IHN0YWNrID0gW2N1cnJlbnRdXG5cbiAgICBmb3IgKGxldCBzeW0gb2Ygc3RyKSB7XG4gICAgICBpZiAoc3ltID09PSAnKCcpIHtcbiAgICAgICAgY3VycmVudCA9IFsnJ11cbiAgICAgICAgbGFzdChzdGFjaykucHVzaChjdXJyZW50KVxuICAgICAgICBzdGFjay5wdXNoKGN1cnJlbnQpXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGlmIChzeW0gPT09ICcpJykge1xuICAgICAgICBzdGFjay5wb3AoKVxuICAgICAgICBjdXJyZW50ID0gbGFzdChzdGFjaylcbiAgICAgICAgY3VycmVudC5wdXNoKCcnKVxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBjdXJyZW50W2N1cnJlbnQubGVuZ3RoIC0gMV0gKz0gc3ltXG4gICAgfVxuXG4gICAgcmV0dXJuIHN0YWNrWzBdXG4gIH0sXG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlIG91dHB1dCBzdHJpbmcgYnkgbm9kZXMgdHJlZVxuICAgKi9cbiAgc3RyaW5naWZ5KGFzdCkge1xuICAgIGxldCByZXN1bHQgPSAnJ1xuICAgIGZvciAobGV0IGkgb2YgYXN0KSB7XG4gICAgICBpZiAodHlwZW9mIGkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJlc3VsdCArPSBgKCR7YnJhY2tldHMuc3RyaW5naWZ5KGkpfSlgXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHJlc3VsdCArPSBpXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJyYWNrZXRzXG4iLCJsZXQgYnJvd3NlcnNsaXN0ID0gcmVxdWlyZSgnYnJvd3NlcnNsaXN0JylcbmxldCB7IGFnZW50cyB9ID0gcmVxdWlyZSgnY2FuaXVzZS1saXRlL2Rpc3QvdW5wYWNrZXIvYWdlbnRzJylcblxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmNsYXNzIEJyb3dzZXJzIHtcbiAgLyoqXG4gICAqIFJldHVybiBhbGwgcHJlZml4ZXMgZm9yIGRlZmF1bHQgYnJvd3NlciBkYXRhXG4gICAqL1xuICBzdGF0aWMgcHJlZml4ZXMoKSB7XG4gICAgaWYgKHRoaXMucHJlZml4ZXNDYWNoZSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJlZml4ZXNDYWNoZVxuICAgIH1cblxuICAgIHRoaXMucHJlZml4ZXNDYWNoZSA9IFtdXG4gICAgZm9yIChsZXQgbmFtZSBpbiBhZ2VudHMpIHtcbiAgICAgIHRoaXMucHJlZml4ZXNDYWNoZS5wdXNoKGAtJHthZ2VudHNbbmFtZV0ucHJlZml4fS1gKVxuICAgIH1cblxuICAgIHRoaXMucHJlZml4ZXNDYWNoZSA9IHV0aWxzXG4gICAgICAudW5pcSh0aGlzLnByZWZpeGVzQ2FjaGUpXG4gICAgICAuc29ydCgoYSwgYikgPT4gYi5sZW5ndGggLSBhLmxlbmd0aClcblxuICAgIHJldHVybiB0aGlzLnByZWZpeGVzQ2FjaGVcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpcyB2YWx1ZSBjb250YWluIGFueSBwb3NzaWJsZSBwcmVmaXhcbiAgICovXG4gIHN0YXRpYyB3aXRoUHJlZml4KHZhbHVlKSB7XG4gICAgaWYgKCF0aGlzLnByZWZpeGVzUmVnZXhwKSB7XG4gICAgICB0aGlzLnByZWZpeGVzUmVnZXhwID0gbmV3IFJlZ0V4cCh0aGlzLnByZWZpeGVzKCkuam9pbignfCcpKVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnByZWZpeGVzUmVnZXhwLnRlc3QodmFsdWUpXG4gIH1cblxuICBjb25zdHJ1Y3RvcihkYXRhLCByZXF1aXJlbWVudHMsIG9wdGlvbnMsIGJyb3dzZXJzbGlzdE9wdHMpIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuICAgIHRoaXMuYnJvd3NlcnNsaXN0T3B0cyA9IGJyb3dzZXJzbGlzdE9wdHMgfHwge31cbiAgICB0aGlzLnNlbGVjdGVkID0gdGhpcy5wYXJzZShyZXF1aXJlbWVudHMpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGJyb3dzZXJzIHNlbGVjdGVkIGJ5IHJlcXVpcmVtZW50c1xuICAgKi9cbiAgcGFyc2UocmVxdWlyZW1lbnRzKSB7XG4gICAgbGV0IG9wdHMgPSB7fVxuICAgIGZvciAobGV0IGkgaW4gdGhpcy5icm93c2Vyc2xpc3RPcHRzKSB7XG4gICAgICBvcHRzW2ldID0gdGhpcy5icm93c2Vyc2xpc3RPcHRzW2ldXG4gICAgfVxuICAgIG9wdHMucGF0aCA9IHRoaXMub3B0aW9ucy5mcm9tXG4gICAgcmV0dXJuIGJyb3dzZXJzbGlzdChyZXF1aXJlbWVudHMsIG9wdHMpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByZWZpeCBmb3Igc2VsZWN0ZWQgYnJvd3NlclxuICAgKi9cbiAgcHJlZml4KGJyb3dzZXIpIHtcbiAgICBsZXQgW25hbWUsIHZlcnNpb25dID0gYnJvd3Nlci5zcGxpdCgnICcpXG4gICAgbGV0IGRhdGEgPSB0aGlzLmRhdGFbbmFtZV1cblxuICAgIGxldCBwcmVmaXggPSBkYXRhLnByZWZpeF9leGNlcHRpb25zICYmIGRhdGEucHJlZml4X2V4Y2VwdGlvbnNbdmVyc2lvbl1cbiAgICBpZiAoIXByZWZpeCkge1xuICAgICAgcHJlZml4ID0gZGF0YS5wcmVmaXhcbiAgICB9XG4gICAgcmV0dXJuIGAtJHtwcmVmaXh9LWBcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBicm93c2VyIGlzIHNlbGVjdGVkIGJ5IHJlcXVpcmVtZW50c1xuICAgKi9cbiAgaXNTZWxlY3RlZChicm93c2VyKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWQuaW5jbHVkZXMoYnJvd3NlcilcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJyb3dzZXJzXG4iLCJsZXQgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJylcbmxldCBCcm93c2VycyA9IHJlcXVpcmUoJy4vYnJvd3NlcnMnKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmNsYXNzIERlY2xhcmF0aW9uIGV4dGVuZHMgUHJlZml4ZXIge1xuICAvKipcbiAgICogQWx3YXlzIHRydWUsIGJlY2F1c2Ugd2UgYWxyZWFkeSBnZXQgcHJlZml4ZXIgYnkgcHJvcGVydHkgbmFtZVxuICAgKi9cbiAgY2hlY2soLyogZGVjbCAqLykge1xuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByZWZpeGVkIHZlcnNpb24gb2YgcHJvcGVydHlcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIHJldHVybiBwcmVmaXggKyBwcm9wXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHVucHJlZml4ZWQgdmVyc2lvbiBvZiBwcm9wZXJ0eVxuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcFxuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGB2YWx1ZWAsIHRoYXQgaXQgY29udGFpbiBvdGhlciBwcmVmaXhlcywgcmF0aGVyIHRoYW4gYHByZWZpeGBcbiAgICovXG4gIG90aGVyUHJlZml4ZXModmFsdWUsIHByZWZpeCkge1xuICAgIGZvciAobGV0IG90aGVyIG9mIEJyb3dzZXJzLnByZWZpeGVzKCkpIHtcbiAgICAgIGlmIChvdGhlciA9PT0gcHJlZml4KSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG4gICAgICBpZiAodmFsdWUuaW5jbHVkZXMob3RoZXIpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC92YXJcXChbXildK1xcKS8sICcnKS5pbmNsdWRlcyhvdGhlcilcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvKipcbiAgICogU2V0IHByZWZpeCB0byBkZWNsYXJhdGlvblxuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGRlY2wucHJvcCA9IHRoaXMucHJlZml4ZWQoZGVjbC5wcm9wLCBwcmVmaXgpXG4gICAgcmV0dXJuIGRlY2xcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG91bGQgd2UgdXNlIHZpc3VhbCBjYXNjYWRlIGZvciBwcmVmaXhlc1xuICAgKi9cbiAgbmVlZENhc2NhZGUoZGVjbCkge1xuICAgIGlmICghZGVjbC5fYXV0b3ByZWZpeGVyQ2FzY2FkZSkge1xuICAgICAgZGVjbC5fYXV0b3ByZWZpeGVyQ2FzY2FkZSA9XG4gICAgICAgIHRoaXMuYWxsLm9wdGlvbnMuY2FzY2FkZSAhPT0gZmFsc2UgJiYgZGVjbC5yYXcoJ2JlZm9yZScpLmluY2x1ZGVzKCdcXG4nKVxuICAgIH1cbiAgICByZXR1cm4gZGVjbC5fYXV0b3ByZWZpeGVyQ2FzY2FkZVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBtYXhpbXVtIGxlbmd0aCBvZiBwb3NzaWJsZSBwcmVmaXhlZCBwcm9wZXJ0eVxuICAgKi9cbiAgbWF4UHJlZml4ZWQocHJlZml4ZXMsIGRlY2wpIHtcbiAgICBpZiAoZGVjbC5fYXV0b3ByZWZpeGVyTWF4KSB7XG4gICAgICByZXR1cm4gZGVjbC5fYXV0b3ByZWZpeGVyTWF4XG4gICAgfVxuXG4gICAgbGV0IG1heCA9IDBcbiAgICBmb3IgKGxldCBwcmVmaXggb2YgcHJlZml4ZXMpIHtcbiAgICAgIHByZWZpeCA9IHV0aWxzLnJlbW92ZU5vdGUocHJlZml4KVxuICAgICAgaWYgKHByZWZpeC5sZW5ndGggPiBtYXgpIHtcbiAgICAgICAgbWF4ID0gcHJlZml4Lmxlbmd0aFxuICAgICAgfVxuICAgIH1cbiAgICBkZWNsLl9hdXRvcHJlZml4ZXJNYXggPSBtYXhcblxuICAgIHJldHVybiBkZWNsLl9hdXRvcHJlZml4ZXJNYXhcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGUgaW5kZW50YXRpb24gdG8gY3JlYXRlIHZpc3VhbCBjYXNjYWRlXG4gICAqL1xuICBjYWxjQmVmb3JlKHByZWZpeGVzLCBkZWNsLCBwcmVmaXggPSAnJykge1xuICAgIGxldCBtYXggPSB0aGlzLm1heFByZWZpeGVkKHByZWZpeGVzLCBkZWNsKVxuICAgIGxldCBkaWZmID0gbWF4IC0gdXRpbHMucmVtb3ZlTm90ZShwcmVmaXgpLmxlbmd0aFxuXG4gICAgbGV0IGJlZm9yZSA9IGRlY2wucmF3KCdiZWZvcmUnKVxuICAgIGlmIChkaWZmID4gMCkge1xuICAgICAgYmVmb3JlICs9IEFycmF5KGRpZmYpLmZpbGwoJyAnKS5qb2luKCcnKVxuICAgIH1cblxuICAgIHJldHVybiBiZWZvcmVcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdmlzdWFsIGNhc2NhZGVcbiAgICovXG4gIHJlc3RvcmVCZWZvcmUoZGVjbCkge1xuICAgIGxldCBsaW5lcyA9IGRlY2wucmF3KCdiZWZvcmUnKS5zcGxpdCgnXFxuJylcbiAgICBsZXQgbWluID0gbGluZXNbbGluZXMubGVuZ3RoIC0gMV1cblxuICAgIHRoaXMuYWxsLmdyb3VwKGRlY2wpLnVwKHByZWZpeGVkID0+IHtcbiAgICAgIGxldCBhcnJheSA9IHByZWZpeGVkLnJhdygnYmVmb3JlJykuc3BsaXQoJ1xcbicpXG4gICAgICBsZXQgbGFzdCA9IGFycmF5W2FycmF5Lmxlbmd0aCAtIDFdXG4gICAgICBpZiAobGFzdC5sZW5ndGggPCBtaW4ubGVuZ3RoKSB7XG4gICAgICAgIG1pbiA9IGxhc3RcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgbGluZXNbbGluZXMubGVuZ3RoIC0gMV0gPSBtaW5cbiAgICBkZWNsLnJhd3MuYmVmb3JlID0gbGluZXMuam9pbignXFxuJylcbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9uZSBhbmQgaW5zZXJ0IG5ldyBkZWNsYXJhdGlvblxuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpIHtcbiAgICBsZXQgY2xvbmVkID0gdGhpcy5zZXQodGhpcy5jbG9uZShkZWNsKSwgcHJlZml4KVxuICAgIGlmICghY2xvbmVkKSByZXR1cm4gdW5kZWZpbmVkXG5cbiAgICBsZXQgYWxyZWFkeSA9IGRlY2wucGFyZW50LnNvbWUoXG4gICAgICBpID0+IGkucHJvcCA9PT0gY2xvbmVkLnByb3AgJiYgaS52YWx1ZSA9PT0gY2xvbmVkLnZhbHVlXG4gICAgKVxuICAgIGlmIChhbHJlYWR5KSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgIGNsb25lZC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNsb25lZClcbiAgfVxuXG4gIC8qKlxuICAgKiBEaWQgdGhpcyBkZWNsYXJhdGlvbiBoYXMgdGhpcyBwcmVmaXggYWJvdmVcbiAgICovXG4gIGlzQWxyZWFkeShkZWNsLCBwcmVmaXhlZCkge1xuICAgIGxldCBhbHJlYWR5ID0gdGhpcy5hbGwuZ3JvdXAoZGVjbCkudXAoaSA9PiBpLnByb3AgPT09IHByZWZpeGVkKVxuICAgIGlmICghYWxyZWFkeSkge1xuICAgICAgYWxyZWFkeSA9IHRoaXMuYWxsLmdyb3VwKGRlY2wpLmRvd24oaSA9PiBpLnByb3AgPT09IHByZWZpeGVkKVxuICAgIH1cbiAgICByZXR1cm4gYWxyZWFkeVxuICB9XG5cbiAgLyoqXG4gICAqIENsb25lIGFuZCBhZGQgcHJlZml4ZXMgZm9yIGRlY2xhcmF0aW9uXG4gICAqL1xuICBhZGQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgbGV0IHByZWZpeGVkID0gdGhpcy5wcmVmaXhlZChkZWNsLnByb3AsIHByZWZpeClcbiAgICBpZiAoXG4gICAgICB0aGlzLmlzQWxyZWFkeShkZWNsLCBwcmVmaXhlZCkgfHxcbiAgICAgIHRoaXMub3RoZXJQcmVmaXhlcyhkZWNsLnZhbHVlLCBwcmVmaXgpXG4gICAgKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuICAgIHJldHVybiB0aGlzLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzLCByZXN1bHQpXG4gIH1cblxuICAvKipcbiAgICogQWRkIHNwYWNlcyBmb3IgdmlzdWFsIGNhc2NhZGVcbiAgICovXG4gIHByb2Nlc3MoZGVjbCwgcmVzdWx0KSB7XG4gICAgaWYgKCF0aGlzLm5lZWRDYXNjYWRlKGRlY2wpKSB7XG4gICAgICBzdXBlci5wcm9jZXNzKGRlY2wsIHJlc3VsdClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGxldCBwcmVmaXhlcyA9IHN1cGVyLnByb2Nlc3MoZGVjbCwgcmVzdWx0KVxuXG4gICAgaWYgKCFwcmVmaXhlcyB8fCAhcHJlZml4ZXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB0aGlzLnJlc3RvcmVCZWZvcmUoZGVjbClcbiAgICBkZWNsLnJhd3MuYmVmb3JlID0gdGhpcy5jYWxjQmVmb3JlKHByZWZpeGVzLCBkZWNsKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBsaXN0IG9mIHByZWZpeGVkIHByb3BlcnRpZXMgdG8gY2xlYW4gb2xkIHByZWZpeGVzXG4gICAqL1xuICBvbGQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIFt0aGlzLnByZWZpeGVkKHByb3AsIHByZWZpeCldXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBEZWNsYXJhdGlvblxuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBBbGlnbkNvbnRlbnQgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgMjAxMiBzcGVjXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAxMikge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdmbGV4LWxpbmUtcGFjaydcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdhbGlnbi1jb250ZW50J1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSB2YWx1ZSBmb3IgMjAxMiBzcGVjIGFuZCBpZ25vcmUgcHJlZml4IGZvciAyMDA5XG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIGRlY2wudmFsdWUgPSBBbGlnbkNvbnRlbnQub2xkVmFsdWVzW2RlY2wudmFsdWVdIHx8IGRlY2wudmFsdWVcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICBpZiAoc3BlYyA9PT0gJ2ZpbmFsJykge1xuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5BbGlnbkNvbnRlbnQubmFtZXMgPSBbJ2FsaWduLWNvbnRlbnQnLCAnZmxleC1saW5lLXBhY2snXVxuXG5BbGlnbkNvbnRlbnQub2xkVmFsdWVzID0ge1xuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ3NwYWNlLWFyb3VuZCc6ICdkaXN0cmlidXRlJ1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFsaWduQ29udGVudFxuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBBbGlnbkl0ZW1zIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIDIwMDkgYW5kIDIwMTIgc3BlY3NcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjID09PSAyMDA5KSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgJ2JveC1hbGlnbidcbiAgICB9XG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1hbGlnbidcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdhbGlnbi1pdGVtcydcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdmFsdWUgZm9yIDIwMDkgYW5kIDIwMTIgc3BlY3NcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlYyA9IGZsZXhTcGVjKHByZWZpeClbMF1cbiAgICBpZiAoc3BlYyA9PT0gMjAwOSB8fCBzcGVjID09PSAyMDEyKSB7XG4gICAgICBkZWNsLnZhbHVlID0gQWxpZ25JdGVtcy5vbGRWYWx1ZXNbZGVjbC52YWx1ZV0gfHwgZGVjbC52YWx1ZVxuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgfVxufVxuXG5BbGlnbkl0ZW1zLm5hbWVzID0gWydhbGlnbi1pdGVtcycsICdmbGV4LWFsaWduJywgJ2JveC1hbGlnbiddXG5cbkFsaWduSXRlbXMub2xkVmFsdWVzID0ge1xuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQWxpZ25JdGVtc1xuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBBbGlnblNlbGYgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIGNoZWNrKGRlY2wpIHtcbiAgICByZXR1cm4gKFxuICAgICAgZGVjbC5wYXJlbnQgJiZcbiAgICAgICFkZWNsLnBhcmVudC5zb21lKGkgPT4ge1xuICAgICAgICByZXR1cm4gaS5wcm9wICYmIGkucHJvcC5zdGFydHNXaXRoKCdncmlkLScpXG4gICAgICB9KVxuICAgIClcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgMjAxMiBzcGVjc1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1pdGVtLWFsaWduJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IGZpbmFsIHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gJ2FsaWduLXNlbGYnXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHZhbHVlIGZvciAyMDEyIHNwZWMgYW5kIGlnbm9yZSBwcmVmaXggZm9yIDIwMDlcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlYyA9IGZsZXhTcGVjKHByZWZpeClbMF1cbiAgICBpZiAoc3BlYyA9PT0gMjAxMikge1xuICAgICAgZGVjbC52YWx1ZSA9IEFsaWduU2VsZi5vbGRWYWx1ZXNbZGVjbC52YWx1ZV0gfHwgZGVjbC52YWx1ZVxuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIGlmIChzcGVjID09PSAnZmluYWwnKSB7XG4gICAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkFsaWduU2VsZi5uYW1lcyA9IFsnYWxpZ24tc2VsZicsICdmbGV4LWl0ZW0tYWxpZ24nXVxuXG5BbGlnblNlbGYub2xkVmFsdWVzID0ge1xuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnXG59XG5cbm1vZHVsZS5leHBvcnRzID0gQWxpZ25TZWxmXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEFuaW1hdGlvbiBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIERvbuKAmXQgYWRkIHByZWZpeGVzIGZvciBtb2Rlcm4gdmFsdWVzLlxuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiAhZGVjbC52YWx1ZS5zcGxpdCgvXFxzKy8pLnNvbWUoaSA9PiB7XG4gICAgICBsZXQgbG93ZXIgPSBpLnRvTG93ZXJDYXNlKClcbiAgICAgIHJldHVybiBsb3dlciA9PT0gJ3JldmVyc2UnIHx8IGxvd2VyID09PSAnYWx0ZXJuYXRlLXJldmVyc2UnXG4gICAgfSlcbiAgfVxufVxuXG5BbmltYXRpb24ubmFtZXMgPSBbJ2FuaW1hdGlvbicsICdhbmltYXRpb24tZGlyZWN0aW9uJ11cblxubW9kdWxlLmV4cG9ydHMgPSBBbmltYXRpb25cbiIsImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJylcblxuY2xhc3MgQXBwZWFyYW5jZSBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4ZXMsIGFsbCkge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzLCBhbGwpXG5cbiAgICBpZiAodGhpcy5wcmVmaXhlcykge1xuICAgICAgdGhpcy5wcmVmaXhlcyA9IHV0aWxzLnVuaXEoXG4gICAgICAgIHRoaXMucHJlZml4ZXMubWFwKGkgPT4ge1xuICAgICAgICAgIGlmIChpID09PSAnLW1zLScpIHtcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nXG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBpXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgfVxuICB9XG59XG5cbkFwcGVhcmFuY2UubmFtZXMgPSBbJ2FwcGVhcmFuY2UnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcGVhcmFuY2VcbiIsImxldCBTZWxlY3RvciA9IHJlcXVpcmUoJy4uL3NlbGVjdG9yJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJylcblxuY2xhc3MgQXV0b2ZpbGwgZXh0ZW5kcyBTZWxlY3RvciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICBzdXBlcihuYW1lLCBwcmVmaXhlcywgYWxsKVxuXG4gICAgaWYgKHRoaXMucHJlZml4ZXMpIHtcbiAgICAgIHRoaXMucHJlZml4ZXMgPSB1dGlscy51bmlxKHRoaXMucHJlZml4ZXMubWFwKCgpID0+ICctd2Via2l0LScpKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZGlmZmVyZW50IHNlbGVjdG9ycyBkZXBlbmQgb24gcHJlZml4XG4gICAqL1xuICBwcmVmaXhlZChwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gJzotd2Via2l0LWF1dG9maWxsJ1xuICAgIH1cbiAgICByZXR1cm4gYDoke3ByZWZpeH1hdXRvZmlsbGBcbiAgfVxufVxuXG5BdXRvZmlsbC5uYW1lcyA9IFsnOmF1dG9maWxsJ11cblxubW9kdWxlLmV4cG9ydHMgPSBBdXRvZmlsbFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxuXG5jbGFzcyBCYWNrZHJvcEZpbHRlciBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4ZXMsIGFsbCkge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzLCBhbGwpXG5cbiAgICBpZiAodGhpcy5wcmVmaXhlcykge1xuICAgICAgdGhpcy5wcmVmaXhlcyA9IHV0aWxzLnVuaXEoXG4gICAgICAgIHRoaXMucHJlZml4ZXMubWFwKGkgPT4ge1xuICAgICAgICAgIHJldHVybiBpID09PSAnLW1zLScgPyAnLXdlYmtpdC0nIDogaVxuICAgICAgICB9KVxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuXG5CYWNrZHJvcEZpbHRlci5uYW1lcyA9IFsnYmFja2Ryb3AtZmlsdGVyJ11cblxubW9kdWxlLmV4cG9ydHMgPSBCYWNrZHJvcEZpbHRlclxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxuXG5jbGFzcyBCYWNrZ3JvdW5kQ2xpcCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4ZXMsIGFsbCkge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzLCBhbGwpXG5cbiAgICBpZiAodGhpcy5wcmVmaXhlcykge1xuICAgICAgdGhpcy5wcmVmaXhlcyA9IHV0aWxzLnVuaXEoXG4gICAgICAgIHRoaXMucHJlZml4ZXMubWFwKGkgPT4ge1xuICAgICAgICAgIHJldHVybiBpID09PSAnLW1zLScgPyAnLXdlYmtpdC0nIDogaVxuICAgICAgICB9KVxuICAgICAgKVxuICAgIH1cbiAgfVxuXG4gIGNoZWNrKGRlY2wpIHtcbiAgICByZXR1cm4gZGVjbC52YWx1ZS50b0xvd2VyQ2FzZSgpID09PSAndGV4dCdcbiAgfVxufVxuXG5CYWNrZ3JvdW5kQ2xpcC5uYW1lcyA9IFsnYmFja2dyb3VuZC1jbGlwJ11cblxubW9kdWxlLmV4cG9ydHMgPSBCYWNrZ3JvdW5kQ2xpcFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBCYWNrZ3JvdW5kU2l6ZSBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIER1cGxpY2F0aW9uIHBhcmFtZXRlciBmb3IgLXdlYmtpdC0gYnJvd3NlcnNcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBsZXQgdmFsdWUgPSBkZWNsLnZhbHVlLnRvTG93ZXJDYXNlKClcbiAgICBpZiAoXG4gICAgICBwcmVmaXggPT09ICctd2Via2l0LScgJiZcbiAgICAgICF2YWx1ZS5pbmNsdWRlcygnICcpICYmXG4gICAgICB2YWx1ZSAhPT0gJ2NvbnRhaW4nICYmXG4gICAgICB2YWx1ZSAhPT0gJ2NvdmVyJ1xuICAgICkge1xuICAgICAgZGVjbC52YWx1ZSA9IGRlY2wudmFsdWUgKyAnICcgKyBkZWNsLnZhbHVlXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICB9XG59XG5cbkJhY2tncm91bmRTaXplLm5hbWVzID0gWydiYWNrZ3JvdW5kLXNpemUnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJhY2tncm91bmRTaXplXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEJsb2NrTG9naWNhbCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFVzZSBvbGQgc3ludGF4IGZvciAtbW96LSBhbmQgLXdlYmtpdC1cbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGlmIChwcm9wLmluY2x1ZGVzKCctc3RhcnQnKSkge1xuICAgICAgcmV0dXJuIHByZWZpeCArIHByb3AucmVwbGFjZSgnLWJsb2NrLXN0YXJ0JywgJy1iZWZvcmUnKVxuICAgIH1cbiAgICByZXR1cm4gcHJlZml4ICsgcHJvcC5yZXBsYWNlKCctYmxvY2stZW5kJywgJy1hZnRlcicpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICBpZiAocHJvcC5pbmNsdWRlcygnLWJlZm9yZScpKSB7XG4gICAgICByZXR1cm4gcHJvcC5yZXBsYWNlKCctYmVmb3JlJywgJy1ibG9jay1zdGFydCcpXG4gICAgfVxuICAgIHJldHVybiBwcm9wLnJlcGxhY2UoJy1hZnRlcicsICctYmxvY2stZW5kJylcbiAgfVxufVxuXG5CbG9ja0xvZ2ljYWwubmFtZXMgPSBbXG4gICdib3JkZXItYmxvY2stc3RhcnQnLFxuICAnYm9yZGVyLWJsb2NrLWVuZCcsXG4gICdtYXJnaW4tYmxvY2stc3RhcnQnLFxuICAnbWFyZ2luLWJsb2NrLWVuZCcsXG4gICdwYWRkaW5nLWJsb2NrLXN0YXJ0JyxcbiAgJ3BhZGRpbmctYmxvY2stZW5kJyxcbiAgJ2JvcmRlci1iZWZvcmUnLFxuICAnYm9yZGVyLWFmdGVyJyxcbiAgJ21hcmdpbi1iZWZvcmUnLFxuICAnbWFyZ2luLWFmdGVyJyxcbiAgJ3BhZGRpbmctYmVmb3JlJyxcbiAgJ3BhZGRpbmctYWZ0ZXInXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gQmxvY2tMb2dpY2FsXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEJvcmRlckltYWdlIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmVtb3ZlIGZpbGwgcGFyYW1ldGVyIGZvciBwcmVmaXhlZCBkZWNsYXJhdGlvbnNcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBkZWNsLnZhbHVlID0gZGVjbC52YWx1ZS5yZXBsYWNlKC9cXHMrZmlsbChcXHMpLywgJyQxJylcbiAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgfVxufVxuXG5Cb3JkZXJJbWFnZS5uYW1lcyA9IFsnYm9yZGVyLWltYWdlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBCb3JkZXJJbWFnZVxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBCb3JkZXJSYWRpdXMgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBDaGFuZ2Ugc3ludGF4LCB3aGVuIGFkZCBNb3ppbGxhIHByZWZpeFxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tb3otJykge1xuICAgICAgcmV0dXJuIHByZWZpeCArIChCb3JkZXJSYWRpdXMudG9Nb3ppbGxhW3Byb3BdIHx8IHByb3ApXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHVucHJlZml4ZWQgdmVyc2lvbiBvZiBwcm9wZXJ0eVxuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gQm9yZGVyUmFkaXVzLnRvTm9ybWFsW3Byb3BdIHx8IHByb3BcbiAgfVxufVxuXG5Cb3JkZXJSYWRpdXMubmFtZXMgPSBbJ2JvcmRlci1yYWRpdXMnXVxuXG5Cb3JkZXJSYWRpdXMudG9Nb3ppbGxhID0ge31cbkJvcmRlclJhZGl1cy50b05vcm1hbCA9IHt9XG5cbmZvciAobGV0IHZlciBvZiBbJ3RvcCcsICdib3R0b20nXSkge1xuICBmb3IgKGxldCBob3Igb2YgWydsZWZ0JywgJ3JpZ2h0J10pIHtcbiAgICBsZXQgbm9ybWFsID0gYGJvcmRlci0ke3Zlcn0tJHtob3J9LXJhZGl1c2BcbiAgICBsZXQgbW96aWxsYSA9IGBib3JkZXItcmFkaXVzLSR7dmVyfSR7aG9yfWBcblxuICAgIEJvcmRlclJhZGl1cy5uYW1lcy5wdXNoKG5vcm1hbClcbiAgICBCb3JkZXJSYWRpdXMubmFtZXMucHVzaChtb3ppbGxhKVxuXG4gICAgQm9yZGVyUmFkaXVzLnRvTW96aWxsYVtub3JtYWxdID0gbW96aWxsYVxuICAgIEJvcmRlclJhZGl1cy50b05vcm1hbFttb3ppbGxhXSA9IG5vcm1hbFxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQm9yZGVyUmFkaXVzXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEJyZWFrUHJvcHMgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBDaGFuZ2UgbmFtZSBmb3IgLXdlYmtpdC0gYW5kIC1tb3otIHByZWZpeFxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIGAke3ByZWZpeH1jb2x1bW4tJHtwcm9wfWBcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUocHJvcCkge1xuICAgIGlmIChwcm9wLmluY2x1ZGVzKCdpbnNpZGUnKSkge1xuICAgICAgcmV0dXJuICdicmVhay1pbnNpZGUnXG4gICAgfVxuICAgIGlmIChwcm9wLmluY2x1ZGVzKCdiZWZvcmUnKSkge1xuICAgICAgcmV0dXJuICdicmVhay1iZWZvcmUnXG4gICAgfVxuICAgIHJldHVybiAnYnJlYWstYWZ0ZXInXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHByZWZpeGVkIHZhbHVlIGZvciBhdm9pZC1jb2x1bW4gYW5kIGF2b2lkLXBhZ2VcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAoXG4gICAgICAoZGVjbC5wcm9wID09PSAnYnJlYWstaW5zaWRlJyAmJiBkZWNsLnZhbHVlID09PSAnYXZvaWQtY29sdW1uJykgfHxcbiAgICAgIGRlY2wudmFsdWUgPT09ICdhdm9pZC1wYWdlJ1xuICAgICkge1xuICAgICAgZGVjbC52YWx1ZSA9ICdhdm9pZCdcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogRG9u4oCZdCBwcmVmaXggc29tZSB2YWx1ZXNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgaWYgKGRlY2wucHJvcCAhPT0gJ2JyZWFrLWluc2lkZScpIHtcbiAgICAgIHJldHVybiBzdXBlci5pbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcylcbiAgICB9XG4gICAgaWYgKC9yZWdpb24vaS50ZXN0KGRlY2wudmFsdWUpIHx8IC9wYWdlL2kudGVzdChkZWNsLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gIH1cbn1cblxuQnJlYWtQcm9wcy5uYW1lcyA9IFtcbiAgJ2JyZWFrLWluc2lkZScsXG4gICdwYWdlLWJyZWFrLWluc2lkZScsXG4gICdjb2x1bW4tYnJlYWstaW5zaWRlJyxcbiAgJ2JyZWFrLWJlZm9yZScsXG4gICdwYWdlLWJyZWFrLWJlZm9yZScsXG4gICdjb2x1bW4tYnJlYWstYmVmb3JlJyxcbiAgJ2JyZWFrLWFmdGVyJyxcbiAgJ3BhZ2UtYnJlYWstYWZ0ZXInLFxuICAnY29sdW1uLWJyZWFrLWFmdGVyJ1xuXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJyZWFrUHJvcHNcbiIsImxldCBsaXN0ID0gcmVxdWlyZSgncG9zdGNzcycpLmxpc3RcblxubGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5jbGFzcyBDcm9zc0ZhZGUgZXh0ZW5kcyBWYWx1ZSB7XG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gbGlzdFxuICAgICAgLnNwYWNlKHN0cmluZylcbiAgICAgIC5tYXAodmFsdWUgPT4ge1xuICAgICAgICBpZiAodmFsdWUuc2xpY2UoMCwgK3RoaXMubmFtZS5sZW5ndGggKyAxKSAhPT0gdGhpcy5uYW1lICsgJygnKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbHVlXG4gICAgICAgIH1cblxuICAgICAgICBsZXQgY2xvc2UgPSB2YWx1ZS5sYXN0SW5kZXhPZignKScpXG4gICAgICAgIGxldCBhZnRlciA9IHZhbHVlLnNsaWNlKGNsb3NlICsgMSlcbiAgICAgICAgbGV0IGFyZ3MgPSB2YWx1ZS5zbGljZSh0aGlzLm5hbWUubGVuZ3RoICsgMSwgY2xvc2UpXG5cbiAgICAgICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgICAgIGxldCBtYXRjaCA9IGFyZ3MubWF0Y2goL1xcZCouP1xcZCslPy8pXG4gICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBhcmdzID0gYXJncy5zbGljZShtYXRjaFswXS5sZW5ndGgpLnRyaW0oKVxuICAgICAgICAgICAgYXJncyArPSBgLCAke21hdGNoWzBdfWBcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXJncyArPSAnLCAwLjUnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcmVmaXggKyB0aGlzLm5hbWUgKyAnKCcgKyBhcmdzICsgJyknICsgYWZ0ZXJcbiAgICAgIH0pXG4gICAgICAuam9pbignICcpXG4gIH1cbn1cblxuQ3Jvc3NGYWRlLm5hbWVzID0gWydjcm9zcy1mYWRlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBDcm9zc0ZhZGVcbiIsImxldCBmbGV4U3BlYyA9IHJlcXVpcmUoJy4vZmxleC1zcGVjJylcbmxldCBPbGRWYWx1ZSA9IHJlcXVpcmUoJy4uL29sZC12YWx1ZScpXG5sZXQgVmFsdWUgPSByZXF1aXJlKCcuLi92YWx1ZScpXG5cbmNsYXNzIERpc3BsYXlGbGV4IGV4dGVuZHMgVmFsdWUge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXhlcykge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzKVxuICAgIGlmIChuYW1lID09PSAnZGlzcGxheS1mbGV4Jykge1xuICAgICAgdGhpcy5uYW1lID0gJ2ZsZXgnXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZhc3RlciBjaGVjayBmb3IgZmxleCB2YWx1ZVxuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiBkZWNsLnByb3AgPT09ICdkaXNwbGF5JyAmJiBkZWNsLnZhbHVlID09PSB0aGlzLm5hbWVcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdmFsdWUgYnkgc3BlY1xuICAgKi9cbiAgcHJlZml4ZWQocHJlZml4KSB7XG4gICAgbGV0IHNwZWMsIHZhbHVlXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIGlmICh0aGlzLm5hbWUgPT09ICdmbGV4Jykge1xuICAgICAgICB2YWx1ZSA9ICdib3gnXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZSA9ICdpbmxpbmUtYm94J1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoc3BlYyA9PT0gMjAxMikge1xuICAgICAgaWYgKHRoaXMubmFtZSA9PT0gJ2ZsZXgnKSB7XG4gICAgICAgIHZhbHVlID0gJ2ZsZXhib3gnXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZSA9ICdpbmxpbmUtZmxleGJveCdcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHNwZWMgPT09ICdmaW5hbCcpIHtcbiAgICAgIHZhbHVlID0gdGhpcy5uYW1lXG4gICAgfVxuXG4gICAgcmV0dXJuIHByZWZpeCArIHZhbHVlXG4gIH1cblxuICAvKipcbiAgICogQWRkIHByZWZpeCB0byB2YWx1ZSBkZXBlbmQgb24gZmxlYm94IHNwZWMgdmVyc2lvblxuICAgKi9cbiAgcmVwbGFjZShzdHJpbmcsIHByZWZpeCkge1xuICAgIHJldHVybiB0aGlzLnByZWZpeGVkKHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdmFsdWUgZm9yIG9sZCBzcGVjc1xuICAgKi9cbiAgb2xkKHByZWZpeCkge1xuICAgIGxldCBwcmVmaXhlZCA9IHRoaXMucHJlZml4ZWQocHJlZml4KVxuICAgIGlmICghcHJlZml4ZWQpIHJldHVybiB1bmRlZmluZWRcbiAgICByZXR1cm4gbmV3IE9sZFZhbHVlKHRoaXMubmFtZSwgcHJlZml4ZWQpXG4gIH1cbn1cblxuRGlzcGxheUZsZXgubmFtZXMgPSBbJ2Rpc3BsYXktZmxleCcsICdpbmxpbmUtZmxleCddXG5cbm1vZHVsZS5leHBvcnRzID0gRGlzcGxheUZsZXhcbiIsImxldCBWYWx1ZSA9IHJlcXVpcmUoJy4uL3ZhbHVlJylcblxuY2xhc3MgRGlzcGxheUdyaWQgZXh0ZW5kcyBWYWx1ZSB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzKSB7XG4gICAgc3VwZXIobmFtZSwgcHJlZml4ZXMpXG4gICAgaWYgKG5hbWUgPT09ICdkaXNwbGF5LWdyaWQnKSB7XG4gICAgICB0aGlzLm5hbWUgPSAnZ3JpZCdcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRmFzdGVyIGNoZWNrIGZvciBmbGV4IHZhbHVlXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgcmV0dXJuIGRlY2wucHJvcCA9PT0gJ2Rpc3BsYXknICYmIGRlY2wudmFsdWUgPT09IHRoaXMubmFtZVxuICB9XG59XG5cbkRpc3BsYXlHcmlkLm5hbWVzID0gWydkaXNwbGF5LWdyaWQnLCAnaW5saW5lLWdyaWQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IERpc3BsYXlHcmlkXG4iLCJsZXQgU2VsZWN0b3IgPSByZXF1aXJlKCcuLi9zZWxlY3RvcicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpXG5cbmNsYXNzIEZpbGVTZWxlY3RvckJ1dHRvbiBleHRlbmRzIFNlbGVjdG9yIHtcbiAgY29uc3RydWN0b3IobmFtZSwgcHJlZml4ZXMsIGFsbCkge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzLCBhbGwpXG5cbiAgICBpZiAodGhpcy5wcmVmaXhlcykge1xuICAgICAgdGhpcy5wcmVmaXhlcyA9IHV0aWxzLnVuaXEodGhpcy5wcmVmaXhlcy5tYXAoKCkgPT4gJy13ZWJraXQtJykpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBkaWZmZXJlbnQgc2VsZWN0b3JzIGRlcGVuZCBvbiBwcmVmaXhcbiAgICovXG4gIHByZWZpeGVkKHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctd2Via2l0LScpIHtcbiAgICAgIHJldHVybiAnOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbidcbiAgICB9XG4gICAgcmV0dXJuIGA6OiR7cHJlZml4fWZpbGUtc2VsZWN0b3ItYnV0dG9uYFxuICB9XG59XG5cbkZpbGVTZWxlY3RvckJ1dHRvbi5uYW1lcyA9IFsnOjpmaWxlLXNlbGVjdG9yLWJ1dHRvbiddXG5cbm1vZHVsZS5leHBvcnRzID0gRmlsZVNlbGVjdG9yQnV0dG9uXG4iLCJsZXQgVmFsdWUgPSByZXF1aXJlKCcuLi92YWx1ZScpXG5cbmNsYXNzIEZpbHRlclZhbHVlIGV4dGVuZHMgVmFsdWUge1xuICBjb25zdHJ1Y3RvcihuYW1lLCBwcmVmaXhlcykge1xuICAgIHN1cGVyKG5hbWUsIHByZWZpeGVzKVxuICAgIGlmIChuYW1lID09PSAnZmlsdGVyLWZ1bmN0aW9uJykge1xuICAgICAgdGhpcy5uYW1lID0gJ2ZpbHRlcidcbiAgICB9XG4gIH1cbn1cblxuRmlsdGVyVmFsdWUubmFtZXMgPSBbJ2ZpbHRlcicsICdmaWx0ZXItZnVuY3Rpb24nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZpbHRlclZhbHVlXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEZpbHRlciBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIENoZWNrIGlzIGl0IEludGVybmV0IEV4cGxvcmVyIGZpbHRlclxuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIGxldCB2ID0gZGVjbC52YWx1ZVxuICAgIHJldHVybiAoXG4gICAgICAhdi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCdhbHBoYSgnKSAmJlxuICAgICAgIXYuaW5jbHVkZXMoJ0RYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0JykgJiZcbiAgICAgICF2LmluY2x1ZGVzKCdkYXRhOmltYWdlL3N2Zyt4bWwnKVxuICAgIClcbiAgfVxufVxuXG5GaWx0ZXIubmFtZXMgPSBbJ2ZpbHRlciddXG5cbm1vZHVsZS5leHBvcnRzID0gRmlsdGVyXG4iLCJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEZsZXhCYXNpcyBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IGZpbmFsIHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gJ2ZsZXgtYmFzaXMnXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGZsZXggcHJvcGVydHkgZm9yIDIwMTIgc3BlY1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1wcmVmZXJyZWQtc2l6ZSdcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBJZ25vcmUgMjAwOSBzcGVjIGFuZCB1c2UgZmxleCBwcm9wZXJ0eSBmb3IgMjAxMlxuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjID09PSAyMDEyIHx8IHNwZWMgPT09ICdmaW5hbCcpIHtcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuRmxleEJhc2lzLm5hbWVzID0gWydmbGV4LWJhc2lzJywgJ2ZsZXgtcHJlZmVycmVkLXNpemUnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhCYXNpc1xuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4RGlyZWN0aW9uIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnZmxleC1kaXJlY3Rpb24nXG4gIH1cblxuICAvKipcbiAgICogVXNlIHR3byBwcm9wZXJ0aWVzIGZvciAyMDA5IHNwZWNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgIT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBzdXBlci5pbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcylcbiAgICB9XG4gICAgbGV0IGFscmVhZHkgPSBkZWNsLnBhcmVudC5zb21lKFxuICAgICAgaSA9PlxuICAgICAgICBpLnByb3AgPT09IHByZWZpeCArICdib3gtb3JpZW50JyB8fCBpLnByb3AgPT09IHByZWZpeCArICdib3gtZGlyZWN0aW9uJ1xuICAgIClcbiAgICBpZiAoYWxyZWFkeSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCB2ID0gZGVjbC52YWx1ZVxuICAgIGxldCBvcmllbnQsIGRpclxuICAgIGlmICh2ID09PSAnaW5oZXJpdCcgfHwgdiA9PT0gJ2luaXRpYWwnIHx8IHYgPT09ICd1bnNldCcpIHtcbiAgICAgIG9yaWVudCA9IHZcbiAgICAgIGRpciA9IHZcbiAgICB9IGVsc2Uge1xuICAgICAgb3JpZW50ID0gdi5pbmNsdWRlcygncm93JykgPyAnaG9yaXpvbnRhbCcgOiAndmVydGljYWwnXG4gICAgICBkaXIgPSB2LmluY2x1ZGVzKCdyZXZlcnNlJykgPyAncmV2ZXJzZScgOiAnbm9ybWFsJ1xuICAgIH1cblxuICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKGRlY2wpXG4gICAgY2xvbmVkLnByb3AgPSBwcmVmaXggKyAnYm94LW9yaWVudCdcbiAgICBjbG9uZWQudmFsdWUgPSBvcmllbnRcbiAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgY2xvbmVkLnJhd3MuYmVmb3JlID0gdGhpcy5jYWxjQmVmb3JlKHByZWZpeGVzLCBkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIGRlY2wucGFyZW50Lmluc2VydEJlZm9yZShkZWNsLCBjbG9uZWQpXG5cbiAgICBjbG9uZWQgPSB0aGlzLmNsb25lKGRlY2wpXG4gICAgY2xvbmVkLnByb3AgPSBwcmVmaXggKyAnYm94LWRpcmVjdGlvbidcbiAgICBjbG9uZWQudmFsdWUgPSBkaXJcbiAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgY2xvbmVkLnJhd3MuYmVmb3JlID0gdGhpcy5jYWxjQmVmb3JlKHByZWZpeGVzLCBkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiBkZWNsLnBhcmVudC5pbnNlcnRCZWZvcmUoZGVjbCwgY2xvbmVkKVxuICB9XG5cbiAgLyoqXG4gICAqIENsZWFuIHR3byBwcm9wZXJ0aWVzIGZvciAyMDA5IHNwZWNcbiAgICovXG4gIG9sZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAwOSkge1xuICAgICAgcmV0dXJuIFtwcmVmaXggKyAnYm94LW9yaWVudCcsIHByZWZpeCArICdib3gtZGlyZWN0aW9uJ11cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN1cGVyLm9sZChwcm9wLCBwcmVmaXgpXG4gICAgfVxuICB9XG59XG5cbkZsZXhEaXJlY3Rpb24ubmFtZXMgPSBbJ2ZsZXgtZGlyZWN0aW9uJywgJ2JveC1kaXJlY3Rpb24nLCAnYm94LW9yaWVudCddXG5cbm1vZHVsZS5leHBvcnRzID0gRmxleERpcmVjdGlvblxuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4RmxvdyBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFVzZSB0d28gcHJvcGVydGllcyBmb3IgMjAwOSBzcGVjXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcykge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjICE9PSAyMDA5KSB7XG4gICAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gICAgfVxuICAgIGxldCB2YWx1ZXMgPSBkZWNsLnZhbHVlXG4gICAgICAuc3BsaXQoL1xccysvKVxuICAgICAgLmZpbHRlcihpID0+IGkgIT09ICd3cmFwJyAmJiBpICE9PSAnbm93cmFwJyAmJiAnd3JhcC1yZXZlcnNlJylcbiAgICBpZiAodmFsdWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCBhbHJlYWR5ID0gZGVjbC5wYXJlbnQuc29tZShcbiAgICAgIGkgPT5cbiAgICAgICAgaS5wcm9wID09PSBwcmVmaXggKyAnYm94LW9yaWVudCcgfHwgaS5wcm9wID09PSBwcmVmaXggKyAnYm94LWRpcmVjdGlvbidcbiAgICApXG4gICAgaWYgKGFscmVhZHkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBsZXQgdmFsdWUgPSB2YWx1ZXNbMF1cbiAgICBsZXQgb3JpZW50ID0gdmFsdWUuaW5jbHVkZXMoJ3JvdycpID8gJ2hvcml6b250YWwnIDogJ3ZlcnRpY2FsJ1xuICAgIGxldCBkaXIgPSB2YWx1ZS5pbmNsdWRlcygncmV2ZXJzZScpID8gJ3JldmVyc2UnIDogJ25vcm1hbCdcblxuICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKGRlY2wpXG4gICAgY2xvbmVkLnByb3AgPSBwcmVmaXggKyAnYm94LW9yaWVudCdcbiAgICBjbG9uZWQudmFsdWUgPSBvcmllbnRcbiAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgY2xvbmVkLnJhd3MuYmVmb3JlID0gdGhpcy5jYWxjQmVmb3JlKHByZWZpeGVzLCBkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIGRlY2wucGFyZW50Lmluc2VydEJlZm9yZShkZWNsLCBjbG9uZWQpXG5cbiAgICBjbG9uZWQgPSB0aGlzLmNsb25lKGRlY2wpXG4gICAgY2xvbmVkLnByb3AgPSBwcmVmaXggKyAnYm94LWRpcmVjdGlvbidcbiAgICBjbG9uZWQudmFsdWUgPSBkaXJcbiAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgY2xvbmVkLnJhd3MuYmVmb3JlID0gdGhpcy5jYWxjQmVmb3JlKHByZWZpeGVzLCBkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiBkZWNsLnBhcmVudC5pbnNlcnRCZWZvcmUoZGVjbCwgY2xvbmVkKVxuICB9XG59XG5cbkZsZXhGbG93Lm5hbWVzID0gWydmbGV4LWZsb3cnLCAnYm94LWRpcmVjdGlvbicsICdib3gtb3JpZW50J11cblxubW9kdWxlLmV4cG9ydHMgPSBGbGV4Rmxvd1xuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnZmxleCdcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZmxleCBwcm9wZXJ0eSBmb3IgMjAwOSBhbmQgMjAxMiBzcGVjc1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnYm94LWZsZXgnXG4gICAgfVxuICAgIGlmIChzcGVjID09PSAyMDEyKSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgJ2ZsZXgtcG9zaXRpdmUnXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cbn1cblxuRmxleC5uYW1lcyA9IFsnZmxleC1ncm93JywgJ2ZsZXgtcG9zaXRpdmUnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhcbiIsImxldCBmbGV4U3BlYyA9IHJlcXVpcmUoJy4vZmxleC1zcGVjJylcbmxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgRmxleFNocmluayBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IGZpbmFsIHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gJ2ZsZXgtc2hyaW5rJ1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBmbGV4IHByb3BlcnR5IGZvciAyMDEyIHNwZWNcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGxldCBzcGVjXG4gICAgO1tzcGVjLCBwcmVmaXhdID0gZmxleFNwZWMocHJlZml4KVxuICAgIGlmIChzcGVjID09PSAyMDEyKSB7XG4gICAgICByZXR1cm4gcHJlZml4ICsgJ2ZsZXgtbmVnYXRpdmUnXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogSWdub3JlIDIwMDkgc3BlYyBhbmQgdXNlIGZsZXggcHJvcGVydHkgZm9yIDIwMTJcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAxMiB8fCBzcGVjID09PSAnZmluYWwnKSB7XG4gICAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkZsZXhTaHJpbmsubmFtZXMgPSBbJ2ZsZXgtc2hyaW5rJywgJ2ZsZXgtbmVnYXRpdmUnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhTaHJpbmtcbiIsIi8qKlxuICogUmV0dXJuIGZsZXhib3ggc3BlYyB2ZXJzaW9ucyBieSBwcmVmaXhcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocHJlZml4KSB7XG4gIGxldCBzcGVjXG4gIGlmIChwcmVmaXggPT09ICctd2Via2l0LSAyMDA5JyB8fCBwcmVmaXggPT09ICctbW96LScpIHtcbiAgICBzcGVjID0gMjAwOVxuICB9IGVsc2UgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgc3BlYyA9IDIwMTJcbiAgfSBlbHNlIGlmIChwcmVmaXggPT09ICctd2Via2l0LScpIHtcbiAgICBzcGVjID0gJ2ZpbmFsJ1xuICB9XG5cbiAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtIDIwMDknKSB7XG4gICAgcHJlZml4ID0gJy13ZWJraXQtJ1xuICB9XG5cbiAgcmV0dXJuIFtzcGVjLCBwcmVmaXhdXG59XG4iLCJsZXQgZmxleFNwZWMgPSByZXF1aXJlKCcuL2ZsZXgtc3BlYycpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEZsZXhXcmFwIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogRG9uJ3QgYWRkIHByZWZpeCBmb3IgMjAwOSBzcGVjXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgIT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuRmxleFdyYXAubmFtZXMgPSBbJ2ZsZXgtd3JhcCddXG5cbm1vZHVsZS5leHBvcnRzID0gRmxleFdyYXBcbiIsImxldCBsaXN0ID0gcmVxdWlyZSgncG9zdGNzcycpLmxpc3RcblxubGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBGbGV4IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIDIwMDkgc3BlY1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWNcbiAgICA7W3NwZWMsIHByZWZpeF0gPSBmbGV4U3BlYyhwcmVmaXgpXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnYm94LWZsZXgnXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnZmxleCdcbiAgfVxuXG4gIC8qKlxuICAgKiBTcGVjIDIwMDkgc3VwcG9ydHMgb25seSBmaXJzdCBhcmd1bWVudFxuICAgKiBTcGVjIDIwMTIgZGlzYWxsb3dzIHVuaXRsZXNzIGJhc2lzXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgbGV0IHNwZWMgPSBmbGV4U3BlYyhwcmVmaXgpWzBdXG4gICAgaWYgKHNwZWMgPT09IDIwMDkpIHtcbiAgICAgIGRlY2wudmFsdWUgPSBsaXN0LnNwYWNlKGRlY2wudmFsdWUpWzBdXG4gICAgICBkZWNsLnZhbHVlID0gRmxleC5vbGRWYWx1ZXNbZGVjbC52YWx1ZV0gfHwgZGVjbC52YWx1ZVxuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIGlmIChzcGVjID09PSAyMDEyKSB7XG4gICAgICBsZXQgY29tcG9uZW50cyA9IGxpc3Quc3BhY2UoZGVjbC52YWx1ZSlcbiAgICAgIGlmIChjb21wb25lbnRzLmxlbmd0aCA9PT0gMyAmJiBjb21wb25lbnRzWzJdID09PSAnMCcpIHtcbiAgICAgICAgZGVjbC52YWx1ZSA9IGNvbXBvbmVudHMuc2xpY2UoMCwgMikuY29uY2F0KCcwcHgnKS5qb2luKCcgJylcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuRmxleC5uYW1lcyA9IFsnZmxleCcsICdib3gtZmxleCddXG5cbkZsZXgub2xkVmFsdWVzID0ge1xuICBhdXRvOiAnMScsXG4gIG5vbmU6ICcwJ1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZsZXhcbiIsImxldCBTZWxlY3RvciA9IHJlcXVpcmUoJy4uL3NlbGVjdG9yJylcblxuY2xhc3MgRnVsbHNjcmVlbiBleHRlbmRzIFNlbGVjdG9yIHtcbiAgLyoqXG4gICAqIFJldHVybiBkaWZmZXJlbnQgc2VsZWN0b3JzIGRlcGVuZCBvbiBwcmVmaXhcbiAgICovXG4gIHByZWZpeGVkKHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctd2Via2l0LScpIHtcbiAgICAgIHJldHVybiAnOi13ZWJraXQtZnVsbC1zY3JlZW4nXG4gICAgfVxuICAgIGlmIChwcmVmaXggPT09ICctbW96LScpIHtcbiAgICAgIHJldHVybiAnOi1tb3otZnVsbC1zY3JlZW4nXG4gICAgfVxuICAgIHJldHVybiBgOiR7cHJlZml4fWZ1bGxzY3JlZW5gXG4gIH1cbn1cblxuRnVsbHNjcmVlbi5uYW1lcyA9IFsnOmZ1bGxzY3JlZW4nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bGxzY3JlZW5cbiIsImxldCBwYXJzZXIgPSByZXF1aXJlKCdwb3N0Y3NzLXZhbHVlLXBhcnNlcicpXG5sZXQgcmFuZ2UgPSByZXF1aXJlKCdub3JtYWxpemUtcmFuZ2UnKVxuXG5sZXQgT2xkVmFsdWUgPSByZXF1aXJlKCcuLi9vbGQtdmFsdWUnKVxubGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxuXG5sZXQgSVNfRElSRUNUSU9OID0gL3RvcHxsZWZ0fHJpZ2h0fGJvdHRvbS9naVxuXG5jbGFzcyBHcmFkaWVudCBleHRlbmRzIFZhbHVlIHtcbiAgLyoqXG4gICAqIENoYW5nZSBkZWdyZWVzIGZvciB3ZWJraXQgcHJlZml4XG4gICAqL1xuICByZXBsYWNlKHN0cmluZywgcHJlZml4KSB7XG4gICAgbGV0IGFzdCA9IHBhcnNlcihzdHJpbmcpXG4gICAgZm9yIChsZXQgbm9kZSBvZiBhc3Qubm9kZXMpIHtcbiAgICAgIGxldCBncmFkaWVudE5hbWUgPSB0aGlzLm5hbWUgLy8gZ3JhZGllbnQgbmFtZVxuICAgICAgaWYgKG5vZGUudHlwZSA9PT0gJ2Z1bmN0aW9uJyAmJiBub2RlLnZhbHVlID09PSBncmFkaWVudE5hbWUpIHtcbiAgICAgICAgbm9kZS5ub2RlcyA9IHRoaXMubmV3RGlyZWN0aW9uKG5vZGUubm9kZXMpXG4gICAgICAgIG5vZGUubm9kZXMgPSB0aGlzLm5vcm1hbGl6ZShub2RlLm5vZGVzLCBncmFkaWVudE5hbWUpXG4gICAgICAgIGlmIChwcmVmaXggPT09ICctd2Via2l0LSBvbGQnKSB7XG4gICAgICAgICAgbGV0IGNoYW5nZXMgPSB0aGlzLm9sZFdlYmtpdChub2RlKVxuICAgICAgICAgIGlmICghY2hhbmdlcykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5vZGUubm9kZXMgPSB0aGlzLmNvbnZlcnREaXJlY3Rpb24obm9kZS5ub2RlcylcbiAgICAgICAgICBub2RlLnZhbHVlID0gcHJlZml4ICsgbm9kZS52YWx1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhc3QudG9TdHJpbmcoKVxuICB9XG5cbiAgLyoqXG4gICAqIFJlcGxhY2UgZmlyc3QgdG9rZW5cbiAgICovXG4gIHJlcGxhY2VGaXJzdChwYXJhbXMsIC4uLndvcmRzKSB7XG4gICAgbGV0IHByZWZpeCA9IHdvcmRzLm1hcChpID0+IHtcbiAgICAgIGlmIChpID09PSAnICcpIHtcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3NwYWNlJywgdmFsdWU6IGkgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHsgdHlwZTogJ3dvcmQnLCB2YWx1ZTogaSB9XG4gICAgfSlcbiAgICByZXR1cm4gcHJlZml4LmNvbmNhdChwYXJhbXMuc2xpY2UoMSkpXG4gIH1cblxuICAvKipcbiAgICogQ29udmVydCBhbmdsZSB1bml0IHRvIGRlZ1xuICAgKi9cbiAgbm9ybWFsaXplVW5pdChzdHIsIGZ1bGwpIHtcbiAgICBsZXQgbnVtID0gcGFyc2VGbG9hdChzdHIpXG4gICAgbGV0IGRlZyA9IChudW0gLyBmdWxsKSAqIDM2MFxuICAgIHJldHVybiBgJHtkZWd9ZGVnYFxuICB9XG5cbiAgLyoqXG4gICAqIE5vcm1hbGl6ZSBhbmdsZVxuICAgKi9cbiAgbm9ybWFsaXplKG5vZGVzLCBncmFkaWVudE5hbWUpIHtcbiAgICBpZiAoIW5vZGVzWzBdKSByZXR1cm4gbm9kZXNcblxuICAgIGlmICgvLT9cXGQrKC5cXGQrKT9ncmFkLy50ZXN0KG5vZGVzWzBdLnZhbHVlKSkge1xuICAgICAgbm9kZXNbMF0udmFsdWUgPSB0aGlzLm5vcm1hbGl6ZVVuaXQobm9kZXNbMF0udmFsdWUsIDQwMClcbiAgICB9IGVsc2UgaWYgKC8tP1xcZCsoLlxcZCspP3JhZC8udGVzdChub2Rlc1swXS52YWx1ZSkpIHtcbiAgICAgIG5vZGVzWzBdLnZhbHVlID0gdGhpcy5ub3JtYWxpemVVbml0KG5vZGVzWzBdLnZhbHVlLCAyICogTWF0aC5QSSlcbiAgICB9IGVsc2UgaWYgKC8tP1xcZCsoLlxcZCspP3R1cm4vLnRlc3Qobm9kZXNbMF0udmFsdWUpKSB7XG4gICAgICBub2Rlc1swXS52YWx1ZSA9IHRoaXMubm9ybWFsaXplVW5pdChub2Rlc1swXS52YWx1ZSwgMSlcbiAgICB9IGVsc2UgaWYgKG5vZGVzWzBdLnZhbHVlLmluY2x1ZGVzKCdkZWcnKSkge1xuICAgICAgbGV0IG51bSA9IHBhcnNlRmxvYXQobm9kZXNbMF0udmFsdWUpXG4gICAgICBudW0gPSByYW5nZS53cmFwKDAsIDM2MCwgbnVtKVxuICAgICAgbm9kZXNbMF0udmFsdWUgPSBgJHtudW19ZGVnYFxuICAgIH1cblxuICAgIGlmIChcbiAgICAgIGdyYWRpZW50TmFtZSA9PT0gJ2xpbmVhci1ncmFkaWVudCcgfHxcbiAgICAgIGdyYWRpZW50TmFtZSA9PT0gJ3JlcGVhdGluZy1saW5lYXItZ3JhZGllbnQnXG4gICAgKSB7XG4gICAgICBsZXQgZGlyZWN0aW9uID0gbm9kZXNbMF0udmFsdWVcblxuICAgICAgLy8gVW5pdGxlc3MgemVybyBmb3IgYDxhbmdsZT5gIHZhbHVlcyBhcmUgYWxsb3dlZCBpbiBDU1MgZ3JhZGllbnRzIGFuZCB0cmFuc2Zvcm1zLlxuICAgICAgLy8gU3BlYzogaHR0cHM6Ly9naXRodWIuY29tL3czYy9jc3N3Zy1kcmFmdHMvY29tbWl0LzYwMjc4OTE3MTQyOWIyMjMxMjIzYWIxZTVhY2Y4ZjdmMTE2NTJlYjNcbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICcwZGVnJyB8fCBkaXJlY3Rpb24gPT09ICcwJykge1xuICAgICAgICBub2RlcyA9IHRoaXMucmVwbGFjZUZpcnN0KG5vZGVzLCAndG8nLCAnICcsICd0b3AnKVxuICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICc5MGRlZycpIHtcbiAgICAgICAgbm9kZXMgPSB0aGlzLnJlcGxhY2VGaXJzdChub2RlcywgJ3RvJywgJyAnLCAncmlnaHQnKVxuICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICcxODBkZWcnKSB7XG4gICAgICAgIG5vZGVzID0gdGhpcy5yZXBsYWNlRmlyc3Qobm9kZXMsICd0bycsICcgJywgJ2JvdHRvbScpIC8vIGRlZmF1bHQgdmFsdWVcbiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnMjcwZGVnJykge1xuICAgICAgICBub2RlcyA9IHRoaXMucmVwbGFjZUZpcnN0KG5vZGVzLCAndG8nLCAnICcsICdsZWZ0JylcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbm9kZXNcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlIG9sZCBkaXJlY3Rpb24gdG8gbmV3XG4gICAqL1xuICBuZXdEaXJlY3Rpb24ocGFyYW1zKSB7XG4gICAgaWYgKHBhcmFtc1swXS52YWx1ZSA9PT0gJ3RvJykge1xuICAgICAgcmV0dXJuIHBhcmFtc1xuICAgIH1cbiAgICBJU19ESVJFQ1RJT04ubGFzdEluZGV4ID0gMCAvLyByZXNldCBzZWFyY2ggaW5kZXggb2YgZ2xvYmFsIHJlZ2V4cFxuICAgIGlmICghSVNfRElSRUNUSU9OLnRlc3QocGFyYW1zWzBdLnZhbHVlKSkge1xuICAgICAgcmV0dXJuIHBhcmFtc1xuICAgIH1cblxuICAgIHBhcmFtcy51bnNoaWZ0KFxuICAgICAge1xuICAgICAgICB0eXBlOiAnd29yZCcsXG4gICAgICAgIHZhbHVlOiAndG8nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0eXBlOiAnc3BhY2UnLFxuICAgICAgICB2YWx1ZTogJyAnXG4gICAgICB9XG4gICAgKVxuXG4gICAgZm9yIChsZXQgaSA9IDI7IGkgPCBwYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChwYXJhbXNbaV0udHlwZSA9PT0gJ2RpdicpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICAgIGlmIChwYXJhbXNbaV0udHlwZSA9PT0gJ3dvcmQnKSB7XG4gICAgICAgIHBhcmFtc1tpXS52YWx1ZSA9IHRoaXMucmV2ZXJ0RGlyZWN0aW9uKHBhcmFtc1tpXS52YWx1ZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcGFyYW1zXG4gIH1cblxuICAvKipcbiAgICogTG9vayBmb3IgYXQgd29yZFxuICAgKi9cbiAgaXNSYWRpYWwocGFyYW1zKSB7XG4gICAgbGV0IHN0YXRlID0gJ2JlZm9yZSdcbiAgICBmb3IgKGxldCBwYXJhbSBvZiBwYXJhbXMpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gJ2JlZm9yZScgJiYgcGFyYW0udHlwZSA9PT0gJ3NwYWNlJykge1xuICAgICAgICBzdGF0ZSA9ICdhdCdcbiAgICAgIH0gZWxzZSBpZiAoc3RhdGUgPT09ICdhdCcgJiYgcGFyYW0udmFsdWUgPT09ICdhdCcpIHtcbiAgICAgICAgc3RhdGUgPSAnYWZ0ZXInXG4gICAgICB9IGVsc2UgaWYgKHN0YXRlID09PSAnYWZ0ZXInICYmIHBhcmFtLnR5cGUgPT09ICdzcGFjZScpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH0gZWxzZSBpZiAocGFyYW0udHlwZSA9PT0gJ2RpdicpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0YXRlID0gJ2JlZm9yZSdcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIG5ldyBkaXJlY3Rpb24gdG8gb2xkXG4gICAqL1xuICBjb252ZXJ0RGlyZWN0aW9uKHBhcmFtcykge1xuICAgIGlmIChwYXJhbXMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKHBhcmFtc1swXS52YWx1ZSA9PT0gJ3RvJykge1xuICAgICAgICB0aGlzLmZpeERpcmVjdGlvbihwYXJhbXMpXG4gICAgICB9IGVsc2UgaWYgKHBhcmFtc1swXS52YWx1ZS5pbmNsdWRlcygnZGVnJykpIHtcbiAgICAgICAgdGhpcy5maXhBbmdsZShwYXJhbXMpXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNSYWRpYWwocGFyYW1zKSkge1xuICAgICAgICB0aGlzLmZpeFJhZGlhbChwYXJhbXMpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwYXJhbXNcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlIGB0byB0b3AgbGVmdGAgdG8gYGJvdHRvbSByaWdodGBcbiAgICovXG4gIGZpeERpcmVjdGlvbihwYXJhbXMpIHtcbiAgICBwYXJhbXMuc3BsaWNlKDAsIDIpXG5cbiAgICBmb3IgKGxldCBwYXJhbSBvZiBwYXJhbXMpIHtcbiAgICAgIGlmIChwYXJhbS50eXBlID09PSAnZGl2Jykge1xuICAgICAgICBicmVha1xuICAgICAgfVxuICAgICAgaWYgKHBhcmFtLnR5cGUgPT09ICd3b3JkJykge1xuICAgICAgICBwYXJhbS52YWx1ZSA9IHRoaXMucmV2ZXJ0RGlyZWN0aW9uKHBhcmFtLnZhbHVlKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgOTAgZGVncmVlc1xuICAgKi9cbiAgZml4QW5nbGUocGFyYW1zKSB7XG4gICAgbGV0IGZpcnN0ID0gcGFyYW1zWzBdLnZhbHVlXG4gICAgZmlyc3QgPSBwYXJzZUZsb2F0KGZpcnN0KVxuICAgIGZpcnN0ID0gTWF0aC5hYnMoNDUwIC0gZmlyc3QpICUgMzYwXG4gICAgZmlyc3QgPSB0aGlzLnJvdW5kRmxvYXQoZmlyc3QsIDMpXG4gICAgcGFyYW1zWzBdLnZhbHVlID0gYCR7Zmlyc3R9ZGVnYFxuICB9XG5cbiAgLyoqXG4gICAqIEZpeCByYWRpYWwgZGlyZWN0aW9uIHN5bnRheFxuICAgKi9cbiAgZml4UmFkaWFsKHBhcmFtcykge1xuICAgIGxldCBmaXJzdCA9IFtdXG4gICAgbGV0IHNlY29uZCA9IFtdXG4gICAgbGV0IGEsIGIsIGMsIGksIG5leHRcblxuICAgIGZvciAoaSA9IDA7IGkgPCBwYXJhbXMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICBhID0gcGFyYW1zW2ldXG4gICAgICBiID0gcGFyYW1zW2kgKyAxXVxuICAgICAgYyA9IHBhcmFtc1tpICsgMl1cbiAgICAgIGlmIChhLnR5cGUgPT09ICdzcGFjZScgJiYgYi52YWx1ZSA9PT0gJ2F0JyAmJiBjLnR5cGUgPT09ICdzcGFjZScpIHtcbiAgICAgICAgbmV4dCA9IGkgKyAzXG4gICAgICAgIGJyZWFrXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaXJzdC5wdXNoKGEpXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IGRpdlxuICAgIGZvciAoaSA9IG5leHQ7IGkgPCBwYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChwYXJhbXNbaV0udHlwZSA9PT0gJ2RpdicpIHtcbiAgICAgICAgZGl2ID0gcGFyYW1zW2ldXG4gICAgICAgIGJyZWFrXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWNvbmQucHVzaChwYXJhbXNbaV0pXG4gICAgICB9XG4gICAgfVxuXG4gICAgcGFyYW1zLnNwbGljZSgwLCBpLCAuLi5zZWNvbmQsIGRpdiwgLi4uZmlyc3QpXG4gIH1cblxuICByZXZlcnREaXJlY3Rpb24od29yZCkge1xuICAgIHJldHVybiBHcmFkaWVudC5kaXJlY3Rpb25zW3dvcmQudG9Mb3dlckNhc2UoKV0gfHwgd29yZFxuICB9XG5cbiAgLyoqXG4gICAqIFJvdW5kIGZsb2F0IGFuZCBzYXZlIGRpZ2l0cyB1bmRlciBkb3RcbiAgICovXG4gIHJvdW5kRmxvYXQoZmxvYXQsIGRpZ2l0cykge1xuICAgIHJldHVybiBwYXJzZUZsb2F0KGZsb2F0LnRvRml4ZWQoZGlnaXRzKSlcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0IHRvIG9sZCB3ZWJraXQgc3ludGF4XG4gICAqL1xuICBvbGRXZWJraXQobm9kZSkge1xuICAgIGxldCB7IG5vZGVzIH0gPSBub2RlXG4gICAgbGV0IHN0cmluZyA9IHBhcnNlci5zdHJpbmdpZnkobm9kZS5ub2RlcylcblxuICAgIGlmICh0aGlzLm5hbWUgIT09ICdsaW5lYXItZ3JhZGllbnQnKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgaWYgKG5vZGVzWzBdICYmIG5vZGVzWzBdLnZhbHVlLmluY2x1ZGVzKCdkZWcnKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIGlmIChcbiAgICAgIHN0cmluZy5pbmNsdWRlcygncHgnKSB8fFxuICAgICAgc3RyaW5nLmluY2x1ZGVzKCctY29ybmVyJykgfHxcbiAgICAgIHN0cmluZy5pbmNsdWRlcygnLXNpZGUnKVxuICAgICkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgbGV0IHBhcmFtcyA9IFtbXV1cbiAgICBmb3IgKGxldCBpIG9mIG5vZGVzKSB7XG4gICAgICBwYXJhbXNbcGFyYW1zLmxlbmd0aCAtIDFdLnB1c2goaSlcbiAgICAgIGlmIChpLnR5cGUgPT09ICdkaXYnICYmIGkudmFsdWUgPT09ICcsJykge1xuICAgICAgICBwYXJhbXMucHVzaChbXSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm9sZERpcmVjdGlvbihwYXJhbXMpXG4gICAgdGhpcy5jb2xvclN0b3BzKHBhcmFtcylcblxuICAgIG5vZGUubm9kZXMgPSBbXVxuICAgIGZvciAobGV0IHBhcmFtIG9mIHBhcmFtcykge1xuICAgICAgbm9kZS5ub2RlcyA9IG5vZGUubm9kZXMuY29uY2F0KHBhcmFtKVxuICAgIH1cblxuICAgIG5vZGUubm9kZXMudW5zaGlmdChcbiAgICAgIHsgdHlwZTogJ3dvcmQnLCB2YWx1ZTogJ2xpbmVhcicgfSxcbiAgICAgIHRoaXMuY2xvbmVEaXYobm9kZS5ub2RlcylcbiAgICApXG4gICAgbm9kZS52YWx1ZSA9ICctd2Via2l0LWdyYWRpZW50J1xuXG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgZGlyZWN0aW9uIHN5bnRheCB0byBvbGQgd2Via2l0XG4gICAqL1xuICBvbGREaXJlY3Rpb24ocGFyYW1zKSB7XG4gICAgbGV0IGRpdiA9IHRoaXMuY2xvbmVEaXYocGFyYW1zWzBdKVxuXG4gICAgaWYgKHBhcmFtc1swXVswXS52YWx1ZSAhPT0gJ3RvJykge1xuICAgICAgcmV0dXJuIHBhcmFtcy51bnNoaWZ0KFtcbiAgICAgICAgeyB0eXBlOiAnd29yZCcsIHZhbHVlOiBHcmFkaWVudC5vbGREaXJlY3Rpb25zLmJvdHRvbSB9LFxuICAgICAgICBkaXZcbiAgICAgIF0pXG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCB3b3JkcyA9IFtdXG4gICAgICBmb3IgKGxldCBub2RlIG9mIHBhcmFtc1swXS5zbGljZSgyKSkge1xuICAgICAgICBpZiAobm9kZS50eXBlID09PSAnd29yZCcpIHtcbiAgICAgICAgICB3b3Jkcy5wdXNoKG5vZGUudmFsdWUudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB3b3JkcyA9IHdvcmRzLmpvaW4oJyAnKVxuICAgICAgbGV0IG9sZCA9IEdyYWRpZW50Lm9sZERpcmVjdGlvbnNbd29yZHNdIHx8IHdvcmRzXG5cbiAgICAgIHBhcmFtc1swXSA9IFt7IHR5cGU6ICd3b3JkJywgdmFsdWU6IG9sZCB9LCBkaXZdXG4gICAgICByZXR1cm4gcGFyYW1zWzBdXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdldCBkaXYgdG9rZW4gZnJvbSBleGlzdHMgcGFyYW1ldGVyc1xuICAgKi9cbiAgY2xvbmVEaXYocGFyYW1zKSB7XG4gICAgZm9yIChsZXQgaSBvZiBwYXJhbXMpIHtcbiAgICAgIGlmIChpLnR5cGUgPT09ICdkaXYnICYmIGkudmFsdWUgPT09ICcsJykge1xuICAgICAgICByZXR1cm4gaVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyB0eXBlOiAnZGl2JywgdmFsdWU6ICcsJywgYWZ0ZXI6ICcgJyB9XG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIGNvbG9ycyBzeW50YXggdG8gb2xkIHdlYmtpdFxuICAgKi9cbiAgY29sb3JTdG9wcyhwYXJhbXMpIHtcbiAgICBsZXQgcmVzdWx0ID0gW11cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhcmFtcy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IHBvc1xuICAgICAgbGV0IHBhcmFtID0gcGFyYW1zW2ldXG4gICAgICBsZXQgaXRlbVxuICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgbGV0IGNvbG9yID0gcGFyc2VyLnN0cmluZ2lmeShwYXJhbVswXSlcbiAgICAgIGlmIChwYXJhbVsxXSAmJiBwYXJhbVsxXS50eXBlID09PSAnd29yZCcpIHtcbiAgICAgICAgcG9zID0gcGFyYW1bMV0udmFsdWVcbiAgICAgIH0gZWxzZSBpZiAocGFyYW1bMl0gJiYgcGFyYW1bMl0udHlwZSA9PT0gJ3dvcmQnKSB7XG4gICAgICAgIHBvcyA9IHBhcmFtWzJdLnZhbHVlXG4gICAgICB9XG5cbiAgICAgIGxldCBzdG9wXG4gICAgICBpZiAoaSA9PT0gMSAmJiAoIXBvcyB8fCBwb3MgPT09ICcwJScpKSB7XG4gICAgICAgIHN0b3AgPSBgZnJvbSgke2NvbG9yfSlgXG4gICAgICB9IGVsc2UgaWYgKGkgPT09IHBhcmFtcy5sZW5ndGggLSAxICYmICghcG9zIHx8IHBvcyA9PT0gJzEwMCUnKSkge1xuICAgICAgICBzdG9wID0gYHRvKCR7Y29sb3J9KWBcbiAgICAgIH0gZWxzZSBpZiAocG9zKSB7XG4gICAgICAgIHN0b3AgPSBgY29sb3Itc3RvcCgke3Bvc30sICR7Y29sb3J9KWBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0b3AgPSBgY29sb3Itc3RvcCgke2NvbG9yfSlgXG4gICAgICB9XG5cbiAgICAgIGxldCBkaXYgPSBwYXJhbVtwYXJhbS5sZW5ndGggLSAxXVxuICAgICAgcGFyYW1zW2ldID0gW3sgdHlwZTogJ3dvcmQnLCB2YWx1ZTogc3RvcCB9XVxuICAgICAgaWYgKGRpdi50eXBlID09PSAnZGl2JyAmJiBkaXYudmFsdWUgPT09ICcsJykge1xuICAgICAgICBpdGVtID0gcGFyYW1zW2ldLnB1c2goZGl2KVxuICAgICAgfVxuICAgICAgcmVzdWx0LnB1c2goaXRlbSlcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBvbGQgV2ViS2l0IGdyYWRpZW50IHRvb1xuICAgKi9cbiAgb2xkKHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctd2Via2l0LScpIHtcbiAgICAgIGxldCB0eXBlXG4gICAgICBpZiAodGhpcy5uYW1lID09PSAnbGluZWFyLWdyYWRpZW50Jykge1xuICAgICAgICB0eXBlID0gJ2xpbmVhcidcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5uYW1lID09PSAncmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCcpIHtcbiAgICAgICAgdHlwZSA9ICdyZXBlYXRpbmctbGluZWFyJ1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm5hbWUgPT09ICdyZXBlYXRpbmctcmFkaWFsLWdyYWRpZW50Jykge1xuICAgICAgICB0eXBlID0gJ3JlcGVhdGluZy1yYWRpYWwnXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0eXBlID0gJ3JhZGlhbCdcbiAgICAgIH1cbiAgICAgIGxldCBzdHJpbmcgPSAnLWdyYWRpZW50J1xuICAgICAgbGV0IHJlZ2V4cCA9IHV0aWxzLnJlZ2V4cChcbiAgICAgICAgYC13ZWJraXQtKCR7dHlwZX0tZ3JhZGllbnR8Z3JhZGllbnRcXFxcKFxcXFxzKiR7dHlwZX0pYCxcbiAgICAgICAgZmFsc2VcbiAgICAgIClcblxuICAgICAgcmV0dXJuIG5ldyBPbGRWYWx1ZSh0aGlzLm5hbWUsIHByZWZpeCArIHRoaXMubmFtZSwgc3RyaW5nLCByZWdleHApXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzdXBlci5vbGQocHJlZml4KVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEbyBub3QgYWRkIG5vbi13ZWJraXQgcHJlZml4ZXMgZm9yIGxpc3Qtc3R5bGUgYW5kIG9iamVjdFxuICAgKi9cbiAgYWRkKGRlY2wsIHByZWZpeCkge1xuICAgIGxldCBwID0gZGVjbC5wcm9wXG4gICAgaWYgKHAuaW5jbHVkZXMoJ21hc2snKSkge1xuICAgICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJyB8fCBwcmVmaXggPT09ICctd2Via2l0LSBvbGQnKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5hZGQoZGVjbCwgcHJlZml4KVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICBwID09PSAnbGlzdC1zdHlsZScgfHxcbiAgICAgIHAgPT09ICdsaXN0LXN0eWxlLWltYWdlJyB8fFxuICAgICAgcCA9PT0gJ2NvbnRlbnQnXG4gICAgKSB7XG4gICAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nIHx8IHByZWZpeCA9PT0gJy13ZWJraXQtIG9sZCcpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmFkZChkZWNsLCBwcmVmaXgpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzdXBlci5hZGQoZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuR3JhZGllbnQubmFtZXMgPSBbXG4gICdsaW5lYXItZ3JhZGllbnQnLFxuICAncmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCcsXG4gICdyYWRpYWwtZ3JhZGllbnQnLFxuICAncmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudCdcbl1cblxuR3JhZGllbnQuZGlyZWN0aW9ucyA9IHtcbiAgdG9wOiAnYm90dG9tJywgLy8gZGVmYXVsdCB2YWx1ZVxuICBsZWZ0OiAncmlnaHQnLFxuICBib3R0b206ICd0b3AnLFxuICByaWdodDogJ2xlZnQnXG59XG5cbi8vIERpcmVjdGlvbiB0byByZXBsYWNlXG5HcmFkaWVudC5vbGREaXJlY3Rpb25zID0ge1xuICAndG9wJzogJ2xlZnQgYm90dG9tLCBsZWZ0IHRvcCcsXG4gICdsZWZ0JzogJ3JpZ2h0IHRvcCwgbGVmdCB0b3AnLFxuICAnYm90dG9tJzogJ2xlZnQgdG9wLCBsZWZ0IGJvdHRvbScsXG4gICdyaWdodCc6ICdsZWZ0IHRvcCwgcmlnaHQgdG9wJyxcblxuICAndG9wIHJpZ2h0JzogJ2xlZnQgYm90dG9tLCByaWdodCB0b3AnLFxuICAndG9wIGxlZnQnOiAncmlnaHQgYm90dG9tLCBsZWZ0IHRvcCcsXG4gICdyaWdodCB0b3AnOiAnbGVmdCBib3R0b20sIHJpZ2h0IHRvcCcsXG4gICdyaWdodCBib3R0b20nOiAnbGVmdCB0b3AsIHJpZ2h0IGJvdHRvbScsXG4gICdib3R0b20gcmlnaHQnOiAnbGVmdCB0b3AsIHJpZ2h0IGJvdHRvbScsXG4gICdib3R0b20gbGVmdCc6ICdyaWdodCB0b3AsIGxlZnQgYm90dG9tJyxcbiAgJ2xlZnQgdG9wJzogJ3JpZ2h0IGJvdHRvbSwgbGVmdCB0b3AnLFxuICAnbGVmdCBib3R0b20nOiAncmlnaHQgdG9wLCBsZWZ0IGJvdHRvbSdcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBHcmFkaWVudFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi9ncmlkLXV0aWxzJylcblxuY2xhc3MgR3JpZEFyZWEgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGUgZ3JpZC1hcmVhIHRvIHNlcGFyYXRlIC1tcy0gcHJlZml4ZWQgcHJvcGVydGllc1xuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMsIHJlc3VsdCkge1xuICAgIGlmIChwcmVmaXggIT09ICctbXMtJykgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuXG4gICAgbGV0IHZhbHVlcyA9IHV0aWxzLnBhcnNlKGRlY2wpXG5cbiAgICBsZXQgW3Jvd1N0YXJ0LCByb3dTcGFuXSA9IHV0aWxzLnRyYW5zbGF0ZSh2YWx1ZXMsIDAsIDIpXG4gICAgbGV0IFtjb2x1bW5TdGFydCwgY29sdW1uU3Bhbl0gPSB1dGlscy50cmFuc2xhdGUodmFsdWVzLCAxLCAzKVxuXG4gICAgO1tcbiAgICAgIFsnZ3JpZC1yb3cnLCByb3dTdGFydF0sXG4gICAgICBbJ2dyaWQtcm93LXNwYW4nLCByb3dTcGFuXSxcbiAgICAgIFsnZ3JpZC1jb2x1bW4nLCBjb2x1bW5TdGFydF0sXG4gICAgICBbJ2dyaWQtY29sdW1uLXNwYW4nLCBjb2x1bW5TcGFuXVxuICAgIF0uZm9yRWFjaCgoW3Byb3AsIHZhbHVlXSkgPT4ge1xuICAgICAgdXRpbHMuaW5zZXJ0RGVjbChkZWNsLCBwcm9wLCB2YWx1ZSlcbiAgICB9KVxuXG4gICAgdXRpbHMud2FyblRlbXBsYXRlU2VsZWN0b3JOb3RGb3VuZChkZWNsLCByZXN1bHQpXG4gICAgdXRpbHMud2FybklmR3JpZFJvd0NvbHVtbkV4aXN0cyhkZWNsLCByZXN1bHQpXG5cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuR3JpZEFyZWEubmFtZXMgPSBbJ2dyaWQtYXJlYSddXG5cbm1vZHVsZS5leHBvcnRzID0gR3JpZEFyZWFcbiIsImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgR3JpZENvbHVtbkFsaWduIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogRG8gbm90IHByZWZpeCBmbGV4Ym94IHZhbHVlc1xuICAgKi9cbiAgY2hlY2soZGVjbCkge1xuICAgIHJldHVybiAhZGVjbC52YWx1ZS5pbmNsdWRlcygnZmxleC0nKSAmJiBkZWNsLnZhbHVlICE9PSAnYmFzZWxpbmUnXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIElFXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gcHJlZml4ICsgJ2dyaWQtY29sdW1uLWFsaWduJ1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBJRSBwcm9wZXJ0eSBiYWNrXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdqdXN0aWZ5LXNlbGYnXG4gIH1cbn1cblxuR3JpZENvbHVtbkFsaWduLm5hbWVzID0gWydncmlkLWNvbHVtbi1hbGlnbiddXG5cbm1vZHVsZS5leHBvcnRzID0gR3JpZENvbHVtbkFsaWduXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgeyBpc1B1cmVOdW1iZXIgfSA9IHJlcXVpcmUoJy4uL3V0aWxzJylcblxuY2xhc3MgR3JpZEVuZCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIENoYW5nZSByZXBlYXRpbmcgc3ludGF4IGZvciBJRVxuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMsIHJlc3VsdCkge1xuICAgIGlmIChwcmVmaXggIT09ICctbXMtJykgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuXG4gICAgbGV0IGNsb25lZERlY2wgPSB0aGlzLmNsb25lKGRlY2wpXG5cbiAgICBsZXQgc3RhcnRQcm9wID0gZGVjbC5wcm9wLnJlcGxhY2UoL2VuZCQvLCAnc3RhcnQnKVxuICAgIGxldCBzcGFuUHJvcCA9IHByZWZpeCArIGRlY2wucHJvcC5yZXBsYWNlKC9lbmQkLywgJ3NwYW4nKVxuXG4gICAgaWYgKGRlY2wucGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09IHNwYW5Qcm9wKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGNsb25lZERlY2wucHJvcCA9IHNwYW5Qcm9wXG5cbiAgICBpZiAoZGVjbC52YWx1ZS5pbmNsdWRlcygnc3BhbicpKSB7XG4gICAgICBjbG9uZWREZWNsLnZhbHVlID0gZGVjbC52YWx1ZS5yZXBsYWNlKC9zcGFuXFxzL2ksICcnKVxuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgc3RhcnREZWNsXG4gICAgICBkZWNsLnBhcmVudC53YWxrRGVjbHMoc3RhcnRQcm9wLCBkID0+IHtcbiAgICAgICAgc3RhcnREZWNsID0gZFxuICAgICAgfSlcbiAgICAgIGlmIChzdGFydERlY2wpIHtcbiAgICAgICAgaWYgKGlzUHVyZU51bWJlcihzdGFydERlY2wudmFsdWUpKSB7XG4gICAgICAgICAgbGV0IHZhbHVlID0gTnVtYmVyKGRlY2wudmFsdWUpIC0gTnVtYmVyKHN0YXJ0RGVjbC52YWx1ZSkgKyAnJ1xuICAgICAgICAgIGNsb25lZERlY2wudmFsdWUgPSB2YWx1ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVjbC53YXJuKFxuICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICBgQ2FuIG5vdCBwcmVmaXggJHtkZWNsLnByb3B9ICgke3N0YXJ0UHJvcH0gaXMgbm90IGZvdW5kKWBcbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cblxuICAgIGRlY2wuY2xvbmVCZWZvcmUoY2xvbmVkRGVjbClcblxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5HcmlkRW5kLm5hbWVzID0gWydncmlkLXJvdy1lbmQnLCAnZ3JpZC1jb2x1bW4tZW5kJ11cblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkRW5kXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEdyaWRSb3dBbGlnbiBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIERvIG5vdCBwcmVmaXggZmxleGJveCB2YWx1ZXNcbiAgICovXG4gIGNoZWNrKGRlY2wpIHtcbiAgICByZXR1cm4gIWRlY2wudmFsdWUuaW5jbHVkZXMoJ2ZsZXgtJykgJiYgZGVjbC52YWx1ZSAhPT0gJ2Jhc2VsaW5lJ1xuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciBJRVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIHByZWZpeCArICdncmlkLXJvdy1hbGlnbidcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgSUUgcHJvcGVydHkgYmFja1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnYWxpZ24tc2VsZidcbiAgfVxufVxuXG5HcmlkUm93QWxpZ24ubmFtZXMgPSBbJ2dyaWQtcm93LWFsaWduJ11cblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkUm93QWxpZ25cbiIsImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4vZ3JpZC11dGlscycpXG5cbmNsYXNzIEdyaWRSb3dDb2x1bW4gZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGUgZ3JpZC1yb3cgLyBncmlkLWNvbHVtbiB0byBzZXBhcmF0ZSAtbXMtIHByZWZpeGVkIHByb3BlcnRpZXNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBsZXQgdmFsdWVzID0gdXRpbHMucGFyc2UoZGVjbClcbiAgICBsZXQgW3N0YXJ0LCBzcGFuXSA9IHV0aWxzLnRyYW5zbGF0ZSh2YWx1ZXMsIDAsIDEpXG5cbiAgICBsZXQgaGFzU3RhcnRWYWx1ZVNwYW4gPSB2YWx1ZXNbMF0gJiYgdmFsdWVzWzBdLmluY2x1ZGVzKCdzcGFuJylcblxuICAgIGlmIChoYXNTdGFydFZhbHVlU3Bhbikge1xuICAgICAgc3BhbiA9IHZhbHVlc1swXS5qb2luKCcnKS5yZXBsYWNlKC9cXEQvZywgJycpXG4gICAgfVxuXG4gICAgO1tcbiAgICAgIFtkZWNsLnByb3AsIHN0YXJ0XSxcbiAgICAgIFtgJHtkZWNsLnByb3B9LXNwYW5gLCBzcGFuXVxuICAgIF0uZm9yRWFjaCgoW3Byb3AsIHZhbHVlXSkgPT4ge1xuICAgICAgdXRpbHMuaW5zZXJ0RGVjbChkZWNsLCBwcm9wLCB2YWx1ZSlcbiAgICB9KVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9XG59XG5cbkdyaWRSb3dDb2x1bW4ubmFtZXMgPSBbJ2dyaWQtcm93JywgJ2dyaWQtY29sdW1uJ11cblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkUm93Q29sdW1uXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQge1xuICBwcmVmaXhUcmFja1Byb3AsXG4gIHByZWZpeFRyYWNrVmFsdWUsXG4gIGF1dG9wbGFjZUdyaWRJdGVtcyxcbiAgZ2V0R3JpZEdhcCxcbiAgaW5oZXJpdEdyaWRHYXBcbn0gPSByZXF1aXJlKCcuL2dyaWQtdXRpbHMnKVxubGV0IFByb2Nlc3NvciA9IHJlcXVpcmUoJy4uL3Byb2Nlc3NvcicpXG5cbmNsYXNzIEdyaWRSb3dzQ29sdW1ucyBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciBJRVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICByZXR1cm4gcHJlZml4VHJhY2tQcm9wKHsgcHJvcCwgcHJlZml4IH0pXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlIElFIHByb3BlcnR5IGJhY2tcbiAgICovXG4gIG5vcm1hbGl6ZShwcm9wKSB7XG4gICAgcmV0dXJuIHByb3AucmVwbGFjZSgvXmdyaWQtKHJvd3N8Y29sdW1ucykvLCAnZ3JpZC10ZW1wbGF0ZS0kMScpXG4gIH1cblxuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBsZXQgeyBwYXJlbnQsIHByb3AsIHZhbHVlIH0gPSBkZWNsXG4gICAgbGV0IGlzUm93UHJvcCA9IHByb3AuaW5jbHVkZXMoJ3Jvd3MnKVxuICAgIGxldCBpc0NvbHVtblByb3AgPSBwcm9wLmluY2x1ZGVzKCdjb2x1bW5zJylcblxuICAgIGxldCBoYXNHcmlkVGVtcGxhdGUgPSBwYXJlbnQuc29tZShcbiAgICAgIGkgPT4gaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZScgfHwgaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1hcmVhcydcbiAgICApXG5cbiAgICAvKipcbiAgICAgKiBOb3QgdG8gcHJlZml4IHJvd3MgZGVjbGFyYXRpb24gaWYgZ3JpZC10ZW1wbGF0ZSgtYXJlYXMpIGlzIHByZXNlbnRcbiAgICAgKi9cbiAgICBpZiAoaGFzR3JpZFRlbXBsYXRlICYmIGlzUm93UHJvcCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgbGV0IHByb2Nlc3NvciA9IG5ldyBQcm9jZXNzb3IoeyBvcHRpb25zOiB7fSB9KVxuICAgIGxldCBzdGF0dXMgPSBwcm9jZXNzb3IuZ3JpZFN0YXR1cyhwYXJlbnQsIHJlc3VsdClcbiAgICBsZXQgZ2FwID0gZ2V0R3JpZEdhcChkZWNsKVxuICAgIGdhcCA9IGluaGVyaXRHcmlkR2FwKGRlY2wsIGdhcCkgfHwgZ2FwXG5cbiAgICBsZXQgZ2FwVmFsdWUgPSBpc1Jvd1Byb3AgPyBnYXAucm93IDogZ2FwLmNvbHVtblxuXG4gICAgaWYgKChzdGF0dXMgPT09ICduby1hdXRvcGxhY2UnIHx8IHN0YXR1cyA9PT0gdHJ1ZSkgJiYgIWhhc0dyaWRUZW1wbGF0ZSkge1xuICAgICAgZ2FwVmFsdWUgPSBudWxsXG4gICAgfVxuXG4gICAgbGV0IHByZWZpeFZhbHVlID0gcHJlZml4VHJhY2tWYWx1ZSh7XG4gICAgICB2YWx1ZSxcbiAgICAgIGdhcDogZ2FwVmFsdWVcbiAgICB9KVxuXG4gICAgLyoqXG4gICAgICogSW5zZXJ0IHByZWZpeGVzXG4gICAgICovXG4gICAgZGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICBwcm9wOiBwcmVmaXhUcmFja1Byb3AoeyBwcm9wLCBwcmVmaXggfSksXG4gICAgICB2YWx1ZTogcHJlZml4VmFsdWVcbiAgICB9KVxuXG4gICAgbGV0IGF1dG9mbG93ID0gcGFyZW50Lm5vZGVzLmZpbmQoaSA9PiBpLnByb3AgPT09ICdncmlkLWF1dG8tZmxvdycpXG4gICAgbGV0IGF1dG9mbG93VmFsdWUgPSAncm93J1xuXG4gICAgaWYgKGF1dG9mbG93ICYmICFwcm9jZXNzb3IuZGlzYWJsZWQoYXV0b2Zsb3csIHJlc3VsdCkpIHtcbiAgICAgIGF1dG9mbG93VmFsdWUgPSBhdXRvZmxvdy52YWx1ZS50cmltKClcbiAgICB9XG4gICAgaWYgKHN0YXR1cyA9PT0gJ2F1dG9wbGFjZScpIHtcbiAgICAgIC8qKlxuICAgICAgICogU2hvdyB3YXJuaW5nIGlmIGdyaWQtdGVtcGxhdGUtcm93cyBkZWNsIGlzIG5vdCBmb3VuZFxuICAgICAgICovXG4gICAgICBsZXQgcm93RGVjbCA9IHBhcmVudC5ub2Rlcy5maW5kKGkgPT4gaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1yb3dzJylcblxuICAgICAgaWYgKCFyb3dEZWNsICYmIGhhc0dyaWRUZW1wbGF0ZSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9IGVsc2UgaWYgKCFyb3dEZWNsICYmICFoYXNHcmlkVGVtcGxhdGUpIHtcbiAgICAgICAgZGVjbC53YXJuKFxuICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAnQXV0b3BsYWNlbWVudCBkb2VzIG5vdCB3b3JrIHdpdGhvdXQgZ3JpZC10ZW1wbGF0ZS1yb3dzIHByb3BlcnR5J1xuICAgICAgICApXG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBTaG93IHdhcm5pbmcgaWYgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zIGRlY2wgaXMgbm90IGZvdW5kXG4gICAgICAgKi9cbiAgICAgIGxldCBjb2x1bW5EZWNsID0gcGFyZW50Lm5vZGVzLmZpbmQoaSA9PiB7XG4gICAgICAgIHJldHVybiBpLnByb3AgPT09ICdncmlkLXRlbXBsYXRlLWNvbHVtbnMnXG4gICAgICB9KVxuICAgICAgaWYgKCFjb2x1bW5EZWNsICYmICFoYXNHcmlkVGVtcGxhdGUpIHtcbiAgICAgICAgZGVjbC53YXJuKFxuICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAnQXV0b3BsYWNlbWVudCBkb2VzIG5vdCB3b3JrIHdpdGhvdXQgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zIHByb3BlcnR5J1xuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQXV0b3BsYWNlIGdyaWQgaXRlbXNcbiAgICAgICAqL1xuICAgICAgaWYgKGlzQ29sdW1uUHJvcCAmJiAhaGFzR3JpZFRlbXBsYXRlKSB7XG4gICAgICAgIGF1dG9wbGFjZUdyaWRJdGVtcyhkZWNsLCByZXN1bHQsIGdhcCwgYXV0b2Zsb3dWYWx1ZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuR3JpZFJvd3NDb2x1bW5zLm5hbWVzID0gW1xuICAnZ3JpZC10ZW1wbGF0ZS1yb3dzJyxcbiAgJ2dyaWQtdGVtcGxhdGUtY29sdW1ucycsXG4gICdncmlkLXJvd3MnLFxuICAnZ3JpZC1jb2x1bW5zJ1xuXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRSb3dzQ29sdW1uc1xuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBHcmlkU3RhcnQgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBEbyBub3QgYWRkIHByZWZpeCBmb3IgdW5zdXBwb3J0ZWQgdmFsdWUgaW4gSUVcbiAgICovXG4gIGNoZWNrKGRlY2wpIHtcbiAgICBsZXQgdmFsdWUgPSBkZWNsLnZhbHVlXG4gICAgcmV0dXJuICF2YWx1ZS5pbmNsdWRlcygnLycpICYmICF2YWx1ZS5pbmNsdWRlcygnc3BhbicpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGEgZmluYWwgc3BlYyBwcm9wZXJ0eVxuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKCctc3RhcnQnLCAnJylcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgSUVcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGxldCByZXN1bHQgPSBzdXBlci5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgnLXN0YXJ0JywgJycpXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG5HcmlkU3RhcnQubmFtZXMgPSBbJ2dyaWQtcm93LXN0YXJ0JywgJ2dyaWQtY29sdW1uLXN0YXJ0J11cblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkU3RhcnRcbiIsImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcbmxldCB7XG4gIHBhcnNlR3JpZEFyZWFzLFxuICB3YXJuTWlzc2VkQXJlYXMsXG4gIHByZWZpeFRyYWNrUHJvcCxcbiAgcHJlZml4VHJhY2tWYWx1ZSxcbiAgZ2V0R3JpZEdhcCxcbiAgd2FybkdyaWRHYXAsXG4gIGluaGVyaXRHcmlkR2FwXG59ID0gcmVxdWlyZSgnLi9ncmlkLXV0aWxzJylcblxuZnVuY3Rpb24gZ2V0R3JpZFJvd3ModHBsKSB7XG4gIHJldHVybiB0cGxcbiAgICAudHJpbSgpXG4gICAgLnNsaWNlKDEsIC0xKVxuICAgIC5zcGxpdCgvW1wiJ11cXHMqW1wiJ10/L2cpXG59XG5cbmNsYXNzIEdyaWRUZW1wbGF0ZUFyZWFzIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogVHJhbnNsYXRlIGdyaWQtdGVtcGxhdGUtYXJlYXMgdG8gc2VwYXJhdGUgLW1zLSBwcmVmaXhlZCBwcm9wZXJ0aWVzXG4gICAqL1xuICBpbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcywgcmVzdWx0KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICBsZXQgaGFzQ29sdW1ucyA9IGZhbHNlXG4gICAgbGV0IGhhc1Jvd3MgPSBmYWxzZVxuICAgIGxldCBwYXJlbnQgPSBkZWNsLnBhcmVudFxuICAgIGxldCBnYXAgPSBnZXRHcmlkR2FwKGRlY2wpXG4gICAgZ2FwID0gaW5oZXJpdEdyaWRHYXAoZGVjbCwgZ2FwKSB8fCBnYXBcblxuICAgIC8vIHJlbW92ZSBhbHJlYWR5IHByZWZpeGVkIHJvd3NcbiAgICAvLyB0byBwcmV2ZW50IGRvdWJsaW5nIHByZWZpeGVzXG4gICAgcGFyZW50LndhbGtEZWNscygvLW1zLWdyaWQtcm93cy8sIGkgPT4gaS5yZW1vdmUoKSlcblxuICAgIC8vIGFkZCBlbXB0eSB0cmFja3MgdG8gcm93c1xuICAgIHBhcmVudC53YWxrRGVjbHMoL2dyaWQtdGVtcGxhdGUtKHJvd3N8Y29sdW1ucykvLCB0cmFja0RlY2wgPT4ge1xuICAgICAgaWYgKHRyYWNrRGVjbC5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1yb3dzJykge1xuICAgICAgICBoYXNSb3dzID0gdHJ1ZVxuICAgICAgICBsZXQgeyBwcm9wLCB2YWx1ZSB9ID0gdHJhY2tEZWNsXG4gICAgICAgIHRyYWNrRGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICAgICAgcHJvcDogcHJlZml4VHJhY2tQcm9wKHsgcHJvcCwgcHJlZml4IH0pLFxuICAgICAgICAgIHZhbHVlOiBwcmVmaXhUcmFja1ZhbHVlKHsgdmFsdWUsIGdhcDogZ2FwLnJvdyB9KVxuICAgICAgICB9KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGFzQ29sdW1ucyA9IHRydWVcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgbGV0IGdyaWRSb3dzID0gZ2V0R3JpZFJvd3MoZGVjbC52YWx1ZSlcblxuICAgIGlmIChoYXNDb2x1bW5zICYmICFoYXNSb3dzICYmIGdhcC5yb3cgJiYgZ3JpZFJvd3MubGVuZ3RoID4gMSkge1xuICAgICAgZGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICAgIHByb3A6ICctbXMtZ3JpZC1yb3dzJyxcbiAgICAgICAgdmFsdWU6IHByZWZpeFRyYWNrVmFsdWUoe1xuICAgICAgICAgIHZhbHVlOiBgcmVwZWF0KCR7Z3JpZFJvd3MubGVuZ3RofSwgYXV0bylgLFxuICAgICAgICAgIGdhcDogZ2FwLnJvd1xuICAgICAgICB9KSxcbiAgICAgICAgcmF3czoge31cbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gd2FybmluZ3NcbiAgICB3YXJuR3JpZEdhcCh7XG4gICAgICBnYXAsXG4gICAgICBoYXNDb2x1bW5zLFxuICAgICAgZGVjbCxcbiAgICAgIHJlc3VsdFxuICAgIH0pXG5cbiAgICBsZXQgYXJlYXMgPSBwYXJzZUdyaWRBcmVhcyh7XG4gICAgICByb3dzOiBncmlkUm93cyxcbiAgICAgIGdhcFxuICAgIH0pXG5cbiAgICB3YXJuTWlzc2VkQXJlYXMoYXJlYXMsIGRlY2wsIHJlc3VsdClcblxuICAgIHJldHVybiBkZWNsXG4gIH1cbn1cblxuR3JpZFRlbXBsYXRlQXJlYXMubmFtZXMgPSBbJ2dyaWQtdGVtcGxhdGUtYXJlYXMnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRUZW1wbGF0ZUFyZWFzXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQge1xuICBwYXJzZVRlbXBsYXRlLFxuICB3YXJuTWlzc2VkQXJlYXMsXG4gIGdldEdyaWRHYXAsXG4gIHdhcm5HcmlkR2FwLFxuICBpbmhlcml0R3JpZEdhcFxufSA9IHJlcXVpcmUoJy4vZ3JpZC11dGlscycpXG5cbmNsYXNzIEdyaWRUZW1wbGF0ZSBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIFRyYW5zbGF0ZSBncmlkLXRlbXBsYXRlIHRvIHNlcGFyYXRlIC1tcy0gcHJlZml4ZWQgcHJvcGVydGllc1xuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMsIHJlc3VsdCkge1xuICAgIGlmIChwcmVmaXggIT09ICctbXMtJykgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuXG4gICAgaWYgKGRlY2wucGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09ICctbXMtZ3JpZC1yb3dzJykpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBsZXQgZ2FwID0gZ2V0R3JpZEdhcChkZWNsKVxuXG4gICAgLyoqXG4gICAgICogd2UgbXVzdCBpbnNlcnQgaW5oZXJpdGVkIGdhcCB2YWx1ZXMgaW4gc29tZSBjYXNlczpcbiAgICAgKiBpZiB3ZSBhcmUgaW5zaWRlIG1lZGlhIHF1ZXJ5ICYmIGlmIHdlIGhhdmUgbm8gZ3JpZC1nYXAgdmFsdWVcbiAgICAgKi9cbiAgICBsZXQgaW5oZXJpdGVkR2FwID0gaW5oZXJpdEdyaWRHYXAoZGVjbCwgZ2FwKVxuXG4gICAgbGV0IHsgcm93cywgY29sdW1ucywgYXJlYXMgfSA9IHBhcnNlVGVtcGxhdGUoe1xuICAgICAgZGVjbCxcbiAgICAgIGdhcDogaW5oZXJpdGVkR2FwIHx8IGdhcFxuICAgIH0pXG5cbiAgICBsZXQgaGFzQXJlYXMgPSBPYmplY3Qua2V5cyhhcmVhcykubGVuZ3RoID4gMFxuICAgIGxldCBoYXNSb3dzID0gQm9vbGVhbihyb3dzKVxuICAgIGxldCBoYXNDb2x1bW5zID0gQm9vbGVhbihjb2x1bW5zKVxuXG4gICAgd2FybkdyaWRHYXAoe1xuICAgICAgZ2FwLFxuICAgICAgaGFzQ29sdW1ucyxcbiAgICAgIGRlY2wsXG4gICAgICByZXN1bHRcbiAgICB9KVxuXG4gICAgd2Fybk1pc3NlZEFyZWFzKGFyZWFzLCBkZWNsLCByZXN1bHQpXG5cbiAgICBpZiAoKGhhc1Jvd3MgJiYgaGFzQ29sdW1ucykgfHwgaGFzQXJlYXMpIHtcbiAgICAgIGRlY2wuY2xvbmVCZWZvcmUoe1xuICAgICAgICBwcm9wOiAnLW1zLWdyaWQtcm93cycsXG4gICAgICAgIHZhbHVlOiByb3dzLFxuICAgICAgICByYXdzOiB7fVxuICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAoaGFzQ29sdW1ucykge1xuICAgICAgZGVjbC5jbG9uZUJlZm9yZSh7XG4gICAgICAgIHByb3A6ICctbXMtZ3JpZC1jb2x1bW5zJyxcbiAgICAgICAgdmFsdWU6IGNvbHVtbnMsXG4gICAgICAgIHJhd3M6IHt9XG4gICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiBkZWNsXG4gIH1cbn1cblxuR3JpZFRlbXBsYXRlLm5hbWVzID0gWydncmlkLXRlbXBsYXRlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBHcmlkVGVtcGxhdGVcbiIsImxldCBwYXJzZXIgPSByZXF1aXJlKCdwb3N0Y3NzLXZhbHVlLXBhcnNlcicpXG5sZXQgbGlzdCA9IHJlcXVpcmUoJ3Bvc3Rjc3MnKS5saXN0XG5cbmxldCB1bmlxID0gcmVxdWlyZSgnLi4vdXRpbHMnKS51bmlxXG5sZXQgZXNjYXBlUmVnZXhwID0gcmVxdWlyZSgnLi4vdXRpbHMnKS5lc2NhcGVSZWdleHBcbmxldCBzcGxpdFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vdXRpbHMnKS5zcGxpdFNlbGVjdG9yXG5cbmZ1bmN0aW9uIGNvbnZlcnQodmFsdWUpIHtcbiAgaWYgKFxuICAgIHZhbHVlICYmXG4gICAgdmFsdWUubGVuZ3RoID09PSAyICYmXG4gICAgdmFsdWVbMF0gPT09ICdzcGFuJyAmJlxuICAgIHBhcnNlSW50KHZhbHVlWzFdLCAxMCkgPiAwXG4gICkge1xuICAgIHJldHVybiBbZmFsc2UsIHBhcnNlSW50KHZhbHVlWzFdLCAxMCldXG4gIH1cblxuICBpZiAodmFsdWUgJiYgdmFsdWUubGVuZ3RoID09PSAxICYmIHBhcnNlSW50KHZhbHVlWzBdLCAxMCkgPiAwKSB7XG4gICAgcmV0dXJuIFtwYXJzZUludCh2YWx1ZVswXSwgMTApLCBmYWxzZV1cbiAgfVxuXG4gIHJldHVybiBbZmFsc2UsIGZhbHNlXVxufVxuXG5leHBvcnRzLnRyYW5zbGF0ZSA9IHRyYW5zbGF0ZVxuXG5mdW5jdGlvbiB0cmFuc2xhdGUodmFsdWVzLCBzdGFydEluZGV4LCBlbmRJbmRleCkge1xuICBsZXQgc3RhcnRWYWx1ZSA9IHZhbHVlc1tzdGFydEluZGV4XVxuICBsZXQgZW5kVmFsdWUgPSB2YWx1ZXNbZW5kSW5kZXhdXG5cbiAgaWYgKCFzdGFydFZhbHVlKSB7XG4gICAgcmV0dXJuIFtmYWxzZSwgZmFsc2VdXG4gIH1cblxuICBsZXQgW3N0YXJ0LCBzcGFuU3RhcnRdID0gY29udmVydChzdGFydFZhbHVlKVxuICBsZXQgW2VuZCwgc3BhbkVuZF0gPSBjb252ZXJ0KGVuZFZhbHVlKVxuXG4gIGlmIChzdGFydCAmJiAhZW5kVmFsdWUpIHtcbiAgICByZXR1cm4gW3N0YXJ0LCBmYWxzZV1cbiAgfVxuXG4gIGlmIChzcGFuU3RhcnQgJiYgZW5kKSB7XG4gICAgcmV0dXJuIFtlbmQgLSBzcGFuU3RhcnQsIHNwYW5TdGFydF1cbiAgfVxuXG4gIGlmIChzdGFydCAmJiBzcGFuRW5kKSB7XG4gICAgcmV0dXJuIFtzdGFydCwgc3BhbkVuZF1cbiAgfVxuXG4gIGlmIChzdGFydCAmJiBlbmQpIHtcbiAgICByZXR1cm4gW3N0YXJ0LCBlbmQgLSBzdGFydF1cbiAgfVxuXG4gIHJldHVybiBbZmFsc2UsIGZhbHNlXVxufVxuXG5leHBvcnRzLnBhcnNlID0gcGFyc2VcblxuZnVuY3Rpb24gcGFyc2UoZGVjbCkge1xuICBsZXQgbm9kZSA9IHBhcnNlcihkZWNsLnZhbHVlKVxuXG4gIGxldCB2YWx1ZXMgPSBbXVxuICBsZXQgY3VycmVudCA9IDBcbiAgdmFsdWVzW2N1cnJlbnRdID0gW11cblxuICBmb3IgKGxldCBpIG9mIG5vZGUubm9kZXMpIHtcbiAgICBpZiAoaS50eXBlID09PSAnZGl2Jykge1xuICAgICAgY3VycmVudCArPSAxXG4gICAgICB2YWx1ZXNbY3VycmVudF0gPSBbXVxuICAgIH0gZWxzZSBpZiAoaS50eXBlID09PSAnd29yZCcpIHtcbiAgICAgIHZhbHVlc1tjdXJyZW50XS5wdXNoKGkudmFsdWUpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHZhbHVlc1xufVxuXG5leHBvcnRzLmluc2VydERlY2wgPSBpbnNlcnREZWNsXG5cbmZ1bmN0aW9uIGluc2VydERlY2woZGVjbCwgcHJvcCwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlICYmICFkZWNsLnBhcmVudC5zb21lKGkgPT4gaS5wcm9wID09PSBgLW1zLSR7cHJvcH1gKSkge1xuICAgIGRlY2wuY2xvbmVCZWZvcmUoe1xuICAgICAgcHJvcDogYC1tcy0ke3Byb3B9YCxcbiAgICAgIHZhbHVlOiB2YWx1ZS50b1N0cmluZygpXG4gICAgfSlcbiAgfVxufVxuXG4vLyBUcmFjayB0cmFuc2Zvcm1zXG5cbmV4cG9ydHMucHJlZml4VHJhY2tQcm9wID0gcHJlZml4VHJhY2tQcm9wXG5cbmZ1bmN0aW9uIHByZWZpeFRyYWNrUHJvcCh7IHByb3AsIHByZWZpeCB9KSB7XG4gIHJldHVybiBwcmVmaXggKyBwcm9wLnJlcGxhY2UoJ3RlbXBsYXRlLScsICcnKVxufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1SZXBlYXQoeyBub2RlcyB9LCB7IGdhcCB9KSB7XG4gIGxldCB7IGNvdW50LCBzaXplIH0gPSBub2Rlcy5yZWR1Y2UoXG4gICAgKHJlc3VsdCwgbm9kZSkgPT4ge1xuICAgICAgaWYgKG5vZGUudHlwZSA9PT0gJ2RpdicgJiYgbm9kZS52YWx1ZSA9PT0gJywnKSB7XG4gICAgICAgIHJlc3VsdC5rZXkgPSAnc2l6ZSdcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdFtyZXN1bHQua2V5XS5wdXNoKHBhcnNlci5zdHJpbmdpZnkobm9kZSkpXG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfSxcbiAgICB7XG4gICAgICBrZXk6ICdjb3VudCcsXG4gICAgICBzaXplOiBbXSxcbiAgICAgIGNvdW50OiBbXVxuICAgIH1cbiAgKVxuXG4gIC8vIGluc2VydCBnYXAgdmFsdWVzXG4gIGlmIChnYXApIHtcbiAgICBzaXplID0gc2l6ZS5maWx0ZXIoaSA9PiBpLnRyaW0oKSlcbiAgICBsZXQgdmFsID0gW11cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBjb3VudDsgaSsrKSB7XG4gICAgICBzaXplLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIGlmIChpbmRleCA+IDAgfHwgaSA+IDEpIHtcbiAgICAgICAgICB2YWwucHVzaChnYXApXG4gICAgICAgIH1cbiAgICAgICAgdmFsLnB1c2goaXRlbSlcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbC5qb2luKCcgJylcbiAgfVxuXG4gIHJldHVybiBgKCR7c2l6ZS5qb2luKCcnKX0pWyR7Y291bnQuam9pbignJyl9XWBcbn1cblxuZXhwb3J0cy5wcmVmaXhUcmFja1ZhbHVlID0gcHJlZml4VHJhY2tWYWx1ZVxuXG5mdW5jdGlvbiBwcmVmaXhUcmFja1ZhbHVlKHsgdmFsdWUsIGdhcCB9KSB7XG4gIGxldCByZXN1bHQgPSBwYXJzZXIodmFsdWUpLm5vZGVzLnJlZHVjZSgobm9kZXMsIG5vZGUpID0+IHtcbiAgICBpZiAobm9kZS50eXBlID09PSAnZnVuY3Rpb24nICYmIG5vZGUudmFsdWUgPT09ICdyZXBlYXQnKSB7XG4gICAgICByZXR1cm4gbm9kZXMuY29uY2F0KHtcbiAgICAgICAgdHlwZTogJ3dvcmQnLFxuICAgICAgICB2YWx1ZTogdHJhbnNmb3JtUmVwZWF0KG5vZGUsIHsgZ2FwIH0pXG4gICAgICB9KVxuICAgIH1cbiAgICBpZiAoZ2FwICYmIG5vZGUudHlwZSA9PT0gJ3NwYWNlJykge1xuICAgICAgcmV0dXJuIG5vZGVzLmNvbmNhdChcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6ICdzcGFjZScsXG4gICAgICAgICAgdmFsdWU6ICcgJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgdHlwZTogJ3dvcmQnLFxuICAgICAgICAgIHZhbHVlOiBnYXBcbiAgICAgICAgfSxcbiAgICAgICAgbm9kZVxuICAgICAgKVxuICAgIH1cbiAgICByZXR1cm4gbm9kZXMuY29uY2F0KG5vZGUpXG4gIH0sIFtdKVxuXG4gIHJldHVybiBwYXJzZXIuc3RyaW5naWZ5KHJlc3VsdClcbn1cblxuLy8gUGFyc2UgZ3JpZC10ZW1wbGF0ZS1hcmVhc1xuXG5sZXQgRE9UUyA9IC9eXFwuKyQvXG5cbmZ1bmN0aW9uIHRyYWNrKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIHsgc3RhcnQsIGVuZCwgc3BhbjogZW5kIC0gc3RhcnQgfVxufVxuXG5mdW5jdGlvbiBnZXRDb2x1bW5zKGxpbmUpIHtcbiAgcmV0dXJuIGxpbmUudHJpbSgpLnNwbGl0KC9cXHMrL2cpXG59XG5cbmV4cG9ydHMucGFyc2VHcmlkQXJlYXMgPSBwYXJzZUdyaWRBcmVhc1xuXG5mdW5jdGlvbiBwYXJzZUdyaWRBcmVhcyh7IHJvd3MsIGdhcCB9KSB7XG4gIHJldHVybiByb3dzLnJlZHVjZSgoYXJlYXMsIGxpbmUsIHJvd0luZGV4KSA9PiB7XG4gICAgaWYgKGdhcC5yb3cpIHJvd0luZGV4ICo9IDJcblxuICAgIGlmIChsaW5lLnRyaW0oKSA9PT0gJycpIHJldHVybiBhcmVhc1xuXG4gICAgZ2V0Q29sdW1ucyhsaW5lKS5mb3JFYWNoKChhcmVhLCBjb2x1bW5JbmRleCkgPT4ge1xuICAgICAgaWYgKERPVFMudGVzdChhcmVhKSkgcmV0dXJuXG5cbiAgICAgIGlmIChnYXAuY29sdW1uKSBjb2x1bW5JbmRleCAqPSAyXG5cbiAgICAgIGlmICh0eXBlb2YgYXJlYXNbYXJlYV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGFyZWFzW2FyZWFdID0ge1xuICAgICAgICAgIGNvbHVtbjogdHJhY2soY29sdW1uSW5kZXggKyAxLCBjb2x1bW5JbmRleCArIDIpLFxuICAgICAgICAgIHJvdzogdHJhY2socm93SW5kZXggKyAxLCByb3dJbmRleCArIDIpXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCB7IGNvbHVtbiwgcm93IH0gPSBhcmVhc1thcmVhXVxuXG4gICAgICAgIGNvbHVtbi5zdGFydCA9IE1hdGgubWluKGNvbHVtbi5zdGFydCwgY29sdW1uSW5kZXggKyAxKVxuICAgICAgICBjb2x1bW4uZW5kID0gTWF0aC5tYXgoY29sdW1uLmVuZCwgY29sdW1uSW5kZXggKyAyKVxuICAgICAgICBjb2x1bW4uc3BhbiA9IGNvbHVtbi5lbmQgLSBjb2x1bW4uc3RhcnRcblxuICAgICAgICByb3cuc3RhcnQgPSBNYXRoLm1pbihyb3cuc3RhcnQsIHJvd0luZGV4ICsgMSlcbiAgICAgICAgcm93LmVuZCA9IE1hdGgubWF4KHJvdy5lbmQsIHJvd0luZGV4ICsgMilcbiAgICAgICAgcm93LnNwYW4gPSByb3cuZW5kIC0gcm93LnN0YXJ0XG4gICAgICB9XG4gICAgfSlcblxuICAgIHJldHVybiBhcmVhc1xuICB9LCB7fSlcbn1cblxuLy8gUGFyc2UgZ3JpZC10ZW1wbGF0ZVxuXG5mdW5jdGlvbiB0ZXN0VHJhY2sobm9kZSkge1xuICByZXR1cm4gbm9kZS50eXBlID09PSAnd29yZCcgJiYgL15cXFsuK10kLy50ZXN0KG5vZGUudmFsdWUpXG59XG5cbmZ1bmN0aW9uIHZlcmlmeVJvd1NpemUocmVzdWx0KSB7XG4gIGlmIChyZXN1bHQuYXJlYXMubGVuZ3RoID4gcmVzdWx0LnJvd3MubGVuZ3RoKSB7XG4gICAgcmVzdWx0LnJvd3MucHVzaCgnYXV0bycpXG4gIH1cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnRzLnBhcnNlVGVtcGxhdGUgPSBwYXJzZVRlbXBsYXRlXG5cbmZ1bmN0aW9uIHBhcnNlVGVtcGxhdGUoeyBkZWNsLCBnYXAgfSkge1xuICBsZXQgZ3JpZFRlbXBsYXRlID0gcGFyc2VyKGRlY2wudmFsdWUpLm5vZGVzLnJlZHVjZShcbiAgICAocmVzdWx0LCBub2RlKSA9PiB7XG4gICAgICBsZXQgeyB0eXBlLCB2YWx1ZSB9ID0gbm9kZVxuXG4gICAgICBpZiAodGVzdFRyYWNrKG5vZGUpIHx8IHR5cGUgPT09ICdzcGFjZScpIHJldHVybiByZXN1bHRcblxuICAgICAgLy8gYXJlYVxuICAgICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJlc3VsdCA9IHZlcmlmeVJvd1NpemUocmVzdWx0KVxuICAgICAgICByZXN1bHQuYXJlYXMucHVzaCh2YWx1ZSlcbiAgICAgIH1cblxuICAgICAgLy8gdmFsdWVzIGFuZCBmdW5jdGlvblxuICAgICAgaWYgKHR5cGUgPT09ICd3b3JkJyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJlc3VsdFtyZXN1bHQua2V5XS5wdXNoKHBhcnNlci5zdHJpbmdpZnkobm9kZSkpXG4gICAgICB9XG5cbiAgICAgIC8vIGRpdmlkZXIoLylcbiAgICAgIGlmICh0eXBlID09PSAnZGl2JyAmJiB2YWx1ZSA9PT0gJy8nKSB7XG4gICAgICAgIHJlc3VsdC5rZXkgPSAnY29sdW1ucydcbiAgICAgICAgcmVzdWx0ID0gdmVyaWZ5Um93U2l6ZShyZXN1bHQpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHRcbiAgICB9LFxuICAgIHtcbiAgICAgIGtleTogJ3Jvd3MnLFxuICAgICAgY29sdW1uczogW10sXG4gICAgICByb3dzOiBbXSxcbiAgICAgIGFyZWFzOiBbXVxuICAgIH1cbiAgKVxuXG4gIHJldHVybiB7XG4gICAgYXJlYXM6IHBhcnNlR3JpZEFyZWFzKHtcbiAgICAgIHJvd3M6IGdyaWRUZW1wbGF0ZS5hcmVhcyxcbiAgICAgIGdhcFxuICAgIH0pLFxuICAgIGNvbHVtbnM6IHByZWZpeFRyYWNrVmFsdWUoe1xuICAgICAgdmFsdWU6IGdyaWRUZW1wbGF0ZS5jb2x1bW5zLmpvaW4oJyAnKSxcbiAgICAgIGdhcDogZ2FwLmNvbHVtblxuICAgIH0pLFxuICAgIHJvd3M6IHByZWZpeFRyYWNrVmFsdWUoe1xuICAgICAgdmFsdWU6IGdyaWRUZW1wbGF0ZS5yb3dzLmpvaW4oJyAnKSxcbiAgICAgIGdhcDogZ2FwLnJvd1xuICAgIH0pXG4gIH1cbn1cblxuLy8gSW5zZXJ0IHBhcnNlZCBncmlkIGFyZWFzXG5cbi8qKlxuICogR2V0IGFuIGFycmF5IG9mIC1tcy0gcHJlZml4ZWQgcHJvcHMgYW5kIHZhbHVlc1xuICogQHBhcmFtICB7T2JqZWN0fSBbYXJlYV0gYXJlYSBvYmplY3Qgd2l0aCBjb2x1bW4gYW5kIHJvdyBkYXRhXG4gKiBAcGFyYW0gIHtCb29sZWFufSBbYWRkUm93U3Bhbl0gc2hvdWxkIHdlIGFkZCBncmlkLWNvbHVtbi1yb3cgdmFsdWU/XG4gKiBAcGFyYW0gIHtCb29sZWFufSBbYWRkQ29sdW1uU3Bhbl0gc2hvdWxkIHdlIGFkZCBncmlkLWNvbHVtbi1zcGFuIHZhbHVlP1xuICogQHJldHVybiB7QXJyYXk8T2JqZWN0Pn1cbiAqL1xuZnVuY3Rpb24gZ2V0TVNEZWNscyhhcmVhLCBhZGRSb3dTcGFuID0gZmFsc2UsIGFkZENvbHVtblNwYW4gPSBmYWxzZSkge1xuICBsZXQgcmVzdWx0ID0gW1xuICAgIHtcbiAgICAgIHByb3A6ICctbXMtZ3JpZC1yb3cnLFxuICAgICAgdmFsdWU6IFN0cmluZyhhcmVhLnJvdy5zdGFydClcbiAgICB9XG4gIF1cbiAgaWYgKGFyZWEucm93LnNwYW4gPiAxIHx8IGFkZFJvd1NwYW4pIHtcbiAgICByZXN1bHQucHVzaCh7XG4gICAgICBwcm9wOiAnLW1zLWdyaWQtcm93LXNwYW4nLFxuICAgICAgdmFsdWU6IFN0cmluZyhhcmVhLnJvdy5zcGFuKVxuICAgIH0pXG4gIH1cbiAgcmVzdWx0LnB1c2goe1xuICAgIHByb3A6ICctbXMtZ3JpZC1jb2x1bW4nLFxuICAgIHZhbHVlOiBTdHJpbmcoYXJlYS5jb2x1bW4uc3RhcnQpXG4gIH0pXG4gIGlmIChhcmVhLmNvbHVtbi5zcGFuID4gMSB8fCBhZGRDb2x1bW5TcGFuKSB7XG4gICAgcmVzdWx0LnB1c2goe1xuICAgICAgcHJvcDogJy1tcy1ncmlkLWNvbHVtbi1zcGFuJyxcbiAgICAgIHZhbHVlOiBTdHJpbmcoYXJlYS5jb2x1bW4uc3BhbilcbiAgICB9KVxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxuZnVuY3Rpb24gZ2V0UGFyZW50TWVkaWEocGFyZW50KSB7XG4gIGlmIChwYXJlbnQudHlwZSA9PT0gJ2F0cnVsZScgJiYgcGFyZW50Lm5hbWUgPT09ICdtZWRpYScpIHtcbiAgICByZXR1cm4gcGFyZW50XG4gIH1cbiAgaWYgKCFwYXJlbnQucGFyZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgcmV0dXJuIGdldFBhcmVudE1lZGlhKHBhcmVudC5wYXJlbnQpXG59XG5cbi8qKlxuICogY2hhbmdlIHNlbGVjdG9ycyBmb3IgcnVsZXMgd2l0aCBkdXBsaWNhdGUgZ3JpZC1hcmVhcy5cbiAqIEBwYXJhbSAge0FycmF5PFJ1bGU+fSBydWxlc1xuICogQHBhcmFtICB7QXJyYXk8U3RyaW5nPn0gdGVtcGxhdGVTZWxlY3RvcnNcbiAqIEByZXR1cm4ge0FycmF5PFJ1bGU+fSBydWxlcyB3aXRoIGNoYW5nZWQgc2VsZWN0b3JzXG4gKi9cbmZ1bmN0aW9uIGNoYW5nZUR1cGxpY2F0ZUFyZWFTZWxlY3RvcnMocnVsZVNlbGVjdG9ycywgdGVtcGxhdGVTZWxlY3RvcnMpIHtcbiAgcnVsZVNlbGVjdG9ycyA9IHJ1bGVTZWxlY3RvcnMubWFwKHNlbGVjdG9yID0+IHtcbiAgICBsZXQgc2VsZWN0b3JCeVNwYWNlID0gbGlzdC5zcGFjZShzZWxlY3RvcilcbiAgICBsZXQgc2VsZWN0b3JCeUNvbW1hID0gbGlzdC5jb21tYShzZWxlY3RvcilcblxuICAgIGlmIChzZWxlY3RvckJ5U3BhY2UubGVuZ3RoID4gc2VsZWN0b3JCeUNvbW1hLmxlbmd0aCkge1xuICAgICAgc2VsZWN0b3IgPSBzZWxlY3RvckJ5U3BhY2Uuc2xpY2UoLTEpLmpvaW4oJycpXG4gICAgfVxuICAgIHJldHVybiBzZWxlY3RvclxuICB9KVxuXG4gIHJldHVybiBydWxlU2VsZWN0b3JzLm1hcChydWxlU2VsZWN0b3IgPT4ge1xuICAgIGxldCBuZXdTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3JzLm1hcCgodHBsU2VsZWN0b3IsIGluZGV4KSA9PiB7XG4gICAgICBsZXQgc3BhY2UgPSBpbmRleCA9PT0gMCA/ICcnIDogJyAnXG4gICAgICByZXR1cm4gYCR7c3BhY2V9JHt0cGxTZWxlY3Rvcn0gPiAke3J1bGVTZWxlY3Rvcn1gXG4gICAgfSlcblxuICAgIHJldHVybiBuZXdTZWxlY3RvclxuICB9KVxufVxuXG4vKipcbiAqIGNoZWNrIGlmIHNlbGVjdG9yIG9mIHJ1bGVzIGFyZSBlcXVhbFxuICogQHBhcmFtICB7UnVsZX0gcnVsZUFcbiAqIEBwYXJhbSAge1J1bGV9IHJ1bGVCXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBzZWxlY3RvcnNFcXVhbChydWxlQSwgcnVsZUIpIHtcbiAgcmV0dXJuIHJ1bGVBLnNlbGVjdG9ycy5zb21lKHNlbCA9PiB7XG4gICAgcmV0dXJuIHJ1bGVCLnNlbGVjdG9ycy5pbmNsdWRlcyhzZWwpXG4gIH0pXG59XG5cbi8qKlxuICogUGFyc2UgZGF0YSBmcm9tIGFsbCBncmlkLXRlbXBsYXRlKC1hcmVhcykgZGVjbGFyYXRpb25zXG4gKiBAcGFyYW0gIHtSb290fSBjc3MgY3NzIHJvb3RcbiAqIEByZXR1cm4ge09iamVjdH0gcGFyc2VkIGRhdGFcbiAqL1xuZnVuY3Rpb24gcGFyc2VHcmlkVGVtcGxhdGVzRGF0YShjc3MpIHtcbiAgbGV0IHBhcnNlZCA9IFtdXG5cbiAgLy8gd2Ugd2FsayB0aHJvdWdoIGV2ZXJ5IGdyaWQtdGVtcGxhdGUoLWFyZWFzKSBkZWNsYXJhdGlvbiBhbmQgc3RvcmVcbiAgLy8gZGF0YSB3aXRoIHRoZSBzYW1lIGFyZWEgbmFtZXMgaW5zaWRlIHRoZSBpdGVtXG4gIGNzcy53YWxrRGVjbHMoL2dyaWQtdGVtcGxhdGUoLWFyZWFzKT8kLywgZCA9PiB7XG4gICAgbGV0IHJ1bGUgPSBkLnBhcmVudFxuICAgIGxldCBtZWRpYSA9IGdldFBhcmVudE1lZGlhKHJ1bGUpXG4gICAgbGV0IGdhcCA9IGdldEdyaWRHYXAoZClcbiAgICBsZXQgaW5oZXJpdGVkR2FwID0gaW5oZXJpdEdyaWRHYXAoZCwgZ2FwKVxuICAgIGxldCB7IGFyZWFzIH0gPSBwYXJzZVRlbXBsYXRlKHsgZGVjbDogZCwgZ2FwOiBpbmhlcml0ZWRHYXAgfHwgZ2FwIH0pXG4gICAgbGV0IGFyZWFOYW1lcyA9IE9iamVjdC5rZXlzKGFyZWFzKVxuXG4gICAgLy8gc2tpcCBub2RlIGlmIGl0IGRvZXNuJ3QgaGF2ZSBhcmVhc1xuICAgIGlmIChhcmVhTmFtZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIC8vIGNoZWNrIHBhcnNlZCBhcnJheSBmb3IgaXRlbSB0aGF0IGluY2x1ZGUgdGhlIHNhbWUgYXJlYSBuYW1lc1xuICAgIC8vIHJldHVybiBpbmRleCBvZiB0aGF0IGl0ZW1cbiAgICBsZXQgaW5kZXggPSBwYXJzZWQucmVkdWNlKChhY2MsIHsgYWxsQXJlYXMgfSwgaWR4KSA9PiB7XG4gICAgICBsZXQgaGFzQXJlYXMgPSBhbGxBcmVhcyAmJiBhcmVhTmFtZXMuc29tZShhcmVhID0+IGFsbEFyZWFzLmluY2x1ZGVzKGFyZWEpKVxuICAgICAgcmV0dXJuIGhhc0FyZWFzID8gaWR4IDogYWNjXG4gICAgfSwgbnVsbClcblxuICAgIGlmIChpbmRleCAhPT0gbnVsbCkge1xuICAgICAgLy8gaW5kZXggaXMgZm91bmQsIGFkZCB0aGUgZ3JpZC10ZW1wbGF0ZSBkYXRhIHRvIHRoYXQgaXRlbVxuICAgICAgbGV0IHsgYWxsQXJlYXMsIHJ1bGVzIH0gPSBwYXJzZWRbaW5kZXhdXG5cbiAgICAgIC8vIGNoZWNrIGlmIHJ1bGUgaGFzIG5vIGR1cGxpY2F0ZSBhcmVhIG5hbWVzXG4gICAgICBsZXQgaGFzTm9EdXBsaWNhdGVzID0gcnVsZXMuc29tZShyID0+IHtcbiAgICAgICAgcmV0dXJuIHIuaGFzRHVwbGljYXRlcyA9PT0gZmFsc2UgJiYgc2VsZWN0b3JzRXF1YWwociwgcnVsZSlcbiAgICAgIH0pXG5cbiAgICAgIGxldCBkdXBsaWNhdGVzRm91bmQgPSBmYWxzZVxuXG4gICAgICAvLyBjaGVjayBuZWVkIHRvIGdhdGhlciBhbGwgZHVwbGljYXRlIGFyZWEgbmFtZXNcbiAgICAgIGxldCBkdXBsaWNhdGVBcmVhTmFtZXMgPSBydWxlcy5yZWR1Y2UoKGFjYywgcikgPT4ge1xuICAgICAgICBpZiAoIXIucGFyYW1zICYmIHNlbGVjdG9yc0VxdWFsKHIsIHJ1bGUpKSB7XG4gICAgICAgICAgZHVwbGljYXRlc0ZvdW5kID0gdHJ1ZVxuICAgICAgICAgIHJldHVybiByLmR1cGxpY2F0ZUFyZWFOYW1lc1xuICAgICAgICB9XG4gICAgICAgIGlmICghZHVwbGljYXRlc0ZvdW5kKSB7XG4gICAgICAgICAgYXJlYU5hbWVzLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAgICAgICBpZiAoci5hcmVhc1tuYW1lXSkge1xuICAgICAgICAgICAgICBhY2MucHVzaChuYW1lKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuaXEoYWNjKVxuICAgICAgfSwgW10pXG5cbiAgICAgIC8vIHVwZGF0ZSBncmlkLXJvdy9jb2x1bW4tc3BhbiB2YWx1ZXMgZm9yIGFyZWFzIHdpdGggZHVwbGljYXRlXG4gICAgICAvLyBhcmVhIG5hbWVzLiBAc2VlICMxMDg0IGFuZCAjMTE0NlxuICAgICAgcnVsZXMuZm9yRWFjaChyID0+IHtcbiAgICAgICAgYXJlYU5hbWVzLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAgICAgbGV0IGFyZWEgPSByLmFyZWFzW25hbWVdXG4gICAgICAgICAgaWYgKGFyZWEgJiYgYXJlYS5yb3cuc3BhbiAhPT0gYXJlYXNbbmFtZV0ucm93LnNwYW4pIHtcbiAgICAgICAgICAgIGFyZWFzW25hbWVdLnJvdy51cGRhdGVTcGFuID0gdHJ1ZVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChhcmVhICYmIGFyZWEuY29sdW1uLnNwYW4gIT09IGFyZWFzW25hbWVdLmNvbHVtbi5zcGFuKSB7XG4gICAgICAgICAgICBhcmVhc1tuYW1lXS5jb2x1bW4udXBkYXRlU3BhbiA9IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9KVxuXG4gICAgICBwYXJzZWRbaW5kZXhdLmFsbEFyZWFzID0gdW5pcShbLi4uYWxsQXJlYXMsIC4uLmFyZWFOYW1lc10pXG4gICAgICBwYXJzZWRbaW5kZXhdLnJ1bGVzLnB1c2goe1xuICAgICAgICBoYXNEdXBsaWNhdGVzOiAhaGFzTm9EdXBsaWNhdGVzLFxuICAgICAgICBwYXJhbXM6IG1lZGlhLnBhcmFtcyxcbiAgICAgICAgc2VsZWN0b3JzOiBydWxlLnNlbGVjdG9ycyxcbiAgICAgICAgbm9kZTogcnVsZSxcbiAgICAgICAgZHVwbGljYXRlQXJlYU5hbWVzLFxuICAgICAgICBhcmVhc1xuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaW5kZXggaXMgTk9UIGZvdW5kLCBwdXNoIHRoZSBuZXcgaXRlbSB0byB0aGUgcGFyc2VkIGFycmF5XG4gICAgICBwYXJzZWQucHVzaCh7XG4gICAgICAgIGFsbEFyZWFzOiBhcmVhTmFtZXMsXG4gICAgICAgIGFyZWFzQ291bnQ6IDAsXG4gICAgICAgIHJ1bGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaGFzRHVwbGljYXRlczogZmFsc2UsXG4gICAgICAgICAgICBkdXBsaWNhdGVSdWxlczogW10sXG4gICAgICAgICAgICBwYXJhbXM6IG1lZGlhLnBhcmFtcyxcbiAgICAgICAgICAgIHNlbGVjdG9yczogcnVsZS5zZWxlY3RvcnMsXG4gICAgICAgICAgICBub2RlOiBydWxlLFxuICAgICAgICAgICAgZHVwbGljYXRlQXJlYU5hbWVzOiBbXSxcbiAgICAgICAgICAgIGFyZWFzXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfSlcblxuICByZXR1cm4gcGFyc2VkXG59XG5cbi8qKlxuICogaW5zZXJ0IHByZWZpeGVkIGdyaWQtYXJlYSBkZWNsYXJhdGlvbnNcbiAqIEBwYXJhbSAge1Jvb3R9ICBjc3MgY3NzIHJvb3RcbiAqIEBwYXJhbSAge0Z1bmN0aW9ufSBpc0Rpc2FibGVkIGNoZWNrIGlmIHRoZSBydWxlIGlzIGRpc2FibGVkXG4gKiBAcmV0dXJuIHt2b2lkfVxuICovXG5leHBvcnRzLmluc2VydEFyZWFzID0gaW5zZXJ0QXJlYXNcblxuZnVuY3Rpb24gaW5zZXJ0QXJlYXMoY3NzLCBpc0Rpc2FibGVkKSB7XG4gIC8vIHBhcnNlIGdyaWQtdGVtcGxhdGUgZGVjbGFyYXRpb25zXG4gIGxldCBncmlkVGVtcGxhdGVzRGF0YSA9IHBhcnNlR3JpZFRlbXBsYXRlc0RhdGEoY3NzKVxuXG4gIC8vIHJldHVybiB1bmRlZmluZWQgaWYgbm8gZGVjbGFyYXRpb25zIGZvdW5kXG4gIGlmIChncmlkVGVtcGxhdGVzRGF0YS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICAvLyB3ZSBuZWVkIHRvIHN0b3JlIHRoZSBydWxlcyB0aGF0IHdlIHdpbGwgaW5zZXJ0IGxhdGVyXG4gIGxldCBydWxlc1RvSW5zZXJ0ID0ge31cblxuICBjc3Mud2Fsa0RlY2xzKCdncmlkLWFyZWEnLCBncmlkQXJlYSA9PiB7XG4gICAgbGV0IGdyaWRBcmVhUnVsZSA9IGdyaWRBcmVhLnBhcmVudFxuICAgIGxldCBoYXNQcmVmaXhlZFJvdyA9IGdyaWRBcmVhUnVsZS5maXJzdC5wcm9wID09PSAnLW1zLWdyaWQtcm93J1xuICAgIGxldCBncmlkQXJlYU1lZGlhID0gZ2V0UGFyZW50TWVkaWEoZ3JpZEFyZWFSdWxlKVxuXG4gICAgaWYgKGlzRGlzYWJsZWQoZ3JpZEFyZWEpKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgbGV0IGdyaWRBcmVhUnVsZUluZGV4ID0gY3NzLmluZGV4KGdyaWRBcmVhTWVkaWEgfHwgZ3JpZEFyZWFSdWxlKVxuXG4gICAgbGV0IHZhbHVlID0gZ3JpZEFyZWEudmFsdWVcbiAgICAvLyBmb3VuZCB0aGUgZGF0YSB0aGF0IG1hdGNoZXMgZ3JpZC1hcmVhIGlkZW50aWZpZXJcbiAgICBsZXQgZGF0YSA9IGdyaWRUZW1wbGF0ZXNEYXRhLmZpbHRlcihkID0+IGQuYWxsQXJlYXMuaW5jbHVkZXModmFsdWUpKVswXVxuXG4gICAgaWYgKCFkYXRhKSB7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGxldCBsYXN0QXJlYSA9IGRhdGEuYWxsQXJlYXNbZGF0YS5hbGxBcmVhcy5sZW5ndGggLSAxXVxuICAgIGxldCBzZWxlY3RvckJ5U3BhY2UgPSBsaXN0LnNwYWNlKGdyaWRBcmVhUnVsZS5zZWxlY3RvcilcbiAgICBsZXQgc2VsZWN0b3JCeUNvbW1hID0gbGlzdC5jb21tYShncmlkQXJlYVJ1bGUuc2VsZWN0b3IpXG4gICAgbGV0IHNlbGVjdG9ySXNDb21wbGV4ID1cbiAgICAgIHNlbGVjdG9yQnlTcGFjZS5sZW5ndGggPiAxICYmXG4gICAgICBzZWxlY3RvckJ5U3BhY2UubGVuZ3RoID4gc2VsZWN0b3JCeUNvbW1hLmxlbmd0aFxuXG4gICAgLy8gcHJldmVudCBkb3VibGluZyBvZiBwcmVmaXhlc1xuICAgIGlmIChoYXNQcmVmaXhlZFJvdykge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gY3JlYXRlIHRoZSBlbXB0eSBvYmplY3Qgd2l0aCB0aGUga2V5IGFzIHRoZSBsYXN0IGFyZWEgbmFtZVxuICAgIC8vIGUuZyBpZiB3ZSBoYXZlIHRlbXBsYXRlcyB3aXRoIFwiYSBiIGNcIiB2YWx1ZXMsIFwiY1wiIHdpbGwgYmUgdGhlIGxhc3QgYXJlYVxuICAgIGlmICghcnVsZXNUb0luc2VydFtsYXN0QXJlYV0pIHtcbiAgICAgIHJ1bGVzVG9JbnNlcnRbbGFzdEFyZWFdID0ge31cbiAgICB9XG5cbiAgICBsZXQgbGFzdFJ1bGVJc1NldCA9IGZhbHNlXG5cbiAgICAvLyB3YWxrIHRocm91Z2ggZXZlcnkgZ3JpZC10ZW1wbGF0ZSBydWxlIGRhdGFcbiAgICBmb3IgKGxldCBydWxlIG9mIGRhdGEucnVsZXMpIHtcbiAgICAgIGxldCBhcmVhID0gcnVsZS5hcmVhc1t2YWx1ZV1cbiAgICAgIGxldCBoYXNEdXBsaWNhdGVOYW1lID0gcnVsZS5kdXBsaWNhdGVBcmVhTmFtZXMuaW5jbHVkZXModmFsdWUpXG5cbiAgICAgIC8vIGlmIHdlIGNhbid0IGZpbmQgdGhlIGFyZWEgbmFtZSwgdXBkYXRlIGxhc3RSdWxlIGFuZCBjb250aW51ZVxuICAgICAgaWYgKCFhcmVhKSB7XG4gICAgICAgIGxldCBsYXN0UnVsZSA9IHJ1bGVzVG9JbnNlcnRbbGFzdEFyZWFdLmxhc3RSdWxlXG4gICAgICAgIGxldCBsYXN0UnVsZUluZGV4XG4gICAgICAgIGlmIChsYXN0UnVsZSkge1xuICAgICAgICAgIGxhc3RSdWxlSW5kZXggPSBjc3MuaW5kZXgobGFzdFJ1bGUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgICAgICAgIGxhc3RSdWxlSW5kZXggPSAtMVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGdyaWRBcmVhUnVsZUluZGV4ID4gbGFzdFJ1bGVJbmRleCkge1xuICAgICAgICAgIHJ1bGVzVG9JbnNlcnRbbGFzdEFyZWFdLmxhc3RSdWxlID0gZ3JpZEFyZWFNZWRpYSB8fCBncmlkQXJlYVJ1bGVcbiAgICAgICAgfVxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyBmb3IgZ3JpZC10ZW1wbGF0ZXMgaW5zaWRlIG1lZGlhIHJ1bGUgd2UgbmVlZCB0byBjcmVhdGUgZW1wdHlcbiAgICAgIC8vIGFycmF5IHRvIHB1c2ggcHJlZml4ZWQgZ3JpZC1hcmVhIHJ1bGVzIGxhdGVyXG4gICAgICBpZiAocnVsZS5wYXJhbXMgJiYgIXJ1bGVzVG9JbnNlcnRbbGFzdEFyZWFdW3J1bGUucGFyYW1zXSkge1xuICAgICAgICBydWxlc1RvSW5zZXJ0W2xhc3RBcmVhXVtydWxlLnBhcmFtc10gPSBbXVxuICAgICAgfVxuXG4gICAgICBpZiAoKCFydWxlLmhhc0R1cGxpY2F0ZXMgfHwgIWhhc0R1cGxpY2F0ZU5hbWUpICYmICFydWxlLnBhcmFtcykge1xuICAgICAgICAvLyBncmlkLXRlbXBsYXRlIGhhcyBubyBkdXBsaWNhdGVzIGFuZCBub3QgaW5zaWRlIG1lZGlhIHJ1bGVcblxuICAgICAgICBnZXRNU0RlY2xzKGFyZWEsIGZhbHNlLCBmYWxzZSlcbiAgICAgICAgICAucmV2ZXJzZSgpXG4gICAgICAgICAgLmZvckVhY2goaSA9PlxuICAgICAgICAgICAgZ3JpZEFyZWFSdWxlLnByZXBlbmQoXG4gICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oaSwge1xuICAgICAgICAgICAgICAgIHJhd3M6IHtcbiAgICAgICAgICAgICAgICAgIGJldHdlZW46IGdyaWRBcmVhLnJhd3MuYmV0d2VlblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgICApXG5cbiAgICAgICAgcnVsZXNUb0luc2VydFtsYXN0QXJlYV0ubGFzdFJ1bGUgPSBncmlkQXJlYVJ1bGVcbiAgICAgICAgbGFzdFJ1bGVJc1NldCA9IHRydWVcbiAgICAgIH0gZWxzZSBpZiAocnVsZS5oYXNEdXBsaWNhdGVzICYmICFydWxlLnBhcmFtcyAmJiAhc2VsZWN0b3JJc0NvbXBsZXgpIHtcbiAgICAgICAgLy8gZ3JpZC10ZW1wbGF0ZSBoYXMgZHVwbGljYXRlcyBhbmQgbm90IGluc2lkZSBtZWRpYSBydWxlXG4gICAgICAgIGxldCBjbG9uZWQgPSBncmlkQXJlYVJ1bGUuY2xvbmUoKVxuICAgICAgICBjbG9uZWQucmVtb3ZlQWxsKClcblxuICAgICAgICBnZXRNU0RlY2xzKGFyZWEsIGFyZWEucm93LnVwZGF0ZVNwYW4sIGFyZWEuY29sdW1uLnVwZGF0ZVNwYW4pXG4gICAgICAgICAgLnJldmVyc2UoKVxuICAgICAgICAgIC5mb3JFYWNoKGkgPT5cbiAgICAgICAgICAgIGNsb25lZC5wcmVwZW5kKFxuICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGksIHtcbiAgICAgICAgICAgICAgICByYXdzOiB7XG4gICAgICAgICAgICAgICAgICBiZXR3ZWVuOiBncmlkQXJlYS5yYXdzLmJldHdlZW5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgKVxuXG4gICAgICAgIGNsb25lZC5zZWxlY3RvcnMgPSBjaGFuZ2VEdXBsaWNhdGVBcmVhU2VsZWN0b3JzKFxuICAgICAgICAgIGNsb25lZC5zZWxlY3RvcnMsXG4gICAgICAgICAgcnVsZS5zZWxlY3RvcnNcbiAgICAgICAgKVxuXG4gICAgICAgIGlmIChydWxlc1RvSW5zZXJ0W2xhc3RBcmVhXS5sYXN0UnVsZSkge1xuICAgICAgICAgIHJ1bGVzVG9JbnNlcnRbbGFzdEFyZWFdLmxhc3RSdWxlLmFmdGVyKGNsb25lZClcbiAgICAgICAgfVxuICAgICAgICBydWxlc1RvSW5zZXJ0W2xhc3RBcmVhXS5sYXN0UnVsZSA9IGNsb25lZFxuICAgICAgICBsYXN0UnVsZUlzU2V0ID0gdHJ1ZVxuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgcnVsZS5oYXNEdXBsaWNhdGVzICYmXG4gICAgICAgICFydWxlLnBhcmFtcyAmJlxuICAgICAgICBzZWxlY3RvcklzQ29tcGxleCAmJlxuICAgICAgICBncmlkQXJlYVJ1bGUuc2VsZWN0b3IuaW5jbHVkZXMocnVsZS5zZWxlY3RvcnNbMF0pXG4gICAgICApIHtcbiAgICAgICAgLy8gZ3JpZC10ZW1wbGF0ZSBoYXMgZHVwbGljYXRlcyBhbmQgbm90IGluc2lkZSBtZWRpYSBydWxlXG4gICAgICAgIC8vIGFuZCB0aGUgc2VsZWN0b3IgaXMgY29tcGxleFxuICAgICAgICBncmlkQXJlYVJ1bGUud2Fsa0RlY2xzKC8tbXMtZ3JpZC0ocm93fGNvbHVtbikvLCBkID0+IGQucmVtb3ZlKCkpXG4gICAgICAgIGdldE1TRGVjbHMoYXJlYSwgYXJlYS5yb3cudXBkYXRlU3BhbiwgYXJlYS5jb2x1bW4udXBkYXRlU3BhbilcbiAgICAgICAgICAucmV2ZXJzZSgpXG4gICAgICAgICAgLmZvckVhY2goaSA9PlxuICAgICAgICAgICAgZ3JpZEFyZWFSdWxlLnByZXBlbmQoXG4gICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oaSwge1xuICAgICAgICAgICAgICAgIHJhd3M6IHtcbiAgICAgICAgICAgICAgICAgIGJldHdlZW46IGdyaWRBcmVhLnJhd3MuYmV0d2VlblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgICApXG4gICAgICB9IGVsc2UgaWYgKHJ1bGUucGFyYW1zKSB7XG4gICAgICAgIC8vIGdyaWQtdGVtcGxhdGUgaXMgaW5zaWRlIG1lZGlhIHJ1bGVcbiAgICAgICAgLy8gaWYgd2UncmUgaW5zaWRlIG1lZGlhIHJ1bGUsIHdlIG5lZWQgdG8gc3RvcmUgcHJlZml4ZWQgcnVsZXNcbiAgICAgICAgLy8gaW5zaWRlIHJ1bGVzVG9JbnNlcnQgb2JqZWN0IHRvIGJlIGFibGUgdG8gcHJlc2VydmUgdGhlIG9yZGVyIG9mIG1lZGlhXG4gICAgICAgIC8vIHJ1bGVzIGFuZCBtZXJnZSB0aGVtIGVhc2lseVxuICAgICAgICBsZXQgY2xvbmVkID0gZ3JpZEFyZWFSdWxlLmNsb25lKClcbiAgICAgICAgY2xvbmVkLnJlbW92ZUFsbCgpXG5cbiAgICAgICAgZ2V0TVNEZWNscyhhcmVhLCBhcmVhLnJvdy51cGRhdGVTcGFuLCBhcmVhLmNvbHVtbi51cGRhdGVTcGFuKVxuICAgICAgICAgIC5yZXZlcnNlKClcbiAgICAgICAgICAuZm9yRWFjaChpID0+XG4gICAgICAgICAgICBjbG9uZWQucHJlcGVuZChcbiAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihpLCB7XG4gICAgICAgICAgICAgICAgcmF3czoge1xuICAgICAgICAgICAgICAgICAgYmV0d2VlbjogZ3JpZEFyZWEucmF3cy5iZXR3ZWVuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICAgIClcblxuICAgICAgICBpZiAocnVsZS5oYXNEdXBsaWNhdGVzICYmIGhhc0R1cGxpY2F0ZU5hbWUpIHtcbiAgICAgICAgICBjbG9uZWQuc2VsZWN0b3JzID0gY2hhbmdlRHVwbGljYXRlQXJlYVNlbGVjdG9ycyhcbiAgICAgICAgICAgIGNsb25lZC5zZWxlY3RvcnMsXG4gICAgICAgICAgICBydWxlLnNlbGVjdG9yc1xuICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIGNsb25lZC5yYXdzID0gcnVsZS5ub2RlLnJhd3NcblxuICAgICAgICBpZiAoY3NzLmluZGV4KHJ1bGUubm9kZS5wYXJlbnQpID4gZ3JpZEFyZWFSdWxlSW5kZXgpIHtcbiAgICAgICAgICAvLyBhcHBlbmQgdGhlIHByZWZpeGVkIHJ1bGVzIHJpZ2h0IGluc2lkZSBtZWRpYSBydWxlXG4gICAgICAgICAgLy8gd2l0aCBncmlkLXRlbXBsYXRlXG4gICAgICAgICAgcnVsZS5ub2RlLnBhcmVudC5hcHBlbmQoY2xvbmVkKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHN0b3JlIHRoZSBydWxlIHRvIGluc2VydCBsYXRlclxuICAgICAgICAgIHJ1bGVzVG9JbnNlcnRbbGFzdEFyZWFdW3J1bGUucGFyYW1zXS5wdXNoKGNsb25lZClcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHNldCBuZXcgcnVsZSBhcyBsYXN0IHJ1bGUgT05MWSBpZiB3ZSBkaWRuJ3Qgc2V0IGxhc3RSdWxlIGZvclxuICAgICAgICAvLyB0aGlzIGdyaWQtYXJlYSBiZWZvcmVcbiAgICAgICAgaWYgKCFsYXN0UnVsZUlzU2V0KSB7XG4gICAgICAgICAgcnVsZXNUb0luc2VydFtsYXN0QXJlYV0ubGFzdFJ1bGUgPSBncmlkQXJlYU1lZGlhIHx8IGdyaWRBcmVhUnVsZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZFxuICB9KVxuXG4gIC8vIGFwcGVuZCBzdG9yZWQgcnVsZXMgaW5zaWRlIHRoZSBtZWRpYSBydWxlc1xuICBPYmplY3Qua2V5cyhydWxlc1RvSW5zZXJ0KS5mb3JFYWNoKGFyZWEgPT4ge1xuICAgIGxldCBkYXRhID0gcnVsZXNUb0luc2VydFthcmVhXVxuICAgIGxldCBsYXN0UnVsZSA9IGRhdGEubGFzdFJ1bGVcbiAgICBPYmplY3Qua2V5cyhkYXRhKVxuICAgICAgLnJldmVyc2UoKVxuICAgICAgLmZpbHRlcihwID0+IHAgIT09ICdsYXN0UnVsZScpXG4gICAgICAuZm9yRWFjaChwYXJhbXMgPT4ge1xuICAgICAgICBpZiAoZGF0YVtwYXJhbXNdLmxlbmd0aCA+IDAgJiYgbGFzdFJ1bGUpIHtcbiAgICAgICAgICBsYXN0UnVsZS5hZnRlcih7IG5hbWU6ICdtZWRpYScsIHBhcmFtcyB9KVxuICAgICAgICAgIGxhc3RSdWxlLm5leHQoKS5hcHBlbmQoZGF0YVtwYXJhbXNdKVxuICAgICAgICB9XG4gICAgICB9KVxuICB9KVxuXG4gIHJldHVybiB1bmRlZmluZWRcbn1cblxuLyoqXG4gKiBXYXJuIHVzZXIgaWYgZ3JpZCBhcmVhIGlkZW50aWZpZXJzIGFyZSBub3QgZm91bmRcbiAqIEBwYXJhbSAge09iamVjdH0gYXJlYXNcbiAqIEBwYXJhbSAge0RlY2xhcmF0aW9ufSBkZWNsXG4gKiBAcGFyYW0gIHtSZXN1bHR9IHJlc3VsdFxuICogQHJldHVybiB7dm9pZH1cbiAqL1xuZXhwb3J0cy53YXJuTWlzc2VkQXJlYXMgPSB3YXJuTWlzc2VkQXJlYXNcblxuZnVuY3Rpb24gd2Fybk1pc3NlZEFyZWFzKGFyZWFzLCBkZWNsLCByZXN1bHQpIHtcbiAgbGV0IG1pc3NlZCA9IE9iamVjdC5rZXlzKGFyZWFzKVxuXG4gIGRlY2wucm9vdCgpLndhbGtEZWNscygnZ3JpZC1hcmVhJywgZ3JpZEFyZWEgPT4ge1xuICAgIG1pc3NlZCA9IG1pc3NlZC5maWx0ZXIoZSA9PiBlICE9PSBncmlkQXJlYS52YWx1ZSlcbiAgfSlcblxuICBpZiAobWlzc2VkLmxlbmd0aCA+IDApIHtcbiAgICBkZWNsLndhcm4ocmVzdWx0LCAnQ2FuIG5vdCBmaW5kIGdyaWQgYXJlYXM6ICcgKyBtaXNzZWQuam9pbignLCAnKSlcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWRcbn1cblxuLyoqXG4gKiBjb21wYXJlIHNlbGVjdG9ycyB3aXRoIGdyaWQtYXJlYSBydWxlIGFuZCBncmlkLXRlbXBsYXRlIHJ1bGVcbiAqIHNob3cgd2FybmluZyBpZiBncmlkLXRlbXBsYXRlIHNlbGVjdG9yIGlzIG5vdCBmb3VuZFxuICogKHRoaXMgZnVuY3Rpb24gdXNlZCBmb3IgZ3JpZC1hcmVhIHJ1bGUpXG4gKiBAcGFyYW0gIHtEZWNsYXJhdGlvbn0gZGVjbFxuICogQHBhcmFtICB7UmVzdWx0fSByZXN1bHRcbiAqIEByZXR1cm4ge3ZvaWR9XG4gKi9cbmV4cG9ydHMud2FyblRlbXBsYXRlU2VsZWN0b3JOb3RGb3VuZCA9IHdhcm5UZW1wbGF0ZVNlbGVjdG9yTm90Rm91bmRcblxuZnVuY3Rpb24gd2FyblRlbXBsYXRlU2VsZWN0b3JOb3RGb3VuZChkZWNsLCByZXN1bHQpIHtcbiAgbGV0IHJ1bGUgPSBkZWNsLnBhcmVudFxuICBsZXQgcm9vdCA9IGRlY2wucm9vdCgpXG4gIGxldCBkdXBsaWNhdGVzRm91bmQgPSBmYWxzZVxuXG4gIC8vIHNsaWNlIHNlbGVjdG9yIGFycmF5LiBSZW1vdmUgdGhlIGxhc3QgcGFydCAoZm9yIGNvbXBhcmlzb24pXG4gIGxldCBzbGljZWRTZWxlY3RvckFyciA9IGxpc3RcbiAgICAuc3BhY2UocnVsZS5zZWxlY3RvcilcbiAgICAuZmlsdGVyKHN0ciA9PiBzdHIgIT09ICc+JylcbiAgICAuc2xpY2UoMCwgLTEpXG5cbiAgLy8gd2UgbmVlZCB0byBjb21wYXJlIG9ubHkgaWYgc2VsZWN0b3IgaXMgY29tcGxleC5cbiAgLy8gZS5nICcuZ3JpZC1jZWxsJyBpcyBzaW1wbGUsIGJ1dCAnLnBhcmVudCA+IC5ncmlkLWNlbGwnIGlzIGNvbXBsZXhcbiAgaWYgKHNsaWNlZFNlbGVjdG9yQXJyLmxlbmd0aCA+IDApIHtcbiAgICBsZXQgZ3JpZFRlbXBsYXRlRm91bmQgPSBmYWxzZVxuICAgIGxldCBmb3VuZEFyZWFTZWxlY3RvciA9IG51bGxcblxuICAgIHJvb3Qud2Fsa0RlY2xzKC9ncmlkLXRlbXBsYXRlKC1hcmVhcyk/JC8sIGQgPT4ge1xuICAgICAgbGV0IHBhcmVudCA9IGQucGFyZW50XG4gICAgICBsZXQgdGVtcGxhdGVTZWxlY3RvcnMgPSBwYXJlbnQuc2VsZWN0b3JzXG5cbiAgICAgIGxldCB7IGFyZWFzIH0gPSBwYXJzZVRlbXBsYXRlKHsgZGVjbDogZCwgZ2FwOiBnZXRHcmlkR2FwKGQpIH0pXG4gICAgICBsZXQgaGFzQXJlYSA9IGFyZWFzW2RlY2wudmFsdWVdXG5cbiAgICAgIC8vIGZpbmQgdGhlIHRoZSBtYXRjaGluZyBzZWxlY3RvcnNcbiAgICAgIGZvciAobGV0IHRwbFNlbGVjdG9yIG9mIHRlbXBsYXRlU2VsZWN0b3JzKSB7XG4gICAgICAgIGlmIChncmlkVGVtcGxhdGVGb3VuZCkge1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgICAgbGV0IHRwbFNlbGVjdG9yQXJyID0gbGlzdC5zcGFjZSh0cGxTZWxlY3RvcikuZmlsdGVyKHN0ciA9PiBzdHIgIT09ICc+JylcblxuICAgICAgICBncmlkVGVtcGxhdGVGb3VuZCA9IHRwbFNlbGVjdG9yQXJyLmV2ZXJ5KFxuICAgICAgICAgIChpdGVtLCBpZHgpID0+IGl0ZW0gPT09IHNsaWNlZFNlbGVjdG9yQXJyW2lkeF1cbiAgICAgICAgKVxuICAgICAgfVxuXG4gICAgICBpZiAoZ3JpZFRlbXBsYXRlRm91bmQgfHwgIWhhc0FyZWEpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKCFmb3VuZEFyZWFTZWxlY3Rvcikge1xuICAgICAgICBmb3VuZEFyZWFTZWxlY3RvciA9IHBhcmVudC5zZWxlY3RvclxuICAgICAgfVxuXG4gICAgICAvLyBpZiB3ZSBmb3VuZCB0aGUgZHVwbGljYXRlIGFyZWEgd2l0aCBkaWZmZXJlbnQgc2VsZWN0b3JcbiAgICAgIGlmIChmb3VuZEFyZWFTZWxlY3RvciAmJiBmb3VuZEFyZWFTZWxlY3RvciAhPT0gcGFyZW50LnNlbGVjdG9yKSB7XG4gICAgICAgIGR1cGxpY2F0ZXNGb3VuZCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH0pXG5cbiAgICAvLyB3YXJuIHVzZXIgaWYgd2UgZGlkbid0IGZpbmQgdGVtcGxhdGVcbiAgICBpZiAoIWdyaWRUZW1wbGF0ZUZvdW5kICYmIGR1cGxpY2F0ZXNGb3VuZCkge1xuICAgICAgZGVjbC53YXJuKFxuICAgICAgICByZXN1bHQsXG4gICAgICAgICdBdXRvcHJlZml4ZXIgY2Fubm90IGZpbmQgYSBncmlkLXRlbXBsYXRlICcgK1xuICAgICAgICAgIGBjb250YWluaW5nIHRoZSBkdXBsaWNhdGUgZ3JpZC1hcmVhIFwiJHtkZWNsLnZhbHVlfVwiIGAgK1xuICAgICAgICAgIGB3aXRoIGZ1bGwgc2VsZWN0b3IgbWF0Y2hpbmc6ICR7c2xpY2VkU2VsZWN0b3JBcnIuam9pbignICcpfWBcbiAgICAgIClcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiB3YXJuIHVzZXIgaWYgYm90aCBncmlkLWFyZWEgYW5kIGdyaWQtKHJvd3xjb2x1bW4pXG4gKiBkZWNsYXJhdGlvbnMgYXJlIHByZXNlbnQgaW4gdGhlIHNhbWUgcnVsZVxuICogQHBhcmFtICB7RGVjbGFyYXRpb259IGRlY2xcbiAqIEBwYXJhbSAge1Jlc3VsdH0gcmVzdWx0XG4gKiBAcmV0dXJuIHt2b2lkfVxuICovXG5leHBvcnRzLndhcm5JZkdyaWRSb3dDb2x1bW5FeGlzdHMgPSB3YXJuSWZHcmlkUm93Q29sdW1uRXhpc3RzXG5cbmZ1bmN0aW9uIHdhcm5JZkdyaWRSb3dDb2x1bW5FeGlzdHMoZGVjbCwgcmVzdWx0KSB7XG4gIGxldCBydWxlID0gZGVjbC5wYXJlbnRcbiAgbGV0IGRlY2xzID0gW11cbiAgcnVsZS53YWxrRGVjbHMoL15ncmlkLShyb3d8Y29sdW1uKS8sIGQgPT4ge1xuICAgIGlmIChcbiAgICAgICFkLnByb3AuZW5kc1dpdGgoJy1lbmQnKSAmJlxuICAgICAgIWQudmFsdWUuc3RhcnRzV2l0aCgnc3BhbicpICYmXG4gICAgICAhZC5wcm9wLmVuZHNXaXRoKCctZ2FwJylcbiAgICApIHtcbiAgICAgIGRlY2xzLnB1c2goZClcbiAgICB9XG4gIH0pXG4gIGlmIChkZWNscy5sZW5ndGggPiAwKSB7XG4gICAgZGVjbHMuZm9yRWFjaChkID0+IHtcbiAgICAgIGQud2FybihcbiAgICAgICAgcmVzdWx0LFxuICAgICAgICAnWW91IGFscmVhZHkgaGF2ZSBhIGdyaWQtYXJlYSBkZWNsYXJhdGlvbiBwcmVzZW50IGluIHRoZSBydWxlLiAnICtcbiAgICAgICAgICBgWW91IHNob3VsZCB1c2UgZWl0aGVyIGdyaWQtYXJlYSBvciAke2QucHJvcH0sIG5vdCBib3RoYFxuICAgICAgKVxuICAgIH0pXG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkXG59XG5cbi8vIEdhcCB1dGlsc1xuXG5leHBvcnRzLmdldEdyaWRHYXAgPSBnZXRHcmlkR2FwXG5cbmZ1bmN0aW9uIGdldEdyaWRHYXAoZGVjbCkge1xuICBsZXQgZ2FwID0ge31cblxuICAvLyB0cnkgdG8gZmluZCBnYXBcbiAgbGV0IHRlc3RHYXAgPSAvXihncmlkLSk/KChyb3d8Y29sdW1uKS0pP2dhcCQvXG4gIGRlY2wucGFyZW50LndhbGtEZWNscyh0ZXN0R2FwLCAoeyBwcm9wLCB2YWx1ZSB9KSA9PiB7XG4gICAgaWYgKC9eKGdyaWQtKT9nYXAkLy50ZXN0KHByb3ApKSB7XG4gICAgICBsZXQgW3JvdywgLCBjb2x1bW5dID0gcGFyc2VyKHZhbHVlKS5ub2Rlc1xuXG4gICAgICBnYXAucm93ID0gcm93ICYmIHBhcnNlci5zdHJpbmdpZnkocm93KVxuICAgICAgZ2FwLmNvbHVtbiA9IGNvbHVtbiA/IHBhcnNlci5zdHJpbmdpZnkoY29sdW1uKSA6IGdhcC5yb3dcbiAgICB9XG4gICAgaWYgKC9eKGdyaWQtKT9yb3ctZ2FwJC8udGVzdChwcm9wKSkgZ2FwLnJvdyA9IHZhbHVlXG4gICAgaWYgKC9eKGdyaWQtKT9jb2x1bW4tZ2FwJC8udGVzdChwcm9wKSkgZ2FwLmNvbHVtbiA9IHZhbHVlXG4gIH0pXG5cbiAgcmV0dXJuIGdhcFxufVxuXG4vKipcbiAqIHBhcnNlIG1lZGlhIHBhcmFtZXRlcnMgKGZvciBleGFtcGxlICdtaW4td2lkdGg6IDUwMHB4JylcbiAqIEBwYXJhbSAge1N0cmluZ30gcGFyYW1zIHBhcmFtZXRlciB0byBwYXJzZVxuICogQHJldHVybiB7fVxuICovXG5mdW5jdGlvbiBwYXJzZU1lZGlhUGFyYW1zKHBhcmFtcykge1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiBbXVxuICB9XG4gIGxldCBwYXJzZWQgPSBwYXJzZXIocGFyYW1zKVxuICBsZXQgcHJvcFxuICBsZXQgdmFsdWVcblxuICBwYXJzZWQud2Fsayhub2RlID0+IHtcbiAgICBpZiAobm9kZS50eXBlID09PSAnd29yZCcgJiYgL21pbnxtYXgvZy50ZXN0KG5vZGUudmFsdWUpKSB7XG4gICAgICBwcm9wID0gbm9kZS52YWx1ZVxuICAgIH0gZWxzZSBpZiAobm9kZS52YWx1ZS5pbmNsdWRlcygncHgnKSkge1xuICAgICAgdmFsdWUgPSBwYXJzZUludChub2RlLnZhbHVlLnJlcGxhY2UoL1xcRC9nLCAnJykpXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiBbcHJvcCwgdmFsdWVdXG59XG5cbi8qKlxuICogQ29tcGFyZSB0aGUgc2VsZWN0b3JzIGFuZCBkZWNpZGUgaWYgd2VcbiAqIG5lZWQgdG8gaW5oZXJpdCBnYXAgZnJvbSBjb21wYXJlZCBzZWxlY3RvciBvciBub3QuXG4gKiBAdHlwZSB7U3RyaW5nfSBzZWxBXG4gKiBAdHlwZSB7U3RyaW5nfSBzZWxCXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBzaG91bGRJbmhlcml0R2FwKHNlbEEsIHNlbEIpIHtcbiAgbGV0IHJlc3VsdFxuXG4gIC8vIGdldCBhcnJheXMgb2Ygc2VsZWN0b3Igc3BsaXQgaW4gMy1kZWVwIGFycmF5XG4gIGxldCBzcGxpdFNlbGVjdG9yQXJyQSA9IHNwbGl0U2VsZWN0b3Ioc2VsQSlcbiAgbGV0IHNwbGl0U2VsZWN0b3JBcnJCID0gc3BsaXRTZWxlY3RvcihzZWxCKVxuXG4gIGlmIChzcGxpdFNlbGVjdG9yQXJyQVswXS5sZW5ndGggPCBzcGxpdFNlbGVjdG9yQXJyQlswXS5sZW5ndGgpIHtcbiAgICAvLyBhYm9ydCBpZiBzZWxlY3RvckEgaGFzIGxvd2VyIGRlc2NlbmRhbnQgc3BlY2lmaWNpdHkgdGhlbiBzZWxlY3RvckJcbiAgICAvLyAoZS5nICcuZ3JpZCcgYW5kICcuaGVsbG8gLndvcmxkIC5ncmlkJylcbiAgICByZXR1cm4gZmFsc2VcbiAgfSBlbHNlIGlmIChzcGxpdFNlbGVjdG9yQXJyQVswXS5sZW5ndGggPiBzcGxpdFNlbGVjdG9yQXJyQlswXS5sZW5ndGgpIHtcbiAgICAvLyBpZiBzZWxlY3RvckEgaGFzIGhpZ2hlciBkZXNjZW5kYW50IHNwZWNpZmljaXR5IHRoZW4gc2VsZWN0b3JCXG4gICAgLy8gKGUuZyAnLmZvbyAuYmFyIC5ncmlkJyBhbmQgJy5ncmlkJylcblxuICAgIGxldCBpZHggPSBzcGxpdFNlbGVjdG9yQXJyQVswXS5yZWR1Y2UoKHJlcywgW2l0ZW1dLCBpbmRleCkgPT4ge1xuICAgICAgbGV0IGZpcnN0U2VsZWN0b3JQYXJ0ID0gc3BsaXRTZWxlY3RvckFyckJbMF1bMF1bMF1cbiAgICAgIGlmIChpdGVtID09PSBmaXJzdFNlbGVjdG9yUGFydCkge1xuICAgICAgICByZXR1cm4gaW5kZXhcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH0sIGZhbHNlKVxuXG4gICAgaWYgKGlkeCkge1xuICAgICAgcmVzdWx0ID0gc3BsaXRTZWxlY3RvckFyckJbMF0uZXZlcnkoKGFyciwgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIGFyci5ldmVyeShcbiAgICAgICAgICAocGFydCwgaW5uZXJJbmRleCkgPT5cbiAgICAgICAgICAgIC8vIGJlY2F1c2Ugc2VsZWN0b3JBIGhhcyBtb3JlIHNwYWNlIGVsZW1lbnRzLCB3ZSBuZWVkIHRvIHNsaWNlXG4gICAgICAgICAgICAvLyBzZWxlY3RvckEgYXJyYXkgYnkgJ2lkeCcgbnVtYmVyIHRvIGNvbXBhcmUgdGhlbVxuICAgICAgICAgICAgc3BsaXRTZWxlY3RvckFyckFbMF0uc2xpY2UoaWR4KVtpbmRleF1baW5uZXJJbmRleF0gPT09IHBhcnRcbiAgICAgICAgKVxuICAgICAgfSlcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gaWYgc2VsZWN0b3JBIGhhcyB0aGUgc2FtZSBkZXNjZW5kYW50IHNwZWNpZmljaXR5IGFzIHNlbGVjdG9yQlxuICAgIC8vIHRoaXMgY29uZGl0aW9uIGNvdmVycyBjYXNlcyBzdWNoIGFzOiAnLmdyaWQuZm9vLmJhcicgYW5kICcuZ3JpZCdcbiAgICByZXN1bHQgPSBzcGxpdFNlbGVjdG9yQXJyQi5zb21lKGJ5Q29tbWFBcnIgPT4ge1xuICAgICAgcmV0dXJuIGJ5Q29tbWFBcnIuZXZlcnkoKGJ5U3BhY2VBcnIsIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBieVNwYWNlQXJyLmV2ZXJ5KFxuICAgICAgICAgIChwYXJ0LCBpbm5lckluZGV4KSA9PiBzcGxpdFNlbGVjdG9yQXJyQVswXVtpbmRleF1baW5uZXJJbmRleF0gPT09IHBhcnRcbiAgICAgICAgKVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuLyoqXG4gKiBpbmhlcml0IGdyaWQgZ2FwIHZhbHVlcyBmcm9tIHRoZSBjbG9zZXN0IHJ1bGUgYWJvdmVcbiAqIHdpdGggdGhlIHNhbWUgc2VsZWN0b3JcbiAqIEBwYXJhbSAge0RlY2xhcmF0aW9ufSBkZWNsXG4gKiBAcGFyYW0gIHtPYmplY3R9IGdhcCBnYXAgdmFsdWVzXG4gKiBAcmV0dXJuIHtPYmplY3QgfCBCb29sZWFufSByZXR1cm4gZ2FwIHZhbHVlcyBvciBmYWxzZSAoaWYgbm90IGZvdW5kKVxuICovXG5leHBvcnRzLmluaGVyaXRHcmlkR2FwID0gaW5oZXJpdEdyaWRHYXBcblxuZnVuY3Rpb24gaW5oZXJpdEdyaWRHYXAoZGVjbCwgZ2FwKSB7XG4gIGxldCBydWxlID0gZGVjbC5wYXJlbnRcbiAgbGV0IG1lZGlhUnVsZSA9IGdldFBhcmVudE1lZGlhKHJ1bGUpXG4gIGxldCByb290ID0gcnVsZS5yb290KClcblxuICAvLyBnZXQgYW4gYXJyYXkgb2Ygc2VsZWN0b3Igc3BsaXQgaW4gMy1kZWVwIGFycmF5XG4gIGxldCBzcGxpdFNlbGVjdG9yQXJyID0gc3BsaXRTZWxlY3RvcihydWxlLnNlbGVjdG9yKVxuXG4gIC8vIGFib3J0IGlmIHRoZSBydWxlIGFscmVhZHkgaGFzIGdhcHNcbiAgaWYgKE9iamVjdC5rZXlzKGdhcCkubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLy8gZS5nIFsnbWluLXdpZHRoJ11cbiAgbGV0IFtwcm9wXSA9IHBhcnNlTWVkaWFQYXJhbXMobWVkaWFSdWxlLnBhcmFtcylcblxuICBsZXQgbGFzdEJ5U3BhY2UgPSBzcGxpdFNlbGVjdG9yQXJyWzBdXG5cbiAgLy8gZ2V0IGVzY2FwZWQgdmFsdWUgZnJvbSB0aGUgc2VsZWN0b3JcbiAgLy8gaWYgd2UgaGF2ZSAnLmdyaWQtMi5mb28uYmFyJyBzZWxlY3Rvciwgd2lsbCBiZSAnXFwuZ3JpZFxcLTInXG4gIGxldCBlc2NhcGVkID0gZXNjYXBlUmVnZXhwKGxhc3RCeVNwYWNlW2xhc3RCeVNwYWNlLmxlbmd0aCAtIDFdWzBdKVxuXG4gIGxldCByZWdleHAgPSBuZXcgUmVnRXhwKGAoJHtlc2NhcGVkfSQpfCgke2VzY2FwZWR9WywuXSlgKVxuXG4gIC8vIGZpbmQgdGhlIGNsb3Nlc3QgcnVsZSB3aXRoIHRoZSBzYW1lIHNlbGVjdG9yXG4gIGxldCBjbG9zZXN0UnVsZUdhcFxuICByb290LndhbGtSdWxlcyhyZWdleHAsIHIgPT4ge1xuICAgIGxldCBncmlkR2FwXG5cbiAgICAvLyBhYm9ydCBpZiBhcmUgY2hlY2tpbmcgdGhlIHNhbWUgcnVsZVxuICAgIGlmIChydWxlLnRvU3RyaW5nKCkgPT09IHIudG9TdHJpbmcoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gZmluZCBncmlkLWdhcCB2YWx1ZXNcbiAgICByLndhbGtEZWNscygnZ3JpZC1nYXAnLCBkID0+IChncmlkR2FwID0gZ2V0R3JpZEdhcChkKSkpXG5cbiAgICAvLyBza2lwIHJ1bGUgd2l0aG91dCBnYXBzXG4gICAgaWYgKCFncmlkR2FwIHx8IE9iamVjdC5rZXlzKGdyaWRHYXApLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICAvLyBza2lwIHJ1bGVzIHRoYXQgc2hvdWxkIG5vdCBiZSBpbmhlcml0ZWQgZnJvbVxuICAgIGlmICghc2hvdWxkSW5oZXJpdEdhcChydWxlLnNlbGVjdG9yLCByLnNlbGVjdG9yKSkge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBsZXQgbWVkaWEgPSBnZXRQYXJlbnRNZWRpYShyKVxuICAgIGlmIChtZWRpYSkge1xuICAgICAgLy8gaWYgd2UgYXJlIGluc2lkZSBtZWRpYSwgd2UgbmVlZCB0byBjaGVjayB0aGF0IG1lZGlhIHByb3BzIG1hdGNoXG4gICAgICAvLyBlLmcgKCdtaW4td2lkdGgnID09PSAnbWluLXdpZHRoJylcbiAgICAgIGxldCBwcm9wVG9Db21wYXJlID0gcGFyc2VNZWRpYVBhcmFtcyhtZWRpYS5wYXJhbXMpWzBdXG4gICAgICBpZiAocHJvcFRvQ29tcGFyZSA9PT0gcHJvcCkge1xuICAgICAgICBjbG9zZXN0UnVsZUdhcCA9IGdyaWRHYXBcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2xvc2VzdFJ1bGVHYXAgPSBncmlkR2FwXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfSlcblxuICAvLyBpZiB3ZSBmaW5kIHRoZSBjbG9zZXN0IGdhcCBvYmplY3RcbiAgaWYgKGNsb3Nlc3RSdWxlR2FwICYmIE9iamVjdC5rZXlzKGNsb3Nlc3RSdWxlR2FwKS5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIGNsb3Nlc3RSdWxlR2FwXG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59XG5cbmV4cG9ydHMud2FybkdyaWRHYXAgPSB3YXJuR3JpZEdhcFxuXG5mdW5jdGlvbiB3YXJuR3JpZEdhcCh7IGdhcCwgaGFzQ29sdW1ucywgZGVjbCwgcmVzdWx0IH0pIHtcbiAgbGV0IGhhc0JvdGhHYXBzID0gZ2FwLnJvdyAmJiBnYXAuY29sdW1uXG4gIGlmICghaGFzQ29sdW1ucyAmJiAoaGFzQm90aEdhcHMgfHwgKGdhcC5jb2x1bW4gJiYgIWdhcC5yb3cpKSkge1xuICAgIGRlbGV0ZSBnYXAuY29sdW1uXG4gICAgZGVjbC53YXJuKFxuICAgICAgcmVzdWx0LFxuICAgICAgJ0NhbiBub3QgaW1wbGVtZW50IGdyaWQtZ2FwIHdpdGhvdXQgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zJ1xuICAgIClcbiAgfVxufVxuXG4vKipcbiAqIG5vcm1hbGl6ZSB0aGUgZ3JpZC10ZW1wbGF0ZS1yb3dzL2NvbHVtbnMgdmFsdWVzXG4gKiBAcGFyYW0gIHtTdHJpbmd9IHN0ciBncmlkLXRlbXBsYXRlLXJvd3MvY29sdW1ucyB2YWx1ZVxuICogQHJldHVybiB7QXJyYXl9IG5vcm1hbGl6ZWQgYXJyYXkgd2l0aCB2YWx1ZXNcbiAqIEBleGFtcGxlXG4gKiBsZXQgbm9ybWFsaXplZCA9IG5vcm1hbGl6ZVJvd0NvbHVtbignMWZyIHJlcGVhdCgyLCAyMHB4IDUwcHgpIDFmcicpXG4gKiBub3JtYWxpemVkIC8vIDw9IFsnMWZyJywgJzIwcHgnLCAnNTBweCcsICcyMHB4JywgJzUwcHgnLCAnMWZyJ11cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplUm93Q29sdW1uKHN0cikge1xuICBsZXQgbm9ybWFsaXplZCA9IHBhcnNlcihzdHIpLm5vZGVzLnJlZHVjZSgocmVzdWx0LCBub2RlKSA9PiB7XG4gICAgaWYgKG5vZGUudHlwZSA9PT0gJ2Z1bmN0aW9uJyAmJiBub2RlLnZhbHVlID09PSAncmVwZWF0Jykge1xuICAgICAgbGV0IGtleSA9ICdjb3VudCdcblxuICAgICAgbGV0IFtjb3VudCwgdmFsdWVdID0gbm9kZS5ub2Rlcy5yZWR1Y2UoXG4gICAgICAgIChhY2MsIG4pID0+IHtcbiAgICAgICAgICBpZiAobi50eXBlID09PSAnd29yZCcgJiYga2V5ID09PSAnY291bnQnKSB7XG4gICAgICAgICAgICBhY2NbMF0gPSBNYXRoLmFicyhwYXJzZUludChuLnZhbHVlKSlcbiAgICAgICAgICAgIHJldHVybiBhY2NcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG4udHlwZSA9PT0gJ2RpdicgJiYgbi52YWx1ZSA9PT0gJywnKSB7XG4gICAgICAgICAgICBrZXkgPSAndmFsdWUnXG4gICAgICAgICAgICByZXR1cm4gYWNjXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChrZXkgPT09ICd2YWx1ZScpIHtcbiAgICAgICAgICAgIGFjY1sxXSArPSBwYXJzZXIuc3RyaW5naWZ5KG4pXG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBhY2NcbiAgICAgICAgfSxcbiAgICAgICAgWzAsICcnXVxuICAgICAgKVxuXG4gICAgICBpZiAoY291bnQpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2godmFsdWUpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdFxuICAgIH1cbiAgICBpZiAobm9kZS50eXBlID09PSAnc3BhY2UnKSB7XG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQuY29uY2F0KHBhcnNlci5zdHJpbmdpZnkobm9kZSkpXG4gIH0sIFtdKVxuXG4gIHJldHVybiBub3JtYWxpemVkXG59XG5cbmV4cG9ydHMuYXV0b3BsYWNlR3JpZEl0ZW1zID0gYXV0b3BsYWNlR3JpZEl0ZW1zXG5cbi8qKlxuICogQXV0b3BsYWNlIGdyaWQgaXRlbXNcbiAqIEBwYXJhbSB7RGVjbGFyYXRpb259IGRlY2xcbiAqIEBwYXJhbSB7UmVzdWx0fSByZXN1bHRcbiAqIEBwYXJhbSB7T2JqZWN0fSBnYXAgZ2FwIHZhbHVlc1xuICogQHBhcmFtIHtTdHJpbmd9IGF1dG9mbG93VmFsdWUgZ3JpZC1hdXRvLWZsb3cgdmFsdWVcbiAqIEByZXR1cm4ge3ZvaWR9XG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3N0Y3NzL2F1dG9wcmVmaXhlci9pc3N1ZXMvMTE0OFxuICovXG5mdW5jdGlvbiBhdXRvcGxhY2VHcmlkSXRlbXMoZGVjbCwgcmVzdWx0LCBnYXAsIGF1dG9mbG93VmFsdWUgPSAncm93Jykge1xuICBsZXQgeyBwYXJlbnQgfSA9IGRlY2xcblxuICBsZXQgcm93RGVjbCA9IHBhcmVudC5ub2Rlcy5maW5kKGkgPT4gaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1yb3dzJylcbiAgbGV0IHJvd3MgPSBub3JtYWxpemVSb3dDb2x1bW4ocm93RGVjbC52YWx1ZSlcbiAgbGV0IGNvbHVtbnMgPSBub3JtYWxpemVSb3dDb2x1bW4oZGVjbC52YWx1ZSlcblxuICAvLyBCdWlsZCBhcnJheSBvZiBhcmVhIG5hbWVzIHdpdGggZHVtbXkgdmFsdWVzLiBJZiB3ZSBoYXZlIDMgY29sdW1ucyBhbmRcbiAgLy8gMiByb3dzLCBmaWxsZWRSb3dzIHdpbGwgYmUgZXF1YWwgdG8gWycxIDIgMycsICc0IDUgNiddXG4gIGxldCBmaWxsZWRSb3dzID0gcm93cy5tYXAoKF8sIHJvd0luZGV4KSA9PiB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oXG4gICAgICB7IGxlbmd0aDogY29sdW1ucy5sZW5ndGggfSxcbiAgICAgICh2LCBrKSA9PiBrICsgcm93SW5kZXggKiBjb2x1bW5zLmxlbmd0aCArIDFcbiAgICApLmpvaW4oJyAnKVxuICB9KVxuXG4gIGxldCBhcmVhcyA9IHBhcnNlR3JpZEFyZWFzKHsgcm93czogZmlsbGVkUm93cywgZ2FwIH0pXG4gIGxldCBrZXlzID0gT2JqZWN0LmtleXMoYXJlYXMpXG4gIGxldCBpdGVtcyA9IGtleXMubWFwKGkgPT4gYXJlYXNbaV0pXG5cbiAgLy8gQ2hhbmdlIHRoZSBvcmRlciBvZiBjZWxscyBpZiBncmlkLWF1dG8tZmxvdyB2YWx1ZSBpcyAnY29sdW1uJ1xuICBpZiAoYXV0b2Zsb3dWYWx1ZS5pbmNsdWRlcygnY29sdW1uJykpIHtcbiAgICBpdGVtcyA9IGl0ZW1zLnNvcnQoKGEsIGIpID0+IGEuY29sdW1uLnN0YXJ0IC0gYi5jb2x1bW4uc3RhcnQpXG4gIH1cblxuICAvLyBJbnNlcnQgbmV3IHJ1bGVzXG4gIGl0ZW1zLnJldmVyc2UoKS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgIGxldCB7IGNvbHVtbiwgcm93IH0gPSBpdGVtXG4gICAgbGV0IG5vZGVTZWxlY3RvciA9IHBhcmVudC5zZWxlY3RvcnNcbiAgICAgIC5tYXAoc2VsID0+IHNlbCArIGAgPiAqOm50aC1jaGlsZCgke2tleXMubGVuZ3RoIC0gaW5kZXh9KWApXG4gICAgICAuam9pbignLCAnKVxuXG4gICAgLy8gY3JlYXRlIG5ldyBydWxlXG4gICAgbGV0IG5vZGUgPSBwYXJlbnQuY2xvbmUoKS5yZW1vdmVBbGwoKVxuXG4gICAgLy8gY2hhbmdlIHJ1bGUgc2VsZWN0b3JcbiAgICBub2RlLnNlbGVjdG9yID0gbm9kZVNlbGVjdG9yXG5cbiAgICAvLyBpbnNlcnQgcHJlZml4ZWQgcm93L2NvbHVtbiB2YWx1ZXNcbiAgICBub2RlLmFwcGVuZCh7IHByb3A6ICctbXMtZ3JpZC1yb3cnLCB2YWx1ZTogcm93LnN0YXJ0IH0pXG4gICAgbm9kZS5hcHBlbmQoeyBwcm9wOiAnLW1zLWdyaWQtY29sdW1uJywgdmFsdWU6IGNvbHVtbi5zdGFydCB9KVxuXG4gICAgLy8gaW5zZXJ0IHJ1bGVcbiAgICBwYXJlbnQuYWZ0ZXIobm9kZSlcbiAgfSlcblxuICByZXR1cm4gdW5kZWZpbmVkXG59XG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIEltYWdlUmVuZGVyaW5nIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQWRkIGhhY2sgb25seSBmb3IgY3Jpc3AtZWRnZXNcbiAgICovXG4gIGNoZWNrKGRlY2wpIHtcbiAgICByZXR1cm4gZGVjbC52YWx1ZSA9PT0gJ3BpeGVsYXRlZCdcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJvcGVydHkgbmFtZSBmb3IgSUVcbiAgICovXG4gIHByZWZpeGVkKHByb3AsIHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctbXMtJykge1xuICAgICAgcmV0dXJuICctbXMtaW50ZXJwb2xhdGlvbi1tb2RlJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBhbmQgdmFsdWUgZm9yIElFXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICBkZWNsLnByb3AgPSAnLW1zLWludGVycG9sYXRpb24tbW9kZSdcbiAgICBkZWNsLnZhbHVlID0gJ25lYXJlc3QtbmVpZ2hib3InXG4gICAgcmV0dXJuIGRlY2xcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdpbWFnZS1yZW5kZXJpbmcnXG4gIH1cblxuICAvKipcbiAgICogV2FybiBvbiBvbGQgdmFsdWVcbiAgICovXG4gIHByb2Nlc3Mobm9kZSwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHN1cGVyLnByb2Nlc3Mobm9kZSwgcmVzdWx0KVxuICB9XG59XG5cbkltYWdlUmVuZGVyaW5nLm5hbWVzID0gWydpbWFnZS1yZW5kZXJpbmcnLCAnaW50ZXJwb2xhdGlvbi1tb2RlJ11cblxubW9kdWxlLmV4cG9ydHMgPSBJbWFnZVJlbmRlcmluZ1xuIiwibGV0IFZhbHVlID0gcmVxdWlyZSgnLi4vdmFsdWUnKVxuXG5jbGFzcyBJbWFnZVNldCBleHRlbmRzIFZhbHVlIHtcbiAgLyoqXG4gICAqIFVzZSBub24tc3RhbmRhcmQgbmFtZSBmb3IgV2ViS2l0IGFuZCBGaXJlZm94XG4gICAqL1xuICByZXBsYWNlKHN0cmluZywgcHJlZml4KSB7XG4gICAgbGV0IGZpeGVkID0gc3VwZXIucmVwbGFjZShzdHJpbmcsIHByZWZpeClcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICBmaXhlZCA9IGZpeGVkLnJlcGxhY2UoLyhcIlteXCJdK1wifCdbXiddKycpKFxccytcXGQrXFx3KS9naSwgJ3VybCgkMSkkMicpXG4gICAgfVxuICAgIHJldHVybiBmaXhlZFxuICB9XG59XG5cbkltYWdlU2V0Lm5hbWVzID0gWydpbWFnZS1zZXQnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEltYWdlU2V0XG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIElubGluZUxvZ2ljYWwgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBVc2Ugb2xkIHN5bnRheCBmb3IgLW1vei0gYW5kIC13ZWJraXQtXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gcHJlZml4ICsgcHJvcC5yZXBsYWNlKCctaW5saW5lJywgJycpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKC8obWFyZ2lufHBhZGRpbmd8Ym9yZGVyKS0oc3RhcnR8ZW5kKS8sICckMS1pbmxpbmUtJDInKVxuICB9XG59XG5cbklubGluZUxvZ2ljYWwubmFtZXMgPSBbXG4gICdib3JkZXItaW5saW5lLXN0YXJ0JyxcbiAgJ2JvcmRlci1pbmxpbmUtZW5kJyxcbiAgJ21hcmdpbi1pbmxpbmUtc3RhcnQnLFxuICAnbWFyZ2luLWlubGluZS1lbmQnLFxuICAncGFkZGluZy1pbmxpbmUtc3RhcnQnLFxuICAncGFkZGluZy1pbmxpbmUtZW5kJyxcbiAgJ2JvcmRlci1zdGFydCcsXG4gICdib3JkZXItZW5kJyxcbiAgJ21hcmdpbi1zdGFydCcsXG4gICdtYXJnaW4tZW5kJyxcbiAgJ3BhZGRpbmctc3RhcnQnLFxuICAncGFkZGluZy1lbmQnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gSW5saW5lTG9naWNhbFxuIiwibGV0IE9sZFZhbHVlID0gcmVxdWlyZSgnLi4vb2xkLXZhbHVlJylcbmxldCBWYWx1ZSA9IHJlcXVpcmUoJy4uL3ZhbHVlJylcblxuZnVuY3Rpb24gcmVnZXhwKG5hbWUpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoYChefFtcXFxccywoXSkoJHtuYW1lfSgkfFtcXFxccyksXSkpYCwgJ2dpJylcbn1cblxuY2xhc3MgSW50cmluc2ljIGV4dGVuZHMgVmFsdWUge1xuICByZWdleHAoKSB7XG4gICAgaWYgKCF0aGlzLnJlZ2V4cENhY2hlKSB0aGlzLnJlZ2V4cENhY2hlID0gcmVnZXhwKHRoaXMubmFtZSlcbiAgICByZXR1cm4gdGhpcy5yZWdleHBDYWNoZVxuICB9XG5cbiAgaXNTdHJldGNoKCkge1xuICAgIHJldHVybiAoXG4gICAgICB0aGlzLm5hbWUgPT09ICdzdHJldGNoJyB8fFxuICAgICAgdGhpcy5uYW1lID09PSAnZmlsbCcgfHxcbiAgICAgIHRoaXMubmFtZSA9PT0gJ2ZpbGwtYXZhaWxhYmxlJ1xuICAgIClcbiAgfVxuXG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1vei0nICYmIHRoaXMuaXNTdHJldGNoKCkpIHtcbiAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSh0aGlzLnJlZ2V4cCgpLCAnJDEtbW96LWF2YWlsYWJsZSQzJylcbiAgICB9XG4gICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJyAmJiB0aGlzLmlzU3RyZXRjaCgpKSB7XG4gICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodGhpcy5yZWdleHAoKSwgJyQxLXdlYmtpdC1maWxsLWF2YWlsYWJsZSQzJylcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpXG4gIH1cblxuICBvbGQocHJlZml4KSB7XG4gICAgbGV0IHByZWZpeGVkID0gcHJlZml4ICsgdGhpcy5uYW1lXG4gICAgaWYgKHRoaXMuaXNTdHJldGNoKCkpIHtcbiAgICAgIGlmIChwcmVmaXggPT09ICctbW96LScpIHtcbiAgICAgICAgcHJlZml4ZWQgPSAnLW1vei1hdmFpbGFibGUnXG4gICAgICB9IGVsc2UgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgICBwcmVmaXhlZCA9ICctd2Via2l0LWZpbGwtYXZhaWxhYmxlJ1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IE9sZFZhbHVlKHRoaXMubmFtZSwgcHJlZml4ZWQsIHByZWZpeGVkLCByZWdleHAocHJlZml4ZWQpKVxuICB9XG5cbiAgYWRkKGRlY2wsIHByZWZpeCkge1xuICAgIGlmIChkZWNsLnByb3AuaW5jbHVkZXMoJ2dyaWQnKSAmJiBwcmVmaXggIT09ICctd2Via2l0LScpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLmFkZChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuSW50cmluc2ljLm5hbWVzID0gW1xuICAnbWF4LWNvbnRlbnQnLFxuICAnbWluLWNvbnRlbnQnLFxuICAnZml0LWNvbnRlbnQnLFxuICAnZmlsbCcsXG4gICdmaWxsLWF2YWlsYWJsZScsXG4gICdzdHJldGNoJ1xuXVxuXG5tb2R1bGUuZXhwb3J0cyA9IEludHJpbnNpY1xuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBKdXN0aWZ5Q29udGVudCBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciAyMDA5IGFuZCAyMDEyIHNwZWNzXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAwOSkge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdib3gtcGFjaydcbiAgICB9XG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1wYWNrJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcm9wZXJ0eSBuYW1lIGJ5IGZpbmFsIHNwZWNcbiAgICovXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gJ2p1c3RpZnktY29udGVudCdcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdmFsdWUgZm9yIDIwMDkgYW5kIDIwMTIgc3BlY3NcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlYyA9IGZsZXhTcGVjKHByZWZpeClbMF1cbiAgICBpZiAoc3BlYyA9PT0gMjAwOSB8fCBzcGVjID09PSAyMDEyKSB7XG4gICAgICBsZXQgdmFsdWUgPSBKdXN0aWZ5Q29udGVudC5vbGRWYWx1ZXNbZGVjbC52YWx1ZV0gfHwgZGVjbC52YWx1ZVxuICAgICAgZGVjbC52YWx1ZSA9IHZhbHVlXG4gICAgICBpZiAoc3BlYyAhPT0gMjAwOSB8fCB2YWx1ZSAhPT0gJ2Rpc3RyaWJ1dGUnKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5zZXQoZGVjbCwgcHJlZml4KVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoc3BlYyA9PT0gJ2ZpbmFsJykge1xuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5KdXN0aWZ5Q29udGVudC5uYW1lcyA9IFsnanVzdGlmeS1jb250ZW50JywgJ2ZsZXgtcGFjaycsICdib3gtcGFjayddXG5cbkp1c3RpZnlDb250ZW50Lm9sZFZhbHVlcyA9IHtcbiAgJ2ZsZXgtZW5kJzogJ2VuZCcsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZSdcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBKdXN0aWZ5Q29udGVudFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBNYXNrQm9yZGVyIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgZmluYWwgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiB0aGlzLm5hbWUucmVwbGFjZSgnYm94LWltYWdlJywgJ2JvcmRlcicpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGZsZXggcHJvcGVydHkgZm9yIDIwMTIgc3BlY1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgbGV0IHJlc3VsdCA9IHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgnYm9yZGVyJywgJ2JveC1pbWFnZScpXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG5NYXNrQm9yZGVyLm5hbWVzID0gW1xuICAnbWFzay1ib3JkZXInLFxuICAnbWFzay1ib3JkZXItc291cmNlJyxcbiAgJ21hc2stYm9yZGVyLXNsaWNlJyxcbiAgJ21hc2stYm9yZGVyLXdpZHRoJyxcbiAgJ21hc2stYm9yZGVyLW91dHNldCcsXG4gICdtYXNrLWJvcmRlci1yZXBlYXQnLFxuICAnbWFzay1ib3gtaW1hZ2UnLFxuICAnbWFzay1ib3gtaW1hZ2Utc291cmNlJyxcbiAgJ21hc2stYm94LWltYWdlLXNsaWNlJyxcbiAgJ21hc2stYm94LWltYWdlLXdpZHRoJyxcbiAgJ21hc2stYm94LWltYWdlLW91dHNldCcsXG4gICdtYXNrLWJveC1pbWFnZS1yZXBlYXQnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gTWFza0JvcmRlclxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBNYXNrQ29tcG9zaXRlIGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogUHJlZml4IG1hc2stY29tcG9zaXRlIGZvciB3ZWJraXRcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgbGV0IGlzQ29tcG9zaXRlUHJvcCA9IGRlY2wucHJvcCA9PT0gJ21hc2stY29tcG9zaXRlJ1xuXG4gICAgbGV0IGNvbXBvc2l0ZVZhbHVlc1xuXG4gICAgaWYgKGlzQ29tcG9zaXRlUHJvcCkge1xuICAgICAgY29tcG9zaXRlVmFsdWVzID0gZGVjbC52YWx1ZS5zcGxpdCgnLCcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbXBvc2l0ZVZhbHVlcyA9IGRlY2wudmFsdWUubWF0Y2goTWFza0NvbXBvc2l0ZS5yZWdleHApIHx8IFtdXG4gICAgfVxuXG4gICAgY29tcG9zaXRlVmFsdWVzID0gY29tcG9zaXRlVmFsdWVzLm1hcChlbCA9PiBlbC50cmltKCkpLmZpbHRlcihlbCA9PiBlbClcbiAgICBsZXQgaGFzQ29tcG9zaXRlVmFsdWVzID0gY29tcG9zaXRlVmFsdWVzLmxlbmd0aFxuXG4gICAgbGV0IGNvbXBvc2l0ZURlY2xcblxuICAgIGlmIChoYXNDb21wb3NpdGVWYWx1ZXMpIHtcbiAgICAgIGNvbXBvc2l0ZURlY2wgPSB0aGlzLmNsb25lKGRlY2wpXG4gICAgICBjb21wb3NpdGVEZWNsLnZhbHVlID0gY29tcG9zaXRlVmFsdWVzXG4gICAgICAgIC5tYXAodmFsdWUgPT4gTWFza0NvbXBvc2l0ZS5vbGRWYWx1ZXNbdmFsdWVdIHx8IHZhbHVlKVxuICAgICAgICAuam9pbignLCAnKVxuXG4gICAgICBpZiAoY29tcG9zaXRlVmFsdWVzLmluY2x1ZGVzKCdpbnRlcnNlY3QnKSkge1xuICAgICAgICBjb21wb3NpdGVEZWNsLnZhbHVlICs9ICcsIHhvcidcbiAgICAgIH1cblxuICAgICAgY29tcG9zaXRlRGVjbC5wcm9wID0gcHJlZml4ICsgJ21hc2stY29tcG9zaXRlJ1xuICAgIH1cblxuICAgIGlmIChpc0NvbXBvc2l0ZVByb3ApIHtcbiAgICAgIGlmICghaGFzQ29tcG9zaXRlVmFsdWVzKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgICAgY29tcG9zaXRlRGVjbC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNvbXBvc2l0ZURlY2wpXG4gICAgfVxuXG4gICAgbGV0IGNsb25lZCA9IHRoaXMuY2xvbmUoZGVjbClcbiAgICBjbG9uZWQucHJvcCA9IHByZWZpeCArIGNsb25lZC5wcm9wXG5cbiAgICBpZiAoaGFzQ29tcG9zaXRlVmFsdWVzKSB7XG4gICAgICBjbG9uZWQudmFsdWUgPSBjbG9uZWQudmFsdWUucmVwbGFjZShNYXNrQ29tcG9zaXRlLnJlZ2V4cCwgJycpXG4gICAgfVxuXG4gICAgaWYgKHRoaXMubmVlZENhc2NhZGUoZGVjbCkpIHtcbiAgICAgIGNsb25lZC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cblxuICAgIGRlY2wucGFyZW50Lmluc2VydEJlZm9yZShkZWNsLCBjbG9uZWQpXG5cbiAgICBpZiAoIWhhc0NvbXBvc2l0ZVZhbHVlcykge1xuICAgICAgcmV0dXJuIGRlY2xcbiAgICB9XG5cbiAgICBpZiAodGhpcy5uZWVkQ2FzY2FkZShkZWNsKSkge1xuICAgICAgY29tcG9zaXRlRGVjbC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgIH1cbiAgICByZXR1cm4gZGVjbC5wYXJlbnQuaW5zZXJ0QmVmb3JlKGRlY2wsIGNvbXBvc2l0ZURlY2wpXG4gIH1cbn1cblxuTWFza0NvbXBvc2l0ZS5uYW1lcyA9IFsnbWFzaycsICdtYXNrLWNvbXBvc2l0ZSddXG5cbk1hc2tDb21wb3NpdGUub2xkVmFsdWVzID0ge1xuICBhZGQ6ICdzb3VyY2Utb3ZlcicsXG4gIHN1YnRyYWN0OiAnc291cmNlLW91dCcsXG4gIGludGVyc2VjdDogJ3NvdXJjZS1pbicsXG4gIGV4Y2x1ZGU6ICd4b3InXG59XG5cbk1hc2tDb21wb3NpdGUucmVnZXhwID0gbmV3IFJlZ0V4cChcbiAgYFxcXFxzKygke09iamVjdC5rZXlzKE1hc2tDb21wb3NpdGUub2xkVmFsdWVzKS5qb2luKFxuICAgICd8J1xuICApfSlcXFxcYig/IVxcXFwpKVxcXFxzKig/PVssXSlgLFxuICAnaWcnXG4pXG5cbm1vZHVsZS5leHBvcnRzID0gTWFza0NvbXBvc2l0ZVxuIiwibGV0IGZsZXhTcGVjID0gcmVxdWlyZSgnLi9mbGV4LXNwZWMnKVxubGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBPcmRlciBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciAyMDA5IGFuZCAyMDEyIHNwZWNzXG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgc3BlY1xuICAgIDtbc3BlYywgcHJlZml4XSA9IGZsZXhTcGVjKHByZWZpeClcbiAgICBpZiAoc3BlYyA9PT0gMjAwOSkge1xuICAgICAgcmV0dXJuIHByZWZpeCArICdib3gtb3JkaW5hbC1ncm91cCdcbiAgICB9XG4gICAgaWYgKHNwZWMgPT09IDIwMTIpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAnZmxleC1vcmRlcidcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBmaW5hbCBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdvcmRlcidcbiAgfVxuXG4gIC8qKlxuICAgKiBGaXggdmFsdWUgZm9yIDIwMDkgc3BlY1xuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGxldCBzcGVjID0gZmxleFNwZWMocHJlZml4KVswXVxuICAgIGlmIChzcGVjID09PSAyMDA5ICYmIC9cXGQvLnRlc3QoZGVjbC52YWx1ZSkpIHtcbiAgICAgIGRlY2wudmFsdWUgPSAocGFyc2VJbnQoZGVjbC52YWx1ZSkgKyAxKS50b1N0cmluZygpXG4gICAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuT3JkZXIubmFtZXMgPSBbJ29yZGVyJywgJ2ZsZXgtb3JkZXInLCAnYm94LW9yZGluYWwtZ3JvdXAnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9yZGVyXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIE92ZXJzY3JvbGxCZWhhdmlvciBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIENoYW5nZSBwcm9wZXJ0eSBuYW1lIGZvciBJRVxuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgcmV0dXJuIHByZWZpeCArICdzY3JvbGwtY2hhaW5pbmcnXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHByb3BlcnR5IG5hbWUgYnkgc3BlY1xuICAgKi9cbiAgbm9ybWFsaXplKCkge1xuICAgIHJldHVybiAnb3ZlcnNjcm9sbC1iZWhhdmlvcidcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UgdmFsdWUgZm9yIElFXG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgaWYgKGRlY2wudmFsdWUgPT09ICdhdXRvJykge1xuICAgICAgZGVjbC52YWx1ZSA9ICdjaGFpbmVkJ1xuICAgIH0gZWxzZSBpZiAoZGVjbC52YWx1ZSA9PT0gJ25vbmUnIHx8IGRlY2wudmFsdWUgPT09ICdjb250YWluJykge1xuICAgICAgZGVjbC52YWx1ZSA9ICdub25lJ1xuICAgIH1cbiAgICByZXR1cm4gc3VwZXIuc2V0KGRlY2wsIHByZWZpeClcbiAgfVxufVxuXG5PdmVyc2Nyb2xsQmVoYXZpb3IubmFtZXMgPSBbJ292ZXJzY3JvbGwtYmVoYXZpb3InLCAnc2Nyb2xsLWNoYWluaW5nJ11cblxubW9kdWxlLmV4cG9ydHMgPSBPdmVyc2Nyb2xsQmVoYXZpb3JcbiIsImxldCBPbGRWYWx1ZSA9IHJlcXVpcmUoJy4uL29sZC12YWx1ZScpXG5sZXQgVmFsdWUgPSByZXF1aXJlKCcuLi92YWx1ZScpXG5cbmNsYXNzIFBpeGVsYXRlZCBleHRlbmRzIFZhbHVlIHtcbiAgLyoqXG4gICAqIFVzZSBub24tc3RhbmRhcmQgbmFtZSBmb3IgV2ViS2l0IGFuZCBGaXJlZm94XG4gICAqL1xuICByZXBsYWNlKHN0cmluZywgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHRoaXMucmVnZXhwKCksICckMS13ZWJraXQtb3B0aW1pemUtY29udHJhc3QnKVxuICAgIH1cbiAgICBpZiAocHJlZml4ID09PSAnLW1vei0nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodGhpcy5yZWdleHAoKSwgJyQxLW1vei1jcmlzcC1lZGdlcycpXG4gICAgfVxuICAgIHJldHVybiBzdXBlci5yZXBsYWNlKHN0cmluZywgcHJlZml4KVxuICB9XG5cbiAgLyoqXG4gICAqIERpZmZlcmVudCBuYW1lIGZvciBXZWJLaXQgYW5kIEZpcmVmb3hcbiAgICovXG4gIG9sZChwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICByZXR1cm4gbmV3IE9sZFZhbHVlKHRoaXMubmFtZSwgJy13ZWJraXQtb3B0aW1pemUtY29udHJhc3QnKVxuICAgIH1cbiAgICBpZiAocHJlZml4ID09PSAnLW1vei0nKSB7XG4gICAgICByZXR1cm4gbmV3IE9sZFZhbHVlKHRoaXMubmFtZSwgJy1tb3otY3Jpc3AtZWRnZXMnKVxuICAgIH1cbiAgICByZXR1cm4gc3VwZXIub2xkKHByZWZpeClcbiAgfVxufVxuXG5QaXhlbGF0ZWQubmFtZXMgPSBbJ3BpeGVsYXRlZCddXG5cbm1vZHVsZS5leHBvcnRzID0gUGl4ZWxhdGVkXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL2dyaWQtdXRpbHMnKVxuXG5jbGFzcyBQbGFjZVNlbGYgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGUgcGxhY2Utc2VsZiB0byBzZXBhcmF0ZSAtbXMtIHByZWZpeGVkIHByb3BlcnRpZXNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgaWYgKHByZWZpeCAhPT0gJy1tcy0nKSByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG5cbiAgICAvLyBwcmV2ZW50IGRvdWJsaW5nIG9mIHByZWZpeGVzXG4gICAgaWYgKGRlY2wucGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09ICctbXMtZ3JpZC1yb3ctYWxpZ24nKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH1cblxuICAgIGxldCBbW2ZpcnN0LCBzZWNvbmRdXSA9IHV0aWxzLnBhcnNlKGRlY2wpXG5cbiAgICBpZiAoc2Vjb25kKSB7XG4gICAgICB1dGlscy5pbnNlcnREZWNsKGRlY2wsICdncmlkLXJvdy1hbGlnbicsIGZpcnN0KVxuICAgICAgdXRpbHMuaW5zZXJ0RGVjbChkZWNsLCAnZ3JpZC1jb2x1bW4tYWxpZ24nLCBzZWNvbmQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHV0aWxzLmluc2VydERlY2woZGVjbCwgJ2dyaWQtcm93LWFsaWduJywgZmlyc3QpXG4gICAgICB1dGlscy5pbnNlcnREZWNsKGRlY2wsICdncmlkLWNvbHVtbi1hbGlnbicsIGZpcnN0KVxuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5QbGFjZVNlbGYubmFtZXMgPSBbJ3BsYWNlLXNlbGYnXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBsYWNlU2VsZlxuIiwibGV0IFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vc2VsZWN0b3InKVxuXG5jbGFzcyBQbGFjZWhvbGRlclNob3duIGV4dGVuZHMgU2VsZWN0b3Ige1xuICAvKipcbiAgICogUmV0dXJuIGRpZmZlcmVudCBzZWxlY3RvcnMgZGVwZW5kIG9uIHByZWZpeFxuICAgKi9cbiAgcHJlZml4ZWQocHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICByZXR1cm4gJzotbXMtaW5wdXQtcGxhY2Vob2xkZXInXG4gICAgfVxuICAgIHJldHVybiBgOiR7cHJlZml4fXBsYWNlaG9sZGVyLXNob3duYFxuICB9XG59XG5cblBsYWNlaG9sZGVyU2hvd24ubmFtZXMgPSBbJzpwbGFjZWhvbGRlci1zaG93biddXG5cbm1vZHVsZS5leHBvcnRzID0gUGxhY2Vob2xkZXJTaG93blxuIiwibGV0IFNlbGVjdG9yID0gcmVxdWlyZSgnLi4vc2VsZWN0b3InKVxuXG5jbGFzcyBQbGFjZWhvbGRlciBleHRlbmRzIFNlbGVjdG9yIHtcbiAgLyoqXG4gICAqIEFkZCBvbGQgbW96aWxsYSB0byBwb3NzaWJsZSBwcmVmaXhlc1xuICAgKi9cbiAgcG9zc2libGUoKSB7XG4gICAgcmV0dXJuIHN1cGVyLnBvc3NpYmxlKCkuY29uY2F0KFsnLW1vei0gb2xkJywgJy1tcy0gb2xkJ10pXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGRpZmZlcmVudCBzZWxlY3RvcnMgZGVwZW5kIG9uIHByZWZpeFxuICAgKi9cbiAgcHJlZml4ZWQocHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy13ZWJraXQtJykge1xuICAgICAgcmV0dXJuICc6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXInXG4gICAgfVxuICAgIGlmIChwcmVmaXggPT09ICctbXMtJykge1xuICAgICAgcmV0dXJuICc6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlcidcbiAgICB9XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0gb2xkJykge1xuICAgICAgcmV0dXJuICc6LW1zLWlucHV0LXBsYWNlaG9sZGVyJ1xuICAgIH1cbiAgICBpZiAocHJlZml4ID09PSAnLW1vei0gb2xkJykge1xuICAgICAgcmV0dXJuICc6LW1vei1wbGFjZWhvbGRlcidcbiAgICB9XG4gICAgcmV0dXJuIGA6OiR7cHJlZml4fXBsYWNlaG9sZGVyYFxuICB9XG59XG5cblBsYWNlaG9sZGVyLm5hbWVzID0gWyc6OnBsYWNlaG9sZGVyJ11cblxubW9kdWxlLmV4cG9ydHMgPSBQbGFjZWhvbGRlclxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBQcmludENvbG9yQWRqdXN0IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hhbmdlIHByb3BlcnR5IG5hbWUgZm9yIFdlYktpdC1iYXNlZCBicm93c2Vyc1xuICAgKi9cbiAgcHJlZml4ZWQocHJvcCwgcHJlZml4KSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tb3otJykge1xuICAgICAgcmV0dXJuICdjb2xvci1hZGp1c3QnXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyAncHJpbnQtY29sb3ItYWRqdXN0J1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydHkgbmFtZSBieSBzcGVjXG4gICAqL1xuICBub3JtYWxpemUoKSB7XG4gICAgcmV0dXJuICdwcmludC1jb2xvci1hZGp1c3QnXG4gIH1cbn1cblxuUHJpbnRDb2xvckFkanVzdC5uYW1lcyA9IFsncHJpbnQtY29sb3ItYWRqdXN0JywgJ2NvbG9yLWFkanVzdCddXG5cbm1vZHVsZS5leHBvcnRzID0gUHJpbnRDb2xvckFkanVzdFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBUZXh0RGVjb3JhdGlvblNraXBJbmsgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBDaGFuZ2UgcHJlZml4IGZvciBpbmsgdmFsdWVcbiAgICovXG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAoZGVjbC5wcm9wID09PSAndGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rJyAmJiBkZWNsLnZhbHVlID09PSAnYXV0bycpIHtcbiAgICAgIGRlY2wucHJvcCA9IHByZWZpeCArICd0ZXh0LWRlY29yYXRpb24tc2tpcCdcbiAgICAgIGRlY2wudmFsdWUgPSAnaW5rJ1xuICAgICAgcmV0dXJuIGRlY2xcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgfVxuICB9XG59XG5cblRleHREZWNvcmF0aW9uU2tpcEluay5uYW1lcyA9IFtcbiAgJ3RleHQtZGVjb3JhdGlvbi1za2lwLWluaycsXG4gICd0ZXh0LWRlY29yYXRpb24tc2tpcCdcbl1cblxubW9kdWxlLmV4cG9ydHMgPSBUZXh0RGVjb3JhdGlvblNraXBJbmtcbiIsImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY29uc3QgQkFTSUMgPSBbXG4gICdub25lJyxcbiAgJ3VuZGVybGluZScsXG4gICdvdmVybGluZScsXG4gICdsaW5lLXRocm91Z2gnLFxuICAnYmxpbmsnLFxuICAnaW5oZXJpdCcsXG4gICdpbml0aWFsJyxcbiAgJ3Vuc2V0J1xuXVxuXG5jbGFzcyBUZXh0RGVjb3JhdGlvbiBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgLyoqXG4gICAqIERvIG5vdCBhZGQgcHJlZml4ZXMgZm9yIGJhc2ljIHZhbHVlcy5cbiAgICovXG4gIGNoZWNrKGRlY2wpIHtcbiAgICByZXR1cm4gZGVjbC52YWx1ZS5zcGxpdCgvXFxzKy8pLnNvbWUoaSA9PiAhQkFTSUMuaW5jbHVkZXMoaSkpXG4gIH1cbn1cblxuVGV4dERlY29yYXRpb24ubmFtZXMgPSBbJ3RleHQtZGVjb3JhdGlvbiddXG5cbm1vZHVsZS5leHBvcnRzID0gVGV4dERlY29yYXRpb25cbiIsImxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4uL2RlY2xhcmF0aW9uJylcblxuY2xhc3MgVGV4dEVtcGhhc2lzUG9zaXRpb24gZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIHNldChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLXdlYmtpdC0nKSB7XG4gICAgICBkZWNsLnZhbHVlID0gZGVjbC52YWx1ZS5yZXBsYWNlKC9cXHMqKHJpZ2h0fGxlZnQpXFxzKi9pLCAnJylcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cbn1cblxuVGV4dEVtcGhhc2lzUG9zaXRpb24ubmFtZXMgPSBbJ3RleHQtZW1waGFzaXMtcG9zaXRpb24nXVxuXG5tb2R1bGUuZXhwb3J0cyA9IFRleHRFbXBoYXNpc1Bvc2l0aW9uXG4iLCJsZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuLi9kZWNsYXJhdGlvbicpXG5cbmNsYXNzIFRyYW5zZm9ybURlY2wgZXh0ZW5kcyBEZWNsYXJhdGlvbiB7XG4gIC8qKlxuICAgKiBSZWN1cnNpdmVseSBjaGVjayBhbGwgcGFyZW50cyBmb3IgQGtleWZyYW1lc1xuICAgKi9cbiAga2V5ZnJhbWVQYXJlbnRzKGRlY2wpIHtcbiAgICBsZXQgeyBwYXJlbnQgfSA9IGRlY2xcbiAgICB3aGlsZSAocGFyZW50KSB7XG4gICAgICBpZiAocGFyZW50LnR5cGUgPT09ICdhdHJ1bGUnICYmIHBhcmVudC5uYW1lID09PSAna2V5ZnJhbWVzJykge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgICAgOyh7IHBhcmVudCB9ID0gcGFyZW50KVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyB0cmFuc2Zvcm0gY29udGFpbiAzRCBjb21tYW5kc1xuICAgKi9cbiAgY29udGFpbjNkKGRlY2wpIHtcbiAgICBpZiAoZGVjbC5wcm9wID09PSAndHJhbnNmb3JtLW9yaWdpbicpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGZvciAobGV0IGZ1bmMgb2YgVHJhbnNmb3JtRGVjbC5mdW5jdGlvbnMzZCkge1xuICAgICAgaWYgKGRlY2wudmFsdWUuaW5jbHVkZXMoYCR7ZnVuY30oYCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlIHJvdGF0ZVogdG8gcm90YXRlIGZvciBJRSA5XG4gICAqL1xuICBzZXQoZGVjbCwgcHJlZml4KSB7XG4gICAgZGVjbCA9IHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICBkZWNsLnZhbHVlID0gZGVjbC52YWx1ZS5yZXBsYWNlKC9yb3RhdGV6L2dpLCAncm90YXRlJylcbiAgICB9XG4gICAgcmV0dXJuIGRlY2xcbiAgfVxuXG4gIC8qKlxuICAgKiBEb24ndCBhZGQgcHJlZml4IGZvciBJRSBpbiBrZXlmcmFtZXNcbiAgICovXG4gIGluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKSB7XG4gICAgaWYgKHByZWZpeCA9PT0gJy1tcy0nKSB7XG4gICAgICBpZiAoIXRoaXMuY29udGFpbjNkKGRlY2wpICYmICF0aGlzLmtleWZyYW1lUGFyZW50cyhkZWNsKSkge1xuICAgICAgICByZXR1cm4gc3VwZXIuaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChwcmVmaXggPT09ICctby0nKSB7XG4gICAgICBpZiAoIXRoaXMuY29udGFpbjNkKGRlY2wpKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5pbnNlcnQoZGVjbCwgcHJlZml4LCBwcmVmaXhlcylcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbn1cblxuVHJhbnNmb3JtRGVjbC5uYW1lcyA9IFsndHJhbnNmb3JtJywgJ3RyYW5zZm9ybS1vcmlnaW4nXVxuXG5UcmFuc2Zvcm1EZWNsLmZ1bmN0aW9uczNkID0gW1xuICAnbWF0cml4M2QnLFxuICAndHJhbnNsYXRlM2QnLFxuICAndHJhbnNsYXRlWicsXG4gICdzY2FsZTNkJyxcbiAgJ3NjYWxlWicsXG4gICdyb3RhdGUzZCcsXG4gICdyb3RhdGVYJyxcbiAgJ3JvdGF0ZVknLFxuICAncGVyc3BlY3RpdmUnXG5dXG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNmb3JtRGVjbFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBVc2VyU2VsZWN0IGV4dGVuZHMgRGVjbGFyYXRpb24ge1xuICAvKipcbiAgICogQ2hhbmdlIHByZWZpeGVkIHZhbHVlIGZvciBJRVxuICAgKi9cbiAgc2V0KGRlY2wsIHByZWZpeCkge1xuICAgIGlmIChwcmVmaXggPT09ICctbXMtJyAmJiBkZWNsLnZhbHVlID09PSAnY29udGFpbicpIHtcbiAgICAgIGRlY2wudmFsdWUgPSAnZWxlbWVudCdcbiAgICB9XG4gICAgcmV0dXJuIHN1cGVyLnNldChkZWNsLCBwcmVmaXgpXG4gIH1cblxuICAvKipcbiAgICogQXZvaWQgcHJlZml4aW5nIGFsbCBpbiBJRVxuICAgKi9cbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpIHtcbiAgICBpZiAoZGVjbC52YWx1ZSA9PT0gJ2FsbCcgJiYgcHJlZml4ID09PSAnLW1zLScpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuICAgIH1cbiAgfVxufVxuXG5Vc2VyU2VsZWN0Lm5hbWVzID0gWyd1c2VyLXNlbGVjdCddXG5cbm1vZHVsZS5leHBvcnRzID0gVXNlclNlbGVjdFxuIiwibGV0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi4vZGVjbGFyYXRpb24nKVxuXG5jbGFzcyBXcml0aW5nTW9kZSBleHRlbmRzIERlY2xhcmF0aW9uIHtcbiAgaW5zZXJ0KGRlY2wsIHByZWZpeCwgcHJlZml4ZXMpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1zLScpIHtcbiAgICAgIGxldCBjbG9uZWQgPSB0aGlzLnNldCh0aGlzLmNsb25lKGRlY2wpLCBwcmVmaXgpXG5cbiAgICAgIGlmICh0aGlzLm5lZWRDYXNjYWRlKGRlY2wpKSB7XG4gICAgICAgIGNsb25lZC5yYXdzLmJlZm9yZSA9IHRoaXMuY2FsY0JlZm9yZShwcmVmaXhlcywgZGVjbCwgcHJlZml4KVxuICAgICAgfVxuICAgICAgbGV0IGRpcmVjdGlvbiA9ICdsdHInXG5cbiAgICAgIGRlY2wucGFyZW50Lm5vZGVzLmZvckVhY2goaSA9PiB7XG4gICAgICAgIGlmIChpLnByb3AgPT09ICdkaXJlY3Rpb24nKSB7XG4gICAgICAgICAgaWYgKGkudmFsdWUgPT09ICdydGwnIHx8IGkudmFsdWUgPT09ICdsdHInKSBkaXJlY3Rpb24gPSBpLnZhbHVlXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIGNsb25lZC52YWx1ZSA9IFdyaXRpbmdNb2RlLm1zVmFsdWVzW2RpcmVjdGlvbl1bZGVjbC52YWx1ZV0gfHwgZGVjbC52YWx1ZVxuICAgICAgcmV0dXJuIGRlY2wucGFyZW50Lmluc2VydEJlZm9yZShkZWNsLCBjbG9uZWQpXG4gICAgfVxuXG4gICAgcmV0dXJuIHN1cGVyLmluc2VydChkZWNsLCBwcmVmaXgsIHByZWZpeGVzKVxuICB9XG59XG5cbldyaXRpbmdNb2RlLm5hbWVzID0gWyd3cml0aW5nLW1vZGUnXVxuXG5Xcml0aW5nTW9kZS5tc1ZhbHVlcyA9IHtcbiAgbHRyOiB7XG4gICAgJ2hvcml6b250YWwtdGInOiAnbHItdGInLFxuICAgICd2ZXJ0aWNhbC1ybCc6ICd0Yi1ybCcsXG4gICAgJ3ZlcnRpY2FsLWxyJzogJ3RiLWxyJ1xuICB9LFxuICBydGw6IHtcbiAgICAnaG9yaXpvbnRhbC10Yic6ICdybC10YicsXG4gICAgJ3ZlcnRpY2FsLXJsJzogJ2J0LXJsJyxcbiAgICAndmVydGljYWwtbHInOiAnYnQtbHInXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXcml0aW5nTW9kZVxuIiwibGV0IGJyb3dzZXJzbGlzdCA9IHJlcXVpcmUoJ2Jyb3dzZXJzbGlzdCcpXG5cbmZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyKSB7XG4gIHJldHVybiBzdHIuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKVxufVxuXG5jb25zdCBOQU1FUyA9IHtcbiAgaWU6ICdJRScsXG4gIGllX21vYjogJ0lFIE1vYmlsZScsXG4gIGlvc19zYWY6ICdpT1MgU2FmYXJpJyxcbiAgb3BfbWluaTogJ09wZXJhIE1pbmknLFxuICBvcF9tb2I6ICdPcGVyYSBNb2JpbGUnLFxuICBhbmRfY2hyOiAnQ2hyb21lIGZvciBBbmRyb2lkJyxcbiAgYW5kX2ZmOiAnRmlyZWZveCBmb3IgQW5kcm9pZCcsXG4gIGFuZF91YzogJ1VDIGZvciBBbmRyb2lkJyxcbiAgYW5kX3FxOiAnUVEgQnJvd3NlcicsXG4gIGthaW9zOiAnS2FpT1MgQnJvd3NlcicsXG4gIGJhaWR1OiAnQmFpZHUgQnJvd3NlcicsXG4gIHNhbXN1bmc6ICdTYW1zdW5nIEludGVybmV0J1xufVxuXG5mdW5jdGlvbiBwcmVmaXgobmFtZSwgcHJlZml4ZXMsIG5vdGUpIHtcbiAgbGV0IG91dCA9IGAgICR7bmFtZX1gXG4gIGlmIChub3RlKSBvdXQgKz0gJyAqJ1xuICBvdXQgKz0gJzogJ1xuICBvdXQgKz0gcHJlZml4ZXMubWFwKGkgPT4gaS5yZXBsYWNlKC9eLSguKiktJC9nLCAnJDEnKSkuam9pbignLCAnKVxuICBvdXQgKz0gJ1xcbidcbiAgcmV0dXJuIG91dFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChwcmVmaXhlcykge1xuICBpZiAocHJlZml4ZXMuYnJvd3NlcnMuc2VsZWN0ZWQubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdObyBicm93c2VycyBzZWxlY3RlZCdcbiAgfVxuXG4gIGxldCB2ZXJzaW9ucyA9IHt9XG4gIGZvciAobGV0IGJyb3dzZXIgb2YgcHJlZml4ZXMuYnJvd3NlcnMuc2VsZWN0ZWQpIHtcbiAgICBsZXQgcGFydHMgPSBicm93c2VyLnNwbGl0KCcgJylcbiAgICBsZXQgbmFtZSA9IHBhcnRzWzBdXG4gICAgbGV0IHZlcnNpb24gPSBwYXJ0c1sxXVxuXG4gICAgbmFtZSA9IE5BTUVTW25hbWVdIHx8IGNhcGl0YWxpemUobmFtZSlcbiAgICBpZiAodmVyc2lvbnNbbmFtZV0pIHtcbiAgICAgIHZlcnNpb25zW25hbWVdLnB1c2godmVyc2lvbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmVyc2lvbnNbbmFtZV0gPSBbdmVyc2lvbl1cbiAgICB9XG4gIH1cblxuICBsZXQgb3V0ID0gJ0Jyb3dzZXJzOlxcbidcbiAgZm9yIChsZXQgYnJvd3NlciBpbiB2ZXJzaW9ucykge1xuICAgIGxldCBsaXN0ID0gdmVyc2lvbnNbYnJvd3Nlcl1cbiAgICBsaXN0ID0gbGlzdC5zb3J0KChhLCBiKSA9PiBwYXJzZUZsb2F0KGIpIC0gcGFyc2VGbG9hdChhKSlcbiAgICBvdXQgKz0gYCAgJHticm93c2VyfTogJHtsaXN0LmpvaW4oJywgJyl9XFxuYFxuICB9XG5cbiAgbGV0IGNvdmVyYWdlID0gYnJvd3NlcnNsaXN0LmNvdmVyYWdlKHByZWZpeGVzLmJyb3dzZXJzLnNlbGVjdGVkKVxuICBsZXQgcm91bmQgPSBNYXRoLnJvdW5kKGNvdmVyYWdlICogMTAwKSAvIDEwMC4wXG4gIG91dCArPSBgXFxuVGhlc2UgYnJvd3NlcnMgYWNjb3VudCBmb3IgJHtyb3VuZH0lIG9mIGFsbCB1c2VycyBnbG9iYWxseVxcbmBcblxuICBsZXQgYXRydWxlcyA9IFtdXG4gIGZvciAobGV0IG5hbWUgaW4gcHJlZml4ZXMuYWRkKSB7XG4gICAgbGV0IGRhdGEgPSBwcmVmaXhlcy5hZGRbbmFtZV1cbiAgICBpZiAobmFtZVswXSA9PT0gJ0AnICYmIGRhdGEucHJlZml4ZXMpIHtcbiAgICAgIGF0cnVsZXMucHVzaChwcmVmaXgobmFtZSwgZGF0YS5wcmVmaXhlcykpXG4gICAgfVxuICB9XG4gIGlmIChhdHJ1bGVzLmxlbmd0aCA+IDApIHtcbiAgICBvdXQgKz0gYFxcbkF0LVJ1bGVzOlxcbiR7YXRydWxlcy5zb3J0KCkuam9pbignJyl9YFxuICB9XG5cbiAgbGV0IHNlbGVjdG9ycyA9IFtdXG4gIGZvciAobGV0IHNlbGVjdG9yIG9mIHByZWZpeGVzLmFkZC5zZWxlY3RvcnMpIHtcbiAgICBpZiAoc2VsZWN0b3IucHJlZml4ZXMpIHtcbiAgICAgIHNlbGVjdG9ycy5wdXNoKHByZWZpeChzZWxlY3Rvci5uYW1lLCBzZWxlY3Rvci5wcmVmaXhlcykpXG4gICAgfVxuICB9XG4gIGlmIChzZWxlY3RvcnMubGVuZ3RoID4gMCkge1xuICAgIG91dCArPSBgXFxuU2VsZWN0b3JzOlxcbiR7c2VsZWN0b3JzLnNvcnQoKS5qb2luKCcnKX1gXG4gIH1cblxuICBsZXQgdmFsdWVzID0gW11cbiAgbGV0IHByb3BzID0gW11cbiAgbGV0IGhhZEdyaWQgPSBmYWxzZVxuICBmb3IgKGxldCBuYW1lIGluIHByZWZpeGVzLmFkZCkge1xuICAgIGxldCBkYXRhID0gcHJlZml4ZXMuYWRkW25hbWVdXG4gICAgaWYgKG5hbWVbMF0gIT09ICdAJyAmJiBkYXRhLnByZWZpeGVzKSB7XG4gICAgICBsZXQgZ3JpZCA9IG5hbWUuaW5kZXhPZignZ3JpZC0nKSA9PT0gMFxuICAgICAgaWYgKGdyaWQpIGhhZEdyaWQgPSB0cnVlXG4gICAgICBwcm9wcy5wdXNoKHByZWZpeChuYW1lLCBkYXRhLnByZWZpeGVzLCBncmlkKSlcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YS52YWx1ZXMpKSB7XG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICBmb3IgKGxldCB2YWx1ZSBvZiBkYXRhLnZhbHVlcykge1xuICAgICAgbGV0IGdyaWQgPSB2YWx1ZS5uYW1lLmluY2x1ZGVzKCdncmlkJylcbiAgICAgIGlmIChncmlkKSBoYWRHcmlkID0gdHJ1ZVxuICAgICAgbGV0IHN0cmluZyA9IHByZWZpeCh2YWx1ZS5uYW1lLCB2YWx1ZS5wcmVmaXhlcywgZ3JpZClcbiAgICAgIGlmICghdmFsdWVzLmluY2x1ZGVzKHN0cmluZykpIHtcbiAgICAgICAgdmFsdWVzLnB1c2goc3RyaW5nKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChwcm9wcy5sZW5ndGggPiAwKSB7XG4gICAgb3V0ICs9IGBcXG5Qcm9wZXJ0aWVzOlxcbiR7cHJvcHMuc29ydCgpLmpvaW4oJycpfWBcbiAgfVxuICBpZiAodmFsdWVzLmxlbmd0aCA+IDApIHtcbiAgICBvdXQgKz0gYFxcblZhbHVlczpcXG4ke3ZhbHVlcy5zb3J0KCkuam9pbignJyl9YFxuICB9XG4gIGlmIChoYWRHcmlkKSB7XG4gICAgb3V0ICs9ICdcXG4qIC0gUHJlZml4ZXMgd2lsbCBiZSBhZGRlZCBvbmx5IG9uIGdyaWQ6IHRydWUgb3B0aW9uLlxcbidcbiAgfVxuXG4gIGlmICghYXRydWxlcy5sZW5ndGggJiYgIXNlbGVjdG9ycy5sZW5ndGggJiYgIXByb3BzLmxlbmd0aCAmJiAhdmFsdWVzLmxlbmd0aCkge1xuICAgIG91dCArPVxuICAgICAgXCJcXG5Bd2Vzb21lISBZb3VyIGJyb3dzZXJzIGRvbid0IHJlcXVpcmUgYW55IHZlbmRvciBwcmVmaXhlcy5cIiArXG4gICAgICAnXFxuTm93IHlvdSBjYW4gcmVtb3ZlIEF1dG9wcmVmaXhlciBmcm9tIGJ1aWxkIHN0ZXBzLidcbiAgfVxuXG4gIHJldHVybiBvdXRcbn1cbiIsImNsYXNzIE9sZFNlbGVjdG9yIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3IsIHByZWZpeCkge1xuICAgIHRoaXMucHJlZml4ID0gcHJlZml4XG4gICAgdGhpcy5wcmVmaXhlZCA9IHNlbGVjdG9yLnByZWZpeGVkKHRoaXMucHJlZml4KVxuICAgIHRoaXMucmVnZXhwID0gc2VsZWN0b3IucmVnZXhwKHRoaXMucHJlZml4KVxuXG4gICAgdGhpcy5wcmVmaXhlZHMgPSBzZWxlY3RvclxuICAgICAgLnBvc3NpYmxlKClcbiAgICAgIC5tYXAoeCA9PiBbc2VsZWN0b3IucHJlZml4ZWQoeCksIHNlbGVjdG9yLnJlZ2V4cCh4KV0pXG5cbiAgICB0aGlzLnVucHJlZml4ZWQgPSBzZWxlY3Rvci5uYW1lXG4gICAgdGhpcy5uYW1lUmVnZXhwID0gc2VsZWN0b3IucmVnZXhwKClcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBydWxlIGEgaGFjayB3aXRob3V0IHVucHJlZml4ZWQgdmVyc2lvbiBib3R0b21cbiAgICovXG4gIGlzSGFjayhydWxlKSB7XG4gICAgbGV0IGluZGV4ID0gcnVsZS5wYXJlbnQuaW5kZXgocnVsZSkgKyAxXG4gICAgbGV0IHJ1bGVzID0gcnVsZS5wYXJlbnQubm9kZXNcblxuICAgIHdoaWxlIChpbmRleCA8IHJ1bGVzLmxlbmd0aCkge1xuICAgICAgbGV0IGJlZm9yZSA9IHJ1bGVzW2luZGV4XS5zZWxlY3RvclxuICAgICAgaWYgKCFiZWZvcmUpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKGJlZm9yZS5pbmNsdWRlcyh0aGlzLnVucHJlZml4ZWQpICYmIGJlZm9yZS5tYXRjaCh0aGlzLm5hbWVSZWdleHApKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuXG4gICAgICBsZXQgc29tZSA9IGZhbHNlXG4gICAgICBmb3IgKGxldCBbc3RyaW5nLCByZWdleHBdIG9mIHRoaXMucHJlZml4ZWRzKSB7XG4gICAgICAgIGlmIChiZWZvcmUuaW5jbHVkZXMoc3RyaW5nKSAmJiBiZWZvcmUubWF0Y2gocmVnZXhwKSkge1xuICAgICAgICAgIHNvbWUgPSB0cnVlXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIXNvbWUpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cblxuICAgICAgaW5kZXggKz0gMVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICAvKipcbiAgICogRG9lcyBydWxlIGNvbnRhaW4gYW4gdW5uZWNlc3NhcnkgcHJlZml4ZWQgc2VsZWN0b3JcbiAgICovXG4gIGNoZWNrKHJ1bGUpIHtcbiAgICBpZiAoIXJ1bGUuc2VsZWN0b3IuaW5jbHVkZXModGhpcy5wcmVmaXhlZCkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICBpZiAoIXJ1bGUuc2VsZWN0b3IubWF0Y2godGhpcy5yZWdleHApKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgaWYgKHRoaXMuaXNIYWNrKHJ1bGUpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgcmV0dXJuIHRydWVcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9sZFNlbGVjdG9yXG4iLCJsZXQgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY2xhc3MgT2xkVmFsdWUge1xuICBjb25zdHJ1Y3Rvcih1bnByZWZpeGVkLCBwcmVmaXhlZCwgc3RyaW5nLCByZWdleHApIHtcbiAgICB0aGlzLnVucHJlZml4ZWQgPSB1bnByZWZpeGVkXG4gICAgdGhpcy5wcmVmaXhlZCA9IHByZWZpeGVkXG4gICAgdGhpcy5zdHJpbmcgPSBzdHJpbmcgfHwgcHJlZml4ZWRcbiAgICB0aGlzLnJlZ2V4cCA9IHJlZ2V4cCB8fCB1dGlscy5yZWdleHAocHJlZml4ZWQpXG4gIH1cblxuICAvKipcbiAgICogQ2hlY2ssIHRoYXQgdmFsdWUgY29udGFpbiBvbGQgdmFsdWVcbiAgICovXG4gIGNoZWNrKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlLmluY2x1ZGVzKHRoaXMuc3RyaW5nKSkge1xuICAgICAgcmV0dXJuICEhdmFsdWUubWF0Y2godGhpcy5yZWdleHApXG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gT2xkVmFsdWVcbiIsImxldCBCcm93c2VycyA9IHJlcXVpcmUoJy4vYnJvd3NlcnMnKVxubGV0IHZlbmRvciA9IHJlcXVpcmUoJy4vdmVuZG9yJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG4vKipcbiAqIFJlY3Vyc2l2ZWx5IGNsb25lIG9iamVjdHNcbiAqL1xuZnVuY3Rpb24gY2xvbmUob2JqLCBwYXJlbnQpIHtcbiAgbGV0IGNsb25lZCA9IG5ldyBvYmouY29uc3RydWN0b3IoKVxuXG4gIGZvciAobGV0IGkgb2YgT2JqZWN0LmtleXMob2JqIHx8IHt9KSkge1xuICAgIGxldCB2YWx1ZSA9IG9ialtpXVxuICAgIGlmIChpID09PSAncGFyZW50JyAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAocGFyZW50KSB7XG4gICAgICAgIGNsb25lZFtpXSA9IHBhcmVudFxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaSA9PT0gJ3NvdXJjZScgfHwgaSA9PT0gbnVsbCkge1xuICAgICAgY2xvbmVkW2ldID0gdmFsdWVcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICBjbG9uZWRbaV0gPSB2YWx1ZS5tYXAoeCA9PiBjbG9uZSh4LCBjbG9uZWQpKVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICBpICE9PSAnX2F1dG9wcmVmaXhlclByZWZpeCcgJiZcbiAgICAgIGkgIT09ICdfYXV0b3ByZWZpeGVyVmFsdWVzJyAmJlxuICAgICAgaSAhPT0gJ3Byb3h5Q2FjaGUnXG4gICAgKSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICB2YWx1ZSA9IGNsb25lKHZhbHVlLCBjbG9uZWQpXG4gICAgICB9XG4gICAgICBjbG9uZWRbaV0gPSB2YWx1ZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjbG9uZWRcbn1cblxuY2xhc3MgUHJlZml4ZXIge1xuICAvKipcbiAgICogQWRkIGhhY2sgdG8gc2VsZWN0ZWQgbmFtZXNcbiAgICovXG4gIHN0YXRpYyBoYWNrKGtsYXNzKSB7XG4gICAgaWYgKCF0aGlzLmhhY2tzKSB7XG4gICAgICB0aGlzLmhhY2tzID0ge31cbiAgICB9XG4gICAgcmV0dXJuIGtsYXNzLm5hbWVzLm1hcChuYW1lID0+IHtcbiAgICAgIHRoaXMuaGFja3NbbmFtZV0gPSBrbGFzc1xuICAgICAgcmV0dXJuIHRoaXMuaGFja3NbbmFtZV1cbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIExvYWQgaGFja3MgZm9yIHNvbWUgbmFtZXNcbiAgICovXG4gIHN0YXRpYyBsb2FkKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICBsZXQgS2xhc3MgPSB0aGlzLmhhY2tzICYmIHRoaXMuaGFja3NbbmFtZV1cbiAgICBpZiAoS2xhc3MpIHtcbiAgICAgIHJldHVybiBuZXcgS2xhc3MobmFtZSwgcHJlZml4ZXMsIGFsbClcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyB0aGlzKG5hbWUsIHByZWZpeGVzLCBhbGwpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENsb25lIG5vZGUgYW5kIGNsZWFuIGF1dHByZWZpeGVyIGN1c3RvbSBjYWNoZXNcbiAgICovXG4gIHN0YXRpYyBjbG9uZShub2RlLCBvdmVycmlkZXMpIHtcbiAgICBsZXQgY2xvbmVkID0gY2xvbmUobm9kZSlcbiAgICBmb3IgKGxldCBuYW1lIGluIG92ZXJyaWRlcykge1xuICAgICAgY2xvbmVkW25hbWVdID0gb3ZlcnJpZGVzW25hbWVdXG4gICAgfVxuICAgIHJldHVybiBjbG9uZWRcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICB0aGlzLnByZWZpeGVzID0gcHJlZml4ZXNcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy5hbGwgPSBhbGxcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIHByZWZpeCBpbiBub2RlIHBhcmVudHNcbiAgICovXG4gIHBhcmVudFByZWZpeChub2RlKSB7XG4gICAgbGV0IHByZWZpeFxuXG4gICAgaWYgKHR5cGVvZiBub2RlLl9hdXRvcHJlZml4ZXJQcmVmaXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBwcmVmaXggPSBub2RlLl9hdXRvcHJlZml4ZXJQcmVmaXhcbiAgICB9IGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ2RlY2wnICYmIG5vZGUucHJvcFswXSA9PT0gJy0nKSB7XG4gICAgICBwcmVmaXggPSB2ZW5kb3IucHJlZml4KG5vZGUucHJvcClcbiAgICB9IGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ3Jvb3QnKSB7XG4gICAgICBwcmVmaXggPSBmYWxzZVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICBub2RlLnR5cGUgPT09ICdydWxlJyAmJlxuICAgICAgbm9kZS5zZWxlY3Rvci5pbmNsdWRlcygnOi0nKSAmJlxuICAgICAgLzooLVxcdystKS8udGVzdChub2RlLnNlbGVjdG9yKVxuICAgICkge1xuICAgICAgcHJlZml4ID0gbm9kZS5zZWxlY3Rvci5tYXRjaCgvOigtXFx3Ky0pLylbMV1cbiAgICB9IGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ2F0cnVsZScgJiYgbm9kZS5uYW1lWzBdID09PSAnLScpIHtcbiAgICAgIHByZWZpeCA9IHZlbmRvci5wcmVmaXgobm9kZS5uYW1lKVxuICAgIH0gZWxzZSB7XG4gICAgICBwcmVmaXggPSB0aGlzLnBhcmVudFByZWZpeChub2RlLnBhcmVudClcbiAgICB9XG5cbiAgICBpZiAoIUJyb3dzZXJzLnByZWZpeGVzKCkuaW5jbHVkZXMocHJlZml4KSkge1xuICAgICAgcHJlZml4ID0gZmFsc2VcbiAgICB9XG5cbiAgICBub2RlLl9hdXRvcHJlZml4ZXJQcmVmaXggPSBwcmVmaXhcblxuICAgIHJldHVybiBub2RlLl9hdXRvcHJlZml4ZXJQcmVmaXhcbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9uZSBub2RlIHdpdGggcHJlZml4ZXNcbiAgICovXG4gIHByb2Nlc3Mobm9kZSwgcmVzdWx0KSB7XG4gICAgaWYgKCF0aGlzLmNoZWNrKG5vZGUpKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgbGV0IHBhcmVudCA9IHRoaXMucGFyZW50UHJlZml4KG5vZGUpXG5cbiAgICBsZXQgcHJlZml4ZXMgPSB0aGlzLnByZWZpeGVzLmZpbHRlcihcbiAgICAgIHByZWZpeCA9PiAhcGFyZW50IHx8IHBhcmVudCA9PT0gdXRpbHMucmVtb3ZlTm90ZShwcmVmaXgpXG4gICAgKVxuXG4gICAgbGV0IGFkZGVkID0gW11cbiAgICBmb3IgKGxldCBwcmVmaXggb2YgcHJlZml4ZXMpIHtcbiAgICAgIGlmICh0aGlzLmFkZChub2RlLCBwcmVmaXgsIGFkZGVkLmNvbmNhdChbcHJlZml4XSksIHJlc3VsdCkpIHtcbiAgICAgICAgYWRkZWQucHVzaChwcmVmaXgpXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGFkZGVkXG4gIH1cblxuICAvKipcbiAgICogU2hvcnRjdXQgZm9yIFByZWZpeGVyLmNsb25lXG4gICAqL1xuICBjbG9uZShub2RlLCBvdmVycmlkZXMpIHtcbiAgICByZXR1cm4gUHJlZml4ZXIuY2xvbmUobm9kZSwgb3ZlcnJpZGVzKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJlZml4ZXJcbiIsImxldCB2ZW5kb3IgPSByZXF1aXJlKCcuL3ZlbmRvcicpXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuL2RlY2xhcmF0aW9uJylcbmxldCBSZXNvbHV0aW9uID0gcmVxdWlyZSgnLi9yZXNvbHV0aW9uJylcbmxldCBUcmFuc2l0aW9uID0gcmVxdWlyZSgnLi90cmFuc2l0aW9uJylcbmxldCBQcm9jZXNzb3IgPSByZXF1aXJlKCcuL3Byb2Nlc3NvcicpXG5sZXQgU3VwcG9ydHMgPSByZXF1aXJlKCcuL3N1cHBvcnRzJylcbmxldCBCcm93c2VycyA9IHJlcXVpcmUoJy4vYnJvd3NlcnMnKVxubGV0IFNlbGVjdG9yID0gcmVxdWlyZSgnLi9zZWxlY3RvcicpXG5sZXQgQXRSdWxlID0gcmVxdWlyZSgnLi9hdC1ydWxlJylcbmxldCBWYWx1ZSA9IHJlcXVpcmUoJy4vdmFsdWUnKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5sZXQgaGFja0Z1bGxzY3JlZW4gPSByZXF1aXJlKCcuL2hhY2tzL2Z1bGxzY3JlZW4nKVxubGV0IGhhY2tQbGFjZWhvbGRlciA9IHJlcXVpcmUoJy4vaGFja3MvcGxhY2Vob2xkZXInKVxubGV0IGhhY2tQbGFjZWhvbGRlclNob3duID0gcmVxdWlyZSgnLi9oYWNrcy9wbGFjZWhvbGRlci1zaG93bicpXG5sZXQgaGFja0ZpbGVTZWxlY3RvckJ1dHRvbiA9IHJlcXVpcmUoJy4vaGFja3MvZmlsZS1zZWxlY3Rvci1idXR0b24nKVxubGV0IGhhY2tGbGV4ID0gcmVxdWlyZSgnLi9oYWNrcy9mbGV4JylcbmxldCBoYWNrT3JkZXIgPSByZXF1aXJlKCcuL2hhY2tzL29yZGVyJylcbmxldCBoYWNrRmlsdGVyID0gcmVxdWlyZSgnLi9oYWNrcy9maWx0ZXInKVxubGV0IGhhY2tHcmlkRW5kID0gcmVxdWlyZSgnLi9oYWNrcy9ncmlkLWVuZCcpXG5sZXQgaGFja0FuaW1hdGlvbiA9IHJlcXVpcmUoJy4vaGFja3MvYW5pbWF0aW9uJylcbmxldCBoYWNrRmxleEZsb3cgPSByZXF1aXJlKCcuL2hhY2tzL2ZsZXgtZmxvdycpXG5sZXQgaGFja0ZsZXhHcm93ID0gcmVxdWlyZSgnLi9oYWNrcy9mbGV4LWdyb3cnKVxubGV0IGhhY2tGbGV4V3JhcCA9IHJlcXVpcmUoJy4vaGFja3MvZmxleC13cmFwJylcbmxldCBoYWNrR3JpZEFyZWEgPSByZXF1aXJlKCcuL2hhY2tzL2dyaWQtYXJlYScpXG5sZXQgaGFja1BsYWNlU2VsZiA9IHJlcXVpcmUoJy4vaGFja3MvcGxhY2Utc2VsZicpXG5sZXQgaGFja0dyaWRTdGFydCA9IHJlcXVpcmUoJy4vaGFja3MvZ3JpZC1zdGFydCcpXG5sZXQgaGFja0FsaWduU2VsZiA9IHJlcXVpcmUoJy4vaGFja3MvYWxpZ24tc2VsZicpXG5sZXQgaGFja0FwcGVhcmFuY2UgPSByZXF1aXJlKCcuL2hhY2tzL2FwcGVhcmFuY2UnKVxubGV0IGhhY2tGbGV4QmFzaXMgPSByZXF1aXJlKCcuL2hhY2tzL2ZsZXgtYmFzaXMnKVxubGV0IGhhY2tNYXNrQm9yZGVyID0gcmVxdWlyZSgnLi9oYWNrcy9tYXNrLWJvcmRlcicpXG5sZXQgaGFja01hc2tDb21wb3NpdGUgPSByZXF1aXJlKCcuL2hhY2tzL21hc2stY29tcG9zaXRlJylcbmxldCBoYWNrQWxpZ25JdGVtcyA9IHJlcXVpcmUoJy4vaGFja3MvYWxpZ24taXRlbXMnKVxubGV0IGhhY2tVc2VyU2VsZWN0ID0gcmVxdWlyZSgnLi9oYWNrcy91c2VyLXNlbGVjdCcpXG5sZXQgaGFja0ZsZXhTaHJpbmsgPSByZXF1aXJlKCcuL2hhY2tzL2ZsZXgtc2hyaW5rJylcbmxldCBoYWNrQnJlYWtQcm9wcyA9IHJlcXVpcmUoJy4vaGFja3MvYnJlYWstcHJvcHMnKVxubGV0IGhhY2tXcml0aW5nTW9kZSA9IHJlcXVpcmUoJy4vaGFja3Mvd3JpdGluZy1tb2RlJylcbmxldCBoYWNrQm9yZGVySW1hZ2UgPSByZXF1aXJlKCcuL2hhY2tzL2JvcmRlci1pbWFnZScpXG5sZXQgaGFja0FsaWduQ29udGVudCA9IHJlcXVpcmUoJy4vaGFja3MvYWxpZ24tY29udGVudCcpXG5sZXQgaGFja0JvcmRlclJhZGl1cyA9IHJlcXVpcmUoJy4vaGFja3MvYm9yZGVyLXJhZGl1cycpXG5sZXQgaGFja0Jsb2NrTG9naWNhbCA9IHJlcXVpcmUoJy4vaGFja3MvYmxvY2stbG9naWNhbCcpXG5sZXQgaGFja0dyaWRUZW1wbGF0ZSA9IHJlcXVpcmUoJy4vaGFja3MvZ3JpZC10ZW1wbGF0ZScpXG5sZXQgaGFja0lubGluZUxvZ2ljYWwgPSByZXF1aXJlKCcuL2hhY2tzL2lubGluZS1sb2dpY2FsJylcbmxldCBoYWNrR3JpZFJvd0FsaWduID0gcmVxdWlyZSgnLi9oYWNrcy9ncmlkLXJvdy1hbGlnbicpXG5sZXQgaGFja1RyYW5zZm9ybURlY2wgPSByZXF1aXJlKCcuL2hhY2tzL3RyYW5zZm9ybS1kZWNsJylcbmxldCBoYWNrRmxleERpcmVjdGlvbiA9IHJlcXVpcmUoJy4vaGFja3MvZmxleC1kaXJlY3Rpb24nKVxubGV0IGhhY2tJbWFnZVJlbmRlcmluZyA9IHJlcXVpcmUoJy4vaGFja3MvaW1hZ2UtcmVuZGVyaW5nJylcbmxldCBoYWNrQmFja2Ryb3BGaWx0ZXIgPSByZXF1aXJlKCcuL2hhY2tzL2JhY2tkcm9wLWZpbHRlcicpXG5sZXQgaGFja0JhY2tncm91bmRDbGlwID0gcmVxdWlyZSgnLi9oYWNrcy9iYWNrZ3JvdW5kLWNsaXAnKVxubGV0IGhhY2tUZXh0RGVjb3JhdGlvbiA9IHJlcXVpcmUoJy4vaGFja3MvdGV4dC1kZWNvcmF0aW9uJylcbmxldCBoYWNrSnVzdGlmeUNvbnRlbnQgPSByZXF1aXJlKCcuL2hhY2tzL2p1c3RpZnktY29udGVudCcpXG5sZXQgaGFja0JhY2tncm91bmRTaXplID0gcmVxdWlyZSgnLi9oYWNrcy9iYWNrZ3JvdW5kLXNpemUnKVxubGV0IGhhY2tHcmlkUm93Q29sdW1uID0gcmVxdWlyZSgnLi9oYWNrcy9ncmlkLXJvdy1jb2x1bW4nKVxubGV0IGhhY2tHcmlkUm93c0NvbHVtbnMgPSByZXF1aXJlKCcuL2hhY2tzL2dyaWQtcm93cy1jb2x1bW5zJylcbmxldCBoYWNrR3JpZENvbHVtbkFsaWduID0gcmVxdWlyZSgnLi9oYWNrcy9ncmlkLWNvbHVtbi1hbGlnbicpXG5sZXQgaGFja1ByaW50Q29sb3JBZGp1c3QgPSByZXF1aXJlKCcuL2hhY2tzL3ByaW50LWNvbG9yLWFkanVzdCcpXG5sZXQgaGFja092ZXJzY3JvbGxCZWhhdmlvciA9IHJlcXVpcmUoJy4vaGFja3Mvb3ZlcnNjcm9sbC1iZWhhdmlvcicpXG5sZXQgaGFja0dyaWRUZW1wbGF0ZUFyZWFzID0gcmVxdWlyZSgnLi9oYWNrcy9ncmlkLXRlbXBsYXRlLWFyZWFzJylcbmxldCBoYWNrVGV4dEVtcGhhc2lzUG9zaXRpb24gPSByZXF1aXJlKCcuL2hhY2tzL3RleHQtZW1waGFzaXMtcG9zaXRpb24nKVxubGV0IGhhY2tUZXh0RGVjb3JhdGlvblNraXBJbmsgPSByZXF1aXJlKCcuL2hhY2tzL3RleHQtZGVjb3JhdGlvbi1za2lwLWluaycpXG5sZXQgaGFja0dyYWRpZW50ID0gcmVxdWlyZSgnLi9oYWNrcy9ncmFkaWVudCcpXG5sZXQgaGFja0ludHJpbnNpYyA9IHJlcXVpcmUoJy4vaGFja3MvaW50cmluc2ljJylcbmxldCBoYWNrUGl4ZWxhdGVkID0gcmVxdWlyZSgnLi9oYWNrcy9waXhlbGF0ZWQnKVxubGV0IGhhY2tJbWFnZVNldCA9IHJlcXVpcmUoJy4vaGFja3MvaW1hZ2Utc2V0JylcbmxldCBoYWNrQ3Jvc3NGYWRlID0gcmVxdWlyZSgnLi9oYWNrcy9jcm9zcy1mYWRlJylcbmxldCBoYWNrRGlzcGxheUZsZXggPSByZXF1aXJlKCcuL2hhY2tzL2Rpc3BsYXktZmxleCcpXG5sZXQgaGFja0Rpc3BsYXlHcmlkID0gcmVxdWlyZSgnLi9oYWNrcy9kaXNwbGF5LWdyaWQnKVxubGV0IGhhY2tGaWx0ZXJWYWx1ZSA9IHJlcXVpcmUoJy4vaGFja3MvZmlsdGVyLXZhbHVlJylcbmxldCBoYWNrQXV0b2ZpbGwgPSByZXF1aXJlKCcuL2hhY2tzL2F1dG9maWxsJylcblxuU2VsZWN0b3IuaGFjayhoYWNrQXV0b2ZpbGwpXG5TZWxlY3Rvci5oYWNrKGhhY2tGdWxsc2NyZWVuKVxuU2VsZWN0b3IuaGFjayhoYWNrUGxhY2Vob2xkZXIpXG5TZWxlY3Rvci5oYWNrKGhhY2tQbGFjZWhvbGRlclNob3duKVxuU2VsZWN0b3IuaGFjayhoYWNrRmlsZVNlbGVjdG9yQnV0dG9uKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrRmxleClcbkRlY2xhcmF0aW9uLmhhY2soaGFja09yZGVyKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrRmlsdGVyKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrR3JpZEVuZClcbkRlY2xhcmF0aW9uLmhhY2soaGFja0FuaW1hdGlvbilcbkRlY2xhcmF0aW9uLmhhY2soaGFja0ZsZXhGbG93KVxuRGVjbGFyYXRpb24uaGFjayhoYWNrRmxleEdyb3cpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tGbGV4V3JhcClcbkRlY2xhcmF0aW9uLmhhY2soaGFja0dyaWRBcmVhKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrUGxhY2VTZWxmKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrR3JpZFN0YXJ0KVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQWxpZ25TZWxmKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQXBwZWFyYW5jZSlcbkRlY2xhcmF0aW9uLmhhY2soaGFja0ZsZXhCYXNpcylcbkRlY2xhcmF0aW9uLmhhY2soaGFja01hc2tCb3JkZXIpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tNYXNrQ29tcG9zaXRlKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQWxpZ25JdGVtcylcbkRlY2xhcmF0aW9uLmhhY2soaGFja1VzZXJTZWxlY3QpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tGbGV4U2hyaW5rKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQnJlYWtQcm9wcylcbkRlY2xhcmF0aW9uLmhhY2soaGFja1dyaXRpbmdNb2RlKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQm9yZGVySW1hZ2UpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tBbGlnbkNvbnRlbnQpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tCb3JkZXJSYWRpdXMpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tCbG9ja0xvZ2ljYWwpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tHcmlkVGVtcGxhdGUpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tJbmxpbmVMb2dpY2FsKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrR3JpZFJvd0FsaWduKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrVHJhbnNmb3JtRGVjbClcbkRlY2xhcmF0aW9uLmhhY2soaGFja0ZsZXhEaXJlY3Rpb24pXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tJbWFnZVJlbmRlcmluZylcbkRlY2xhcmF0aW9uLmhhY2soaGFja0JhY2tkcm9wRmlsdGVyKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQmFja2dyb3VuZENsaXApXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tUZXh0RGVjb3JhdGlvbilcbkRlY2xhcmF0aW9uLmhhY2soaGFja0p1c3RpZnlDb250ZW50KVxuRGVjbGFyYXRpb24uaGFjayhoYWNrQmFja2dyb3VuZFNpemUpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tHcmlkUm93Q29sdW1uKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrR3JpZFJvd3NDb2x1bW5zKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrR3JpZENvbHVtbkFsaWduKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrT3ZlcnNjcm9sbEJlaGF2aW9yKVxuRGVjbGFyYXRpb24uaGFjayhoYWNrR3JpZFRlbXBsYXRlQXJlYXMpXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tQcmludENvbG9yQWRqdXN0KVxuRGVjbGFyYXRpb24uaGFjayhoYWNrVGV4dEVtcGhhc2lzUG9zaXRpb24pXG5EZWNsYXJhdGlvbi5oYWNrKGhhY2tUZXh0RGVjb3JhdGlvblNraXBJbmspXG5WYWx1ZS5oYWNrKGhhY2tHcmFkaWVudClcblZhbHVlLmhhY2soaGFja0ludHJpbnNpYylcblZhbHVlLmhhY2soaGFja1BpeGVsYXRlZClcblZhbHVlLmhhY2soaGFja0ltYWdlU2V0KVxuVmFsdWUuaGFjayhoYWNrQ3Jvc3NGYWRlKVxuVmFsdWUuaGFjayhoYWNrRGlzcGxheUZsZXgpXG5WYWx1ZS5oYWNrKGhhY2tEaXNwbGF5R3JpZClcblZhbHVlLmhhY2soaGFja0ZpbHRlclZhbHVlKVxuXG5sZXQgZGVjbHNDYWNoZSA9IG5ldyBNYXAoKVxuXG5jbGFzcyBQcmVmaXhlcyB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIGJyb3dzZXJzLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhXG4gICAgdGhpcy5icm93c2VycyA9IGJyb3dzZXJzXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9uc1xuICAgIDtbdGhpcy5hZGQsIHRoaXMucmVtb3ZlXSA9IHRoaXMucHJlcHJvY2Vzcyh0aGlzLnNlbGVjdCh0aGlzLmRhdGEpKVxuICAgIHRoaXMudHJhbnNpdGlvbiA9IG5ldyBUcmFuc2l0aW9uKHRoaXMpXG4gICAgdGhpcy5wcm9jZXNzb3IgPSBuZXcgUHJvY2Vzc29yKHRoaXMpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGNsb25lIGluc3RhbmNlIHRvIHJlbW92ZSBhbGwgcHJlZml4ZXNcbiAgICovXG4gIGNsZWFuZXIoKSB7XG4gICAgaWYgKHRoaXMuY2xlYW5lckNhY2hlKSB7XG4gICAgICByZXR1cm4gdGhpcy5jbGVhbmVyQ2FjaGVcbiAgICB9XG5cbiAgICBpZiAodGhpcy5icm93c2Vycy5zZWxlY3RlZC5sZW5ndGgpIHtcbiAgICAgIGxldCBlbXB0eSA9IG5ldyBCcm93c2Vycyh0aGlzLmJyb3dzZXJzLmRhdGEsIFtdKVxuICAgICAgdGhpcy5jbGVhbmVyQ2FjaGUgPSBuZXcgUHJlZml4ZXModGhpcy5kYXRhLCBlbXB0eSwgdGhpcy5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpc1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmNsZWFuZXJDYWNoZVxuICB9XG5cbiAgLyoqXG4gICAqIFNlbGVjdCBwcmVmaXhlcyBmcm9tIGRhdGEsIHdoaWNoIGlzIG5lY2Vzc2FyeSBmb3Igc2VsZWN0ZWQgYnJvd3NlcnNcbiAgICovXG4gIHNlbGVjdChsaXN0KSB7XG4gICAgbGV0IHNlbGVjdGVkID0geyBhZGQ6IHt9LCByZW1vdmU6IHt9IH1cblxuICAgIGZvciAobGV0IG5hbWUgaW4gbGlzdCkge1xuICAgICAgbGV0IGRhdGEgPSBsaXN0W25hbWVdXG4gICAgICBsZXQgYWRkID0gZGF0YS5icm93c2Vycy5tYXAoaSA9PiB7XG4gICAgICAgIGxldCBwYXJhbXMgPSBpLnNwbGl0KCcgJylcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBicm93c2VyOiBgJHtwYXJhbXNbMF19ICR7cGFyYW1zWzFdfWAsXG4gICAgICAgICAgbm90ZTogcGFyYW1zWzJdXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIGxldCBub3RlcyA9IGFkZFxuICAgICAgICAuZmlsdGVyKGkgPT4gaS5ub3RlKVxuICAgICAgICAubWFwKGkgPT4gYCR7dGhpcy5icm93c2Vycy5wcmVmaXgoaS5icm93c2VyKX0gJHtpLm5vdGV9YClcbiAgICAgIG5vdGVzID0gdXRpbHMudW5pcShub3RlcylcblxuICAgICAgYWRkID0gYWRkXG4gICAgICAgIC5maWx0ZXIoaSA9PiB0aGlzLmJyb3dzZXJzLmlzU2VsZWN0ZWQoaS5icm93c2VyKSlcbiAgICAgICAgLm1hcChpID0+IHtcbiAgICAgICAgICBsZXQgcHJlZml4ID0gdGhpcy5icm93c2Vycy5wcmVmaXgoaS5icm93c2VyKVxuICAgICAgICAgIGlmIChpLm5vdGUpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtwcmVmaXh9ICR7aS5ub3RlfWBcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHByZWZpeFxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIGFkZCA9IHRoaXMuc29ydCh1dGlscy51bmlxKGFkZCkpXG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuZmxleGJveCA9PT0gJ25vLTIwMDknKSB7XG4gICAgICAgIGFkZCA9IGFkZC5maWx0ZXIoaSA9PiAhaS5pbmNsdWRlcygnMjAwOScpKVxuICAgICAgfVxuXG4gICAgICBsZXQgYWxsID0gZGF0YS5icm93c2Vycy5tYXAoaSA9PiB0aGlzLmJyb3dzZXJzLnByZWZpeChpKSlcbiAgICAgIGlmIChkYXRhLm1pc3Rha2VzKSB7XG4gICAgICAgIGFsbCA9IGFsbC5jb25jYXQoZGF0YS5taXN0YWtlcylcbiAgICAgIH1cbiAgICAgIGFsbCA9IGFsbC5jb25jYXQobm90ZXMpXG4gICAgICBhbGwgPSB1dGlscy51bmlxKGFsbClcblxuICAgICAgaWYgKGFkZC5sZW5ndGgpIHtcbiAgICAgICAgc2VsZWN0ZWQuYWRkW25hbWVdID0gYWRkXG4gICAgICAgIGlmIChhZGQubGVuZ3RoIDwgYWxsLmxlbmd0aCkge1xuICAgICAgICAgIHNlbGVjdGVkLnJlbW92ZVtuYW1lXSA9IGFsbC5maWx0ZXIoaSA9PiAhYWRkLmluY2x1ZGVzKGkpKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxlY3RlZC5yZW1vdmVbbmFtZV0gPSBhbGxcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc2VsZWN0ZWRcbiAgfVxuXG4gIC8qKlxuICAgKiBTb3J0IHZlbmRvciBwcmVmaXhlc1xuICAgKi9cbiAgc29ydChwcmVmaXhlcykge1xuICAgIHJldHVybiBwcmVmaXhlcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICBsZXQgYUxlbmd0aCA9IHV0aWxzLnJlbW92ZU5vdGUoYSkubGVuZ3RoXG4gICAgICBsZXQgYkxlbmd0aCA9IHV0aWxzLnJlbW92ZU5vdGUoYikubGVuZ3RoXG5cbiAgICAgIGlmIChhTGVuZ3RoID09PSBiTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBiLmxlbmd0aCAtIGEubGVuZ3RoXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gYkxlbmd0aCAtIGFMZW5ndGhcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIENhY2hlIHByZWZpeGVzIGRhdGEgdG8gZmFzdCBDU1MgcHJvY2Vzc2luZ1xuICAgKi9cbiAgcHJlcHJvY2VzcyhzZWxlY3RlZCkge1xuICAgIGxldCBhZGQgPSB7XG4gICAgICAnc2VsZWN0b3JzJzogW10sXG4gICAgICAnQHN1cHBvcnRzJzogbmV3IFN1cHBvcnRzKFByZWZpeGVzLCB0aGlzKVxuICAgIH1cbiAgICBmb3IgKGxldCBuYW1lIGluIHNlbGVjdGVkLmFkZCkge1xuICAgICAgbGV0IHByZWZpeGVzID0gc2VsZWN0ZWQuYWRkW25hbWVdXG4gICAgICBpZiAobmFtZSA9PT0gJ0BrZXlmcmFtZXMnIHx8IG5hbWUgPT09ICdAdmlld3BvcnQnKSB7XG4gICAgICAgIGFkZFtuYW1lXSA9IG5ldyBBdFJ1bGUobmFtZSwgcHJlZml4ZXMsIHRoaXMpXG4gICAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdAcmVzb2x1dGlvbicpIHtcbiAgICAgICAgYWRkW25hbWVdID0gbmV3IFJlc29sdXRpb24obmFtZSwgcHJlZml4ZXMsIHRoaXMpXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZGF0YVtuYW1lXS5zZWxlY3Rvcikge1xuICAgICAgICBhZGQuc2VsZWN0b3JzLnB1c2goU2VsZWN0b3IubG9hZChuYW1lLCBwcmVmaXhlcywgdGhpcykpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgcHJvcHMgPSB0aGlzLmRhdGFbbmFtZV0ucHJvcHNcblxuICAgICAgICBpZiAocHJvcHMpIHtcbiAgICAgICAgICBsZXQgdmFsdWUgPSBWYWx1ZS5sb2FkKG5hbWUsIHByZWZpeGVzLCB0aGlzKVxuICAgICAgICAgIGZvciAobGV0IHByb3Agb2YgcHJvcHMpIHtcbiAgICAgICAgICAgIGlmICghYWRkW3Byb3BdKSB7XG4gICAgICAgICAgICAgIGFkZFtwcm9wXSA9IHsgdmFsdWVzOiBbXSB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhZGRbcHJvcF0udmFsdWVzLnB1c2godmFsdWUpXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxldCB2YWx1ZXMgPSAoYWRkW25hbWVdICYmIGFkZFtuYW1lXS52YWx1ZXMpIHx8IFtdXG4gICAgICAgICAgYWRkW25hbWVdID0gRGVjbGFyYXRpb24ubG9hZChuYW1lLCBwcmVmaXhlcywgdGhpcylcbiAgICAgICAgICBhZGRbbmFtZV0udmFsdWVzID0gdmFsdWVzXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgcmVtb3ZlID0geyBzZWxlY3RvcnM6IFtdIH1cbiAgICBmb3IgKGxldCBuYW1lIGluIHNlbGVjdGVkLnJlbW92ZSkge1xuICAgICAgbGV0IHByZWZpeGVzID0gc2VsZWN0ZWQucmVtb3ZlW25hbWVdXG4gICAgICBpZiAodGhpcy5kYXRhW25hbWVdLnNlbGVjdG9yKSB7XG4gICAgICAgIGxldCBzZWxlY3RvciA9IFNlbGVjdG9yLmxvYWQobmFtZSwgcHJlZml4ZXMpXG4gICAgICAgIGZvciAobGV0IHByZWZpeCBvZiBwcmVmaXhlcykge1xuICAgICAgICAgIHJlbW92ZS5zZWxlY3RvcnMucHVzaChzZWxlY3Rvci5vbGQocHJlZml4KSlcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChuYW1lID09PSAnQGtleWZyYW1lcycgfHwgbmFtZSA9PT0gJ0B2aWV3cG9ydCcpIHtcbiAgICAgICAgZm9yIChsZXQgcHJlZml4IG9mIHByZWZpeGVzKSB7XG4gICAgICAgICAgbGV0IHByZWZpeGVkID0gYEAke3ByZWZpeH0ke25hbWUuc2xpY2UoMSl9YFxuICAgICAgICAgIHJlbW92ZVtwcmVmaXhlZF0gPSB7IHJlbW92ZTogdHJ1ZSB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ0ByZXNvbHV0aW9uJykge1xuICAgICAgICByZW1vdmVbbmFtZV0gPSBuZXcgUmVzb2x1dGlvbihuYW1lLCBwcmVmaXhlcywgdGhpcylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBwcm9wcyA9IHRoaXMuZGF0YVtuYW1lXS5wcm9wc1xuICAgICAgICBpZiAocHJvcHMpIHtcbiAgICAgICAgICBsZXQgdmFsdWUgPSBWYWx1ZS5sb2FkKG5hbWUsIFtdLCB0aGlzKVxuICAgICAgICAgIGZvciAobGV0IHByZWZpeCBvZiBwcmVmaXhlcykge1xuICAgICAgICAgICAgbGV0IG9sZCA9IHZhbHVlLm9sZChwcmVmaXgpXG4gICAgICAgICAgICBpZiAob2xkKSB7XG4gICAgICAgICAgICAgIGZvciAobGV0IHByb3Agb2YgcHJvcHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlbW92ZVtwcm9wXSkge1xuICAgICAgICAgICAgICAgICAgcmVtb3ZlW3Byb3BdID0ge31cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFyZW1vdmVbcHJvcF0udmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgICByZW1vdmVbcHJvcF0udmFsdWVzID0gW11cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVtb3ZlW3Byb3BdLnZhbHVlcy5wdXNoKG9sZClcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmb3IgKGxldCBwIG9mIHByZWZpeGVzKSB7XG4gICAgICAgICAgICBsZXQgb2xkcyA9IHRoaXMuZGVjbChuYW1lKS5vbGQobmFtZSwgcClcbiAgICAgICAgICAgIGlmIChuYW1lID09PSAnYWxpZ24tc2VsZicpIHtcbiAgICAgICAgICAgICAgbGV0IGEgPSBhZGRbbmFtZV0gJiYgYWRkW25hbWVdLnByZWZpeGVzXG4gICAgICAgICAgICAgIGlmIChhKSB7XG4gICAgICAgICAgICAgICAgaWYgKHAgPT09ICctd2Via2l0LSAyMDA5JyAmJiBhLmluY2x1ZGVzKCctd2Via2l0LScpKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocCA9PT0gJy13ZWJraXQtJyAmJiBhLmluY2x1ZGVzKCctd2Via2l0LSAyMDA5JykpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGxldCBwcmVmaXhlZCBvZiBvbGRzKSB7XG4gICAgICAgICAgICAgIGlmICghcmVtb3ZlW3ByZWZpeGVkXSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZVtwcmVmaXhlZF0gPSB7fVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJlbW92ZVtwcmVmaXhlZF0ucmVtb3ZlID0gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbYWRkLCByZW1vdmVdXG4gIH1cblxuICAvKipcbiAgICogRGVjbGFyYXRpb24gbG9hZGVyIHdpdGggY2FjaGluZ1xuICAgKi9cbiAgZGVjbChwcm9wKSB7XG4gICAgaWYgKCFkZWNsc0NhY2hlLmhhcyhwcm9wKSkge1xuICAgICAgZGVjbHNDYWNoZS5zZXQocHJvcCwgRGVjbGFyYXRpb24ubG9hZChwcm9wKSlcbiAgICB9XG5cbiAgICByZXR1cm4gZGVjbHNDYWNoZS5nZXQocHJvcClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdW5wcmVmaXhlZCB2ZXJzaW9uIG9mIHByb3BlcnR5XG4gICAqL1xuICB1bnByZWZpeGVkKHByb3ApIHtcbiAgICBsZXQgdmFsdWUgPSB0aGlzLm5vcm1hbGl6ZSh2ZW5kb3IudW5wcmVmaXhlZChwcm9wKSlcbiAgICBpZiAodmFsdWUgPT09ICdmbGV4LWRpcmVjdGlvbicpIHtcbiAgICAgIHZhbHVlID0gJ2ZsZXgtZmxvdydcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICAvKipcbiAgICogTm9ybWFsaXplIHByZWZpeCBmb3IgcmVtb3ZlclxuICAgKi9cbiAgbm9ybWFsaXplKHByb3ApIHtcbiAgICByZXR1cm4gdGhpcy5kZWNsKHByb3ApLm5vcm1hbGl6ZShwcm9wKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcmVmaXhlZCB2ZXJzaW9uIG9mIHByb3BlcnR5XG4gICAqL1xuICBwcmVmaXhlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBwcm9wID0gdmVuZG9yLnVucHJlZml4ZWQocHJvcClcbiAgICByZXR1cm4gdGhpcy5kZWNsKHByb3ApLnByZWZpeGVkKHByb3AsIHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdmFsdWVzLCB3aGljaCBtdXN0IGJlIHByZWZpeGVkIGluIHNlbGVjdGVkIHByb3BlcnR5XG4gICAqL1xuICB2YWx1ZXModHlwZSwgcHJvcCkge1xuICAgIGxldCBkYXRhID0gdGhpc1t0eXBlXVxuXG4gICAgbGV0IGdsb2JhbCA9IGRhdGFbJyonXSAmJiBkYXRhWycqJ10udmFsdWVzXG4gICAgbGV0IHZhbHVlcyA9IGRhdGFbcHJvcF0gJiYgZGF0YVtwcm9wXS52YWx1ZXNcblxuICAgIGlmIChnbG9iYWwgJiYgdmFsdWVzKSB7XG4gICAgICByZXR1cm4gdXRpbHMudW5pcShnbG9iYWwuY29uY2F0KHZhbHVlcykpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBnbG9iYWwgfHwgdmFsdWVzIHx8IFtdXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdyb3VwIGRlY2xhcmF0aW9uIGJ5IHVucHJlZml4ZWQgcHJvcGVydHkgdG8gY2hlY2sgdGhlbVxuICAgKi9cbiAgZ3JvdXAoZGVjbCkge1xuICAgIGxldCBydWxlID0gZGVjbC5wYXJlbnRcbiAgICBsZXQgaW5kZXggPSBydWxlLmluZGV4KGRlY2wpXG4gICAgbGV0IHsgbGVuZ3RoIH0gPSBydWxlLm5vZGVzXG4gICAgbGV0IHVucHJlZml4ZWQgPSB0aGlzLnVucHJlZml4ZWQoZGVjbC5wcm9wKVxuXG4gICAgbGV0IGNoZWNrZXIgPSAoc3RlcCwgY2FsbGJhY2spID0+IHtcbiAgICAgIGluZGV4ICs9IHN0ZXBcbiAgICAgIHdoaWxlIChpbmRleCA+PSAwICYmIGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIGxldCBvdGhlciA9IHJ1bGUubm9kZXNbaW5kZXhdXG4gICAgICAgIGlmIChvdGhlci50eXBlID09PSAnZGVjbCcpIHtcbiAgICAgICAgICBpZiAoc3RlcCA9PT0gLTEgJiYgb3RoZXIucHJvcCA9PT0gdW5wcmVmaXhlZCkge1xuICAgICAgICAgICAgaWYgKCFCcm93c2Vycy53aXRoUHJlZml4KG90aGVyLnZhbHVlKSkge1xuICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0aGlzLnVucHJlZml4ZWQob3RoZXIucHJvcCkgIT09IHVucHJlZml4ZWQpIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfSBlbHNlIGlmIChjYWxsYmFjayhvdGhlcikgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHN0ZXAgPT09ICsxICYmIG90aGVyLnByb3AgPT09IHVucHJlZml4ZWQpIHtcbiAgICAgICAgICAgIGlmICghQnJvd3NlcnMud2l0aFByZWZpeChvdGhlci52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpbmRleCArPSBzdGVwXG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdXAoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGNoZWNrZXIoLTEsIGNhbGxiYWNrKVxuICAgICAgfSxcbiAgICAgIGRvd24oY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGNoZWNrZXIoKzEsIGNhbGxiYWNrKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWZpeGVzXG4iLCJsZXQgcGFyc2VyID0gcmVxdWlyZSgncG9zdGNzcy12YWx1ZS1wYXJzZXInKVxuXG5sZXQgVmFsdWUgPSByZXF1aXJlKCcuL3ZhbHVlJylcbmxldCBpbnNlcnRBcmVhcyA9IHJlcXVpcmUoJy4vaGFja3MvZ3JpZC11dGlscycpLmluc2VydEFyZWFzXG5cbmNvbnN0IE9MRF9MSU5FQVIgPSAvKF58W14tXSlsaW5lYXItZ3JhZGllbnRcXChcXHMqKHRvcHxsZWZ0fHJpZ2h0fGJvdHRvbSkvaVxuY29uc3QgT0xEX1JBRElBTCA9IC8oXnxbXi1dKXJhZGlhbC1ncmFkaWVudFxcKFxccypcXGQrKFxcdyp8JSlcXHMrXFxkKyhcXHcqfCUpXFxzKiwvaVxuY29uc3QgSUdOT1JFX05FWFQgPSAvKCFcXHMqKT9hdXRvcHJlZml4ZXI6XFxzKmlnbm9yZVxccytuZXh0L2lcbmNvbnN0IEdSSURfUkVHRVggPSAvKCFcXHMqKT9hdXRvcHJlZml4ZXJcXHMqZ3JpZDpcXHMqKG9ufG9mZnwobm8tKT9hdXRvcGxhY2UpL2lcblxuY29uc3QgU0laRVMgPSBbXG4gICd3aWR0aCcsXG4gICdoZWlnaHQnLFxuICAnbWluLXdpZHRoJyxcbiAgJ21heC13aWR0aCcsXG4gICdtaW4taGVpZ2h0JyxcbiAgJ21heC1oZWlnaHQnLFxuICAnaW5saW5lLXNpemUnLFxuICAnbWluLWlubGluZS1zaXplJyxcbiAgJ21heC1pbmxpbmUtc2l6ZScsXG4gICdibG9jay1zaXplJyxcbiAgJ21pbi1ibG9jay1zaXplJyxcbiAgJ21heC1ibG9jay1zaXplJ1xuXVxuXG5mdW5jdGlvbiBoYXNHcmlkVGVtcGxhdGUoZGVjbCkge1xuICByZXR1cm4gZGVjbC5wYXJlbnQuc29tZShcbiAgICBpID0+IGkucHJvcCA9PT0gJ2dyaWQtdGVtcGxhdGUnIHx8IGkucHJvcCA9PT0gJ2dyaWQtdGVtcGxhdGUtYXJlYXMnXG4gIClcbn1cblxuZnVuY3Rpb24gaGFzUm93c0FuZENvbHVtbnMoZGVjbCkge1xuICBsZXQgaGFzUm93cyA9IGRlY2wucGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09ICdncmlkLXRlbXBsYXRlLXJvd3MnKVxuICBsZXQgaGFzQ29sdW1ucyA9IGRlY2wucGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09ICdncmlkLXRlbXBsYXRlLWNvbHVtbnMnKVxuICByZXR1cm4gaGFzUm93cyAmJiBoYXNDb2x1bW5zXG59XG5cbmNsYXNzIFByb2Nlc3NvciB7XG4gIGNvbnN0cnVjdG9yKHByZWZpeGVzKSB7XG4gICAgdGhpcy5wcmVmaXhlcyA9IHByZWZpeGVzXG4gIH1cblxuICAvKipcbiAgICogQWRkIG5lY2Vzc2FyeSBwcmVmaXhlc1xuICAgKi9cbiAgYWRkKGNzcywgcmVzdWx0KSB7XG4gICAgLy8gQXQtcnVsZXNcbiAgICBsZXQgcmVzb2x1dGlvbiA9IHRoaXMucHJlZml4ZXMuYWRkWydAcmVzb2x1dGlvbiddXG4gICAgbGV0IGtleWZyYW1lcyA9IHRoaXMucHJlZml4ZXMuYWRkWydAa2V5ZnJhbWVzJ11cbiAgICBsZXQgdmlld3BvcnQgPSB0aGlzLnByZWZpeGVzLmFkZFsnQHZpZXdwb3J0J11cbiAgICBsZXQgc3VwcG9ydHMgPSB0aGlzLnByZWZpeGVzLmFkZFsnQHN1cHBvcnRzJ11cblxuICAgIGNzcy53YWxrQXRSdWxlcyhydWxlID0+IHtcbiAgICAgIGlmIChydWxlLm5hbWUgPT09ICdrZXlmcmFtZXMnKSB7XG4gICAgICAgIGlmICghdGhpcy5kaXNhYmxlZChydWxlLCByZXN1bHQpKSB7XG4gICAgICAgICAgcmV0dXJuIGtleWZyYW1lcyAmJiBrZXlmcmFtZXMucHJvY2VzcyhydWxlKVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHJ1bGUubmFtZSA9PT0gJ3ZpZXdwb3J0Jykge1xuICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQocnVsZSwgcmVzdWx0KSkge1xuICAgICAgICAgIHJldHVybiB2aWV3cG9ydCAmJiB2aWV3cG9ydC5wcm9jZXNzKHJ1bGUpXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAocnVsZS5uYW1lID09PSAnc3VwcG9ydHMnKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB0aGlzLnByZWZpeGVzLm9wdGlvbnMuc3VwcG9ydHMgIT09IGZhbHNlICYmXG4gICAgICAgICAgIXRoaXMuZGlzYWJsZWQocnVsZSwgcmVzdWx0KVxuICAgICAgICApIHtcbiAgICAgICAgICByZXR1cm4gc3VwcG9ydHMucHJvY2VzcyhydWxlKVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHJ1bGUubmFtZSA9PT0gJ21lZGlhJyAmJiBydWxlLnBhcmFtcy5pbmNsdWRlcygnLXJlc29sdXRpb24nKSkge1xuICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQocnVsZSwgcmVzdWx0KSkge1xuICAgICAgICAgIHJldHVybiByZXNvbHV0aW9uICYmIHJlc29sdXRpb24ucHJvY2VzcyhydWxlKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9KVxuXG4gICAgLy8gU2VsZWN0b3JzXG4gICAgY3NzLndhbGtSdWxlcyhydWxlID0+IHtcbiAgICAgIGlmICh0aGlzLmRpc2FibGVkKHJ1bGUsIHJlc3VsdCkpIHJldHVybiB1bmRlZmluZWRcblxuICAgICAgcmV0dXJuIHRoaXMucHJlZml4ZXMuYWRkLnNlbGVjdG9ycy5tYXAoc2VsZWN0b3IgPT4ge1xuICAgICAgICByZXR1cm4gc2VsZWN0b3IucHJvY2VzcyhydWxlLCByZXN1bHQpXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICBmdW5jdGlvbiBpbnNpZGVHcmlkKGRlY2wpIHtcbiAgICAgIHJldHVybiBkZWNsLnBhcmVudC5ub2Rlcy5zb21lKG5vZGUgPT4ge1xuICAgICAgICBpZiAobm9kZS50eXBlICE9PSAnZGVjbCcpIHJldHVybiBmYWxzZVxuICAgICAgICBsZXQgZGlzcGxheUdyaWQgPVxuICAgICAgICAgIG5vZGUucHJvcCA9PT0gJ2Rpc3BsYXknICYmIC8oaW5saW5lLSk/Z3JpZC8udGVzdChub2RlLnZhbHVlKVxuICAgICAgICBsZXQgZ3JpZFRlbXBsYXRlID0gbm9kZS5wcm9wLnN0YXJ0c1dpdGgoJ2dyaWQtdGVtcGxhdGUnKVxuICAgICAgICBsZXQgZ3JpZEdhcCA9IC9eZ3JpZC0oW0Etel0rLSk/Z2FwLy50ZXN0KG5vZGUucHJvcClcbiAgICAgICAgcmV0dXJuIGRpc3BsYXlHcmlkIHx8IGdyaWRUZW1wbGF0ZSB8fCBncmlkR2FwXG4gICAgICB9KVxuICAgIH1cbiAgICBmdW5jdGlvbiBpbnNpZGVGbGV4KGRlY2wpIHtcbiAgICAgIHJldHVybiBkZWNsLnBhcmVudC5zb21lKG5vZGUgPT4ge1xuICAgICAgICByZXR1cm4gbm9kZS5wcm9wID09PSAnZGlzcGxheScgJiYgLyhpbmxpbmUtKT9mbGV4Ly50ZXN0KG5vZGUudmFsdWUpXG4gICAgICB9KVxuICAgIH1cblxuICAgIGxldCBncmlkUHJlZml4ZXMgPVxuICAgICAgdGhpcy5ncmlkU3RhdHVzKGNzcywgcmVzdWx0KSAmJlxuICAgICAgdGhpcy5wcmVmaXhlcy5hZGRbJ2dyaWQtYXJlYSddICYmXG4gICAgICB0aGlzLnByZWZpeGVzLmFkZFsnZ3JpZC1hcmVhJ10ucHJlZml4ZXNcblxuICAgIGNzcy53YWxrRGVjbHMoZGVjbCA9PiB7XG4gICAgICBpZiAodGhpcy5kaXNhYmxlZERlY2woZGVjbCwgcmVzdWx0KSkgcmV0dXJuIHVuZGVmaW5lZFxuXG4gICAgICBsZXQgcGFyZW50ID0gZGVjbC5wYXJlbnRcbiAgICAgIGxldCBwcm9wID0gZGVjbC5wcm9wXG4gICAgICBsZXQgdmFsdWUgPSBkZWNsLnZhbHVlXG5cbiAgICAgIGlmIChwcm9wID09PSAnY29sb3ItYWRqdXN0Jykge1xuICAgICAgICBpZiAocGFyZW50LmV2ZXJ5KGkgPT4gaS5wcm9wICE9PSAncHJpbnQtY29sb3ItYWRqdXN0JykpIHtcbiAgICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAgICdSZXBsYWNlIGNvbG9yLWFkanVzdCB0byBwcmludC1jb2xvci1hZGp1c3QuICcgK1xuICAgICAgICAgICAgICAnVGhlIGNvbG9yLWFkanVzdCBzaG9ydGhhbmQgaXMgY3VycmVudGx5IGRlcHJlY2F0ZWQuJyxcbiAgICAgICAgICAgIHsgbm9kZTogZGVjbCB9XG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdncmlkLXJvdy1zcGFuJykge1xuICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAnZ3JpZC1yb3ctc3BhbiBpcyBub3QgcGFydCBvZiBmaW5hbCBHcmlkIExheW91dC4gVXNlIGdyaWQtcm93LicsXG4gICAgICAgICAgeyBub2RlOiBkZWNsIH1cbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdncmlkLWNvbHVtbi1zcGFuJykge1xuICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAnZ3JpZC1jb2x1bW4tc3BhbiBpcyBub3QgcGFydCBvZiBmaW5hbCBHcmlkIExheW91dC4gVXNlIGdyaWQtY29sdW1uLicsXG4gICAgICAgICAgeyBub2RlOiBkZWNsIH1cbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdkaXNwbGF5JyAmJiB2YWx1ZSA9PT0gJ2JveCcpIHtcbiAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgJ1lvdSBzaG91bGQgd3JpdGUgZGlzcGxheTogZmxleCBieSBmaW5hbCBzcGVjICcgK1xuICAgICAgICAgICAgJ2luc3RlYWQgb2YgZGlzcGxheTogYm94JyxcbiAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICApXG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gJ3RleHQtZW1waGFzaXMtcG9zaXRpb24nKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gJ3VuZGVyJyB8fCB2YWx1ZSA9PT0gJ292ZXInKSB7XG4gICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAnWW91IHNob3VsZCB1c2UgMiB2YWx1ZXMgZm9yIHRleHQtZW1waGFzaXMtcG9zaXRpb24gJyArXG4gICAgICAgICAgICAgICdGb3IgZXhhbXBsZSwgYHVuZGVyIGxlZnRgIGluc3RlYWQgb2YganVzdCBgdW5kZXJgLicsXG4gICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgL14oYWxpZ258anVzdGlmeXxwbGFjZSktKGl0ZW1zfGNvbnRlbnQpJC8udGVzdChwcm9wKSAmJlxuICAgICAgICBpbnNpZGVGbGV4KGRlY2wpXG4gICAgICApIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSAnc3RhcnQnIHx8IHZhbHVlID09PSAnZW5kJykge1xuICAgICAgICAgIHJlc3VsdC53YXJuKFxuICAgICAgICAgICAgYCR7dmFsdWV9IHZhbHVlIGhhcyBtaXhlZCBzdXBwb3J0LCBjb25zaWRlciB1c2luZyBgICtcbiAgICAgICAgICAgICAgYGZsZXgtJHt2YWx1ZX0gaW5zdGVhZGAsXG4gICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwcm9wID09PSAndGV4dC1kZWNvcmF0aW9uLXNraXAnICYmIHZhbHVlID09PSAnaW5rJykge1xuICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAnUmVwbGFjZSB0ZXh0LWRlY29yYXRpb24tc2tpcDogaW5rIHRvICcgK1xuICAgICAgICAgICAgJ3RleHQtZGVjb3JhdGlvbi1za2lwLWluazogYXV0bywgYmVjYXVzZSBzcGVjIGhhZCBiZWVuIGNoYW5nZWQnLFxuICAgICAgICAgIHsgbm9kZTogZGVjbCB9XG4gICAgICAgIClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChncmlkUHJlZml4ZXMgJiYgdGhpcy5ncmlkU3RhdHVzKGRlY2wsIHJlc3VsdCkpIHtcbiAgICAgICAgICBpZiAoZGVjbC52YWx1ZSA9PT0gJ3N1YmdyaWQnKSB7XG4gICAgICAgICAgICByZXN1bHQud2FybignSUUgZG9lcyBub3Qgc3VwcG9ydCBzdWJncmlkJywgeyBub2RlOiBkZWNsIH0pXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICgvXihhbGlnbnxqdXN0aWZ5fHBsYWNlKS1pdGVtcyQvLnRlc3QocHJvcCkgJiYgaW5zaWRlR3JpZChkZWNsKSkge1xuICAgICAgICAgICAgbGV0IGZpeGVkID0gcHJvcC5yZXBsYWNlKCctaXRlbXMnLCAnLXNlbGYnKVxuICAgICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAgIGBJRSBkb2VzIG5vdCBzdXBwb3J0ICR7cHJvcH0gb24gZ3JpZCBjb250YWluZXJzLiBgICtcbiAgICAgICAgICAgICAgICBgVHJ5IHVzaW5nICR7Zml4ZWR9IG9uIGNoaWxkIGVsZW1lbnRzIGluc3RlYWQ6IGAgK1xuICAgICAgICAgICAgICAgIGAke2RlY2wucGFyZW50LnNlbGVjdG9yfSA+ICogeyAke2ZpeGVkfTogJHtkZWNsLnZhbHVlfSB9YCxcbiAgICAgICAgICAgICAgeyBub2RlOiBkZWNsIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgL14oYWxpZ258anVzdGlmeXxwbGFjZSktY29udGVudCQvLnRlc3QocHJvcCkgJiZcbiAgICAgICAgICAgIGluc2lkZUdyaWQoZGVjbClcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHJlc3VsdC53YXJuKGBJRSBkb2VzIG5vdCBzdXBwb3J0ICR7ZGVjbC5wcm9wfSBvbiBncmlkIGNvbnRhaW5lcnNgLCB7XG4gICAgICAgICAgICAgIG5vZGU6IGRlY2xcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSBlbHNlIGlmIChwcm9wID09PSAnZGlzcGxheScgJiYgZGVjbC52YWx1ZSA9PT0gJ2NvbnRlbnRzJykge1xuICAgICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAgICdQbGVhc2UgZG8gbm90IHVzZSBkaXNwbGF5OiBjb250ZW50czsgJyArXG4gICAgICAgICAgICAgICAgJ2lmIHlvdSBoYXZlIGdyaWQgc2V0dGluZyBlbmFibGVkJyxcbiAgICAgICAgICAgICAgeyBub2RlOiBkZWNsIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgICAgICB9IGVsc2UgaWYgKGRlY2wucHJvcCA9PT0gJ2dyaWQtZ2FwJykge1xuICAgICAgICAgICAgbGV0IHN0YXR1cyA9IHRoaXMuZ3JpZFN0YXR1cyhkZWNsLCByZXN1bHQpXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgIHN0YXR1cyA9PT0gJ2F1dG9wbGFjZScgJiZcbiAgICAgICAgICAgICAgIWhhc1Jvd3NBbmRDb2x1bW5zKGRlY2wpICYmXG4gICAgICAgICAgICAgICFoYXNHcmlkVGVtcGxhdGUoZGVjbClcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAgICAgICAnZ3JpZC1nYXAgb25seSB3b3JrcyBpZiBncmlkLXRlbXBsYXRlKC1hcmVhcykgaXMgYmVpbmcgJyArXG4gICAgICAgICAgICAgICAgICAndXNlZCBvciBib3RoIHJvd3MgYW5kIGNvbHVtbnMgaGF2ZSBiZWVuIGRlY2xhcmVkICcgK1xuICAgICAgICAgICAgICAgICAgJ2FuZCBjZWxscyBoYXZlIG5vdCBiZWVuIG1hbnVhbGx5ICcgK1xuICAgICAgICAgICAgICAgICAgJ3BsYWNlZCBpbnNpZGUgdGhlIGV4cGxpY2l0IGdyaWQnLFxuICAgICAgICAgICAgICAgIHsgbm9kZTogZGVjbCB9XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICAgIChzdGF0dXMgPT09IHRydWUgfHwgc3RhdHVzID09PSAnbm8tYXV0b3BsYWNlJykgJiZcbiAgICAgICAgICAgICAgIWhhc0dyaWRUZW1wbGF0ZShkZWNsKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIHJlc3VsdC53YXJuKFxuICAgICAgICAgICAgICAgICdncmlkLWdhcCBvbmx5IHdvcmtzIGlmIGdyaWQtdGVtcGxhdGUoLWFyZWFzKSBpcyBiZWluZyB1c2VkJyxcbiAgICAgICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChwcm9wID09PSAnZ3JpZC1hdXRvLWNvbHVtbnMnKSB7XG4gICAgICAgICAgICByZXN1bHQud2FybignZ3JpZC1hdXRvLWNvbHVtbnMgaXMgbm90IHN1cHBvcnRlZCBieSBJRScsIHtcbiAgICAgICAgICAgICAgbm9kZTogZGVjbFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdncmlkLWF1dG8tcm93cycpIHtcbiAgICAgICAgICAgIHJlc3VsdC53YXJuKCdncmlkLWF1dG8tcm93cyBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFJywgeyBub2RlOiBkZWNsIH0pXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICAgICAgfSBlbHNlIGlmIChwcm9wID09PSAnZ3JpZC1hdXRvLWZsb3cnKSB7XG4gICAgICAgICAgICBsZXQgaGFzUm93cyA9IHBhcmVudC5zb21lKGkgPT4gaS5wcm9wID09PSAnZ3JpZC10ZW1wbGF0ZS1yb3dzJylcbiAgICAgICAgICAgIGxldCBoYXNDb2xzID0gcGFyZW50LnNvbWUoaSA9PiBpLnByb3AgPT09ICdncmlkLXRlbXBsYXRlLWNvbHVtbnMnKVxuXG4gICAgICAgICAgICBpZiAoaGFzR3JpZFRlbXBsYXRlKGRlY2wpKSB7XG4gICAgICAgICAgICAgIHJlc3VsdC53YXJuKCdncmlkLWF1dG8tZmxvdyBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFJywge1xuICAgICAgICAgICAgICAgIG5vZGU6IGRlY2xcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUuaW5jbHVkZXMoJ2RlbnNlJykpIHtcbiAgICAgICAgICAgICAgcmVzdWx0Lndhcm4oJ2dyaWQtYXV0by1mbG93OiBkZW5zZSBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFJywge1xuICAgICAgICAgICAgICAgIG5vZGU6IGRlY2xcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIWhhc1Jvd3MgJiYgIWhhc0NvbHMpIHtcbiAgICAgICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAgICAgJ2dyaWQtYXV0by1mbG93IHdvcmtzIG9ubHkgaWYgZ3JpZC10ZW1wbGF0ZS1yb3dzIGFuZCAnICtcbiAgICAgICAgICAgICAgICAgICdncmlkLXRlbXBsYXRlLWNvbHVtbnMgYXJlIHByZXNlbnQgaW4gdGhlIHNhbWUgcnVsZScsXG4gICAgICAgICAgICAgICAgeyBub2RlOiBkZWNsIH1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUuaW5jbHVkZXMoJ2F1dG8tZml0JykpIHtcbiAgICAgICAgICAgIHJlc3VsdC53YXJuKCdhdXRvLWZpdCB2YWx1ZSBpcyBub3Qgc3VwcG9ydGVkIGJ5IElFJywge1xuICAgICAgICAgICAgICBub2RlOiBkZWNsLFxuICAgICAgICAgICAgICB3b3JkOiAnYXV0by1maXQnXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUuaW5jbHVkZXMoJ2F1dG8tZmlsbCcpKSB7XG4gICAgICAgICAgICByZXN1bHQud2FybignYXV0by1maWxsIHZhbHVlIGlzIG5vdCBzdXBwb3J0ZWQgYnkgSUUnLCB7XG4gICAgICAgICAgICAgIG5vZGU6IGRlY2wsXG4gICAgICAgICAgICAgIHdvcmQ6ICdhdXRvLWZpbGwnXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgICAgIH0gZWxzZSBpZiAocHJvcC5zdGFydHNXaXRoKCdncmlkLXRlbXBsYXRlJykgJiYgdmFsdWUuaW5jbHVkZXMoJ1snKSkge1xuICAgICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAgICdBdXRvcHJlZml4ZXIgY3VycmVudGx5IGRvZXMgbm90IHN1cHBvcnQgbGluZSBuYW1lcy4gJyArXG4gICAgICAgICAgICAgICAgJ1RyeSB1c2luZyBncmlkLXRlbXBsYXRlLWFyZWFzIGluc3RlYWQuJyxcbiAgICAgICAgICAgICAgeyBub2RlOiBkZWNsLCB3b3JkOiAnWycgfVxuICAgICAgICAgICAgKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUuaW5jbHVkZXMoJ3JhZGlhbC1ncmFkaWVudCcpKSB7XG4gICAgICAgICAgaWYgKE9MRF9SQURJQUwudGVzdChkZWNsLnZhbHVlKSkge1xuICAgICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAgICdHcmFkaWVudCBoYXMgb3V0ZGF0ZWQgZGlyZWN0aW9uIHN5bnRheC4gJyArXG4gICAgICAgICAgICAgICAgJ05ldyBzeW50YXggaXMgbGlrZSBgY2xvc2VzdC1zaWRlIGF0IDAgMGAgJyArXG4gICAgICAgICAgICAgICAgJ2luc3RlYWQgb2YgYDAgMCwgY2xvc2VzdC1zaWRlYC4nLFxuICAgICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgICAgKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgYXN0ID0gcGFyc2VyKHZhbHVlKVxuXG4gICAgICAgICAgICBmb3IgKGxldCBpIG9mIGFzdC5ub2Rlcykge1xuICAgICAgICAgICAgICBpZiAoaS50eXBlID09PSAnZnVuY3Rpb24nICYmIGkudmFsdWUgPT09ICdyYWRpYWwtZ3JhZGllbnQnKSB7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgd29yZCBvZiBpLm5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICBpZiAod29yZC50eXBlID09PSAnd29yZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHdvcmQudmFsdWUgPT09ICdjb3ZlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAgICAgICAgICAgICAgICdHcmFkaWVudCBoYXMgb3V0ZGF0ZWQgZGlyZWN0aW9uIHN5bnRheC4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdSZXBsYWNlIGBjb3ZlcmAgdG8gYGZhcnRoZXN0LWNvcm5lcmAuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbm9kZTogZGVjbCB9XG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHdvcmQudmFsdWUgPT09ICdjb250YWluJykge1xuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC53YXJuKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0dyYWRpZW50IGhhcyBvdXRkYXRlZCBkaXJlY3Rpb24gc3ludGF4LiAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ1JlcGxhY2UgYGNvbnRhaW5gIHRvIGBjbG9zZXN0LXNpZGVgLicsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUuaW5jbHVkZXMoJ2xpbmVhci1ncmFkaWVudCcpKSB7XG4gICAgICAgICAgaWYgKE9MRF9MSU5FQVIudGVzdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJlc3VsdC53YXJuKFxuICAgICAgICAgICAgICAnR3JhZGllbnQgaGFzIG91dGRhdGVkIGRpcmVjdGlvbiBzeW50YXguICcgK1xuICAgICAgICAgICAgICAgICdOZXcgc3ludGF4IGlzIGxpa2UgYHRvIGxlZnRgIGluc3RlYWQgb2YgYHJpZ2h0YC4nLFxuICAgICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgICAgKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoU0laRVMuaW5jbHVkZXMoZGVjbC5wcm9wKSkge1xuICAgICAgICBpZiAoIWRlY2wudmFsdWUuaW5jbHVkZXMoJy1maWxsLWF2YWlsYWJsZScpKSB7XG4gICAgICAgICAgaWYgKGRlY2wudmFsdWUuaW5jbHVkZXMoJ2ZpbGwtYXZhaWxhYmxlJykpIHtcbiAgICAgICAgICAgIHJlc3VsdC53YXJuKFxuICAgICAgICAgICAgICAnUmVwbGFjZSBmaWxsLWF2YWlsYWJsZSB0byBzdHJldGNoLCAnICtcbiAgICAgICAgICAgICAgICAnYmVjYXVzZSBzcGVjIGhhZCBiZWVuIGNoYW5nZWQnLFxuICAgICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgICAgKVxuICAgICAgICAgIH0gZWxzZSBpZiAoZGVjbC52YWx1ZS5pbmNsdWRlcygnZmlsbCcpKSB7XG4gICAgICAgICAgICBsZXQgYXN0ID0gcGFyc2VyKHZhbHVlKVxuICAgICAgICAgICAgaWYgKGFzdC5ub2Rlcy5zb21lKGkgPT4gaS50eXBlID09PSAnd29yZCcgJiYgaS52YWx1ZSA9PT0gJ2ZpbGwnKSkge1xuICAgICAgICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAgICAgICAnUmVwbGFjZSBmaWxsIHRvIHN0cmV0Y2gsIGJlY2F1c2Ugc3BlYyBoYWQgYmVlbiBjaGFuZ2VkJyxcbiAgICAgICAgICAgICAgICB7IG5vZGU6IGRlY2wgfVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxldCBwcmVmaXhlclxuXG4gICAgICBpZiAoZGVjbC5wcm9wID09PSAndHJhbnNpdGlvbicgfHwgZGVjbC5wcm9wID09PSAndHJhbnNpdGlvbi1wcm9wZXJ0eScpIHtcbiAgICAgICAgLy8gVHJhbnNpdGlvblxuICAgICAgICByZXR1cm4gdGhpcy5wcmVmaXhlcy50cmFuc2l0aW9uLmFkZChkZWNsLCByZXN1bHQpXG4gICAgICB9IGVsc2UgaWYgKGRlY2wucHJvcCA9PT0gJ2FsaWduLXNlbGYnKSB7XG4gICAgICAgIC8vIGFsaWduLXNlbGYgZmxleGJveCBvciBncmlkXG4gICAgICAgIGxldCBkaXNwbGF5ID0gdGhpcy5kaXNwbGF5VHlwZShkZWNsKVxuICAgICAgICBpZiAoZGlzcGxheSAhPT0gJ2dyaWQnICYmIHRoaXMucHJlZml4ZXMub3B0aW9ucy5mbGV4Ym94ICE9PSBmYWxzZSkge1xuICAgICAgICAgIHByZWZpeGVyID0gdGhpcy5wcmVmaXhlcy5hZGRbJ2FsaWduLXNlbGYnXVxuICAgICAgICAgIGlmIChwcmVmaXhlciAmJiBwcmVmaXhlci5wcmVmaXhlcykge1xuICAgICAgICAgICAgcHJlZml4ZXIucHJvY2VzcyhkZWNsKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ncmlkU3RhdHVzKGRlY2wsIHJlc3VsdCkgIT09IGZhbHNlKSB7XG4gICAgICAgICAgcHJlZml4ZXIgPSB0aGlzLnByZWZpeGVzLmFkZFsnZ3JpZC1yb3ctYWxpZ24nXVxuICAgICAgICAgIGlmIChwcmVmaXhlciAmJiBwcmVmaXhlci5wcmVmaXhlcykge1xuICAgICAgICAgICAgcmV0dXJuIHByZWZpeGVyLnByb2Nlc3MoZGVjbCwgcmVzdWx0KVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChkZWNsLnByb3AgPT09ICdqdXN0aWZ5LXNlbGYnKSB7XG4gICAgICAgIC8vIGp1c3RpZnktc2VsZiBmbGV4Ym94IG9yIGdyaWRcbiAgICAgICAgaWYgKHRoaXMuZ3JpZFN0YXR1cyhkZWNsLCByZXN1bHQpICE9PSBmYWxzZSkge1xuICAgICAgICAgIHByZWZpeGVyID0gdGhpcy5wcmVmaXhlcy5hZGRbJ2dyaWQtY29sdW1uLWFsaWduJ11cbiAgICAgICAgICBpZiAocHJlZml4ZXIgJiYgcHJlZml4ZXIucHJlZml4ZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBwcmVmaXhlci5wcm9jZXNzKGRlY2wsIHJlc3VsdClcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZGVjbC5wcm9wID09PSAncGxhY2Utc2VsZicpIHtcbiAgICAgICAgcHJlZml4ZXIgPSB0aGlzLnByZWZpeGVzLmFkZFsncGxhY2Utc2VsZiddXG4gICAgICAgIGlmIChcbiAgICAgICAgICBwcmVmaXhlciAmJlxuICAgICAgICAgIHByZWZpeGVyLnByZWZpeGVzICYmXG4gICAgICAgICAgdGhpcy5ncmlkU3RhdHVzKGRlY2wsIHJlc3VsdCkgIT09IGZhbHNlXG4gICAgICAgICkge1xuICAgICAgICAgIHJldHVybiBwcmVmaXhlci5wcm9jZXNzKGRlY2wsIHJlc3VsdClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUHJvcGVydGllc1xuICAgICAgICBwcmVmaXhlciA9IHRoaXMucHJlZml4ZXMuYWRkW2RlY2wucHJvcF1cbiAgICAgICAgaWYgKHByZWZpeGVyICYmIHByZWZpeGVyLnByZWZpeGVzKSB7XG4gICAgICAgICAgcmV0dXJuIHByZWZpeGVyLnByb2Nlc3MoZGVjbCwgcmVzdWx0KVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9KVxuXG4gICAgLy8gSW5zZXJ0IGdyaWQtYXJlYSBwcmVmaXhlcy4gV2UgbmVlZCB0byBiZSBhYmxlIHRvIHN0b3JlIHRoZSBkaWZmZXJlbnRcbiAgICAvLyBydWxlcyBhcyBhIGRhdGEgYW5kIGhhY2sgQVBJIGlzIG5vdCBlbm91Z2ggZm9yIHRoaXNcbiAgICBpZiAodGhpcy5ncmlkU3RhdHVzKGNzcywgcmVzdWx0KSkge1xuICAgICAgaW5zZXJ0QXJlYXMoY3NzLCB0aGlzLmRpc2FibGVkKVxuICAgIH1cblxuICAgIC8vIFZhbHVlc1xuICAgIHJldHVybiBjc3Mud2Fsa0RlY2xzKGRlY2wgPT4ge1xuICAgICAgaWYgKHRoaXMuZGlzYWJsZWRWYWx1ZShkZWNsLCByZXN1bHQpKSByZXR1cm5cblxuICAgICAgbGV0IHVucHJlZml4ZWQgPSB0aGlzLnByZWZpeGVzLnVucHJlZml4ZWQoZGVjbC5wcm9wKVxuICAgICAgbGV0IGxpc3QgPSB0aGlzLnByZWZpeGVzLnZhbHVlcygnYWRkJywgdW5wcmVmaXhlZClcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGxpc3QpKSB7XG4gICAgICAgIGZvciAobGV0IHZhbHVlIG9mIGxpc3QpIHtcbiAgICAgICAgICBpZiAodmFsdWUucHJvY2VzcykgdmFsdWUucHJvY2VzcyhkZWNsLCByZXN1bHQpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFZhbHVlLnNhdmUodGhpcy5wcmVmaXhlcywgZGVjbClcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB1bm5lY2Vzc2FyeSBwZWZpeGVzXG4gICAqL1xuICByZW1vdmUoY3NzLCByZXN1bHQpIHtcbiAgICAvLyBBdC1ydWxlc1xuICAgIGxldCByZXNvbHV0aW9uID0gdGhpcy5wcmVmaXhlcy5yZW1vdmVbJ0ByZXNvbHV0aW9uJ11cblxuICAgIGNzcy53YWxrQXRSdWxlcygocnVsZSwgaSkgPT4ge1xuICAgICAgaWYgKHRoaXMucHJlZml4ZXMucmVtb3ZlW2BAJHtydWxlLm5hbWV9YF0pIHtcbiAgICAgICAgaWYgKCF0aGlzLmRpc2FibGVkKHJ1bGUsIHJlc3VsdCkpIHtcbiAgICAgICAgICBydWxlLnBhcmVudC5yZW1vdmVDaGlsZChpKVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICBydWxlLm5hbWUgPT09ICdtZWRpYScgJiZcbiAgICAgICAgcnVsZS5wYXJhbXMuaW5jbHVkZXMoJy1yZXNvbHV0aW9uJykgJiZcbiAgICAgICAgcmVzb2x1dGlvblxuICAgICAgKSB7XG4gICAgICAgIHJlc29sdXRpb24uY2xlYW4ocnVsZSlcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgLy8gU2VsZWN0b3JzXG4gICAgZm9yIChsZXQgY2hlY2tlciBvZiB0aGlzLnByZWZpeGVzLnJlbW92ZS5zZWxlY3RvcnMpIHtcbiAgICAgIGNzcy53YWxrUnVsZXMoKHJ1bGUsIGkpID0+IHtcbiAgICAgICAgaWYgKGNoZWNrZXIuY2hlY2socnVsZSkpIHtcbiAgICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQocnVsZSwgcmVzdWx0KSkge1xuICAgICAgICAgICAgcnVsZS5wYXJlbnQucmVtb3ZlQ2hpbGQoaSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuXG4gICAgcmV0dXJuIGNzcy53YWxrRGVjbHMoKGRlY2wsIGkpID0+IHtcbiAgICAgIGlmICh0aGlzLmRpc2FibGVkKGRlY2wsIHJlc3VsdCkpIHJldHVyblxuXG4gICAgICBsZXQgcnVsZSA9IGRlY2wucGFyZW50XG4gICAgICBsZXQgdW5wcmVmaXhlZCA9IHRoaXMucHJlZml4ZXMudW5wcmVmaXhlZChkZWNsLnByb3ApXG5cbiAgICAgIC8vIFRyYW5zaXRpb25cbiAgICAgIGlmIChkZWNsLnByb3AgPT09ICd0cmFuc2l0aW9uJyB8fCBkZWNsLnByb3AgPT09ICd0cmFuc2l0aW9uLXByb3BlcnR5Jykge1xuICAgICAgICB0aGlzLnByZWZpeGVzLnRyYW5zaXRpb24ucmVtb3ZlKGRlY2wpXG4gICAgICB9XG5cbiAgICAgIC8vIFByb3BlcnRpZXNcbiAgICAgIGlmIChcbiAgICAgICAgdGhpcy5wcmVmaXhlcy5yZW1vdmVbZGVjbC5wcm9wXSAmJlxuICAgICAgICB0aGlzLnByZWZpeGVzLnJlbW92ZVtkZWNsLnByb3BdLnJlbW92ZVxuICAgICAgKSB7XG4gICAgICAgIGxldCBub3RIYWNrID0gdGhpcy5wcmVmaXhlcy5ncm91cChkZWNsKS5kb3duKG90aGVyID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5wcmVmaXhlcy5ub3JtYWxpemUob3RoZXIucHJvcCkgPT09IHVucHJlZml4ZWRcbiAgICAgICAgfSlcblxuICAgICAgICBpZiAodW5wcmVmaXhlZCA9PT0gJ2ZsZXgtZmxvdycpIHtcbiAgICAgICAgICBub3RIYWNrID0gdHJ1ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlY2wucHJvcCA9PT0gJy13ZWJraXQtYm94LW9yaWVudCcpIHtcbiAgICAgICAgICBsZXQgaGFja3MgPSB7ICdmbGV4LWRpcmVjdGlvbic6IHRydWUsICdmbGV4LWZsb3cnOiB0cnVlIH1cbiAgICAgICAgICBpZiAoIWRlY2wucGFyZW50LnNvbWUoaiA9PiBoYWNrc1tqLnByb3BdKSkgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAobm90SGFjayAmJiAhdGhpcy53aXRoSGFja1ZhbHVlKGRlY2wpKSB7XG4gICAgICAgICAgaWYgKGRlY2wucmF3KCdiZWZvcmUnKS5pbmNsdWRlcygnXFxuJykpIHtcbiAgICAgICAgICAgIHRoaXMucmVkdWNlU3BhY2VzKGRlY2wpXG4gICAgICAgICAgfVxuICAgICAgICAgIHJ1bGUucmVtb3ZlQ2hpbGQoaSlcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBWYWx1ZXNcbiAgICAgIGZvciAobGV0IGNoZWNrZXIgb2YgdGhpcy5wcmVmaXhlcy52YWx1ZXMoJ3JlbW92ZScsIHVucHJlZml4ZWQpKSB7XG4gICAgICAgIGlmICghY2hlY2tlci5jaGVjaykgY29udGludWVcbiAgICAgICAgaWYgKCFjaGVja2VyLmNoZWNrKGRlY2wudmFsdWUpKSBjb250aW51ZVxuXG4gICAgICAgIHVucHJlZml4ZWQgPSBjaGVja2VyLnVucHJlZml4ZWRcbiAgICAgICAgbGV0IG5vdEhhY2sgPSB0aGlzLnByZWZpeGVzLmdyb3VwKGRlY2wpLmRvd24ob3RoZXIgPT4ge1xuICAgICAgICAgIHJldHVybiBvdGhlci52YWx1ZS5pbmNsdWRlcyh1bnByZWZpeGVkKVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmIChub3RIYWNrKSB7XG4gICAgICAgICAgcnVsZS5yZW1vdmVDaGlsZChpKVxuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIC8qKlxuICAgKiBTb21lIHJhcmUgb2xkIHZhbHVlcywgd2hpY2ggaXMgbm90IGluIHN0YW5kYXJkXG4gICAqL1xuICB3aXRoSGFja1ZhbHVlKGRlY2wpIHtcbiAgICByZXR1cm4gZGVjbC5wcm9wID09PSAnLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXAnICYmIGRlY2wudmFsdWUgPT09ICd0ZXh0J1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGZvciBncmlkL2ZsZXhib3ggb3B0aW9ucy5cbiAgICovXG4gIGRpc2FibGVkVmFsdWUobm9kZSwgcmVzdWx0KSB7XG4gICAgaWYgKHRoaXMuZ3JpZFN0YXR1cyhub2RlLCByZXN1bHQpID09PSBmYWxzZSAmJiBub2RlLnR5cGUgPT09ICdkZWNsJykge1xuICAgICAgaWYgKG5vZGUucHJvcCA9PT0gJ2Rpc3BsYXknICYmIG5vZGUudmFsdWUuaW5jbHVkZXMoJ2dyaWQnKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAodGhpcy5wcmVmaXhlcy5vcHRpb25zLmZsZXhib3ggPT09IGZhbHNlICYmIG5vZGUudHlwZSA9PT0gJ2RlY2wnKSB7XG4gICAgICBpZiAobm9kZS5wcm9wID09PSAnZGlzcGxheScgJiYgbm9kZS52YWx1ZS5pbmNsdWRlcygnZmxleCcpKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChub2RlLnR5cGUgPT09ICdkZWNsJyAmJiBub2RlLnByb3AgPT09ICdjb250ZW50Jykge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5kaXNhYmxlZChub2RlLCByZXN1bHQpXG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgZm9yIGdyaWQvZmxleGJveCBvcHRpb25zLlxuICAgKi9cbiAgZGlzYWJsZWREZWNsKG5vZGUsIHJlc3VsdCkge1xuICAgIGlmICh0aGlzLmdyaWRTdGF0dXMobm9kZSwgcmVzdWx0KSA9PT0gZmFsc2UgJiYgbm9kZS50eXBlID09PSAnZGVjbCcpIHtcbiAgICAgIGlmIChub2RlLnByb3AuaW5jbHVkZXMoJ2dyaWQnKSB8fCBub2RlLnByb3AgPT09ICdqdXN0aWZ5LWl0ZW1zJykge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAodGhpcy5wcmVmaXhlcy5vcHRpb25zLmZsZXhib3ggPT09IGZhbHNlICYmIG5vZGUudHlwZSA9PT0gJ2RlY2wnKSB7XG4gICAgICBsZXQgb3RoZXIgPSBbJ29yZGVyJywgJ2p1c3RpZnktY29udGVudCcsICdhbGlnbi1pdGVtcycsICdhbGlnbi1jb250ZW50J11cbiAgICAgIGlmIChub2RlLnByb3AuaW5jbHVkZXMoJ2ZsZXgnKSB8fCBvdGhlci5pbmNsdWRlcyhub2RlLnByb3ApKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZGlzYWJsZWQobm9kZSwgcmVzdWx0KVxuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGZvciBjb250cm9sIGNvbW1lbnQgYW5kIGdsb2JhbCBvcHRpb25zXG4gICAqL1xuICBkaXNhYmxlZChub2RlLCByZXN1bHQpIHtcbiAgICBpZiAoIW5vZGUpIHJldHVybiBmYWxzZVxuXG4gICAgaWYgKG5vZGUuX2F1dG9wcmVmaXhlckRpc2FibGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBub2RlLl9hdXRvcHJlZml4ZXJEaXNhYmxlZFxuICAgIH1cblxuICAgIGlmIChub2RlLnBhcmVudCkge1xuICAgICAgbGV0IHAgPSBub2RlLnByZXYoKVxuICAgICAgaWYgKHAgJiYgcC50eXBlID09PSAnY29tbWVudCcgJiYgSUdOT1JFX05FWFQudGVzdChwLnRleHQpKSB7XG4gICAgICAgIG5vZGUuX2F1dG9wcmVmaXhlckRpc2FibGVkID0gdHJ1ZVxuICAgICAgICBub2RlLl9hdXRvcHJlZml4ZXJTZWxmRGlzYWJsZWQgPSB0cnVlXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHZhbHVlID0gbnVsbFxuICAgIGlmIChub2RlLm5vZGVzKSB7XG4gICAgICBsZXQgc3RhdHVzXG4gICAgICBub2RlLmVhY2goaSA9PiB7XG4gICAgICAgIGlmIChpLnR5cGUgIT09ICdjb21tZW50JykgcmV0dXJuXG4gICAgICAgIGlmICgvKCFcXHMqKT9hdXRvcHJlZml4ZXI6XFxzKihvZmZ8b24pL2kudGVzdChpLnRleHQpKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBzdGF0dXMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXN1bHQud2FybihcbiAgICAgICAgICAgICAgJ1NlY29uZCBBdXRvcHJlZml4ZXIgY29udHJvbCBjb21tZW50ICcgK1xuICAgICAgICAgICAgICAgICd3YXMgaWdub3JlZC4gQXV0b3ByZWZpeGVyIGFwcGxpZXMgY29udHJvbCAnICtcbiAgICAgICAgICAgICAgICAnY29tbWVudCB0byB3aG9sZSBibG9jaywgbm90IHRvIG5leHQgcnVsZXMuJyxcbiAgICAgICAgICAgICAgeyBub2RlOiBpIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RhdHVzID0gL29uL2kudGVzdChpLnRleHQpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBpZiAoc3RhdHVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdmFsdWUgPSAhc3RhdHVzXG4gICAgICB9XG4gICAgfVxuICAgIGlmICghbm9kZS5ub2RlcyB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgaWYgKG5vZGUucGFyZW50KSB7XG4gICAgICAgIGxldCBpc1BhcmVudERpc2FibGVkID0gdGhpcy5kaXNhYmxlZChub2RlLnBhcmVudCwgcmVzdWx0KVxuICAgICAgICBpZiAobm9kZS5wYXJlbnQuX2F1dG9wcmVmaXhlclNlbGZEaXNhYmxlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHZhbHVlID0gZmFsc2VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IGlzUGFyZW50RGlzYWJsZWRcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWUgPSBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgICBub2RlLl9hdXRvcHJlZml4ZXJEaXNhYmxlZCA9IHZhbHVlXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICAvKipcbiAgICogTm9ybWFsaXplIHNwYWNlcyBpbiBjYXNjYWRlIGRlY2xhcmF0aW9uIGdyb3VwXG4gICAqL1xuICByZWR1Y2VTcGFjZXMoZGVjbCkge1xuICAgIGxldCBzdG9wID0gZmFsc2VcbiAgICB0aGlzLnByZWZpeGVzLmdyb3VwKGRlY2wpLnVwKCgpID0+IHtcbiAgICAgIHN0b3AgPSB0cnVlXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0pXG4gICAgaWYgKHN0b3ApIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGxldCBwYXJ0cyA9IGRlY2wucmF3KCdiZWZvcmUnKS5zcGxpdCgnXFxuJylcbiAgICBsZXQgcHJldk1pbiA9IHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdLmxlbmd0aFxuICAgIGxldCBkaWZmID0gZmFsc2VcblxuICAgIHRoaXMucHJlZml4ZXMuZ3JvdXAoZGVjbCkuZG93bihvdGhlciA9PiB7XG4gICAgICBwYXJ0cyA9IG90aGVyLnJhdygnYmVmb3JlJykuc3BsaXQoJ1xcbicpXG4gICAgICBsZXQgbGFzdCA9IHBhcnRzLmxlbmd0aCAtIDFcblxuICAgICAgaWYgKHBhcnRzW2xhc3RdLmxlbmd0aCA+IHByZXZNaW4pIHtcbiAgICAgICAgaWYgKGRpZmYgPT09IGZhbHNlKSB7XG4gICAgICAgICAgZGlmZiA9IHBhcnRzW2xhc3RdLmxlbmd0aCAtIHByZXZNaW5cbiAgICAgICAgfVxuXG4gICAgICAgIHBhcnRzW2xhc3RdID0gcGFydHNbbGFzdF0uc2xpY2UoMCwgLWRpZmYpXG4gICAgICAgIG90aGVyLnJhd3MuYmVmb3JlID0gcGFydHMuam9pbignXFxuJylcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIElzIGl0IGZsZWJveCBvciBncmlkIHJ1bGVcbiAgICovXG4gIGRpc3BsYXlUeXBlKGRlY2wpIHtcbiAgICBmb3IgKGxldCBpIG9mIGRlY2wucGFyZW50Lm5vZGVzKSB7XG4gICAgICBpZiAoaS5wcm9wICE9PSAnZGlzcGxheScpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKGkudmFsdWUuaW5jbHVkZXMoJ2ZsZXgnKSkge1xuICAgICAgICByZXR1cm4gJ2ZsZXgnXG4gICAgICB9XG5cbiAgICAgIGlmIChpLnZhbHVlLmluY2x1ZGVzKCdncmlkJykpIHtcbiAgICAgICAgcmV0dXJuICdncmlkJ1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLyoqXG4gICAqIFNldCBncmlkIG9wdGlvbiB2aWEgY29udHJvbCBjb21tZW50XG4gICAqL1xuICBncmlkU3RhdHVzKG5vZGUsIHJlc3VsdCkge1xuICAgIGlmICghbm9kZSkgcmV0dXJuIGZhbHNlXG5cbiAgICBpZiAobm9kZS5fYXV0b3ByZWZpeGVyR3JpZFN0YXR1cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gbm9kZS5fYXV0b3ByZWZpeGVyR3JpZFN0YXR1c1xuICAgIH1cblxuICAgIGxldCB2YWx1ZSA9IG51bGxcbiAgICBpZiAobm9kZS5ub2Rlcykge1xuICAgICAgbGV0IHN0YXR1c1xuICAgICAgbm9kZS5lYWNoKGkgPT4ge1xuICAgICAgICBpZiAoaS50eXBlICE9PSAnY29tbWVudCcpIHJldHVyblxuICAgICAgICBpZiAoR1JJRF9SRUdFWC50ZXN0KGkudGV4dCkpIHtcbiAgICAgICAgICBsZXQgaGFzQXV0b3BsYWNlID0gLzpcXHMqYXV0b3BsYWNlL2kudGVzdChpLnRleHQpXG4gICAgICAgICAgbGV0IG5vQXV0b3BsYWNlID0gL25vLWF1dG9wbGFjZS9pLnRlc3QoaS50ZXh0KVxuICAgICAgICAgIGlmICh0eXBlb2Ygc3RhdHVzICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmVzdWx0Lndhcm4oXG4gICAgICAgICAgICAgICdTZWNvbmQgQXV0b3ByZWZpeGVyIGdyaWQgY29udHJvbCBjb21tZW50IHdhcyAnICtcbiAgICAgICAgICAgICAgICAnaWdub3JlZC4gQXV0b3ByZWZpeGVyIGFwcGxpZXMgY29udHJvbCBjb21tZW50cyB0byB0aGUgd2hvbGUgJyArXG4gICAgICAgICAgICAgICAgJ2Jsb2NrLCBub3QgdG8gdGhlIG5leHQgcnVsZXMuJyxcbiAgICAgICAgICAgICAgeyBub2RlOiBpIH1cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0F1dG9wbGFjZSkge1xuICAgICAgICAgICAgc3RhdHVzID0gJ2F1dG9wbGFjZSdcbiAgICAgICAgICB9IGVsc2UgaWYgKG5vQXV0b3BsYWNlKSB7XG4gICAgICAgICAgICBzdGF0dXMgPSB0cnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0YXR1cyA9IC9vbi9pLnRlc3QoaS50ZXh0KVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSlcblxuICAgICAgaWYgKHN0YXR1cyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhbHVlID0gc3RhdHVzXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG5vZGUudHlwZSA9PT0gJ2F0cnVsZScgJiYgbm9kZS5uYW1lID09PSAnc3VwcG9ydHMnKSB7XG4gICAgICBsZXQgcGFyYW1zID0gbm9kZS5wYXJhbXNcbiAgICAgIGlmIChwYXJhbXMuaW5jbHVkZXMoJ2dyaWQnKSAmJiBwYXJhbXMuaW5jbHVkZXMoJ2F1dG8nKSkge1xuICAgICAgICB2YWx1ZSA9IGZhbHNlXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFub2RlLm5vZGVzIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICBpZiAobm9kZS5wYXJlbnQpIHtcbiAgICAgICAgbGV0IGlzUGFyZW50R3JpZCA9IHRoaXMuZ3JpZFN0YXR1cyhub2RlLnBhcmVudCwgcmVzdWx0KVxuICAgICAgICBpZiAobm9kZS5wYXJlbnQuX2F1dG9wcmVmaXhlclNlbGZEaXNhYmxlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHZhbHVlID0gZmFsc2VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IGlzUGFyZW50R3JpZFxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLnByZWZpeGVzLm9wdGlvbnMuZ3JpZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFsdWUgPSB0aGlzLnByZWZpeGVzLm9wdGlvbnMuZ3JpZFxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2Vzcy5lbnYuQVVUT1BSRUZJWEVSX0dSSUQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5BVVRPUFJFRklYRVJfR1JJRCA9PT0gJ2F1dG9wbGFjZScpIHtcbiAgICAgICAgICB2YWx1ZSA9ICdhdXRvcGxhY2UnXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWUgPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gZmFsc2VcbiAgICAgIH1cbiAgICB9XG5cbiAgICBub2RlLl9hdXRvcHJlZml4ZXJHcmlkU3RhdHVzID0gdmFsdWVcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByb2Nlc3NvclxuIiwibGV0IEZyYWN0aW9uSnMgPSByZXF1aXJlKCdmcmFjdGlvbi5qcycpXG5cbmxldCBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKVxubGV0IHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmNvbnN0IFJFR0VYUCA9IC8obWlufG1heCktcmVzb2x1dGlvblxccyo6XFxzKlxcZCpcXC4/XFxkKyhkcHB4fGRwY218ZHBpfHgpL2dpXG5jb25zdCBTUExJVCA9IC8obWlufG1heCktcmVzb2x1dGlvbihcXHMqOlxccyopKFxcZCpcXC4/XFxkKykoZHBweHxkcGNtfGRwaXx4KS9pXG5cbmNsYXNzIFJlc29sdXRpb24gZXh0ZW5kcyBQcmVmaXhlciB7XG4gIC8qKlxuICAgKiBSZXR1cm4gcHJlZml4ZWQgcXVlcnkgbmFtZVxuICAgKi9cbiAgcHJlZml4TmFtZShwcmVmaXgsIG5hbWUpIHtcbiAgICBpZiAocHJlZml4ID09PSAnLW1vei0nKSB7XG4gICAgICByZXR1cm4gbmFtZSArICctLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW8nXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyBuYW1lICsgJy1kZXZpY2UtcGl4ZWwtcmF0aW8nXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcmVmaXhlZCBxdWVyeVxuICAgKi9cbiAgcHJlZml4UXVlcnkocHJlZml4LCBuYW1lLCBjb2xvbiwgdmFsdWUsIHVuaXRzKSB7XG4gICAgdmFsdWUgPSBuZXcgRnJhY3Rpb25Kcyh2YWx1ZSlcblxuICAgIC8vIDFkcGNtID0gMi41NGRwaVxuICAgIC8vIDFkcHB4ID0gOTZkcGlcbiAgICBpZiAodW5pdHMgPT09ICdkcGknKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLmRpdig5NilcbiAgICB9IGVsc2UgaWYgKHVuaXRzID09PSAnZHBjbScpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUubXVsKDIuNTQpLmRpdig5NilcbiAgICB9XG4gICAgdmFsdWUgPSB2YWx1ZS5zaW1wbGlmeSgpXG5cbiAgICBpZiAocHJlZml4ID09PSAnLW8tJykge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5uICsgJy8nICsgdmFsdWUuZFxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5wcmVmaXhOYW1lKHByZWZpeCwgbmFtZSkgKyBjb2xvbiArIHZhbHVlXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHByZWZpeGVkIHF1ZXJpZXNcbiAgICovXG4gIGNsZWFuKHJ1bGUpIHtcbiAgICBpZiAoIXRoaXMuYmFkKSB7XG4gICAgICB0aGlzLmJhZCA9IFtdXG4gICAgICBmb3IgKGxldCBwcmVmaXggb2YgdGhpcy5wcmVmaXhlcykge1xuICAgICAgICB0aGlzLmJhZC5wdXNoKHRoaXMucHJlZml4TmFtZShwcmVmaXgsICdtaW4nKSlcbiAgICAgICAgdGhpcy5iYWQucHVzaCh0aGlzLnByZWZpeE5hbWUocHJlZml4LCAnbWF4JykpXG4gICAgICB9XG4gICAgfVxuXG4gICAgcnVsZS5wYXJhbXMgPSB1dGlscy5lZGl0TGlzdChydWxlLnBhcmFtcywgcXVlcmllcyA9PiB7XG4gICAgICByZXR1cm4gcXVlcmllcy5maWx0ZXIocXVlcnkgPT4gdGhpcy5iYWQuZXZlcnkoaSA9PiAhcXVlcnkuaW5jbHVkZXMoaSkpKVxuICAgIH0pXG4gIH1cblxuICAvKipcbiAgICogQWRkIHByZWZpeGVkIHF1ZXJpZXNcbiAgICovXG4gIHByb2Nlc3MocnVsZSkge1xuICAgIGxldCBwYXJlbnQgPSB0aGlzLnBhcmVudFByZWZpeChydWxlKVxuICAgIGxldCBwcmVmaXhlcyA9IHBhcmVudCA/IFtwYXJlbnRdIDogdGhpcy5wcmVmaXhlc1xuXG4gICAgcnVsZS5wYXJhbXMgPSB1dGlscy5lZGl0TGlzdChydWxlLnBhcmFtcywgKG9yaWdpbiwgcHJlZml4ZWQpID0+IHtcbiAgICAgIGZvciAobGV0IHF1ZXJ5IG9mIG9yaWdpbikge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgIXF1ZXJ5LmluY2x1ZGVzKCdtaW4tcmVzb2x1dGlvbicpICYmXG4gICAgICAgICAgIXF1ZXJ5LmluY2x1ZGVzKCdtYXgtcmVzb2x1dGlvbicpXG4gICAgICAgICkge1xuICAgICAgICAgIHByZWZpeGVkLnB1c2gocXVlcnkpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobGV0IHByZWZpeCBvZiBwcmVmaXhlcykge1xuICAgICAgICAgIGxldCBwcm9jZXNzZWQgPSBxdWVyeS5yZXBsYWNlKFJFR0VYUCwgc3RyID0+IHtcbiAgICAgICAgICAgIGxldCBwYXJ0cyA9IHN0ci5tYXRjaChTUExJVClcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByZWZpeFF1ZXJ5KFxuICAgICAgICAgICAgICBwcmVmaXgsXG4gICAgICAgICAgICAgIHBhcnRzWzFdLFxuICAgICAgICAgICAgICBwYXJ0c1syXSxcbiAgICAgICAgICAgICAgcGFydHNbM10sXG4gICAgICAgICAgICAgIHBhcnRzWzRdXG4gICAgICAgICAgICApXG4gICAgICAgICAgfSlcbiAgICAgICAgICBwcmVmaXhlZC5wdXNoKHByb2Nlc3NlZClcbiAgICAgICAgfVxuICAgICAgICBwcmVmaXhlZC5wdXNoKHF1ZXJ5KVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdXRpbHMudW5pcShwcmVmaXhlZClcbiAgICB9KVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVzb2x1dGlvblxuIiwibGV0IHsgbGlzdCB9ID0gcmVxdWlyZSgncG9zdGNzcycpXG5cbmxldCBPbGRTZWxlY3RvciA9IHJlcXVpcmUoJy4vb2xkLXNlbGVjdG9yJylcbmxldCBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKVxubGV0IEJyb3dzZXJzID0gcmVxdWlyZSgnLi9icm93c2VycycpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxuY2xhc3MgU2VsZWN0b3IgZXh0ZW5kcyBQcmVmaXhlciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIHByZWZpeGVzLCBhbGwpIHtcbiAgICBzdXBlcihuYW1lLCBwcmVmaXhlcywgYWxsKVxuICAgIHRoaXMucmVnZXhwQ2FjaGUgPSBuZXcgTWFwKClcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBydWxlIHNlbGVjdG9ycyBuZWVkIHRvIGJlIHByZWZpeGVkXG4gICAqL1xuICBjaGVjayhydWxlKSB7XG4gICAgaWYgKHJ1bGUuc2VsZWN0b3IuaW5jbHVkZXModGhpcy5uYW1lKSkge1xuICAgICAgcmV0dXJuICEhcnVsZS5zZWxlY3Rvci5tYXRjaCh0aGlzLnJlZ2V4cCgpKVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBwcmVmaXhlZCB2ZXJzaW9uIG9mIHNlbGVjdG9yXG4gICAqL1xuICBwcmVmaXhlZChwcmVmaXgpIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lLnJlcGxhY2UoL14oXFxXKikvLCBgJDEke3ByZWZpeH1gKVxuICB9XG5cbiAgLyoqXG4gICAqIExhenkgbG9hZFJlZ0V4cCBmb3IgbmFtZVxuICAgKi9cbiAgcmVnZXhwKHByZWZpeCkge1xuICAgIGlmICghdGhpcy5yZWdleHBDYWNoZS5oYXMocHJlZml4KSkge1xuICAgICAgbGV0IG5hbWUgPSBwcmVmaXggPyB0aGlzLnByZWZpeGVkKHByZWZpeCkgOiB0aGlzLm5hbWVcbiAgICAgIHRoaXMucmVnZXhwQ2FjaGUuc2V0KFxuICAgICAgICBwcmVmaXgsXG4gICAgICAgIG5ldyBSZWdFeHAoYChefFteOlwiJz1dKSR7dXRpbHMuZXNjYXBlUmVnZXhwKG5hbWUpfWAsICdnaScpXG4gICAgICApXG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucmVnZXhwQ2FjaGUuZ2V0KHByZWZpeClcbiAgfVxuXG4gIC8qKlxuICAgKiBBbGwgcG9zc2libGUgcHJlZml4ZXNcbiAgICovXG4gIHBvc3NpYmxlKCkge1xuICAgIHJldHVybiBCcm93c2Vycy5wcmVmaXhlcygpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGFsbCBwb3NzaWJsZSBzZWxlY3RvciBwcmVmaXhlc1xuICAgKi9cbiAgcHJlZml4ZWRzKHJ1bGUpIHtcbiAgICBpZiAocnVsZS5fYXV0b3ByZWZpeGVyUHJlZml4ZWRzKSB7XG4gICAgICBpZiAocnVsZS5fYXV0b3ByZWZpeGVyUHJlZml4ZWRzW3RoaXMubmFtZV0pIHtcbiAgICAgICAgcmV0dXJuIHJ1bGUuX2F1dG9wcmVmaXhlclByZWZpeGVkc1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBydWxlLl9hdXRvcHJlZml4ZXJQcmVmaXhlZHMgPSB7fVxuICAgIH1cblxuICAgIGxldCBwcmVmaXhlZHMgPSB7fVxuICAgIGlmIChydWxlLnNlbGVjdG9yLmluY2x1ZGVzKCcsJykpIHtcbiAgICAgIGxldCBydWxlUGFydHMgPSBsaXN0LmNvbW1hKHJ1bGUuc2VsZWN0b3IpXG4gICAgICBsZXQgdG9Qcm9jZXNzID0gcnVsZVBhcnRzLmZpbHRlcihlbCA9PiBlbC5pbmNsdWRlcyh0aGlzLm5hbWUpKVxuXG4gICAgICBmb3IgKGxldCBwcmVmaXggb2YgdGhpcy5wb3NzaWJsZSgpKSB7XG4gICAgICAgIHByZWZpeGVkc1twcmVmaXhdID0gdG9Qcm9jZXNzXG4gICAgICAgICAgLm1hcChlbCA9PiB0aGlzLnJlcGxhY2UoZWwsIHByZWZpeCkpXG4gICAgICAgICAgLmpvaW4oJywgJylcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgcHJlZml4IG9mIHRoaXMucG9zc2libGUoKSkge1xuICAgICAgICBwcmVmaXhlZHNbcHJlZml4XSA9IHRoaXMucmVwbGFjZShydWxlLnNlbGVjdG9yLCBwcmVmaXgpXG4gICAgICB9XG4gICAgfVxuXG4gICAgcnVsZS5fYXV0b3ByZWZpeGVyUHJlZml4ZWRzW3RoaXMubmFtZV0gPSBwcmVmaXhlZHNcbiAgICByZXR1cm4gcnVsZS5fYXV0b3ByZWZpeGVyUHJlZml4ZWRzXG4gIH1cblxuICAvKipcbiAgICogSXMgcnVsZSBhbHJlYWR5IHByZWZpeGVkIGJlZm9yZVxuICAgKi9cbiAgYWxyZWFkeShydWxlLCBwcmVmaXhlZHMsIHByZWZpeCkge1xuICAgIGxldCBpbmRleCA9IHJ1bGUucGFyZW50LmluZGV4KHJ1bGUpIC0gMVxuXG4gICAgd2hpbGUgKGluZGV4ID49IDApIHtcbiAgICAgIGxldCBiZWZvcmUgPSBydWxlLnBhcmVudC5ub2Rlc1tpbmRleF1cblxuICAgICAgaWYgKGJlZm9yZS50eXBlICE9PSAncnVsZScpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG5cbiAgICAgIGxldCBzb21lID0gZmFsc2VcbiAgICAgIGZvciAobGV0IGtleSBpbiBwcmVmaXhlZHNbdGhpcy5uYW1lXSkge1xuICAgICAgICBsZXQgcHJlZml4ZWQgPSBwcmVmaXhlZHNbdGhpcy5uYW1lXVtrZXldXG4gICAgICAgIGlmIChiZWZvcmUuc2VsZWN0b3IgPT09IHByZWZpeGVkKSB7XG4gICAgICAgICAgaWYgKHByZWZpeCA9PT0ga2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzb21lID0gdHJ1ZVxuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICghc29tZSkge1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cblxuICAgICAgaW5kZXggLT0gMVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLyoqXG4gICAqIFJlcGxhY2Ugc2VsZWN0b3JzIGJ5IHByZWZpeGVkIG9uZVxuICAgKi9cbiAgcmVwbGFjZShzZWxlY3RvciwgcHJlZml4KSB7XG4gICAgcmV0dXJuIHNlbGVjdG9yLnJlcGxhY2UodGhpcy5yZWdleHAoKSwgYCQxJHt0aGlzLnByZWZpeGVkKHByZWZpeCl9YClcbiAgfVxuXG4gIC8qKlxuICAgKiBDbG9uZSBhbmQgYWRkIHByZWZpeGVzIGZvciBhdC1ydWxlXG4gICAqL1xuICBhZGQocnVsZSwgcHJlZml4KSB7XG4gICAgbGV0IHByZWZpeGVkcyA9IHRoaXMucHJlZml4ZWRzKHJ1bGUpXG5cbiAgICBpZiAodGhpcy5hbHJlYWR5KHJ1bGUsIHByZWZpeGVkcywgcHJlZml4KSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgbGV0IGNsb25lZCA9IHRoaXMuY2xvbmUocnVsZSwgeyBzZWxlY3RvcjogcHJlZml4ZWRzW3RoaXMubmFtZV1bcHJlZml4XSB9KVxuICAgIHJ1bGUucGFyZW50Lmluc2VydEJlZm9yZShydWxlLCBjbG9uZWQpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGZ1bmN0aW9uIHRvIGZhc3QgZmluZCBwcmVmaXhlZCBzZWxlY3RvclxuICAgKi9cbiAgb2xkKHByZWZpeCkge1xuICAgIHJldHVybiBuZXcgT2xkU2VsZWN0b3IodGhpcywgcHJlZml4KVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2VsZWN0b3JcbiIsImxldCBmZWF0dXJlUXVlcmllcyA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kYXRhL2ZlYXR1cmVzL2Nzcy1mZWF0dXJlcXVlcmllcy5qcycpXG5sZXQgZmVhdHVyZSA9IHJlcXVpcmUoJ2Nhbml1c2UtbGl0ZS9kaXN0L3VucGFja2VyL2ZlYXR1cmUnKVxubGV0IHsgcGFyc2UgfSA9IHJlcXVpcmUoJ3Bvc3Rjc3MnKVxuXG5sZXQgQnJvd3NlcnMgPSByZXF1aXJlKCcuL2Jyb3dzZXJzJylcbmxldCBicmFja2V0cyA9IHJlcXVpcmUoJy4vYnJhY2tldHMnKVxubGV0IFZhbHVlID0gcmVxdWlyZSgnLi92YWx1ZScpXG5sZXQgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJylcblxubGV0IGRhdGEgPSBmZWF0dXJlKGZlYXR1cmVRdWVyaWVzKVxuXG5sZXQgc3VwcG9ydGVkID0gW11cbmZvciAobGV0IGJyb3dzZXIgaW4gZGF0YS5zdGF0cykge1xuICBsZXQgdmVyc2lvbnMgPSBkYXRhLnN0YXRzW2Jyb3dzZXJdXG4gIGZvciAobGV0IHZlcnNpb24gaW4gdmVyc2lvbnMpIHtcbiAgICBsZXQgc3VwcG9ydCA9IHZlcnNpb25zW3ZlcnNpb25dXG4gICAgaWYgKC95Ly50ZXN0KHN1cHBvcnQpKSB7XG4gICAgICBzdXBwb3J0ZWQucHVzaChicm93c2VyICsgJyAnICsgdmVyc2lvbilcbiAgICB9XG4gIH1cbn1cblxuY2xhc3MgU3VwcG9ydHMge1xuICBjb25zdHJ1Y3RvcihQcmVmaXhlcywgYWxsKSB7XG4gICAgdGhpcy5QcmVmaXhlcyA9IFByZWZpeGVzXG4gICAgdGhpcy5hbGwgPSBhbGxcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJlZml4ZXIgb25seSB3aXRoIEBzdXBwb3J0cyBzdXBwb3J0ZWQgYnJvd3NlcnNcbiAgICovXG4gIHByZWZpeGVyKCkge1xuICAgIGlmICh0aGlzLnByZWZpeGVyQ2FjaGUpIHtcbiAgICAgIHJldHVybiB0aGlzLnByZWZpeGVyQ2FjaGVcbiAgICB9XG5cbiAgICBsZXQgZmlsdGVyZWQgPSB0aGlzLmFsbC5icm93c2Vycy5zZWxlY3RlZC5maWx0ZXIoaSA9PiB7XG4gICAgICByZXR1cm4gc3VwcG9ydGVkLmluY2x1ZGVzKGkpXG4gICAgfSlcblxuICAgIGxldCBicm93c2VycyA9IG5ldyBCcm93c2VycyhcbiAgICAgIHRoaXMuYWxsLmJyb3dzZXJzLmRhdGEsXG4gICAgICBmaWx0ZXJlZCxcbiAgICAgIHRoaXMuYWxsLm9wdGlvbnNcbiAgICApXG4gICAgdGhpcy5wcmVmaXhlckNhY2hlID0gbmV3IHRoaXMuUHJlZml4ZXMoXG4gICAgICB0aGlzLmFsbC5kYXRhLFxuICAgICAgYnJvd3NlcnMsXG4gICAgICB0aGlzLmFsbC5vcHRpb25zXG4gICAgKVxuICAgIHJldHVybiB0aGlzLnByZWZpeGVyQ2FjaGVcbiAgfVxuXG4gIC8qKlxuICAgKiBQYXJzZSBzdHJpbmcgaW50byBkZWNsYXJhdGlvbiBwcm9wZXJ0eSBhbmQgdmFsdWVcbiAgICovXG4gIHBhcnNlKHN0cikge1xuICAgIGxldCBwYXJ0cyA9IHN0ci5zcGxpdCgnOicpXG4gICAgbGV0IHByb3AgPSBwYXJ0c1swXVxuICAgIGxldCB2YWx1ZSA9IHBhcnRzWzFdXG4gICAgaWYgKCF2YWx1ZSkgdmFsdWUgPSAnJ1xuICAgIHJldHVybiBbcHJvcC50cmltKCksIHZhbHVlLnRyaW0oKV1cbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdmlydHVhbCBydWxlIHRvIHByb2Nlc3MgaXQgYnkgcHJlZml4ZXJcbiAgICovXG4gIHZpcnR1YWwoc3RyKSB7XG4gICAgbGV0IFtwcm9wLCB2YWx1ZV0gPSB0aGlzLnBhcnNlKHN0cilcbiAgICBsZXQgcnVsZSA9IHBhcnNlKCdhe30nKS5maXJzdFxuICAgIHJ1bGUuYXBwZW5kKHsgcHJvcCwgdmFsdWUsIHJhd3M6IHsgYmVmb3JlOiAnJyB9IH0pXG4gICAgcmV0dXJuIHJ1bGVcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gYXJyYXkgb2YgRGVjbGFyYXRpb24gd2l0aCBhbGwgbmVjZXNzYXJ5IHByZWZpeGVzXG4gICAqL1xuICBwcmVmaXhlZChzdHIpIHtcbiAgICBsZXQgcnVsZSA9IHRoaXMudmlydHVhbChzdHIpXG4gICAgaWYgKHRoaXMuZGlzYWJsZWQocnVsZS5maXJzdCkpIHtcbiAgICAgIHJldHVybiBydWxlLm5vZGVzXG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdCA9IHsgd2FybjogKCkgPT4gbnVsbCB9XG5cbiAgICBsZXQgcHJlZml4ZXIgPSB0aGlzLnByZWZpeGVyKCkuYWRkW3J1bGUuZmlyc3QucHJvcF1cbiAgICBwcmVmaXhlciAmJiBwcmVmaXhlci5wcm9jZXNzICYmIHByZWZpeGVyLnByb2Nlc3MocnVsZS5maXJzdCwgcmVzdWx0KVxuXG4gICAgZm9yIChsZXQgZGVjbCBvZiBydWxlLm5vZGVzKSB7XG4gICAgICBmb3IgKGxldCB2YWx1ZSBvZiB0aGlzLnByZWZpeGVyKCkudmFsdWVzKCdhZGQnLCBydWxlLmZpcnN0LnByb3ApKSB7XG4gICAgICAgIHZhbHVlLnByb2Nlc3MoZGVjbClcbiAgICAgIH1cbiAgICAgIFZhbHVlLnNhdmUodGhpcy5hbGwsIGRlY2wpXG4gICAgfVxuXG4gICAgcmV0dXJuIHJ1bGUubm9kZXNcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdHJ1ZSBpZiBicmFja2V0cyBub2RlIGlzIFwibm90XCIgd29yZFxuICAgKi9cbiAgaXNOb3Qobm9kZSkge1xuICAgIHJldHVybiB0eXBlb2Ygbm9kZSA9PT0gJ3N0cmluZycgJiYgL25vdFxccyovaS50ZXN0KG5vZGUpXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHRydWUgaWYgYnJhY2tldHMgbm9kZSBpcyBcIm9yXCIgd29yZFxuICAgKi9cbiAgaXNPcihub2RlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBub2RlID09PSAnc3RyaW5nJyAmJiAvXFxzKm9yXFxzKi9pLnRlc3Qobm9kZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdHJ1ZSBpZiBicmFja2V0cyBub2RlIGlzIChwcm9wOiB2YWx1ZSlcbiAgICovXG4gIGlzUHJvcChub2RlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHR5cGVvZiBub2RlID09PSAnb2JqZWN0JyAmJlxuICAgICAgbm9kZS5sZW5ndGggPT09IDEgJiZcbiAgICAgIHR5cGVvZiBub2RlWzBdID09PSAnc3RyaW5nJ1xuICAgIClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdHJ1ZSBpZiBwcmVmaXhlZCBwcm9wZXJ0eSBoYXMgbm8gdW5wcmVmaXhlZFxuICAgKi9cbiAgaXNIYWNrKGFsbCwgdW5wcmVmaXhlZCkge1xuICAgIGxldCBjaGVjayA9IG5ldyBSZWdFeHAoYChcXFxcKHxcXFxccykke3V0aWxzLmVzY2FwZVJlZ2V4cCh1bnByZWZpeGVkKX06YClcbiAgICByZXR1cm4gIWNoZWNrLnRlc3QoYWxsKVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiB0cnVlIGlmIHdlIG5lZWQgdG8gcmVtb3ZlIG5vZGVcbiAgICovXG4gIHRvUmVtb3ZlKHN0ciwgYWxsKSB7XG4gICAgbGV0IFtwcm9wLCB2YWx1ZV0gPSB0aGlzLnBhcnNlKHN0cilcbiAgICBsZXQgdW5wcmVmaXhlZCA9IHRoaXMuYWxsLnVucHJlZml4ZWQocHJvcClcblxuICAgIGxldCBjbGVhbmVyID0gdGhpcy5hbGwuY2xlYW5lcigpXG5cbiAgICBpZiAoXG4gICAgICBjbGVhbmVyLnJlbW92ZVtwcm9wXSAmJlxuICAgICAgY2xlYW5lci5yZW1vdmVbcHJvcF0ucmVtb3ZlICYmXG4gICAgICAhdGhpcy5pc0hhY2soYWxsLCB1bnByZWZpeGVkKVxuICAgICkge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBmb3IgKGxldCBjaGVja2VyIG9mIGNsZWFuZXIudmFsdWVzKCdyZW1vdmUnLCB1bnByZWZpeGVkKSkge1xuICAgICAgaWYgKGNoZWNrZXIuY2hlY2sodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGFsbCB1bm5lY2Vzc2FyeSBwcmVmaXhlc1xuICAgKi9cbiAgcmVtb3ZlKG5vZGVzLCBhbGwpIHtcbiAgICBsZXQgaSA9IDBcbiAgICB3aGlsZSAoaSA8IG5vZGVzLmxlbmd0aCkge1xuICAgICAgaWYgKFxuICAgICAgICAhdGhpcy5pc05vdChub2Rlc1tpIC0gMV0pICYmXG4gICAgICAgIHRoaXMuaXNQcm9wKG5vZGVzW2ldKSAmJlxuICAgICAgICB0aGlzLmlzT3Iobm9kZXNbaSArIDFdKVxuICAgICAgKSB7XG4gICAgICAgIGlmICh0aGlzLnRvUmVtb3ZlKG5vZGVzW2ldWzBdLCBhbGwpKSB7XG4gICAgICAgICAgbm9kZXMuc3BsaWNlKGksIDIpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGkgKz0gMlxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIG5vZGVzW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgICBub2Rlc1tpXSA9IHRoaXMucmVtb3ZlKG5vZGVzW2ldLCBhbGwpXG4gICAgICB9XG5cbiAgICAgIGkgKz0gMVxuICAgIH1cbiAgICByZXR1cm4gbm9kZXNcbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhbiBicmFja2V0cyB3aXRoIG9uZSBjaGlsZFxuICAgKi9cbiAgY2xlYW5CcmFja2V0cyhub2Rlcykge1xuICAgIHJldHVybiBub2Rlcy5tYXAoaSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGkgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBpXG4gICAgICB9XG5cbiAgICAgIGlmIChpLmxlbmd0aCA9PT0gMSAmJiB0eXBlb2YgaVswXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xlYW5CcmFja2V0cyhpWzBdKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jbGVhbkJyYWNrZXRzKGkpXG4gICAgfSlcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgXCIgb3IgXCIgYmV0d2VlbiBwcm9wZXJ0aWVzIGFuZCBjb252ZXJ0IGl0IHRvIGJyYWNrZXRzIGZvcm1hdFxuICAgKi9cbiAgY29udmVydChwcm9ncmVzcykge1xuICAgIGxldCByZXN1bHQgPSBbJyddXG4gICAgZm9yIChsZXQgaSBvZiBwcm9ncmVzcykge1xuICAgICAgcmVzdWx0LnB1c2goW2Ake2kucHJvcH06ICR7aS52YWx1ZX1gXSlcbiAgICAgIHJlc3VsdC5wdXNoKCcgb3IgJylcbiAgICB9XG4gICAgcmVzdWx0W3Jlc3VsdC5sZW5ndGggLSAxXSA9ICcnXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgLyoqXG4gICAqIENvbXByZXNzIHZhbHVlIGZ1bmN0aW9ucyBpbnRvIGEgc3RyaW5nIG5vZGVzXG4gICAqL1xuICBub3JtYWxpemUobm9kZXMpIHtcbiAgICBpZiAodHlwZW9mIG5vZGVzICE9PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIG5vZGVzXG4gICAgfVxuXG4gICAgbm9kZXMgPSBub2Rlcy5maWx0ZXIoaSA9PiBpICE9PSAnJylcblxuICAgIGlmICh0eXBlb2Ygbm9kZXNbMF0gPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgZmlyc3ROb2RlID0gbm9kZXNbMF0udHJpbSgpXG5cbiAgICAgIGlmIChcbiAgICAgICAgZmlyc3ROb2RlLmluY2x1ZGVzKCc6JykgfHxcbiAgICAgICAgZmlyc3ROb2RlID09PSAnc2VsZWN0b3InIHx8XG4gICAgICAgIGZpcnN0Tm9kZSA9PT0gJ25vdCBzZWxlY3RvcidcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gW2JyYWNrZXRzLnN0cmluZ2lmeShub2RlcyldXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBub2Rlcy5tYXAoaSA9PiB0aGlzLm5vcm1hbGl6ZShpKSlcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgcHJlZml4ZXNcbiAgICovXG4gIGFkZChub2RlcywgYWxsKSB7XG4gICAgcmV0dXJuIG5vZGVzLm1hcChpID0+IHtcbiAgICAgIGlmICh0aGlzLmlzUHJvcChpKSkge1xuICAgICAgICBsZXQgcHJlZml4ZWQgPSB0aGlzLnByZWZpeGVkKGlbMF0pXG4gICAgICAgIGlmIChwcmVmaXhlZC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29udmVydChwcmVmaXhlZClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBpXG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWRkKGksIGFsbClcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGlcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBwcmVmaXhlZCBkZWNsYXJhdGlvblxuICAgKi9cbiAgcHJvY2VzcyhydWxlKSB7XG4gICAgbGV0IGFzdCA9IGJyYWNrZXRzLnBhcnNlKHJ1bGUucGFyYW1zKVxuICAgIGFzdCA9IHRoaXMubm9ybWFsaXplKGFzdClcbiAgICBhc3QgPSB0aGlzLnJlbW92ZShhc3QsIHJ1bGUucGFyYW1zKVxuICAgIGFzdCA9IHRoaXMuYWRkKGFzdCwgcnVsZS5wYXJhbXMpXG4gICAgYXN0ID0gdGhpcy5jbGVhbkJyYWNrZXRzKGFzdClcbiAgICBydWxlLnBhcmFtcyA9IGJyYWNrZXRzLnN0cmluZ2lmeShhc3QpXG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgZ2xvYmFsIG9wdGlvbnNcbiAgICovXG4gIGRpc2FibGVkKG5vZGUpIHtcbiAgICBpZiAoIXRoaXMuYWxsLm9wdGlvbnMuZ3JpZCkge1xuICAgICAgaWYgKG5vZGUucHJvcCA9PT0gJ2Rpc3BsYXknICYmIG5vZGUudmFsdWUuaW5jbHVkZXMoJ2dyaWQnKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgICAgaWYgKG5vZGUucHJvcC5pbmNsdWRlcygnZ3JpZCcpIHx8IG5vZGUucHJvcCA9PT0gJ2p1c3RpZnktaXRlbXMnKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYWxsLm9wdGlvbnMuZmxleGJveCA9PT0gZmFsc2UpIHtcbiAgICAgIGlmIChub2RlLnByb3AgPT09ICdkaXNwbGF5JyAmJiBub2RlLnZhbHVlLmluY2x1ZGVzKCdmbGV4JykpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICAgIGxldCBvdGhlciA9IFsnb3JkZXInLCAnanVzdGlmeS1jb250ZW50JywgJ2FsaWduLWl0ZW1zJywgJ2FsaWduLWNvbnRlbnQnXVxuICAgICAgaWYgKG5vZGUucHJvcC5pbmNsdWRlcygnZmxleCcpIHx8IG90aGVyLmluY2x1ZGVzKG5vZGUucHJvcCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFN1cHBvcnRzXG4iLCJsZXQgeyBsaXN0IH0gPSByZXF1aXJlKCdwb3N0Y3NzJylcbmxldCBwYXJzZXIgPSByZXF1aXJlKCdwb3N0Y3NzLXZhbHVlLXBhcnNlcicpXG5cbmxldCBCcm93c2VycyA9IHJlcXVpcmUoJy4vYnJvd3NlcnMnKVxubGV0IHZlbmRvciA9IHJlcXVpcmUoJy4vdmVuZG9yJylcblxuY2xhc3MgVHJhbnNpdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHByZWZpeGVzKSB7XG4gICAgdGhpcy5wcm9wcyA9IFsndHJhbnNpdGlvbicsICd0cmFuc2l0aW9uLXByb3BlcnR5J11cbiAgICB0aGlzLnByZWZpeGVzID0gcHJlZml4ZXNcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9jZXNzIHRyYW5zaXRpb24gYW5kIGFkZCBwcmVmaXhlcyBmb3IgYWxsIG5lY2Vzc2FyeSBwcm9wZXJ0aWVzXG4gICAqL1xuICBhZGQoZGVjbCwgcmVzdWx0KSB7XG4gICAgbGV0IHByZWZpeCwgcHJvcFxuICAgIGxldCBhZGQgPSB0aGlzLnByZWZpeGVzLmFkZFtkZWNsLnByb3BdXG4gICAgbGV0IHZlbmRvclByZWZpeGVzID0gdGhpcy5ydWxlVmVuZG9yUHJlZml4ZXMoZGVjbClcbiAgICBsZXQgZGVjbFByZWZpeGVzID0gdmVuZG9yUHJlZml4ZXMgfHwgKGFkZCAmJiBhZGQucHJlZml4ZXMpIHx8IFtdXG5cbiAgICBsZXQgcGFyYW1zID0gdGhpcy5wYXJzZShkZWNsLnZhbHVlKVxuICAgIGxldCBuYW1lcyA9IHBhcmFtcy5tYXAoaSA9PiB0aGlzLmZpbmRQcm9wKGkpKVxuICAgIGxldCBhZGRlZCA9IFtdXG5cbiAgICBpZiAobmFtZXMuc29tZShpID0+IGlbMF0gPT09ICctJykpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGZvciAobGV0IHBhcmFtIG9mIHBhcmFtcykge1xuICAgICAgcHJvcCA9IHRoaXMuZmluZFByb3AocGFyYW0pXG4gICAgICBpZiAocHJvcFswXSA9PT0gJy0nKSBjb250aW51ZVxuXG4gICAgICBsZXQgcHJlZml4ZXIgPSB0aGlzLnByZWZpeGVzLmFkZFtwcm9wXVxuICAgICAgaWYgKCFwcmVmaXhlciB8fCAhcHJlZml4ZXIucHJlZml4ZXMpIGNvbnRpbnVlXG5cbiAgICAgIGZvciAocHJlZml4IG9mIHByZWZpeGVyLnByZWZpeGVzKSB7XG4gICAgICAgIGlmICh2ZW5kb3JQcmVmaXhlcyAmJiAhdmVuZG9yUHJlZml4ZXMuc29tZShwID0+IHByZWZpeC5pbmNsdWRlcyhwKSkpIHtcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHByZWZpeGVkID0gdGhpcy5wcmVmaXhlcy5wcmVmaXhlZChwcm9wLCBwcmVmaXgpXG4gICAgICAgIGlmIChwcmVmaXhlZCAhPT0gJy1tcy10cmFuc2Zvcm0nICYmICFuYW1lcy5pbmNsdWRlcyhwcmVmaXhlZCkpIHtcbiAgICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQocHJvcCwgcHJlZml4KSkge1xuICAgICAgICAgICAgYWRkZWQucHVzaCh0aGlzLmNsb25lKHByb3AsIHByZWZpeGVkLCBwYXJhbSkpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcGFyYW1zID0gcGFyYW1zLmNvbmNhdChhZGRlZClcbiAgICBsZXQgdmFsdWUgPSB0aGlzLnN0cmluZ2lmeShwYXJhbXMpXG5cbiAgICBsZXQgd2Via2l0Q2xlYW4gPSB0aGlzLnN0cmluZ2lmeShcbiAgICAgIHRoaXMuY2xlYW5Gcm9tVW5wcmVmaXhlZChwYXJhbXMsICctd2Via2l0LScpXG4gICAgKVxuICAgIGlmIChkZWNsUHJlZml4ZXMuaW5jbHVkZXMoJy13ZWJraXQtJykpIHtcbiAgICAgIHRoaXMuY2xvbmVCZWZvcmUoZGVjbCwgYC13ZWJraXQtJHtkZWNsLnByb3B9YCwgd2Via2l0Q2xlYW4pXG4gICAgfVxuICAgIHRoaXMuY2xvbmVCZWZvcmUoZGVjbCwgZGVjbC5wcm9wLCB3ZWJraXRDbGVhbilcbiAgICBpZiAoZGVjbFByZWZpeGVzLmluY2x1ZGVzKCctby0nKSkge1xuICAgICAgbGV0IG9wZXJhQ2xlYW4gPSB0aGlzLnN0cmluZ2lmeSh0aGlzLmNsZWFuRnJvbVVucHJlZml4ZWQocGFyYW1zLCAnLW8tJykpXG4gICAgICB0aGlzLmNsb25lQmVmb3JlKGRlY2wsIGAtby0ke2RlY2wucHJvcH1gLCBvcGVyYUNsZWFuKVxuICAgIH1cblxuICAgIGZvciAocHJlZml4IG9mIGRlY2xQcmVmaXhlcykge1xuICAgICAgaWYgKHByZWZpeCAhPT0gJy13ZWJraXQtJyAmJiBwcmVmaXggIT09ICctby0nKSB7XG4gICAgICAgIGxldCBwcmVmaXhWYWx1ZSA9IHRoaXMuc3RyaW5naWZ5KFxuICAgICAgICAgIHRoaXMuY2xlYW5PdGhlclByZWZpeGVzKHBhcmFtcywgcHJlZml4KVxuICAgICAgICApXG4gICAgICAgIHRoaXMuY2xvbmVCZWZvcmUoZGVjbCwgcHJlZml4ICsgZGVjbC5wcm9wLCBwcmVmaXhWYWx1ZSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodmFsdWUgIT09IGRlY2wudmFsdWUgJiYgIXRoaXMuYWxyZWFkeShkZWNsLCBkZWNsLnByb3AsIHZhbHVlKSkge1xuICAgICAgdGhpcy5jaGVja0Zvcldhcm5pbmcocmVzdWx0LCBkZWNsKVxuICAgICAgZGVjbC5jbG9uZUJlZm9yZSgpXG4gICAgICBkZWNsLnZhbHVlID0gdmFsdWVcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRmluZCBwcm9wZXJ0eSBuYW1lXG4gICAqL1xuICBmaW5kUHJvcChwYXJhbSkge1xuICAgIGxldCBwcm9wID0gcGFyYW1bMF0udmFsdWVcbiAgICBpZiAoL15cXGQvLnRlc3QocHJvcCkpIHtcbiAgICAgIGZvciAobGV0IFtpLCB0b2tlbl0gb2YgcGFyYW0uZW50cmllcygpKSB7XG4gICAgICAgIGlmIChpICE9PSAwICYmIHRva2VuLnR5cGUgPT09ICd3b3JkJykge1xuICAgICAgICAgIHJldHVybiB0b2tlbi52YWx1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwcm9wXG4gIH1cblxuICAvKipcbiAgICogRG9lcyB3ZSBhbHJlYWR5IGhhdmUgdGhpcyBkZWNsYXJhdGlvblxuICAgKi9cbiAgYWxyZWFkeShkZWNsLCBwcm9wLCB2YWx1ZSkge1xuICAgIHJldHVybiBkZWNsLnBhcmVudC5zb21lKGkgPT4gaS5wcm9wID09PSBwcm9wICYmIGkudmFsdWUgPT09IHZhbHVlKVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBkZWNsYXJhdGlvbiBpZiBpdCBpcyBub3QgZXhpc3RcbiAgICovXG4gIGNsb25lQmVmb3JlKGRlY2wsIHByb3AsIHZhbHVlKSB7XG4gICAgaWYgKCF0aGlzLmFscmVhZHkoZGVjbCwgcHJvcCwgdmFsdWUpKSB7XG4gICAgICBkZWNsLmNsb25lQmVmb3JlKHsgcHJvcCwgdmFsdWUgfSlcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2hvdyB0cmFuc2l0aW9uLXByb3BlcnR5IHdhcm5pbmdcbiAgICovXG4gIGNoZWNrRm9yV2FybmluZyhyZXN1bHQsIGRlY2wpIHtcbiAgICBpZiAoZGVjbC5wcm9wICE9PSAndHJhbnNpdGlvbi1wcm9wZXJ0eScpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGxldCBpc1ByZWZpeGVkID0gZmFsc2VcbiAgICBsZXQgaGFzQXNzb2NpYXRlZFByb3AgPSBmYWxzZVxuXG4gICAgZGVjbC5wYXJlbnQuZWFjaChpID0+IHtcbiAgICAgIGlmIChpLnR5cGUgIT09ICdkZWNsJykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9XG4gICAgICBpZiAoaS5wcm9wLmluZGV4T2YoJ3RyYW5zaXRpb24tJykgIT09IDApIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgfVxuICAgICAgbGV0IHZhbHVlcyA9IGxpc3QuY29tbWEoaS52YWx1ZSlcbiAgICAgIC8vIGNoZWNrIGlmIGN1cnJlbnQgUnVsZSdzIHRyYW5zaXRpb24tcHJvcGVydHkgY29tbWEgc2VwYXJhdGVkIHZhbHVlIGxpc3QgbmVlZHMgcHJlZml4ZXNcbiAgICAgIGlmIChpLnByb3AgPT09ICd0cmFuc2l0aW9uLXByb3BlcnR5Jykge1xuICAgICAgICB2YWx1ZXMuZm9yRWFjaCh2YWx1ZSA9PiB7XG4gICAgICAgICAgbGV0IGxvb2t1cCA9IHRoaXMucHJlZml4ZXMuYWRkW3ZhbHVlXVxuICAgICAgICAgIGlmIChsb29rdXAgJiYgbG9va3VwLnByZWZpeGVzICYmIGxvb2t1cC5wcmVmaXhlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpc1ByZWZpeGVkID0gdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgfVxuICAgICAgLy8gY2hlY2sgaWYgYW5vdGhlciB0cmFuc2l0aW9uLSogcHJvcCBpbiBjdXJyZW50IFJ1bGUgaGFzIGNvbW1hIHNlcGFyYXRlZCB2YWx1ZSBsaXN0XG4gICAgICBoYXNBc3NvY2lhdGVkUHJvcCA9IGhhc0Fzc29jaWF0ZWRQcm9wIHx8IHZhbHVlcy5sZW5ndGggPiAxXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9KVxuXG4gICAgaWYgKGlzUHJlZml4ZWQgJiYgaGFzQXNzb2NpYXRlZFByb3ApIHtcbiAgICAgIGRlY2wud2FybihcbiAgICAgICAgcmVzdWx0LFxuICAgICAgICAnUmVwbGFjZSB0cmFuc2l0aW9uLXByb3BlcnR5IHRvIHRyYW5zaXRpb24sICcgK1xuICAgICAgICAgICdiZWNhdXNlIEF1dG9wcmVmaXhlciBjb3VsZCBub3Qgc3VwcG9ydCAnICtcbiAgICAgICAgICAnYW55IGNhc2VzIG9mIHRyYW5zaXRpb24tcHJvcGVydHkgJyArXG4gICAgICAgICAgJ2FuZCBvdGhlciB0cmFuc2l0aW9uLSonXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3MgdHJhbnNpdGlvbiBhbmQgcmVtb3ZlIGFsbCB1bm5lY2Vzc2FyeSBwcm9wZXJ0aWVzXG4gICAqL1xuICByZW1vdmUoZGVjbCkge1xuICAgIGxldCBwYXJhbXMgPSB0aGlzLnBhcnNlKGRlY2wudmFsdWUpXG4gICAgcGFyYW1zID0gcGFyYW1zLmZpbHRlcihpID0+IHtcbiAgICAgIGxldCBwcm9wID0gdGhpcy5wcmVmaXhlcy5yZW1vdmVbdGhpcy5maW5kUHJvcChpKV1cbiAgICAgIHJldHVybiAhcHJvcCB8fCAhcHJvcC5yZW1vdmVcbiAgICB9KVxuICAgIGxldCB2YWx1ZSA9IHRoaXMuc3RyaW5naWZ5KHBhcmFtcylcblxuICAgIGlmIChkZWNsLnZhbHVlID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGRlY2wucmVtb3ZlKClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGxldCBkb3VibGUgPSBkZWNsLnBhcmVudC5zb21lKGkgPT4ge1xuICAgICAgcmV0dXJuIGkucHJvcCA9PT0gZGVjbC5wcm9wICYmIGkudmFsdWUgPT09IHZhbHVlXG4gICAgfSlcbiAgICBsZXQgc21hbGxlciA9IGRlY2wucGFyZW50LnNvbWUoaSA9PiB7XG4gICAgICByZXR1cm4gaSAhPT0gZGVjbCAmJiBpLnByb3AgPT09IGRlY2wucHJvcCAmJiBpLnZhbHVlLmxlbmd0aCA+IHZhbHVlLmxlbmd0aFxuICAgIH0pXG5cbiAgICBpZiAoZG91YmxlIHx8IHNtYWxsZXIpIHtcbiAgICAgIGRlY2wucmVtb3ZlKClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGRlY2wudmFsdWUgPSB2YWx1ZVxuICB9XG5cbiAgLyoqXG4gICAqIFBhcnNlIHByb3BlcnRpZXMgbGlzdCB0byBhcnJheVxuICAgKi9cbiAgcGFyc2UodmFsdWUpIHtcbiAgICBsZXQgYXN0ID0gcGFyc2VyKHZhbHVlKVxuICAgIGxldCByZXN1bHQgPSBbXVxuICAgIGxldCBwYXJhbSA9IFtdXG4gICAgZm9yIChsZXQgbm9kZSBvZiBhc3Qubm9kZXMpIHtcbiAgICAgIHBhcmFtLnB1c2gobm9kZSlcbiAgICAgIGlmIChub2RlLnR5cGUgPT09ICdkaXYnICYmIG5vZGUudmFsdWUgPT09ICcsJykge1xuICAgICAgICByZXN1bHQucHVzaChwYXJhbSlcbiAgICAgICAgcGFyYW0gPSBbXVxuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQucHVzaChwYXJhbSlcbiAgICByZXR1cm4gcmVzdWx0LmZpbHRlcihpID0+IGkubGVuZ3RoID4gMClcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gcHJvcGVydGllcyBzdHJpbmcgZnJvbSBhcnJheVxuICAgKi9cbiAgc3RyaW5naWZ5KHBhcmFtcykge1xuICAgIGlmIChwYXJhbXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gJydcbiAgICB9XG4gICAgbGV0IG5vZGVzID0gW11cbiAgICBmb3IgKGxldCBwYXJhbSBvZiBwYXJhbXMpIHtcbiAgICAgIGlmIChwYXJhbVtwYXJhbS5sZW5ndGggLSAxXS50eXBlICE9PSAnZGl2Jykge1xuICAgICAgICBwYXJhbS5wdXNoKHRoaXMuZGl2KHBhcmFtcykpXG4gICAgICB9XG4gICAgICBub2RlcyA9IG5vZGVzLmNvbmNhdChwYXJhbSlcbiAgICB9XG4gICAgaWYgKG5vZGVzWzBdLnR5cGUgPT09ICdkaXYnKSB7XG4gICAgICBub2RlcyA9IG5vZGVzLnNsaWNlKDEpXG4gICAgfVxuICAgIGlmIChub2Rlc1tub2Rlcy5sZW5ndGggLSAxXS50eXBlID09PSAnZGl2Jykge1xuICAgICAgbm9kZXMgPSBub2Rlcy5zbGljZSgwLCArLTIgKyAxIHx8IHVuZGVmaW5lZClcbiAgICB9XG4gICAgcmV0dXJuIHBhcnNlci5zdHJpbmdpZnkoeyBub2RlcyB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiBuZXcgcGFyYW0gYXJyYXkgd2l0aCBkaWZmZXJlbnQgbmFtZVxuICAgKi9cbiAgY2xvbmUob3JpZ2luLCBuYW1lLCBwYXJhbSkge1xuICAgIGxldCByZXN1bHQgPSBbXVxuICAgIGxldCBjaGFuZ2VkID0gZmFsc2VcbiAgICBmb3IgKGxldCBpIG9mIHBhcmFtKSB7XG4gICAgICBpZiAoIWNoYW5nZWQgJiYgaS50eXBlID09PSAnd29yZCcgJiYgaS52YWx1ZSA9PT0gb3JpZ2luKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHsgdHlwZTogJ3dvcmQnLCB2YWx1ZTogbmFtZSB9KVxuICAgICAgICBjaGFuZ2VkID0gdHJ1ZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0LnB1c2goaSlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgLyoqXG4gICAqIEZpbmQgb3IgY3JlYXRlIHNlcGFyYXRvclxuICAgKi9cbiAgZGl2KHBhcmFtcykge1xuICAgIGZvciAobGV0IHBhcmFtIG9mIHBhcmFtcykge1xuICAgICAgZm9yIChsZXQgbm9kZSBvZiBwYXJhbSkge1xuICAgICAgICBpZiAobm9kZS50eXBlID09PSAnZGl2JyAmJiBub2RlLnZhbHVlID09PSAnLCcpIHtcbiAgICAgICAgICByZXR1cm4gbm9kZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IHR5cGU6ICdkaXYnLCB2YWx1ZTogJywnLCBhZnRlcjogJyAnIH1cbiAgfVxuXG4gIGNsZWFuT3RoZXJQcmVmaXhlcyhwYXJhbXMsIHByZWZpeCkge1xuICAgIHJldHVybiBwYXJhbXMuZmlsdGVyKHBhcmFtID0+IHtcbiAgICAgIGxldCBjdXJyZW50ID0gdmVuZG9yLnByZWZpeCh0aGlzLmZpbmRQcm9wKHBhcmFtKSlcbiAgICAgIHJldHVybiBjdXJyZW50ID09PSAnJyB8fCBjdXJyZW50ID09PSBwcmVmaXhcbiAgICB9KVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhbGwgbm9uLXdlYmtpdCBwcmVmaXhlcyBhbmQgdW5wcmVmaXhlZCBwYXJhbXMgaWYgd2UgaGF2ZSBwcmVmaXhlZFxuICAgKi9cbiAgY2xlYW5Gcm9tVW5wcmVmaXhlZChwYXJhbXMsIHByZWZpeCkge1xuICAgIGxldCByZW1vdmUgPSBwYXJhbXNcbiAgICAgIC5tYXAoaSA9PiB0aGlzLmZpbmRQcm9wKGkpKVxuICAgICAgLmZpbHRlcihpID0+IGkuc2xpY2UoMCwgcHJlZml4Lmxlbmd0aCkgPT09IHByZWZpeClcbiAgICAgIC5tYXAoaSA9PiB0aGlzLnByZWZpeGVzLnVucHJlZml4ZWQoaSkpXG5cbiAgICBsZXQgcmVzdWx0ID0gW11cbiAgICBmb3IgKGxldCBwYXJhbSBvZiBwYXJhbXMpIHtcbiAgICAgIGxldCBwcm9wID0gdGhpcy5maW5kUHJvcChwYXJhbSlcbiAgICAgIGxldCBwID0gdmVuZG9yLnByZWZpeChwcm9wKVxuICAgICAgaWYgKCFyZW1vdmUuaW5jbHVkZXMocHJvcCkgJiYgKHAgPT09IHByZWZpeCB8fCBwID09PSAnJykpIHtcbiAgICAgICAgcmVzdWx0LnB1c2gocGFyYW0pXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBwcm9wZXJ0eSBmb3IgZGlzYWJsZWQgYnkgb3B0aW9uXG4gICAqL1xuICBkaXNhYmxlZChwcm9wLCBwcmVmaXgpIHtcbiAgICBsZXQgb3RoZXIgPSBbJ29yZGVyJywgJ2p1c3RpZnktY29udGVudCcsICdhbGlnbi1zZWxmJywgJ2FsaWduLWNvbnRlbnQnXVxuICAgIGlmIChwcm9wLmluY2x1ZGVzKCdmbGV4JykgfHwgb3RoZXIuaW5jbHVkZXMocHJvcCkpIHtcbiAgICAgIGlmICh0aGlzLnByZWZpeGVzLm9wdGlvbnMuZmxleGJveCA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucHJlZml4ZXMub3B0aW9ucy5mbGV4Ym94ID09PSAnbm8tMjAwOScpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeC5pbmNsdWRlcygnMjAwOScpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB0cmFuc2l0aW9uIHByb3AgaXMgaW5zaWRlIHZlbmRvciBzcGVjaWZpYyBydWxlXG4gICAqL1xuICBydWxlVmVuZG9yUHJlZml4ZXMoZGVjbCkge1xuICAgIGxldCB7IHBhcmVudCB9ID0gZGVjbFxuXG4gICAgaWYgKHBhcmVudC50eXBlICE9PSAncnVsZScpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoIXBhcmVudC5zZWxlY3Rvci5pbmNsdWRlcygnOi0nKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgbGV0IHNlbGVjdG9ycyA9IEJyb3dzZXJzLnByZWZpeGVzKCkuZmlsdGVyKHMgPT5cbiAgICAgIHBhcmVudC5zZWxlY3Rvci5pbmNsdWRlcygnOicgKyBzKVxuICAgIClcblxuICAgIHJldHVybiBzZWxlY3RvcnMubGVuZ3RoID4gMCA/IHNlbGVjdG9ycyA6IGZhbHNlXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUcmFuc2l0aW9uXG4iLCJsZXQgeyBsaXN0IH0gPSByZXF1aXJlKCdwb3N0Y3NzJylcblxuLyoqXG4gKiBUaHJvdyBzcGVjaWFsIGVycm9yLCB0byB0ZWxsIGJlbmlhcnksXG4gKiB0aGF0IHRoaXMgZXJyb3IgaXMgZnJvbSBBdXRvcHJlZml4ZXIuXG4gKi9cbm1vZHVsZS5leHBvcnRzLmVycm9yID0gZnVuY3Rpb24gKHRleHQpIHtcbiAgbGV0IGVyciA9IG5ldyBFcnJvcih0ZXh0KVxuICBlcnIuYXV0b3ByZWZpeGVyID0gdHJ1ZVxuICB0aHJvdyBlcnJcbn1cblxuLyoqXG4gKiBSZXR1cm4gYXJyYXksIHRoYXQgZG9lc27igJl0IGNvbnRhaW4gZHVwbGljYXRlcy5cbiAqL1xubW9kdWxlLmV4cG9ydHMudW5pcSA9IGZ1bmN0aW9uIChhcnJheSkge1xuICByZXR1cm4gWy4uLm5ldyBTZXQoYXJyYXkpXVxufVxuXG4vKipcbiAqIFJldHVybiBcIi13ZWJraXQtXCIgb24gXCItd2Via2l0LSBvbGRcIlxuICovXG5tb2R1bGUuZXhwb3J0cy5yZW1vdmVOb3RlID0gZnVuY3Rpb24gKHN0cmluZykge1xuICBpZiAoIXN0cmluZy5pbmNsdWRlcygnICcpKSB7XG4gICAgcmV0dXJuIHN0cmluZ1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZy5zcGxpdCgnICcpWzBdXG59XG5cbi8qKlxuICogRXNjYXBlIFJlZ0V4cCBzeW1ib2xzXG4gKi9cbm1vZHVsZS5leHBvcnRzLmVzY2FwZVJlZ2V4cCA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9bJCgpKistLj9bXFxcXFxcXV57fH1dL2csICdcXFxcJCYnKVxufVxuXG4vKipcbiAqIFJldHVybiByZWdleHAgdG8gY2hlY2ssIHRoYXQgQ1NTIHN0cmluZyBjb250YWluIHdvcmRcbiAqL1xubW9kdWxlLmV4cG9ydHMucmVnZXhwID0gZnVuY3Rpb24gKHdvcmQsIGVzY2FwZSA9IHRydWUpIHtcbiAgaWYgKGVzY2FwZSkge1xuICAgIHdvcmQgPSB0aGlzLmVzY2FwZVJlZ2V4cCh3b3JkKVxuICB9XG4gIHJldHVybiBuZXcgUmVnRXhwKGAoXnxbXFxcXHMsKF0pKCR7d29yZH0oJHxbXFxcXHMoLF0pKWAsICdnaScpXG59XG5cbi8qKlxuICogQ2hhbmdlIGNvbW1hIGxpc3RcbiAqL1xubW9kdWxlLmV4cG9ydHMuZWRpdExpc3QgPSBmdW5jdGlvbiAodmFsdWUsIGNhbGxiYWNrKSB7XG4gIGxldCBvcmlnaW4gPSBsaXN0LmNvbW1hKHZhbHVlKVxuICBsZXQgY2hhbmdlZCA9IGNhbGxiYWNrKG9yaWdpbiwgW10pXG5cbiAgaWYgKG9yaWdpbiA9PT0gY2hhbmdlZCkge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgbGV0IGpvaW4gPSB2YWx1ZS5tYXRjaCgvLFxccyovKVxuICBqb2luID0gam9pbiA/IGpvaW5bMF0gOiAnLCAnXG4gIHJldHVybiBjaGFuZ2VkLmpvaW4oam9pbilcbn1cblxuLyoqXG4gKiBTcGxpdCB0aGUgc2VsZWN0b3IgaW50byBwYXJ0cy5cbiAqIEl0IHJldHVybnMgMyBsZXZlbCBkZWVwIGFycmF5IGJlY2F1c2Ugc2VsZWN0b3JzIGNhbiBiZSBjb21tYVxuICogc2VwYXJhdGVkICgxKSwgc3BhY2Ugc2VwYXJhdGVkICgyKSwgYW5kIGNvbWJpbmVkICgzKVxuICogQHBhcmFtIHtTdHJpbmd9IHNlbGVjdG9yIHNlbGVjdG9yIHN0cmluZ1xuICogQHJldHVybiB7QXJyYXk8QXJyYXk8QXJyYXk+Pn0gMyBsZXZlbCBkZWVwIGFycmF5IG9mIHNwbGl0IHNlbGVjdG9yXG4gKiBAc2VlIHV0aWxzLnRlc3QuanMgZm9yIGV4YW1wbGVzXG4gKi9cbm1vZHVsZS5leHBvcnRzLnNwbGl0U2VsZWN0b3IgPSBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgcmV0dXJuIGxpc3QuY29tbWEoc2VsZWN0b3IpLm1hcChpID0+IHtcbiAgICByZXR1cm4gbGlzdC5zcGFjZShpKS5tYXAoayA9PiB7XG4gICAgICByZXR1cm4gay5zcGxpdCgvKD89XFwufCMpL2cpXG4gICAgfSlcbiAgfSlcbn1cblxuLyoqXG4gKiBSZXR1cm4gdHJ1ZSBpZiBhIGdpdmVuIHZhbHVlIG9ubHkgY29udGFpbnMgbnVtYmVycy5cbiAqIEBwYXJhbSB7Kn0gdmFsdWVcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5tb2R1bGUuZXhwb3J0cy5pc1B1cmVOdW1iZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIC9eWzAtOV0rJC8udGVzdCh2YWx1ZSlcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cbiIsImxldCBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKVxubGV0IE9sZFZhbHVlID0gcmVxdWlyZSgnLi9vbGQtdmFsdWUnKVxubGV0IHZlbmRvciA9IHJlcXVpcmUoJy4vdmVuZG9yJylcbmxldCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKVxuXG5jbGFzcyBWYWx1ZSBleHRlbmRzIFByZWZpeGVyIHtcbiAgLyoqXG4gICAqIENsb25lIGRlY2wgZm9yIGVhY2ggcHJlZml4ZWQgdmFsdWVzXG4gICAqL1xuICBzdGF0aWMgc2F2ZShwcmVmaXhlcywgZGVjbCkge1xuICAgIGxldCBwcm9wID0gZGVjbC5wcm9wXG4gICAgbGV0IHJlc3VsdCA9IFtdXG5cbiAgICBmb3IgKGxldCBwcmVmaXggaW4gZGVjbC5fYXV0b3ByZWZpeGVyVmFsdWVzKSB7XG4gICAgICBsZXQgdmFsdWUgPSBkZWNsLl9hdXRvcHJlZml4ZXJWYWx1ZXNbcHJlZml4XVxuXG4gICAgICBpZiAodmFsdWUgPT09IGRlY2wudmFsdWUpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgbGV0IGl0ZW1cbiAgICAgIGxldCBwcm9wUHJlZml4ID0gdmVuZG9yLnByZWZpeChwcm9wKVxuXG4gICAgICBpZiAocHJvcFByZWZpeCA9PT0gJy1waWUtJykge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBpZiAocHJvcFByZWZpeCA9PT0gcHJlZml4KSB7XG4gICAgICAgIGl0ZW0gPSBkZWNsLnZhbHVlID0gdmFsdWVcbiAgICAgICAgcmVzdWx0LnB1c2goaXRlbSlcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgbGV0IHByZWZpeGVkID0gcHJlZml4ZXMucHJlZml4ZWQocHJvcCwgcHJlZml4KVxuICAgICAgbGV0IHJ1bGUgPSBkZWNsLnBhcmVudFxuXG4gICAgICBpZiAoIXJ1bGUuZXZlcnkoaSA9PiBpLnByb3AgIT09IHByZWZpeGVkKSkge1xuICAgICAgICByZXN1bHQucHVzaChpdGVtKVxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBsZXQgdHJpbW1lZCA9IHZhbHVlLnJlcGxhY2UoL1xccysvLCAnICcpXG4gICAgICBsZXQgYWxyZWFkeSA9IHJ1bGUuc29tZShcbiAgICAgICAgaSA9PiBpLnByb3AgPT09IGRlY2wucHJvcCAmJiBpLnZhbHVlLnJlcGxhY2UoL1xccysvLCAnICcpID09PSB0cmltbWVkXG4gICAgICApXG5cbiAgICAgIGlmIChhbHJlYWR5KSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKGRlY2wsIHsgdmFsdWUgfSlcbiAgICAgIGl0ZW0gPSBkZWNsLnBhcmVudC5pbnNlcnRCZWZvcmUoZGVjbCwgY2xvbmVkKVxuXG4gICAgICByZXN1bHQucHVzaChpdGVtKVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8qKlxuICAgKiBJcyBkZWNsYXJhdGlvbiBuZWVkIHRvIGJlIHByZWZpeGVkXG4gICAqL1xuICBjaGVjayhkZWNsKSB7XG4gICAgbGV0IHZhbHVlID0gZGVjbC52YWx1ZVxuICAgIGlmICghdmFsdWUuaW5jbHVkZXModGhpcy5uYW1lKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuICEhdmFsdWUubWF0Y2godGhpcy5yZWdleHAoKSlcbiAgfVxuXG4gIC8qKlxuICAgKiBMYXp5IHJlZ2V4cCBsb2FkaW5nXG4gICAqL1xuICByZWdleHAoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVnZXhwQ2FjaGUgfHwgKHRoaXMucmVnZXhwQ2FjaGUgPSB1dGlscy5yZWdleHAodGhpcy5uYW1lKSlcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgcHJlZml4IHRvIHZhbHVlcyBpbiBzdHJpbmdcbiAgICovXG4gIHJlcGxhY2Uoc3RyaW5nLCBwcmVmaXgpIHtcbiAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodGhpcy5yZWdleHAoKSwgYCQxJHtwcmVmaXh9JDJgKVxuICB9XG5cbiAgLyoqXG4gICAqIEdldCB2YWx1ZSB3aXRoIGNvbW1lbnRzIGlmIGl0IHdhcyBub3QgY2hhbmdlZFxuICAgKi9cbiAgdmFsdWUoZGVjbCkge1xuICAgIGlmIChkZWNsLnJhd3MudmFsdWUgJiYgZGVjbC5yYXdzLnZhbHVlLnZhbHVlID09PSBkZWNsLnZhbHVlKSB7XG4gICAgICByZXR1cm4gZGVjbC5yYXdzLnZhbHVlLnJhd1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZGVjbC52YWx1ZVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTYXZlIHZhbHVlcyB3aXRoIG5leHQgcHJlZml4ZWQgdG9rZW5cbiAgICovXG4gIGFkZChkZWNsLCBwcmVmaXgpIHtcbiAgICBpZiAoIWRlY2wuX2F1dG9wcmVmaXhlclZhbHVlcykge1xuICAgICAgZGVjbC5fYXV0b3ByZWZpeGVyVmFsdWVzID0ge31cbiAgICB9XG4gICAgbGV0IHZhbHVlID0gZGVjbC5fYXV0b3ByZWZpeGVyVmFsdWVzW3ByZWZpeF0gfHwgdGhpcy52YWx1ZShkZWNsKVxuXG4gICAgbGV0IGJlZm9yZVxuICAgIGRvIHtcbiAgICAgIGJlZm9yZSA9IHZhbHVlXG4gICAgICB2YWx1ZSA9IHRoaXMucmVwbGFjZSh2YWx1ZSwgcHJlZml4KVxuICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkgcmV0dXJuXG4gICAgfSB3aGlsZSAodmFsdWUgIT09IGJlZm9yZSlcblxuICAgIGRlY2wuX2F1dG9wcmVmaXhlclZhbHVlc1twcmVmaXhdID0gdmFsdWVcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZnVuY3Rpb24gdG8gZmFzdCBmaW5kIHByZWZpeGVkIHZhbHVlXG4gICAqL1xuICBvbGQocHJlZml4KSB7XG4gICAgcmV0dXJuIG5ldyBPbGRWYWx1ZSh0aGlzLm5hbWUsIHByZWZpeCArIHRoaXMubmFtZSlcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFZhbHVlXG4iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJlZml4KHByb3ApIHtcbiAgICBsZXQgbWF0Y2ggPSBwcm9wLm1hdGNoKC9eKC1cXHcrLSkvKVxuICAgIGlmIChtYXRjaCkge1xuICAgICAgcmV0dXJuIG1hdGNoWzBdXG4gICAgfVxuXG4gICAgcmV0dXJuICcnXG4gIH0sXG5cbiAgdW5wcmVmaXhlZChwcm9wKSB7XG4gICAgcmV0dXJuIHByb3AucmVwbGFjZSgvXi1cXHcrLS8sICcnKVxuICB9XG59XG4iLCJ2YXIgQnJvd3NlcnNsaXN0RXJyb3IgPSByZXF1aXJlKCcuL2Vycm9yJylcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsb2FkUXVlcmllczogZnVuY3Rpb24gbG9hZFF1ZXJpZXMoKSB7XG4gICAgdGhyb3cgbmV3IEJyb3dzZXJzbGlzdEVycm9yKFxuICAgICAgJ1NoYXJhYmxlIGNvbmZpZ3MgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gY2xpZW50LXNpZGUgYnVpbGQgb2YgQnJvd3NlcnNsaXN0J1xuICAgIClcbiAgfSxcblxuICBnZXRTdGF0OiBmdW5jdGlvbiBnZXRTdGF0KG9wdHMpIHtcbiAgICByZXR1cm4gb3B0cy5zdGF0c1xuICB9LFxuXG4gIGxvYWRDb25maWc6IGZ1bmN0aW9uIGxvYWRDb25maWcob3B0cykge1xuICAgIGlmIChvcHRzLmNvbmZpZykge1xuICAgICAgdGhyb3cgbmV3IEJyb3dzZXJzbGlzdEVycm9yKFxuICAgICAgICAnQnJvd3NlcnNsaXN0IGNvbmZpZyBhcmUgbm90IHN1cHBvcnRlZCBpbiBjbGllbnQtc2lkZSBidWlsZCdcbiAgICAgIClcbiAgICB9XG4gIH0sXG5cbiAgbG9hZENvdW50cnk6IGZ1bmN0aW9uIGxvYWRDb3VudHJ5KCkge1xuICAgIHRocm93IG5ldyBCcm93c2Vyc2xpc3RFcnJvcihcbiAgICAgICdDb3VudHJ5IHN0YXRpc3RpY3MgYXJlIG5vdCBzdXBwb3J0ZWQgJyArXG4gICAgICAgICdpbiBjbGllbnQtc2lkZSBidWlsZCBvZiBCcm93c2Vyc2xpc3QnXG4gICAgKVxuICB9LFxuXG4gIGxvYWRGZWF0dXJlOiBmdW5jdGlvbiBsb2FkRmVhdHVyZSgpIHtcbiAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoXG4gICAgICAnU3VwcG9ydHMgcXVlcmllcyBhcmUgbm90IGF2YWlsYWJsZSBpbiBjbGllbnQtc2lkZSBidWlsZCBvZiBCcm93c2Vyc2xpc3QnXG4gICAgKVxuICB9LFxuXG4gIGN1cnJlbnROb2RlOiBmdW5jdGlvbiBjdXJyZW50Tm9kZShyZXNvbHZlLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIHJlc29sdmUoWydtYWludGFpbmVkIG5vZGUgdmVyc2lvbnMnXSwgY29udGV4dClbMF1cbiAgfSxcblxuICBwYXJzZUNvbmZpZzogbm9vcCxcblxuICByZWFkQ29uZmlnOiBub29wLFxuXG4gIGZpbmRDb25maWc6IG5vb3AsXG5cbiAgY2xlYXJDYWNoZXM6IG5vb3AsXG5cbiAgb2xkRGF0YVdhcm5pbmc6IG5vb3AsXG5cbiAgZW52OiB7fVxufVxuIiwiZnVuY3Rpb24gQnJvd3NlcnNsaXN0RXJyb3IobWVzc2FnZSkge1xuICB0aGlzLm5hbWUgPSAnQnJvd3NlcnNsaXN0RXJyb3InXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2VcbiAgdGhpcy5icm93c2Vyc2xpc3QgPSB0cnVlXG4gIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEJyb3dzZXJzbGlzdEVycm9yKVxuICB9XG59XG5cbkJyb3dzZXJzbGlzdEVycm9yLnByb3RvdHlwZSA9IEVycm9yLnByb3RvdHlwZVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJyb3dzZXJzbGlzdEVycm9yXG4iLCJ2YXIganNSZWxlYXNlcyA9IHJlcXVpcmUoJ25vZGUtcmVsZWFzZXMvZGF0YS9wcm9jZXNzZWQvZW52cy5qc29uJylcbnZhciBhZ2VudHMgPSByZXF1aXJlKCdjYW5pdXNlLWxpdGUvZGlzdC91bnBhY2tlci9hZ2VudHMnKS5hZ2VudHNcbnZhciBqc0VPTCA9IHJlcXVpcmUoJ25vZGUtcmVsZWFzZXMvZGF0YS9yZWxlYXNlLXNjaGVkdWxlL3JlbGVhc2Utc2NoZWR1bGUuanNvbicpXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxudmFyIGUyYyA9IHJlcXVpcmUoJ2VsZWN0cm9uLXRvLWNocm9taXVtL3ZlcnNpb25zJylcblxudmFyIEJyb3dzZXJzbGlzdEVycm9yID0gcmVxdWlyZSgnLi9lcnJvcicpXG52YXIgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJylcbnZhciBlbnYgPSByZXF1aXJlKCcuL25vZGUnKSAvLyBXaWxsIGxvYWQgYnJvd3Nlci5qcyBpbiB3ZWJwYWNrXG5cbnZhciBZRUFSID0gMzY1LjI1OTY0MSAqIDI0ICogNjAgKiA2MCAqIDEwMDBcbnZhciBBTkRST0lEX0VWRVJHUkVFTl9GSVJTVCA9IDM3XG5cbi8vIEhlbHBlcnNcblxuZnVuY3Rpb24gaXNWZXJzaW9uc01hdGNoKHZlcnNpb25BLCB2ZXJzaW9uQikge1xuICByZXR1cm4gKHZlcnNpb25BICsgJy4nKS5pbmRleE9mKHZlcnNpb25CICsgJy4nKSA9PT0gMFxufVxuXG5mdW5jdGlvbiBpc0VvbFJlbGVhc2VkKG5hbWUpIHtcbiAgdmFyIHZlcnNpb24gPSBuYW1lLnNsaWNlKDEpXG4gIHJldHVybiBicm93c2Vyc2xpc3Qubm9kZVZlcnNpb25zLnNvbWUoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gaXNWZXJzaW9uc01hdGNoKGksIHZlcnNpb24pXG4gIH0pXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZSh2ZXJzaW9ucykge1xuICByZXR1cm4gdmVyc2lvbnMuZmlsdGVyKGZ1bmN0aW9uICh2ZXJzaW9uKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2ZXJzaW9uID09PSAnc3RyaW5nJ1xuICB9KVxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVFbGVjdHJvbih2ZXJzaW9uKSB7XG4gIHZhciB2ZXJzaW9uVG9Vc2UgPSB2ZXJzaW9uXG4gIGlmICh2ZXJzaW9uLnNwbGl0KCcuJykubGVuZ3RoID09PSAzKSB7XG4gICAgdmVyc2lvblRvVXNlID0gdmVyc2lvbi5zcGxpdCgnLicpLnNsaWNlKDAsIC0xKS5qb2luKCcuJylcbiAgfVxuICByZXR1cm4gdmVyc2lvblRvVXNlXG59XG5cbmZ1bmN0aW9uIG5hbWVNYXBwZXIobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gbWFwTmFtZSh2ZXJzaW9uKSB7XG4gICAgcmV0dXJuIG5hbWUgKyAnICcgKyB2ZXJzaW9uXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0TWFqb3IodmVyc2lvbikge1xuICByZXR1cm4gcGFyc2VJbnQodmVyc2lvbi5zcGxpdCgnLicpWzBdKVxufVxuXG5mdW5jdGlvbiBnZXRNYWpvclZlcnNpb25zKHJlbGVhc2VkLCBudW1iZXIpIHtcbiAgaWYgKHJlbGVhc2VkLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdXG4gIHZhciBtYWpvclZlcnNpb25zID0gdW5pcShyZWxlYXNlZC5tYXAoZ2V0TWFqb3IpKVxuICB2YXIgbWluaW11bSA9IG1ham9yVmVyc2lvbnNbbWFqb3JWZXJzaW9ucy5sZW5ndGggLSBudW1iZXJdXG4gIGlmICghbWluaW11bSkge1xuICAgIHJldHVybiByZWxlYXNlZFxuICB9XG4gIHZhciBzZWxlY3RlZCA9IFtdXG4gIGZvciAodmFyIGkgPSByZWxlYXNlZC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGlmIChtaW5pbXVtID4gZ2V0TWFqb3IocmVsZWFzZWRbaV0pKSBicmVha1xuICAgIHNlbGVjdGVkLnVuc2hpZnQocmVsZWFzZWRbaV0pXG4gIH1cbiAgcmV0dXJuIHNlbGVjdGVkXG59XG5cbmZ1bmN0aW9uIHVuaXEoYXJyYXkpIHtcbiAgdmFyIGZpbHRlcmVkID0gW11cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChmaWx0ZXJlZC5pbmRleE9mKGFycmF5W2ldKSA9PT0gLTEpIGZpbHRlcmVkLnB1c2goYXJyYXlbaV0pXG4gIH1cbiAgcmV0dXJuIGZpbHRlcmVkXG59XG5cbmZ1bmN0aW9uIGZpbGxVc2FnZShyZXN1bHQsIG5hbWUsIGRhdGEpIHtcbiAgZm9yICh2YXIgaSBpbiBkYXRhKSB7XG4gICAgcmVzdWx0W25hbWUgKyAnICcgKyBpXSA9IGRhdGFbaV1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZUZpbHRlcihzaWduLCB2ZXJzaW9uKSB7XG4gIHZlcnNpb24gPSBwYXJzZUZsb2F0KHZlcnNpb24pXG4gIGlmIChzaWduID09PSAnPicpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHYpIHtcbiAgICAgIHJldHVybiBwYXJzZUZsb2F0KHYpID4gdmVyc2lvblxuICAgIH1cbiAgfSBlbHNlIGlmIChzaWduID09PSAnPj0nKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gcGFyc2VGbG9hdCh2KSA+PSB2ZXJzaW9uXG4gICAgfVxuICB9IGVsc2UgaWYgKHNpZ24gPT09ICc8Jykge1xuICAgIHJldHVybiBmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodikgPCB2ZXJzaW9uXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodikgPD0gdmVyc2lvblxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVNlbXZlckZpbHRlcihzaWduLCB2ZXJzaW9uKSB7XG4gIHZlcnNpb24gPSB2ZXJzaW9uLnNwbGl0KCcuJykubWFwKHBhcnNlU2ltcGxlSW50KVxuICB2ZXJzaW9uWzFdID0gdmVyc2lvblsxXSB8fCAwXG4gIHZlcnNpb25bMl0gPSB2ZXJzaW9uWzJdIHx8IDBcbiAgaWYgKHNpZ24gPT09ICc+Jykge1xuICAgIHJldHVybiBmdW5jdGlvbiAodikge1xuICAgICAgdiA9IHYuc3BsaXQoJy4nKS5tYXAocGFyc2VTaW1wbGVJbnQpXG4gICAgICByZXR1cm4gY29tcGFyZVNlbXZlcih2LCB2ZXJzaW9uKSA+IDBcbiAgICB9XG4gIH0gZWxzZSBpZiAoc2lnbiA9PT0gJz49Jykge1xuICAgIHJldHVybiBmdW5jdGlvbiAodikge1xuICAgICAgdiA9IHYuc3BsaXQoJy4nKS5tYXAocGFyc2VTaW1wbGVJbnQpXG4gICAgICByZXR1cm4gY29tcGFyZVNlbXZlcih2LCB2ZXJzaW9uKSA+PSAwXG4gICAgfVxuICB9IGVsc2UgaWYgKHNpZ24gPT09ICc8Jykge1xuICAgIHJldHVybiBmdW5jdGlvbiAodikge1xuICAgICAgdiA9IHYuc3BsaXQoJy4nKS5tYXAocGFyc2VTaW1wbGVJbnQpXG4gICAgICByZXR1cm4gY29tcGFyZVNlbXZlcih2ZXJzaW9uLCB2KSA+IDBcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh2KSB7XG4gICAgICB2ID0gdi5zcGxpdCgnLicpLm1hcChwYXJzZVNpbXBsZUludClcbiAgICAgIHJldHVybiBjb21wYXJlU2VtdmVyKHZlcnNpb24sIHYpID49IDBcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcGFyc2VTaW1wbGVJbnQoeCkge1xuICByZXR1cm4gcGFyc2VJbnQoeClcbn1cblxuZnVuY3Rpb24gY29tcGFyZShhLCBiKSB7XG4gIGlmIChhIDwgYikgcmV0dXJuIC0xXG4gIGlmIChhID4gYikgcmV0dXJuICsxXG4gIHJldHVybiAwXG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVTZW12ZXIoYSwgYikge1xuICByZXR1cm4gKFxuICAgIGNvbXBhcmUocGFyc2VJbnQoYVswXSksIHBhcnNlSW50KGJbMF0pKSB8fFxuICAgIGNvbXBhcmUocGFyc2VJbnQoYVsxXSB8fCAnMCcpLCBwYXJzZUludChiWzFdIHx8ICcwJykpIHx8XG4gICAgY29tcGFyZShwYXJzZUludChhWzJdIHx8ICcwJyksIHBhcnNlSW50KGJbMl0gfHwgJzAnKSlcbiAgKVxufVxuXG4vLyB0aGlzIGZvbGxvd3MgdGhlIG5wbS1saWtlIHNlbXZlciBiZWhhdmlvclxuZnVuY3Rpb24gc2VtdmVyRmlsdGVyTG9vc2Uob3BlcmF0b3IsIHJhbmdlKSB7XG4gIHJhbmdlID0gcmFuZ2Uuc3BsaXQoJy4nKS5tYXAocGFyc2VTaW1wbGVJbnQpXG4gIGlmICh0eXBlb2YgcmFuZ2VbMV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmFuZ2VbMV0gPSAneCdcbiAgfVxuICAvLyBpZ25vcmUgYW55IHBhdGNoIHZlcnNpb24gYmVjYXVzZSB3ZSBvbmx5IHJldHVybiBtaW5vciB2ZXJzaW9uc1xuICAvLyByYW5nZVsyXSA9ICd4J1xuICBzd2l0Y2ggKG9wZXJhdG9yKSB7XG4gICAgY2FzZSAnPD0nOlxuICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2ZXJzaW9uKSB7XG4gICAgICAgIHZlcnNpb24gPSB2ZXJzaW9uLnNwbGl0KCcuJykubWFwKHBhcnNlU2ltcGxlSW50KVxuICAgICAgICByZXR1cm4gY29tcGFyZVNlbXZlckxvb3NlKHZlcnNpb24sIHJhbmdlKSA8PSAwXG4gICAgICB9XG4gICAgY2FzZSAnPj0nOlxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgdmVyc2lvbiA9IHZlcnNpb24uc3BsaXQoJy4nKS5tYXAocGFyc2VTaW1wbGVJbnQpXG4gICAgICAgIHJldHVybiBjb21wYXJlU2VtdmVyTG9vc2UodmVyc2lvbiwgcmFuZ2UpID49IDBcbiAgICAgIH1cbiAgfVxufVxuXG4vLyB0aGlzIGZvbGxvd3MgdGhlIG5wbS1saWtlIHNlbXZlciBiZWhhdmlvclxuZnVuY3Rpb24gY29tcGFyZVNlbXZlckxvb3NlKHZlcnNpb24sIHJhbmdlKSB7XG4gIGlmICh2ZXJzaW9uWzBdICE9PSByYW5nZVswXSkge1xuICAgIHJldHVybiB2ZXJzaW9uWzBdIDwgcmFuZ2VbMF0gPyAtMSA6ICsxXG4gIH1cbiAgaWYgKHJhbmdlWzFdID09PSAneCcpIHtcbiAgICByZXR1cm4gMFxuICB9XG4gIGlmICh2ZXJzaW9uWzFdICE9PSByYW5nZVsxXSkge1xuICAgIHJldHVybiB2ZXJzaW9uWzFdIDwgcmFuZ2VbMV0gPyAtMSA6ICsxXG4gIH1cbiAgcmV0dXJuIDBcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVZlcnNpb24oZGF0YSwgdmVyc2lvbikge1xuICBpZiAoZGF0YS52ZXJzaW9ucy5pbmRleE9mKHZlcnNpb24pICE9PSAtMSkge1xuICAgIHJldHVybiB2ZXJzaW9uXG4gIH0gZWxzZSBpZiAoYnJvd3NlcnNsaXN0LnZlcnNpb25BbGlhc2VzW2RhdGEubmFtZV1bdmVyc2lvbl0pIHtcbiAgICByZXR1cm4gYnJvd3NlcnNsaXN0LnZlcnNpb25BbGlhc2VzW2RhdGEubmFtZV1bdmVyc2lvbl1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVWZXJzaW9uKGRhdGEsIHZlcnNpb24pIHtcbiAgdmFyIHJlc29sdmVkID0gcmVzb2x2ZVZlcnNpb24oZGF0YSwgdmVyc2lvbilcbiAgaWYgKHJlc29sdmVkKSB7XG4gICAgcmV0dXJuIHJlc29sdmVkXG4gIH0gZWxzZSBpZiAoZGF0YS52ZXJzaW9ucy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gZGF0YS52ZXJzaW9uc1swXVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbmZ1bmN0aW9uIGZpbHRlckJ5WWVhcihzaW5jZSwgY29udGV4dCkge1xuICBzaW5jZSA9IHNpbmNlIC8gMTAwMFxuICByZXR1cm4gT2JqZWN0LmtleXMoYWdlbnRzKS5yZWR1Y2UoZnVuY3Rpb24gKHNlbGVjdGVkLCBuYW1lKSB7XG4gICAgdmFyIGRhdGEgPSBieU5hbWUobmFtZSwgY29udGV4dClcbiAgICBpZiAoIWRhdGEpIHJldHVybiBzZWxlY3RlZFxuICAgIHZhciB2ZXJzaW9ucyA9IE9iamVjdC5rZXlzKGRhdGEucmVsZWFzZURhdGUpLmZpbHRlcihmdW5jdGlvbiAodikge1xuICAgICAgdmFyIGRhdGUgPSBkYXRhLnJlbGVhc2VEYXRlW3ZdXG4gICAgICByZXR1cm4gZGF0ZSAhPT0gbnVsbCAmJiBkYXRlID49IHNpbmNlXG4gICAgfSlcbiAgICByZXR1cm4gc2VsZWN0ZWQuY29uY2F0KHZlcnNpb25zLm1hcChuYW1lTWFwcGVyKGRhdGEubmFtZSkpKVxuICB9LCBbXSlcbn1cblxuZnVuY3Rpb24gY2xvbmVEYXRhKGRhdGEpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgdmVyc2lvbnM6IGRhdGEudmVyc2lvbnMsXG4gICAgcmVsZWFzZWQ6IGRhdGEucmVsZWFzZWQsXG4gICAgcmVsZWFzZURhdGU6IGRhdGEucmVsZWFzZURhdGVcbiAgfVxufVxuXG5mdW5jdGlvbiBtYXBWZXJzaW9ucyhkYXRhLCBtYXApIHtcbiAgZGF0YS52ZXJzaW9ucyA9IGRhdGEudmVyc2lvbnMubWFwKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIG1hcFtpXSB8fCBpXG4gIH0pXG4gIGRhdGEucmVsZWFzZWQgPSBkYXRhLnJlbGVhc2VkLm1hcChmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBtYXBbaV0gfHwgaVxuICB9KVxuICB2YXIgZml4ZWREYXRlID0ge31cbiAgZm9yICh2YXIgaSBpbiBkYXRhLnJlbGVhc2VEYXRlKSB7XG4gICAgZml4ZWREYXRlW21hcFtpXSB8fCBpXSA9IGRhdGEucmVsZWFzZURhdGVbaV1cbiAgfVxuICBkYXRhLnJlbGVhc2VEYXRlID0gZml4ZWREYXRlXG4gIHJldHVybiBkYXRhXG59XG5cbmZ1bmN0aW9uIGJ5TmFtZShuYW1lLCBjb250ZXh0KSB7XG4gIG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKClcbiAgbmFtZSA9IGJyb3dzZXJzbGlzdC5hbGlhc2VzW25hbWVdIHx8IG5hbWVcbiAgaWYgKGNvbnRleHQubW9iaWxlVG9EZXNrdG9wICYmIGJyb3dzZXJzbGlzdC5kZXNrdG9wTmFtZXNbbmFtZV0pIHtcbiAgICB2YXIgZGVza3RvcCA9IGJyb3dzZXJzbGlzdC5kYXRhW2Jyb3dzZXJzbGlzdC5kZXNrdG9wTmFtZXNbbmFtZV1dXG4gICAgaWYgKG5hbWUgPT09ICdhbmRyb2lkJykge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZUFuZHJvaWREYXRhKGNsb25lRGF0YShicm93c2Vyc2xpc3QuZGF0YVtuYW1lXSksIGRlc2t0b3ApXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBjbG9uZWQgPSBjbG9uZURhdGEoZGVza3RvcClcbiAgICAgIGNsb25lZC5uYW1lID0gbmFtZVxuICAgICAgaWYgKG5hbWUgPT09ICdvcF9tb2InKSB7XG4gICAgICAgIGNsb25lZCA9IG1hcFZlcnNpb25zKGNsb25lZCwgeyAnMTAuMC0xMC4xJzogJzEwJyB9KVxuICAgICAgfVxuICAgICAgcmV0dXJuIGNsb25lZFxuICAgIH1cbiAgfVxuICByZXR1cm4gYnJvd3NlcnNsaXN0LmRhdGFbbmFtZV1cbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplQW5kcm9pZFZlcnNpb25zKGFuZHJvaWRWZXJzaW9ucywgY2hyb21lVmVyc2lvbnMpIHtcbiAgdmFyIGZpcnN0RXZlcmdyZWVuID0gQU5EUk9JRF9FVkVSR1JFRU5fRklSU1RcbiAgdmFyIGxhc3QgPSBjaHJvbWVWZXJzaW9uc1tjaHJvbWVWZXJzaW9ucy5sZW5ndGggLSAxXVxuICByZXR1cm4gYW5kcm9pZFZlcnNpb25zXG4gICAgLmZpbHRlcihmdW5jdGlvbiAodmVyc2lvbikge1xuICAgICAgcmV0dXJuIC9eKD86WzItNF1cXC58WzM0XSQpLy50ZXN0KHZlcnNpb24pXG4gICAgfSlcbiAgICAuY29uY2F0KGNocm9tZVZlcnNpb25zLnNsaWNlKGZpcnN0RXZlcmdyZWVuIC0gbGFzdCAtIDEpKVxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVBbmRyb2lkRGF0YShhbmRyb2lkLCBjaHJvbWUpIHtcbiAgYW5kcm9pZC5yZWxlYXNlZCA9IG5vcm1hbGl6ZUFuZHJvaWRWZXJzaW9ucyhhbmRyb2lkLnJlbGVhc2VkLCBjaHJvbWUucmVsZWFzZWQpXG4gIGFuZHJvaWQudmVyc2lvbnMgPSBub3JtYWxpemVBbmRyb2lkVmVyc2lvbnMoYW5kcm9pZC52ZXJzaW9ucywgY2hyb21lLnZlcnNpb25zKVxuICByZXR1cm4gYW5kcm9pZFxufVxuXG5mdW5jdGlvbiBjaGVja05hbWUobmFtZSwgY29udGV4dCkge1xuICB2YXIgZGF0YSA9IGJ5TmFtZShuYW1lLCBjb250ZXh0KVxuICBpZiAoIWRhdGEpIHRocm93IG5ldyBCcm93c2Vyc2xpc3RFcnJvcignVW5rbm93biBicm93c2VyICcgKyBuYW1lKVxuICByZXR1cm4gZGF0YVxufVxuXG5mdW5jdGlvbiB1bmtub3duUXVlcnkocXVlcnkpIHtcbiAgcmV0dXJuIG5ldyBCcm93c2Vyc2xpc3RFcnJvcihcbiAgICAnVW5rbm93biBicm93c2VyIHF1ZXJ5IGAnICtcbiAgICAgIHF1ZXJ5ICtcbiAgICAgICdgLiAnICtcbiAgICAgICdNYXliZSB5b3UgYXJlIHVzaW5nIG9sZCBCcm93c2Vyc2xpc3Qgb3IgbWFkZSB0eXBvIGluIHF1ZXJ5LidcbiAgKVxufVxuXG5mdW5jdGlvbiBmaWx0ZXJBbmRyb2lkKGxpc3QsIHZlcnNpb25zLCBjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0Lm1vYmlsZVRvRGVza3RvcCkgcmV0dXJuIGxpc3RcbiAgdmFyIHJlbGVhc2VkID0gYnJvd3NlcnNsaXN0LmRhdGEuYW5kcm9pZC5yZWxlYXNlZFxuICB2YXIgbGFzdCA9IHJlbGVhc2VkW3JlbGVhc2VkLmxlbmd0aCAtIDFdXG4gIHZhciBkaWZmID0gbGFzdCAtIEFORFJPSURfRVZFUkdSRUVOX0ZJUlNUIC0gdmVyc2lvbnNcbiAgaWYgKGRpZmYgPiAwKSB7XG4gICAgcmV0dXJuIGxpc3Quc2xpY2UoLTEpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGxpc3Quc2xpY2UoZGlmZiAtIDEpXG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzb2x2ZShxdWVyaWVzLCBjb250ZXh0KSB7XG4gIHJldHVybiBwYXJzZShRVUVSSUVTLCBxdWVyaWVzKS5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwgbm9kZSwgaW5kZXgpIHtcbiAgICBpZiAobm9kZS5ub3QgJiYgaW5kZXggPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBCcm93c2Vyc2xpc3RFcnJvcihcbiAgICAgICAgJ1dyaXRlIGFueSBicm93c2VycyBxdWVyeSAoZm9yIGluc3RhbmNlLCBgZGVmYXVsdHNgKSAnICtcbiAgICAgICAgICAnYmVmb3JlIGAnICtcbiAgICAgICAgICBub2RlLnF1ZXJ5ICtcbiAgICAgICAgICAnYCdcbiAgICAgIClcbiAgICB9XG4gICAgdmFyIHR5cGUgPSBRVUVSSUVTW25vZGUudHlwZV1cbiAgICB2YXIgYXJyYXkgPSB0eXBlLnNlbGVjdC5jYWxsKGJyb3dzZXJzbGlzdCwgY29udGV4dCwgbm9kZSkubWFwKGZ1bmN0aW9uIChqKSB7XG4gICAgICB2YXIgcGFydHMgPSBqLnNwbGl0KCcgJylcbiAgICAgIGlmIChwYXJ0c1sxXSA9PT0gJzAnKSB7XG4gICAgICAgIHJldHVybiBwYXJ0c1swXSArICcgJyArIGJ5TmFtZShwYXJ0c1swXSwgY29udGV4dCkudmVyc2lvbnNbMF1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBqXG4gICAgICB9XG4gICAgfSlcblxuICAgIGlmIChub2RlLmNvbXBvc2UgPT09ICdhbmQnKSB7XG4gICAgICBpZiAobm9kZS5ub3QpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5maWx0ZXIoZnVuY3Rpb24gKGopIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkuaW5kZXhPZihqKSA9PT0gLTFcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiByZXN1bHQuZmlsdGVyKGZ1bmN0aW9uIChqKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5LmluZGV4T2YoaikgIT09IC0xXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChub2RlLm5vdCkge1xuICAgICAgICB2YXIgZmlsdGVyID0ge31cbiAgICAgICAgYXJyYXkuZm9yRWFjaChmdW5jdGlvbiAoaikge1xuICAgICAgICAgIGZpbHRlcltqXSA9IHRydWVcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5maWx0ZXIoZnVuY3Rpb24gKGopIHtcbiAgICAgICAgICByZXR1cm4gIWZpbHRlcltqXVxuICAgICAgICB9KVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdC5jb25jYXQoYXJyYXkpXG4gICAgfVxuICB9LCBbXSlcbn1cblxuZnVuY3Rpb24gcHJlcGFyZU9wdHMob3B0cykge1xuICBpZiAodHlwZW9mIG9wdHMgPT09ICd1bmRlZmluZWQnKSBvcHRzID0ge31cblxuICBpZiAodHlwZW9mIG9wdHMucGF0aCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBvcHRzLnBhdGggPSBwYXRoLnJlc29sdmUgPyBwYXRoLnJlc29sdmUoJy4nKSA6ICcuJ1xuICB9XG5cbiAgcmV0dXJuIG9wdHNcbn1cblxuZnVuY3Rpb24gcHJlcGFyZVF1ZXJpZXMocXVlcmllcywgb3B0cykge1xuICBpZiAodHlwZW9mIHF1ZXJpZXMgPT09ICd1bmRlZmluZWQnIHx8IHF1ZXJpZXMgPT09IG51bGwpIHtcbiAgICB2YXIgY29uZmlnID0gYnJvd3NlcnNsaXN0LmxvYWRDb25maWcob3B0cylcbiAgICBpZiAoY29uZmlnKSB7XG4gICAgICBxdWVyaWVzID0gY29uZmlnXG4gICAgfSBlbHNlIHtcbiAgICAgIHF1ZXJpZXMgPSBicm93c2Vyc2xpc3QuZGVmYXVsdHNcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcXVlcmllc1xufVxuXG5mdW5jdGlvbiBjaGVja1F1ZXJpZXMocXVlcmllcykge1xuICBpZiAoISh0eXBlb2YgcXVlcmllcyA9PT0gJ3N0cmluZycgfHwgQXJyYXkuaXNBcnJheShxdWVyaWVzKSkpIHtcbiAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoXG4gICAgICAnQnJvd3NlciBxdWVyaWVzIG11c3QgYmUgYW4gYXJyYXkgb3Igc3RyaW5nLiBHb3QgJyArIHR5cGVvZiBxdWVyaWVzICsgJy4nXG4gICAgKVxuICB9XG59XG5cbnZhciBjYWNoZSA9IHt9XG5cbmZ1bmN0aW9uIGJyb3dzZXJzbGlzdChxdWVyaWVzLCBvcHRzKSB7XG4gIG9wdHMgPSBwcmVwYXJlT3B0cyhvcHRzKVxuICBxdWVyaWVzID0gcHJlcGFyZVF1ZXJpZXMocXVlcmllcywgb3B0cylcbiAgY2hlY2tRdWVyaWVzKHF1ZXJpZXMpXG5cbiAgdmFyIGNvbnRleHQgPSB7XG4gICAgaWdub3JlVW5rbm93blZlcnNpb25zOiBvcHRzLmlnbm9yZVVua25vd25WZXJzaW9ucyxcbiAgICBkYW5nZXJvdXNFeHRlbmQ6IG9wdHMuZGFuZ2Vyb3VzRXh0ZW5kLFxuICAgIG1vYmlsZVRvRGVza3RvcDogb3B0cy5tb2JpbGVUb0Rlc2t0b3AsXG4gICAgcGF0aDogb3B0cy5wYXRoLFxuICAgIGVudjogb3B0cy5lbnZcbiAgfVxuXG4gIGVudi5vbGREYXRhV2FybmluZyhicm93c2Vyc2xpc3QuZGF0YSlcbiAgdmFyIHN0YXRzID0gZW52LmdldFN0YXQob3B0cywgYnJvd3NlcnNsaXN0LmRhdGEpXG4gIGlmIChzdGF0cykge1xuICAgIGNvbnRleHQuY3VzdG9tVXNhZ2UgPSB7fVxuICAgIGZvciAodmFyIGJyb3dzZXIgaW4gc3RhdHMpIHtcbiAgICAgIGZpbGxVc2FnZShjb250ZXh0LmN1c3RvbVVzYWdlLCBicm93c2VyLCBzdGF0c1ticm93c2VyXSlcbiAgICB9XG4gIH1cblxuICB2YXIgY2FjaGVLZXkgPSBKU09OLnN0cmluZ2lmeShbcXVlcmllcywgY29udGV4dF0pXG4gIGlmIChjYWNoZVtjYWNoZUtleV0pIHJldHVybiBjYWNoZVtjYWNoZUtleV1cblxuICB2YXIgcmVzdWx0ID0gdW5pcShyZXNvbHZlKHF1ZXJpZXMsIGNvbnRleHQpKS5zb3J0KGZ1bmN0aW9uIChuYW1lMSwgbmFtZTIpIHtcbiAgICBuYW1lMSA9IG5hbWUxLnNwbGl0KCcgJylcbiAgICBuYW1lMiA9IG5hbWUyLnNwbGl0KCcgJylcbiAgICBpZiAobmFtZTFbMF0gPT09IG5hbWUyWzBdKSB7XG4gICAgICAvLyBhc3N1bXB0aW9ucyBvbiBjYW5pdXNlIGRhdGFcbiAgICAgIC8vIDEpIHZlcnNpb24gcmFuZ2VzIG5ldmVyIG92ZXJsYXBzXG4gICAgICAvLyAyKSBpZiB2ZXJzaW9uIGlzIG5vdCBhIHJhbmdlLCBpdCBuZXZlciBjb250YWlucyBgLWBcbiAgICAgIHZhciB2ZXJzaW9uMSA9IG5hbWUxWzFdLnNwbGl0KCctJylbMF1cbiAgICAgIHZhciB2ZXJzaW9uMiA9IG5hbWUyWzFdLnNwbGl0KCctJylbMF1cbiAgICAgIHJldHVybiBjb21wYXJlU2VtdmVyKHZlcnNpb24yLnNwbGl0KCcuJyksIHZlcnNpb24xLnNwbGl0KCcuJykpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjb21wYXJlKG5hbWUxWzBdLCBuYW1lMlswXSlcbiAgICB9XG4gIH0pXG4gIGlmICghZW52LmVudi5CUk9XU0VSU0xJU1RfRElTQUJMRV9DQUNIRSkge1xuICAgIGNhY2hlW2NhY2hlS2V5XSA9IHJlc3VsdFxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxuYnJvd3NlcnNsaXN0LnBhcnNlID0gZnVuY3Rpb24gKHF1ZXJpZXMsIG9wdHMpIHtcbiAgb3B0cyA9IHByZXBhcmVPcHRzKG9wdHMpXG4gIHF1ZXJpZXMgPSBwcmVwYXJlUXVlcmllcyhxdWVyaWVzLCBvcHRzKVxuICBjaGVja1F1ZXJpZXMocXVlcmllcylcbiAgcmV0dXJuIHBhcnNlKFFVRVJJRVMsIHF1ZXJpZXMpXG59XG5cbi8vIFdpbGwgYmUgZmlsbGVkIGJ5IENhbiBJIFVzZSBkYXRhIGJlbG93XG5icm93c2Vyc2xpc3QuY2FjaGUgPSB7fVxuYnJvd3NlcnNsaXN0LmRhdGEgPSB7fVxuYnJvd3NlcnNsaXN0LnVzYWdlID0ge1xuICBnbG9iYWw6IHt9LFxuICBjdXN0b206IG51bGxcbn1cblxuLy8gRGVmYXVsdCBicm93c2VycyBxdWVyeVxuYnJvd3NlcnNsaXN0LmRlZmF1bHRzID0gWyc+IDAuNSUnLCAnbGFzdCAyIHZlcnNpb25zJywgJ0ZpcmVmb3ggRVNSJywgJ25vdCBkZWFkJ11cblxuLy8gQnJvd3NlciBuYW1lcyBhbGlhc2VzXG5icm93c2Vyc2xpc3QuYWxpYXNlcyA9IHtcbiAgZng6ICdmaXJlZm94JyxcbiAgZmY6ICdmaXJlZm94JyxcbiAgaW9zOiAnaW9zX3NhZicsXG4gIGV4cGxvcmVyOiAnaWUnLFxuICBibGFja2JlcnJ5OiAnYmInLFxuICBleHBsb3Jlcm1vYmlsZTogJ2llX21vYicsXG4gIG9wZXJhbWluaTogJ29wX21pbmknLFxuICBvcGVyYW1vYmlsZTogJ29wX21vYicsXG4gIGNocm9tZWFuZHJvaWQ6ICdhbmRfY2hyJyxcbiAgZmlyZWZveGFuZHJvaWQ6ICdhbmRfZmYnLFxuICB1Y2FuZHJvaWQ6ICdhbmRfdWMnLFxuICBxcWFuZHJvaWQ6ICdhbmRfcXEnXG59XG5cbi8vIENhbiBJIFVzZSBvbmx5IHByb3ZpZGVzIGEgZmV3IHZlcnNpb25zIGZvciBzb21lIGJyb3dzZXJzIChlLmcuIGFuZF9jaHIpLlxuLy8gRmFsbGJhY2sgdG8gYSBzaW1pbGFyIGJyb3dzZXIgZm9yIHVua25vd24gdmVyc2lvbnNcbmJyb3dzZXJzbGlzdC5kZXNrdG9wTmFtZXMgPSB7XG4gIGFuZF9jaHI6ICdjaHJvbWUnLFxuICBhbmRfZmY6ICdmaXJlZm94JyxcbiAgaWVfbW9iOiAnaWUnLFxuICBvcF9tb2I6ICdvcGVyYScsXG4gIGFuZHJvaWQ6ICdjaHJvbWUnIC8vIGhhcyBleHRyYSBwcm9jZXNzaW5nIGxvZ2ljXG59XG5cbi8vIEFsaWFzZXMgdG8gd29yayB3aXRoIGpvaW5lZCB2ZXJzaW9ucyBsaWtlIGBpb3Nfc2FmIDcuMC03LjFgXG5icm93c2Vyc2xpc3QudmVyc2lvbkFsaWFzZXMgPSB7fVxuXG5icm93c2Vyc2xpc3QuY2xlYXJDYWNoZXMgPSBlbnYuY2xlYXJDYWNoZXNcbmJyb3dzZXJzbGlzdC5wYXJzZUNvbmZpZyA9IGVudi5wYXJzZUNvbmZpZ1xuYnJvd3NlcnNsaXN0LnJlYWRDb25maWcgPSBlbnYucmVhZENvbmZpZ1xuYnJvd3NlcnNsaXN0LmZpbmRDb25maWcgPSBlbnYuZmluZENvbmZpZ1xuYnJvd3NlcnNsaXN0LmxvYWRDb25maWcgPSBlbnYubG9hZENvbmZpZ1xuXG5icm93c2Vyc2xpc3QuY292ZXJhZ2UgPSBmdW5jdGlvbiAoYnJvd3NlcnMsIHN0YXRzKSB7XG4gIHZhciBkYXRhXG4gIGlmICh0eXBlb2Ygc3RhdHMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZGF0YSA9IGJyb3dzZXJzbGlzdC51c2FnZS5nbG9iYWxcbiAgfSBlbHNlIGlmIChzdGF0cyA9PT0gJ215IHN0YXRzJykge1xuICAgIHZhciBvcHRzID0ge31cbiAgICBvcHRzLnBhdGggPSBwYXRoLnJlc29sdmUgPyBwYXRoLnJlc29sdmUoJy4nKSA6ICcuJ1xuICAgIHZhciBjdXN0b21TdGF0cyA9IGVudi5nZXRTdGF0KG9wdHMpXG4gICAgaWYgKCFjdXN0b21TdGF0cykge1xuICAgICAgdGhyb3cgbmV3IEJyb3dzZXJzbGlzdEVycm9yKCdDdXN0b20gdXNhZ2Ugc3RhdGlzdGljcyB3YXMgbm90IHByb3ZpZGVkJylcbiAgICB9XG4gICAgZGF0YSA9IHt9XG4gICAgZm9yICh2YXIgYnJvd3NlciBpbiBjdXN0b21TdGF0cykge1xuICAgICAgZmlsbFVzYWdlKGRhdGEsIGJyb3dzZXIsIGN1c3RvbVN0YXRzW2Jyb3dzZXJdKVxuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlb2Ygc3RhdHMgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKHN0YXRzLmxlbmd0aCA+IDIpIHtcbiAgICAgIHN0YXRzID0gc3RhdHMudG9Mb3dlckNhc2UoKVxuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0cyA9IHN0YXRzLnRvVXBwZXJDYXNlKClcbiAgICB9XG4gICAgZW52LmxvYWRDb3VudHJ5KGJyb3dzZXJzbGlzdC51c2FnZSwgc3RhdHMsIGJyb3dzZXJzbGlzdC5kYXRhKVxuICAgIGRhdGEgPSBicm93c2Vyc2xpc3QudXNhZ2Vbc3RhdHNdXG4gIH0gZWxzZSB7XG4gICAgaWYgKCdkYXRhQnlCcm93c2VyJyBpbiBzdGF0cykge1xuICAgICAgc3RhdHMgPSBzdGF0cy5kYXRhQnlCcm93c2VyXG4gICAgfVxuICAgIGRhdGEgPSB7fVxuICAgIGZvciAodmFyIG5hbWUgaW4gc3RhdHMpIHtcbiAgICAgIGZvciAodmFyIHZlcnNpb24gaW4gc3RhdHNbbmFtZV0pIHtcbiAgICAgICAgZGF0YVtuYW1lICsgJyAnICsgdmVyc2lvbl0gPSBzdGF0c1tuYW1lXVt2ZXJzaW9uXVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBicm93c2Vycy5yZWR1Y2UoZnVuY3Rpb24gKGFsbCwgaSkge1xuICAgIHZhciB1c2FnZSA9IGRhdGFbaV1cbiAgICBpZiAodXNhZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdXNhZ2UgPSBkYXRhW2kucmVwbGFjZSgvIFxcUyskLywgJyAwJyldXG4gICAgfVxuICAgIHJldHVybiBhbGwgKyAodXNhZ2UgfHwgMClcbiAgfSwgMClcbn1cblxuZnVuY3Rpb24gbm9kZVF1ZXJ5KGNvbnRleHQsIG5vZGUpIHtcbiAgdmFyIG1hdGNoZWQgPSBicm93c2Vyc2xpc3Qubm9kZVZlcnNpb25zLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpc1ZlcnNpb25zTWF0Y2goaSwgbm9kZS52ZXJzaW9uKVxuICB9KVxuICBpZiAobWF0Y2hlZC5sZW5ndGggPT09IDApIHtcbiAgICBpZiAoY29udGV4dC5pZ25vcmVVbmtub3duVmVyc2lvbnMpIHtcbiAgICAgIHJldHVybiBbXVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoXG4gICAgICAgICdVbmtub3duIHZlcnNpb24gJyArIG5vZGUudmVyc2lvbiArICcgb2YgTm9kZS5qcydcbiAgICAgIClcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFsnbm9kZSAnICsgbWF0Y2hlZFttYXRjaGVkLmxlbmd0aCAtIDFdXVxufVxuXG5mdW5jdGlvbiBzaW5jZVF1ZXJ5KGNvbnRleHQsIG5vZGUpIHtcbiAgdmFyIHllYXIgPSBwYXJzZUludChub2RlLnllYXIpXG4gIHZhciBtb250aCA9IHBhcnNlSW50KG5vZGUubW9udGggfHwgJzAxJykgLSAxXG4gIHZhciBkYXkgPSBwYXJzZUludChub2RlLmRheSB8fCAnMDEnKVxuICByZXR1cm4gZmlsdGVyQnlZZWFyKERhdGUuVVRDKHllYXIsIG1vbnRoLCBkYXksIDAsIDAsIDApLCBjb250ZXh0KVxufVxuXG5mdW5jdGlvbiBjb3ZlclF1ZXJ5KGNvbnRleHQsIG5vZGUpIHtcbiAgdmFyIGNvdmVyYWdlID0gcGFyc2VGbG9hdChub2RlLmNvdmVyYWdlKVxuICB2YXIgdXNhZ2UgPSBicm93c2Vyc2xpc3QudXNhZ2UuZ2xvYmFsXG4gIGlmIChub2RlLnBsYWNlKSB7XG4gICAgaWYgKG5vZGUucGxhY2UubWF0Y2goL15teVxccytzdGF0cyQvaSkpIHtcbiAgICAgIGlmICghY29udGV4dC5jdXN0b21Vc2FnZSkge1xuICAgICAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoJ0N1c3RvbSB1c2FnZSBzdGF0aXN0aWNzIHdhcyBub3QgcHJvdmlkZWQnKVxuICAgICAgfVxuICAgICAgdXNhZ2UgPSBjb250ZXh0LmN1c3RvbVVzYWdlXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwbGFjZVxuICAgICAgaWYgKG5vZGUucGxhY2UubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIHBsYWNlID0gbm9kZS5wbGFjZS50b1VwcGVyQ2FzZSgpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwbGFjZSA9IG5vZGUucGxhY2UudG9Mb3dlckNhc2UoKVxuICAgICAgfVxuICAgICAgZW52LmxvYWRDb3VudHJ5KGJyb3dzZXJzbGlzdC51c2FnZSwgcGxhY2UsIGJyb3dzZXJzbGlzdC5kYXRhKVxuICAgICAgdXNhZ2UgPSBicm93c2Vyc2xpc3QudXNhZ2VbcGxhY2VdXG4gICAgfVxuICB9XG4gIHZhciB2ZXJzaW9ucyA9IE9iamVjdC5rZXlzKHVzYWdlKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIHVzYWdlW2JdIC0gdXNhZ2VbYV1cbiAgfSlcbiAgdmFyIGNvdmVyYWdlZCA9IDBcbiAgdmFyIHJlc3VsdCA9IFtdXG4gIHZhciB2ZXJzaW9uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmVyc2lvbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2ZXJzaW9uID0gdmVyc2lvbnNbaV1cbiAgICBpZiAodXNhZ2VbdmVyc2lvbl0gPT09IDApIGJyZWFrXG4gICAgY292ZXJhZ2VkICs9IHVzYWdlW3ZlcnNpb25dXG4gICAgcmVzdWx0LnB1c2godmVyc2lvbilcbiAgICBpZiAoY292ZXJhZ2VkID49IGNvdmVyYWdlKSBicmVha1xuICB9XG4gIHJldHVybiByZXN1bHRcbn1cblxudmFyIFFVRVJJRVMgPSB7XG4gIGxhc3RfbWFqb3JfdmVyc2lvbnM6IHtcbiAgICBtYXRjaGVzOiBbJ3ZlcnNpb25zJ10sXG4gICAgcmVnZXhwOiAvXmxhc3RcXHMrKFxcZCspXFxzK21ham9yXFxzK3ZlcnNpb25zPyQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoYWdlbnRzKS5yZWR1Y2UoZnVuY3Rpb24gKHNlbGVjdGVkLCBuYW1lKSB7XG4gICAgICAgIHZhciBkYXRhID0gYnlOYW1lKG5hbWUsIGNvbnRleHQpXG4gICAgICAgIGlmICghZGF0YSkgcmV0dXJuIHNlbGVjdGVkXG4gICAgICAgIHZhciBsaXN0ID0gZ2V0TWFqb3JWZXJzaW9ucyhkYXRhLnJlbGVhc2VkLCBub2RlLnZlcnNpb25zKVxuICAgICAgICBsaXN0ID0gbGlzdC5tYXAobmFtZU1hcHBlcihkYXRhLm5hbWUpKVxuICAgICAgICBpZiAoZGF0YS5uYW1lID09PSAnYW5kcm9pZCcpIHtcbiAgICAgICAgICBsaXN0ID0gZmlsdGVyQW5kcm9pZChsaXN0LCBub2RlLnZlcnNpb25zLCBjb250ZXh0KVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWxlY3RlZC5jb25jYXQobGlzdClcbiAgICAgIH0sIFtdKVxuICAgIH1cbiAgfSxcbiAgbGFzdF92ZXJzaW9uczoge1xuICAgIG1hdGNoZXM6IFsndmVyc2lvbnMnXSxcbiAgICByZWdleHA6IC9ebGFzdFxccysoXFxkKylcXHMrdmVyc2lvbnM/JC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhhZ2VudHMpLnJlZHVjZShmdW5jdGlvbiAoc2VsZWN0ZWQsIG5hbWUpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBieU5hbWUobmFtZSwgY29udGV4dClcbiAgICAgICAgaWYgKCFkYXRhKSByZXR1cm4gc2VsZWN0ZWRcbiAgICAgICAgdmFyIGxpc3QgPSBkYXRhLnJlbGVhc2VkLnNsaWNlKC1ub2RlLnZlcnNpb25zKVxuICAgICAgICBsaXN0ID0gbGlzdC5tYXAobmFtZU1hcHBlcihkYXRhLm5hbWUpKVxuICAgICAgICBpZiAoZGF0YS5uYW1lID09PSAnYW5kcm9pZCcpIHtcbiAgICAgICAgICBsaXN0ID0gZmlsdGVyQW5kcm9pZChsaXN0LCBub2RlLnZlcnNpb25zLCBjb250ZXh0KVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWxlY3RlZC5jb25jYXQobGlzdClcbiAgICAgIH0sIFtdKVxuICAgIH1cbiAgfSxcbiAgbGFzdF9lbGVjdHJvbl9tYWpvcl92ZXJzaW9uczoge1xuICAgIG1hdGNoZXM6IFsndmVyc2lvbnMnXSxcbiAgICByZWdleHA6IC9ebGFzdFxccysoXFxkKylcXHMrZWxlY3Ryb25cXHMrbWFqb3JcXHMrdmVyc2lvbnM/JC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIHZhciB2YWxpZFZlcnNpb25zID0gZ2V0TWFqb3JWZXJzaW9ucyhPYmplY3Qua2V5cyhlMmMpLCBub2RlLnZlcnNpb25zKVxuICAgICAgcmV0dXJuIHZhbGlkVmVyc2lvbnMubWFwKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgIHJldHVybiAnY2hyb21lICcgKyBlMmNbaV1cbiAgICAgIH0pXG4gICAgfVxuICB9LFxuICBsYXN0X25vZGVfbWFqb3JfdmVyc2lvbnM6IHtcbiAgICBtYXRjaGVzOiBbJ3ZlcnNpb25zJ10sXG4gICAgcmVnZXhwOiAvXmxhc3RcXHMrKFxcZCspXFxzK25vZGVcXHMrbWFqb3JcXHMrdmVyc2lvbnM/JC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIHJldHVybiBnZXRNYWpvclZlcnNpb25zKGJyb3dzZXJzbGlzdC5ub2RlVmVyc2lvbnMsIG5vZGUudmVyc2lvbnMpLm1hcChcbiAgICAgICAgZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgICByZXR1cm4gJ25vZGUgJyArIHZlcnNpb25cbiAgICAgICAgfVxuICAgICAgKVxuICAgIH1cbiAgfSxcbiAgbGFzdF9icm93c2VyX21ham9yX3ZlcnNpb25zOiB7XG4gICAgbWF0Y2hlczogWyd2ZXJzaW9ucycsICdicm93c2VyJ10sXG4gICAgcmVnZXhwOiAvXmxhc3RcXHMrKFxcZCspXFxzKyhcXHcrKVxccyttYWpvclxccyt2ZXJzaW9ucz8kL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIGRhdGEgPSBjaGVja05hbWUobm9kZS5icm93c2VyLCBjb250ZXh0KVxuICAgICAgdmFyIHZhbGlkVmVyc2lvbnMgPSBnZXRNYWpvclZlcnNpb25zKGRhdGEucmVsZWFzZWQsIG5vZGUudmVyc2lvbnMpXG4gICAgICB2YXIgbGlzdCA9IHZhbGlkVmVyc2lvbnMubWFwKG5hbWVNYXBwZXIoZGF0YS5uYW1lKSlcbiAgICAgIGlmIChkYXRhLm5hbWUgPT09ICdhbmRyb2lkJykge1xuICAgICAgICBsaXN0ID0gZmlsdGVyQW5kcm9pZChsaXN0LCBub2RlLnZlcnNpb25zLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgcmV0dXJuIGxpc3RcbiAgICB9XG4gIH0sXG4gIGxhc3RfZWxlY3Ryb25fdmVyc2lvbnM6IHtcbiAgICBtYXRjaGVzOiBbJ3ZlcnNpb25zJ10sXG4gICAgcmVnZXhwOiAvXmxhc3RcXHMrKFxcZCspXFxzK2VsZWN0cm9uXFxzK3ZlcnNpb25zPyQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoZTJjKVxuICAgICAgICAuc2xpY2UoLW5vZGUudmVyc2lvbnMpXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICByZXR1cm4gJ2Nocm9tZSAnICsgZTJjW2ldXG4gICAgICAgIH0pXG4gICAgfVxuICB9LFxuICBsYXN0X25vZGVfdmVyc2lvbnM6IHtcbiAgICBtYXRjaGVzOiBbJ3ZlcnNpb25zJ10sXG4gICAgcmVnZXhwOiAvXmxhc3RcXHMrKFxcZCspXFxzK25vZGVcXHMrdmVyc2lvbnM/JC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIHJldHVybiBicm93c2Vyc2xpc3Qubm9kZVZlcnNpb25zXG4gICAgICAgIC5zbGljZSgtbm9kZS52ZXJzaW9ucylcbiAgICAgICAgLm1hcChmdW5jdGlvbiAodmVyc2lvbikge1xuICAgICAgICAgIHJldHVybiAnbm9kZSAnICsgdmVyc2lvblxuICAgICAgICB9KVxuICAgIH1cbiAgfSxcbiAgbGFzdF9icm93c2VyX3ZlcnNpb25zOiB7XG4gICAgbWF0Y2hlczogWyd2ZXJzaW9ucycsICdicm93c2VyJ10sXG4gICAgcmVnZXhwOiAvXmxhc3RcXHMrKFxcZCspXFxzKyhcXHcrKVxccyt2ZXJzaW9ucz8kL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIGRhdGEgPSBjaGVja05hbWUobm9kZS5icm93c2VyLCBjb250ZXh0KVxuICAgICAgdmFyIGxpc3QgPSBkYXRhLnJlbGVhc2VkLnNsaWNlKC1ub2RlLnZlcnNpb25zKS5tYXAobmFtZU1hcHBlcihkYXRhLm5hbWUpKVxuICAgICAgaWYgKGRhdGEubmFtZSA9PT0gJ2FuZHJvaWQnKSB7XG4gICAgICAgIGxpc3QgPSBmaWx0ZXJBbmRyb2lkKGxpc3QsIG5vZGUudmVyc2lvbnMsIGNvbnRleHQpXG4gICAgICB9XG4gICAgICByZXR1cm4gbGlzdFxuICAgIH1cbiAgfSxcbiAgdW5yZWxlYXNlZF92ZXJzaW9uczoge1xuICAgIG1hdGNoZXM6IFtdLFxuICAgIHJlZ2V4cDogL151bnJlbGVhc2VkXFxzK3ZlcnNpb25zJC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhhZ2VudHMpLnJlZHVjZShmdW5jdGlvbiAoc2VsZWN0ZWQsIG5hbWUpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBieU5hbWUobmFtZSwgY29udGV4dClcbiAgICAgICAgaWYgKCFkYXRhKSByZXR1cm4gc2VsZWN0ZWRcbiAgICAgICAgdmFyIGxpc3QgPSBkYXRhLnZlcnNpb25zLmZpbHRlcihmdW5jdGlvbiAodikge1xuICAgICAgICAgIHJldHVybiBkYXRhLnJlbGVhc2VkLmluZGV4T2YodikgPT09IC0xXG4gICAgICAgIH0pXG4gICAgICAgIGxpc3QgPSBsaXN0Lm1hcChuYW1lTWFwcGVyKGRhdGEubmFtZSkpXG4gICAgICAgIHJldHVybiBzZWxlY3RlZC5jb25jYXQobGlzdClcbiAgICAgIH0sIFtdKVxuICAgIH1cbiAgfSxcbiAgdW5yZWxlYXNlZF9lbGVjdHJvbl92ZXJzaW9uczoge1xuICAgIG1hdGNoZXM6IFtdLFxuICAgIHJlZ2V4cDogL151bnJlbGVhc2VkXFxzK2VsZWN0cm9uXFxzK3ZlcnNpb25zPyQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbXVxuICAgIH1cbiAgfSxcbiAgdW5yZWxlYXNlZF9icm93c2VyX3ZlcnNpb25zOiB7XG4gICAgbWF0Y2hlczogWydicm93c2VyJ10sXG4gICAgcmVnZXhwOiAvXnVucmVsZWFzZWRcXHMrKFxcdyspXFxzK3ZlcnNpb25zPyQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICB2YXIgZGF0YSA9IGNoZWNrTmFtZShub2RlLmJyb3dzZXIsIGNvbnRleHQpXG4gICAgICByZXR1cm4gZGF0YS52ZXJzaW9uc1xuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgcmV0dXJuIGRhdGEucmVsZWFzZWQuaW5kZXhPZih2KSA9PT0gLTFcbiAgICAgICAgfSlcbiAgICAgICAgLm1hcChuYW1lTWFwcGVyKGRhdGEubmFtZSkpXG4gICAgfVxuICB9LFxuICBsYXN0X3llYXJzOiB7XG4gICAgbWF0Y2hlczogWyd5ZWFycyddLFxuICAgIHJlZ2V4cDogL15sYXN0XFxzKyhcXGQqLj9cXGQrKVxccyt5ZWFycz8kL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgcmV0dXJuIGZpbHRlckJ5WWVhcihEYXRlLm5vdygpIC0gWUVBUiAqIG5vZGUueWVhcnMsIGNvbnRleHQpXG4gICAgfVxuICB9LFxuICBzaW5jZV95OiB7XG4gICAgbWF0Y2hlczogWyd5ZWFyJ10sXG4gICAgcmVnZXhwOiAvXnNpbmNlIChcXGQrKSQvaSxcbiAgICBzZWxlY3Q6IHNpbmNlUXVlcnlcbiAgfSxcbiAgc2luY2VfeV9tOiB7XG4gICAgbWF0Y2hlczogWyd5ZWFyJywgJ21vbnRoJ10sXG4gICAgcmVnZXhwOiAvXnNpbmNlIChcXGQrKS0oXFxkKykkL2ksXG4gICAgc2VsZWN0OiBzaW5jZVF1ZXJ5XG4gIH0sXG4gIHNpbmNlX3lfbV9kOiB7XG4gICAgbWF0Y2hlczogWyd5ZWFyJywgJ21vbnRoJywgJ2RheSddLFxuICAgIHJlZ2V4cDogL15zaW5jZSAoXFxkKyktKFxcZCspLShcXGQrKSQvaSxcbiAgICBzZWxlY3Q6IHNpbmNlUXVlcnlcbiAgfSxcbiAgcG9wdWxhcml0eToge1xuICAgIG1hdGNoZXM6IFsnc2lnbicsICdwb3B1bGFyaXR5J10sXG4gICAgcmVnZXhwOiAvXig+PT98PD0/KVxccyooXFxkK3xcXGQrXFwuXFxkK3xcXC5cXGQrKSUkLyxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICB2YXIgcG9wdWxhcml0eSA9IHBhcnNlRmxvYXQobm9kZS5wb3B1bGFyaXR5KVxuICAgICAgdmFyIHVzYWdlID0gYnJvd3NlcnNsaXN0LnVzYWdlLmdsb2JhbFxuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHVzYWdlKS5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwgdmVyc2lvbikge1xuICAgICAgICBpZiAobm9kZS5zaWduID09PSAnPicpIHtcbiAgICAgICAgICBpZiAodXNhZ2VbdmVyc2lvbl0gPiBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChub2RlLnNpZ24gPT09ICc8Jykge1xuICAgICAgICAgIGlmICh1c2FnZVt2ZXJzaW9uXSA8IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKG5vZGUuc2lnbiA9PT0gJzw9Jykge1xuICAgICAgICAgIGlmICh1c2FnZVt2ZXJzaW9uXSA8PSBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh1c2FnZVt2ZXJzaW9uXSA+PSBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2godmVyc2lvbilcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICB9LCBbXSlcbiAgICB9XG4gIH0sXG4gIHBvcHVsYXJpdHlfaW5fbXlfc3RhdHM6IHtcbiAgICBtYXRjaGVzOiBbJ3NpZ24nLCAncG9wdWxhcml0eSddLFxuICAgIHJlZ2V4cDogL14oPj0/fDw9PylcXHMqKFxcZCt8XFxkK1xcLlxcZCt8XFwuXFxkKyklXFxzK2luXFxzK215XFxzK3N0YXRzJC8sXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIHBvcHVsYXJpdHkgPSBwYXJzZUZsb2F0KG5vZGUucG9wdWxhcml0eSlcbiAgICAgIGlmICghY29udGV4dC5jdXN0b21Vc2FnZSkge1xuICAgICAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoJ0N1c3RvbSB1c2FnZSBzdGF0aXN0aWNzIHdhcyBub3QgcHJvdmlkZWQnKVxuICAgICAgfVxuICAgICAgdmFyIHVzYWdlID0gY29udGV4dC5jdXN0b21Vc2FnZVxuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHVzYWdlKS5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwgdmVyc2lvbikge1xuICAgICAgICB2YXIgcGVyY2VudGFnZSA9IHVzYWdlW3ZlcnNpb25dXG4gICAgICAgIGlmIChwZXJjZW50YWdlID09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobm9kZS5zaWduID09PSAnPicpIHtcbiAgICAgICAgICBpZiAocGVyY2VudGFnZSA+IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKG5vZGUuc2lnbiA9PT0gJzwnKSB7XG4gICAgICAgICAgaWYgKHBlcmNlbnRhZ2UgPCBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChub2RlLnNpZ24gPT09ICc8PScpIHtcbiAgICAgICAgICBpZiAocGVyY2VudGFnZSA8PSBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50YWdlID49IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgIH0sIFtdKVxuICAgIH1cbiAgfSxcbiAgcG9wdWxhcml0eV9pbl9jb25maWdfc3RhdHM6IHtcbiAgICBtYXRjaGVzOiBbJ3NpZ24nLCAncG9wdWxhcml0eScsICdjb25maWcnXSxcbiAgICByZWdleHA6IC9eKD49P3w8PT8pXFxzKihcXGQrfFxcZCtcXC5cXGQrfFxcLlxcZCspJVxccytpblxccysoXFxTKylcXHMrc3RhdHMkLyxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICB2YXIgcG9wdWxhcml0eSA9IHBhcnNlRmxvYXQobm9kZS5wb3B1bGFyaXR5KVxuICAgICAgdmFyIHN0YXRzID0gZW52LmxvYWRTdGF0KGNvbnRleHQsIG5vZGUuY29uZmlnLCBicm93c2Vyc2xpc3QuZGF0YSlcbiAgICAgIGlmIChzdGF0cykge1xuICAgICAgICBjb250ZXh0LmN1c3RvbVVzYWdlID0ge31cbiAgICAgICAgZm9yICh2YXIgYnJvd3NlciBpbiBzdGF0cykge1xuICAgICAgICAgIGZpbGxVc2FnZShjb250ZXh0LmN1c3RvbVVzYWdlLCBicm93c2VyLCBzdGF0c1ticm93c2VyXSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKCFjb250ZXh0LmN1c3RvbVVzYWdlKSB7XG4gICAgICAgIHRocm93IG5ldyBCcm93c2Vyc2xpc3RFcnJvcignQ3VzdG9tIHVzYWdlIHN0YXRpc3RpY3Mgd2FzIG5vdCBwcm92aWRlZCcpXG4gICAgICB9XG4gICAgICB2YXIgdXNhZ2UgPSBjb250ZXh0LmN1c3RvbVVzYWdlXG4gICAgICByZXR1cm4gT2JqZWN0LmtleXModXNhZ2UpLnJlZHVjZShmdW5jdGlvbiAocmVzdWx0LCB2ZXJzaW9uKSB7XG4gICAgICAgIHZhciBwZXJjZW50YWdlID0gdXNhZ2VbdmVyc2lvbl1cbiAgICAgICAgaWYgKHBlcmNlbnRhZ2UgPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChub2RlLnNpZ24gPT09ICc+Jykge1xuICAgICAgICAgIGlmIChwZXJjZW50YWdlID4gcG9wdWxhcml0eSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godmVyc2lvbilcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAobm9kZS5zaWduID09PSAnPCcpIHtcbiAgICAgICAgICBpZiAocGVyY2VudGFnZSA8IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKG5vZGUuc2lnbiA9PT0gJzw9Jykge1xuICAgICAgICAgIGlmIChwZXJjZW50YWdlIDw9IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHBlcmNlbnRhZ2UgPj0gcG9wdWxhcml0eSkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdFxuICAgICAgfSwgW10pXG4gICAgfVxuICB9LFxuICBwb3B1bGFyaXR5X2luX3BsYWNlOiB7XG4gICAgbWF0Y2hlczogWydzaWduJywgJ3BvcHVsYXJpdHknLCAncGxhY2UnXSxcbiAgICByZWdleHA6IC9eKD49P3w8PT8pXFxzKihcXGQrfFxcZCtcXC5cXGQrfFxcLlxcZCspJVxccytpblxccysoKGFsdC0pP1xcd1xcdykkLyxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICB2YXIgcG9wdWxhcml0eSA9IHBhcnNlRmxvYXQobm9kZS5wb3B1bGFyaXR5KVxuICAgICAgdmFyIHBsYWNlID0gbm9kZS5wbGFjZVxuICAgICAgaWYgKHBsYWNlLmxlbmd0aCA9PT0gMikge1xuICAgICAgICBwbGFjZSA9IHBsYWNlLnRvVXBwZXJDYXNlKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBsYWNlID0gcGxhY2UudG9Mb3dlckNhc2UoKVxuICAgICAgfVxuICAgICAgZW52LmxvYWRDb3VudHJ5KGJyb3dzZXJzbGlzdC51c2FnZSwgcGxhY2UsIGJyb3dzZXJzbGlzdC5kYXRhKVxuICAgICAgdmFyIHVzYWdlID0gYnJvd3NlcnNsaXN0LnVzYWdlW3BsYWNlXVxuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHVzYWdlKS5yZWR1Y2UoZnVuY3Rpb24gKHJlc3VsdCwgdmVyc2lvbikge1xuICAgICAgICB2YXIgcGVyY2VudGFnZSA9IHVzYWdlW3ZlcnNpb25dXG4gICAgICAgIGlmIChwZXJjZW50YWdlID09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobm9kZS5zaWduID09PSAnPicpIHtcbiAgICAgICAgICBpZiAocGVyY2VudGFnZSA+IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKG5vZGUuc2lnbiA9PT0gJzwnKSB7XG4gICAgICAgICAgaWYgKHBlcmNlbnRhZ2UgPCBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChub2RlLnNpZ24gPT09ICc8PScpIHtcbiAgICAgICAgICBpZiAocGVyY2VudGFnZSA8PSBwb3B1bGFyaXR5KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50YWdlID49IHBvcHVsYXJpdHkpIHtcbiAgICAgICAgICByZXN1bHQucHVzaCh2ZXJzaW9uKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgIH0sIFtdKVxuICAgIH1cbiAgfSxcbiAgY292ZXI6IHtcbiAgICBtYXRjaGVzOiBbJ2NvdmVyYWdlJ10sXG4gICAgcmVnZXhwOiAvXmNvdmVyXFxzKyhcXGQrfFxcZCtcXC5cXGQrfFxcLlxcZCspJSQvaSxcbiAgICBzZWxlY3Q6IGNvdmVyUXVlcnlcbiAgfSxcbiAgY292ZXJfaW46IHtcbiAgICBtYXRjaGVzOiBbJ2NvdmVyYWdlJywgJ3BsYWNlJ10sXG4gICAgcmVnZXhwOiAvXmNvdmVyXFxzKyhcXGQrfFxcZCtcXC5cXGQrfFxcLlxcZCspJVxccytpblxccysobXlcXHMrc3RhdHN8KGFsdC0pP1xcd1xcdykkL2ksXG4gICAgc2VsZWN0OiBjb3ZlclF1ZXJ5XG4gIH0sXG4gIHN1cHBvcnRzOiB7XG4gICAgbWF0Y2hlczogWydmZWF0dXJlJ10sXG4gICAgcmVnZXhwOiAvXnN1cHBvcnRzXFxzKyhbXFx3LV0rKSQvLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIGVudi5sb2FkRmVhdHVyZShicm93c2Vyc2xpc3QuY2FjaGUsIG5vZGUuZmVhdHVyZSlcbiAgICAgIHZhciBmZWF0dXJlcyA9IGJyb3dzZXJzbGlzdC5jYWNoZVtub2RlLmZlYXR1cmVdXG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoZmVhdHVyZXMpLnJlZHVjZShmdW5jdGlvbiAocmVzdWx0LCB2ZXJzaW9uKSB7XG4gICAgICAgIHZhciBmbGFncyA9IGZlYXR1cmVzW3ZlcnNpb25dXG4gICAgICAgIGlmIChmbGFncy5pbmRleE9mKCd5JykgPj0gMCB8fCBmbGFncy5pbmRleE9mKCdhJykgPj0gMCkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKHZlcnNpb24pXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdFxuICAgICAgfSwgW10pXG4gICAgfVxuICB9LFxuICBlbGVjdHJvbl9yYW5nZToge1xuICAgIG1hdGNoZXM6IFsnZnJvbScsICd0byddLFxuICAgIHJlZ2V4cDogL15lbGVjdHJvblxccysoW1xcZC5dKylcXHMqLVxccyooW1xcZC5dKykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIGZyb21Ub1VzZSA9IG5vcm1hbGl6ZUVsZWN0cm9uKG5vZGUuZnJvbSlcbiAgICAgIHZhciB0b1RvVXNlID0gbm9ybWFsaXplRWxlY3Ryb24obm9kZS50bylcbiAgICAgIHZhciBmcm9tID0gcGFyc2VGbG9hdChub2RlLmZyb20pXG4gICAgICB2YXIgdG8gPSBwYXJzZUZsb2F0KG5vZGUudG8pXG4gICAgICBpZiAoIWUyY1tmcm9tVG9Vc2VdKSB7XG4gICAgICAgIHRocm93IG5ldyBCcm93c2Vyc2xpc3RFcnJvcignVW5rbm93biB2ZXJzaW9uICcgKyBmcm9tICsgJyBvZiBlbGVjdHJvbicpXG4gICAgICB9XG4gICAgICBpZiAoIWUyY1t0b1RvVXNlXSkge1xuICAgICAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoJ1Vua25vd24gdmVyc2lvbiAnICsgdG8gKyAnIG9mIGVsZWN0cm9uJylcbiAgICAgIH1cbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhlMmMpXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICB2YXIgcGFyc2VkID0gcGFyc2VGbG9hdChpKVxuICAgICAgICAgIHJldHVybiBwYXJzZWQgPj0gZnJvbSAmJiBwYXJzZWQgPD0gdG9cbiAgICAgICAgfSlcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgICAgIHJldHVybiAnY2hyb21lICcgKyBlMmNbaV1cbiAgICAgICAgfSlcbiAgICB9XG4gIH0sXG4gIG5vZGVfcmFuZ2U6IHtcbiAgICBtYXRjaGVzOiBbJ2Zyb20nLCAndG8nXSxcbiAgICByZWdleHA6IC9ebm9kZVxccysoW1xcZC5dKylcXHMqLVxccyooW1xcZC5dKykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgcmV0dXJuIGJyb3dzZXJzbGlzdC5ub2RlVmVyc2lvbnNcbiAgICAgICAgLmZpbHRlcihzZW12ZXJGaWx0ZXJMb29zZSgnPj0nLCBub2RlLmZyb20pKVxuICAgICAgICAuZmlsdGVyKHNlbXZlckZpbHRlckxvb3NlKCc8PScsIG5vZGUudG8pKVxuICAgICAgICAubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgcmV0dXJuICdub2RlICcgKyB2XG4gICAgICAgIH0pXG4gICAgfVxuICB9LFxuICBicm93c2VyX3JhbmdlOiB7XG4gICAgbWF0Y2hlczogWydicm93c2VyJywgJ2Zyb20nLCAndG8nXSxcbiAgICByZWdleHA6IC9eKFxcdyspXFxzKyhbXFxkLl0rKVxccyotXFxzKihbXFxkLl0rKSQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0LCBub2RlKSB7XG4gICAgICB2YXIgZGF0YSA9IGNoZWNrTmFtZShub2RlLmJyb3dzZXIsIGNvbnRleHQpXG4gICAgICB2YXIgZnJvbSA9IHBhcnNlRmxvYXQobm9ybWFsaXplVmVyc2lvbihkYXRhLCBub2RlLmZyb20pIHx8IG5vZGUuZnJvbSlcbiAgICAgIHZhciB0byA9IHBhcnNlRmxvYXQobm9ybWFsaXplVmVyc2lvbihkYXRhLCBub2RlLnRvKSB8fCBub2RlLnRvKVxuICAgICAgZnVuY3Rpb24gZmlsdGVyKHYpIHtcbiAgICAgICAgdmFyIHBhcnNlZCA9IHBhcnNlRmxvYXQodilcbiAgICAgICAgcmV0dXJuIHBhcnNlZCA+PSBmcm9tICYmIHBhcnNlZCA8PSB0b1xuICAgICAgfVxuICAgICAgcmV0dXJuIGRhdGEucmVsZWFzZWQuZmlsdGVyKGZpbHRlcikubWFwKG5hbWVNYXBwZXIoZGF0YS5uYW1lKSlcbiAgICB9XG4gIH0sXG4gIGVsZWN0cm9uX3JheToge1xuICAgIG1hdGNoZXM6IFsnc2lnbicsICd2ZXJzaW9uJ10sXG4gICAgcmVnZXhwOiAvXmVsZWN0cm9uXFxzKig+PT98PD0/KVxccyooW1xcZC5dKykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIHZlcnNpb25Ub1VzZSA9IG5vcm1hbGl6ZUVsZWN0cm9uKG5vZGUudmVyc2lvbilcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhlMmMpXG4gICAgICAgIC5maWx0ZXIoZ2VuZXJhdGVGaWx0ZXIobm9kZS5zaWduLCB2ZXJzaW9uVG9Vc2UpKVxuICAgICAgICAubWFwKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgcmV0dXJuICdjaHJvbWUgJyArIGUyY1tpXVxuICAgICAgICB9KVxuICAgIH1cbiAgfSxcbiAgbm9kZV9yYXk6IHtcbiAgICBtYXRjaGVzOiBbJ3NpZ24nLCAndmVyc2lvbiddLFxuICAgIHJlZ2V4cDogL15ub2RlXFxzKig+PT98PD0/KVxccyooW1xcZC5dKykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgcmV0dXJuIGJyb3dzZXJzbGlzdC5ub2RlVmVyc2lvbnNcbiAgICAgICAgLmZpbHRlcihnZW5lcmF0ZVNlbXZlckZpbHRlcihub2RlLnNpZ24sIG5vZGUudmVyc2lvbikpXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICByZXR1cm4gJ25vZGUgJyArIHZcbiAgICAgICAgfSlcbiAgICB9XG4gIH0sXG4gIGJyb3dzZXJfcmF5OiB7XG4gICAgbWF0Y2hlczogWydicm93c2VyJywgJ3NpZ24nLCAndmVyc2lvbiddLFxuICAgIHJlZ2V4cDogL14oXFx3KylcXHMqKD49P3w8PT8pXFxzKihbXFxkLl0rKSQvLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIHZhciB2ZXJzaW9uID0gbm9kZS52ZXJzaW9uXG4gICAgICB2YXIgZGF0YSA9IGNoZWNrTmFtZShub2RlLmJyb3dzZXIsIGNvbnRleHQpXG4gICAgICB2YXIgYWxpYXMgPSBicm93c2Vyc2xpc3QudmVyc2lvbkFsaWFzZXNbZGF0YS5uYW1lXVt2ZXJzaW9uXVxuICAgICAgaWYgKGFsaWFzKSB2ZXJzaW9uID0gYWxpYXNcbiAgICAgIHJldHVybiBkYXRhLnJlbGVhc2VkXG4gICAgICAgIC5maWx0ZXIoZ2VuZXJhdGVGaWx0ZXIobm9kZS5zaWduLCB2ZXJzaW9uKSlcbiAgICAgICAgLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICAgIHJldHVybiBkYXRhLm5hbWUgKyAnICcgKyB2XG4gICAgICAgIH0pXG4gICAgfVxuICB9LFxuICBmaXJlZm94X2Vzcjoge1xuICAgIG1hdGNoZXM6IFtdLFxuICAgIHJlZ2V4cDogL14oZmlyZWZveHxmZnxmeClcXHMrZXNyJC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFsnZmlyZWZveCAxMDInXVxuICAgIH1cbiAgfSxcbiAgb3BlcmFfbWluaV9hbGw6IHtcbiAgICBtYXRjaGVzOiBbXSxcbiAgICByZWdleHA6IC8ob3BlcmFtaW5pfG9wX21pbmkpXFxzK2FsbC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFsnb3BfbWluaSBhbGwnXVxuICAgIH1cbiAgfSxcbiAgZWxlY3Ryb25fdmVyc2lvbjoge1xuICAgIG1hdGNoZXM6IFsndmVyc2lvbiddLFxuICAgIHJlZ2V4cDogL15lbGVjdHJvblxccysoW1xcZC5dKykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIHZlcnNpb25Ub1VzZSA9IG5vcm1hbGl6ZUVsZWN0cm9uKG5vZGUudmVyc2lvbilcbiAgICAgIHZhciBjaHJvbWUgPSBlMmNbdmVyc2lvblRvVXNlXVxuICAgICAgaWYgKCFjaHJvbWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEJyb3dzZXJzbGlzdEVycm9yKFxuICAgICAgICAgICdVbmtub3duIHZlcnNpb24gJyArIG5vZGUudmVyc2lvbiArICcgb2YgZWxlY3Ryb24nXG4gICAgICAgIClcbiAgICAgIH1cbiAgICAgIHJldHVybiBbJ2Nocm9tZSAnICsgY2hyb21lXVxuICAgIH1cbiAgfSxcbiAgbm9kZV9tYWpvcl92ZXJzaW9uOiB7XG4gICAgbWF0Y2hlczogWyd2ZXJzaW9uJ10sXG4gICAgcmVnZXhwOiAvXm5vZGVcXHMrKFxcZCspJC9pLFxuICAgIHNlbGVjdDogbm9kZVF1ZXJ5XG4gIH0sXG4gIG5vZGVfbWlub3JfdmVyc2lvbjoge1xuICAgIG1hdGNoZXM6IFsndmVyc2lvbiddLFxuICAgIHJlZ2V4cDogL15ub2RlXFxzKyhcXGQrXFwuXFxkKykkL2ksXG4gICAgc2VsZWN0OiBub2RlUXVlcnlcbiAgfSxcbiAgbm9kZV9wYXRjaF92ZXJzaW9uOiB7XG4gICAgbWF0Y2hlczogWyd2ZXJzaW9uJ10sXG4gICAgcmVnZXhwOiAvXm5vZGVcXHMrKFxcZCtcXC5cXGQrXFwuXFxkKykkL2ksXG4gICAgc2VsZWN0OiBub2RlUXVlcnlcbiAgfSxcbiAgY3VycmVudF9ub2RlOiB7XG4gICAgbWF0Y2hlczogW10sXG4gICAgcmVnZXhwOiAvXmN1cnJlbnRcXHMrbm9kZSQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICByZXR1cm4gW2Vudi5jdXJyZW50Tm9kZShyZXNvbHZlLCBjb250ZXh0KV1cbiAgICB9XG4gIH0sXG4gIG1haW50YWluZWRfbm9kZToge1xuICAgIG1hdGNoZXM6IFtdLFxuICAgIHJlZ2V4cDogL15tYWludGFpbmVkXFxzK25vZGVcXHMrdmVyc2lvbnMkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgdmFyIG5vdyA9IERhdGUubm93KClcbiAgICAgIHZhciBxdWVyaWVzID0gT2JqZWN0LmtleXMoanNFT0wpXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBub3cgPCBEYXRlLnBhcnNlKGpzRU9MW2tleV0uZW5kKSAmJlxuICAgICAgICAgICAgbm93ID4gRGF0ZS5wYXJzZShqc0VPTFtrZXldLnN0YXJ0KSAmJlxuICAgICAgICAgICAgaXNFb2xSZWxlYXNlZChrZXkpXG4gICAgICAgICAgKVxuICAgICAgICB9KVxuICAgICAgICAubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICByZXR1cm4gJ25vZGUgJyArIGtleS5zbGljZSgxKVxuICAgICAgICB9KVxuICAgICAgcmV0dXJuIHJlc29sdmUocXVlcmllcywgY29udGV4dClcbiAgICB9XG4gIH0sXG4gIHBoYW50b21qc18xXzk6IHtcbiAgICBtYXRjaGVzOiBbXSxcbiAgICByZWdleHA6IC9ecGhhbnRvbWpzXFxzKzEuOSQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbJ3NhZmFyaSA1J11cbiAgICB9XG4gIH0sXG4gIHBoYW50b21qc18yXzE6IHtcbiAgICBtYXRjaGVzOiBbXSxcbiAgICByZWdleHA6IC9ecGhhbnRvbWpzXFxzKzIuMSQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbJ3NhZmFyaSA2J11cbiAgICB9XG4gIH0sXG4gIGJyb3dzZXJfdmVyc2lvbjoge1xuICAgIG1hdGNoZXM6IFsnYnJvd3NlcicsICd2ZXJzaW9uJ10sXG4gICAgcmVnZXhwOiAvXihcXHcrKVxccysodHB8W1xcZC5dKykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgdmFyIHZlcnNpb24gPSBub2RlLnZlcnNpb25cbiAgICAgIGlmICgvXnRwJC9pLnRlc3QodmVyc2lvbikpIHZlcnNpb24gPSAnVFAnXG4gICAgICB2YXIgZGF0YSA9IGNoZWNrTmFtZShub2RlLmJyb3dzZXIsIGNvbnRleHQpXG4gICAgICB2YXIgYWxpYXMgPSBub3JtYWxpemVWZXJzaW9uKGRhdGEsIHZlcnNpb24pXG4gICAgICBpZiAoYWxpYXMpIHtcbiAgICAgICAgdmVyc2lvbiA9IGFsaWFzXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodmVyc2lvbi5pbmRleE9mKCcuJykgPT09IC0xKSB7XG4gICAgICAgICAgYWxpYXMgPSB2ZXJzaW9uICsgJy4wJ1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFsaWFzID0gdmVyc2lvbi5yZXBsYWNlKC9cXC4wJC8sICcnKVxuICAgICAgICB9XG4gICAgICAgIGFsaWFzID0gbm9ybWFsaXplVmVyc2lvbihkYXRhLCBhbGlhcylcbiAgICAgICAgaWYgKGFsaWFzKSB7XG4gICAgICAgICAgdmVyc2lvbiA9IGFsaWFzXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5pZ25vcmVVbmtub3duVmVyc2lvbnMpIHtcbiAgICAgICAgICByZXR1cm4gW11cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoXG4gICAgICAgICAgICAnVW5rbm93biB2ZXJzaW9uICcgKyB2ZXJzaW9uICsgJyBvZiAnICsgbm9kZS5icm93c2VyXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gW2RhdGEubmFtZSArICcgJyArIHZlcnNpb25dXG4gICAgfVxuICB9LFxuICBicm93c2Vyc2xpc3RfY29uZmlnOiB7XG4gICAgbWF0Y2hlczogW10sXG4gICAgcmVnZXhwOiAvXmJyb3dzZXJzbGlzdCBjb25maWckL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgcmV0dXJuIGJyb3dzZXJzbGlzdCh1bmRlZmluZWQsIGNvbnRleHQpXG4gICAgfVxuICB9LFxuICBleHRlbmRzOiB7XG4gICAgbWF0Y2hlczogWydjb25maWcnXSxcbiAgICByZWdleHA6IC9eZXh0ZW5kcyAoLispJC9pLFxuICAgIHNlbGVjdDogZnVuY3Rpb24gKGNvbnRleHQsIG5vZGUpIHtcbiAgICAgIHJldHVybiByZXNvbHZlKGVudi5sb2FkUXVlcmllcyhjb250ZXh0LCBub2RlLmNvbmZpZyksIGNvbnRleHQpXG4gICAgfVxuICB9LFxuICBkZWZhdWx0czoge1xuICAgIG1hdGNoZXM6IFtdLFxuICAgIHJlZ2V4cDogL15kZWZhdWx0cyQvaSxcbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICByZXR1cm4gcmVzb2x2ZShicm93c2Vyc2xpc3QuZGVmYXVsdHMsIGNvbnRleHQpXG4gICAgfVxuICB9LFxuICBkZWFkOiB7XG4gICAgbWF0Y2hlczogW10sXG4gICAgcmVnZXhwOiAvXmRlYWQkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgdmFyIGRlYWQgPSBbXG4gICAgICAgICdCYWlkdSA+PSAwJyxcbiAgICAgICAgJ2llIDw9IDExJyxcbiAgICAgICAgJ2llX21vYiA8PSAxMScsXG4gICAgICAgICdiYiA8PSAxMCcsXG4gICAgICAgICdvcF9tb2IgPD0gMTIuMScsXG4gICAgICAgICdzYW1zdW5nIDQnXG4gICAgICBdXG4gICAgICByZXR1cm4gcmVzb2x2ZShkZWFkLCBjb250ZXh0KVxuICAgIH1cbiAgfSxcbiAgdW5rbm93bjoge1xuICAgIG1hdGNoZXM6IFtdLFxuICAgIHJlZ2V4cDogL14oXFx3KykkL2ksXG4gICAgc2VsZWN0OiBmdW5jdGlvbiAoY29udGV4dCwgbm9kZSkge1xuICAgICAgaWYgKGJ5TmFtZShub2RlLnF1ZXJ5LCBjb250ZXh0KSkge1xuICAgICAgICB0aHJvdyBuZXcgQnJvd3NlcnNsaXN0RXJyb3IoXG4gICAgICAgICAgJ1NwZWNpZnkgdmVyc2lvbnMgaW4gQnJvd3NlcnNsaXN0IHF1ZXJ5IGZvciBicm93c2VyICcgKyBub2RlLnF1ZXJ5XG4gICAgICAgIClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IHVua25vd25RdWVyeShub2RlLnF1ZXJ5KVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBHZXQgYW5kIGNvbnZlcnQgQ2FuIEkgVXNlIGRhdGFcblxuOyhmdW5jdGlvbiAoKSB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWdlbnRzKSB7XG4gICAgdmFyIGJyb3dzZXIgPSBhZ2VudHNbbmFtZV1cbiAgICBicm93c2Vyc2xpc3QuZGF0YVtuYW1lXSA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICB2ZXJzaW9uczogbm9ybWFsaXplKGFnZW50c1tuYW1lXS52ZXJzaW9ucyksXG4gICAgICByZWxlYXNlZDogbm9ybWFsaXplKGFnZW50c1tuYW1lXS52ZXJzaW9ucy5zbGljZSgwLCAtMykpLFxuICAgICAgcmVsZWFzZURhdGU6IGFnZW50c1tuYW1lXS5yZWxlYXNlX2RhdGVcbiAgICB9XG4gICAgZmlsbFVzYWdlKGJyb3dzZXJzbGlzdC51c2FnZS5nbG9iYWwsIG5hbWUsIGJyb3dzZXIudXNhZ2VfZ2xvYmFsKVxuXG4gICAgYnJvd3NlcnNsaXN0LnZlcnNpb25BbGlhc2VzW25hbWVdID0ge31cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJyb3dzZXIudmVyc2lvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBmdWxsID0gYnJvd3Nlci52ZXJzaW9uc1tpXVxuICAgICAgaWYgKCFmdWxsKSBjb250aW51ZVxuXG4gICAgICBpZiAoZnVsbC5pbmRleE9mKCctJykgIT09IC0xKSB7XG4gICAgICAgIHZhciBpbnRlcnZhbCA9IGZ1bGwuc3BsaXQoJy0nKVxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGludGVydmFsLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgYnJvd3NlcnNsaXN0LnZlcnNpb25BbGlhc2VzW25hbWVdW2ludGVydmFsW2pdXSA9IGZ1bGxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGJyb3dzZXJzbGlzdC52ZXJzaW9uQWxpYXNlcy5vcF9tb2JbJzU5J10gPSAnNTgnXG5cbiAgYnJvd3NlcnNsaXN0Lm5vZGVWZXJzaW9ucyA9IGpzUmVsZWFzZXMubWFwKGZ1bmN0aW9uIChyZWxlYXNlKSB7XG4gICAgcmV0dXJuIHJlbGVhc2UudmVyc2lvblxuICB9KVxufSkoKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJyb3dzZXJzbGlzdFxuIiwidmFyIEFORF9SRUdFWFAgPSAvXlxccythbmRcXHMrKC4qKS9pXG52YXIgT1JfUkVHRVhQID0gL14oPzosXFxzKnxcXHMrb3JcXHMrKSguKikvaVxuXG5mdW5jdGlvbiBmbGF0dGVuKGFycmF5KSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShhcnJheSkpIHJldHVybiBbYXJyYXldXG4gIHJldHVybiBhcnJheS5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gYS5jb25jYXQoZmxhdHRlbihiKSlcbiAgfSwgW10pXG59XG5cbmZ1bmN0aW9uIGZpbmQoc3RyaW5nLCBwcmVkaWNhdGUpIHtcbiAgZm9yICh2YXIgbiA9IDEsIG1heCA9IHN0cmluZy5sZW5ndGg7IG4gPD0gbWF4OyBuKyspIHtcbiAgICB2YXIgcGFyc2VkID0gc3RyaW5nLnN1YnN0cigtbiwgbilcbiAgICBpZiAocHJlZGljYXRlKHBhcnNlZCwgbiwgbWF4KSkge1xuICAgICAgcmV0dXJuIHN0cmluZy5zbGljZSgwLCAtbilcbiAgICB9XG4gIH1cbiAgcmV0dXJuICcnXG59XG5cbmZ1bmN0aW9uIG1hdGNoUXVlcnkoYWxsLCBxdWVyeSkge1xuICB2YXIgbm9kZSA9IHsgcXVlcnk6IHF1ZXJ5IH1cbiAgaWYgKHF1ZXJ5LmluZGV4T2YoJ25vdCAnKSA9PT0gMCkge1xuICAgIG5vZGUubm90ID0gdHJ1ZVxuICAgIHF1ZXJ5ID0gcXVlcnkuc2xpY2UoNClcbiAgfVxuXG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKSB7XG4gICAgdmFyIHR5cGUgPSBhbGxbbmFtZV1cbiAgICB2YXIgbWF0Y2ggPSBxdWVyeS5tYXRjaCh0eXBlLnJlZ2V4cClcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIG5vZGUudHlwZSA9IG5hbWVcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHlwZS5tYXRjaGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIG5vZGVbdHlwZS5tYXRjaGVzW2ldXSA9IG1hdGNoW2kgKyAxXVxuICAgICAgfVxuICAgICAgcmV0dXJuIG5vZGVcbiAgICB9XG4gIH1cblxuICBub2RlLnR5cGUgPSAndW5rbm93bidcbiAgcmV0dXJuIG5vZGVcbn1cblxuZnVuY3Rpb24gbWF0Y2hCbG9jayhhbGwsIHN0cmluZywgcXMpIHtcbiAgdmFyIG5vZGVcbiAgcmV0dXJuIGZpbmQoc3RyaW5nLCBmdW5jdGlvbiAocGFyc2VkLCBuLCBtYXgpIHtcbiAgICBpZiAoQU5EX1JFR0VYUC50ZXN0KHBhcnNlZCkpIHtcbiAgICAgIG5vZGUgPSBtYXRjaFF1ZXJ5KGFsbCwgcGFyc2VkLm1hdGNoKEFORF9SRUdFWFApWzFdKVxuICAgICAgbm9kZS5jb21wb3NlID0gJ2FuZCdcbiAgICAgIHFzLnVuc2hpZnQobm9kZSlcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSBlbHNlIGlmIChPUl9SRUdFWFAudGVzdChwYXJzZWQpKSB7XG4gICAgICBub2RlID0gbWF0Y2hRdWVyeShhbGwsIHBhcnNlZC5tYXRjaChPUl9SRUdFWFApWzFdKVxuICAgICAgbm9kZS5jb21wb3NlID0gJ29yJ1xuICAgICAgcXMudW5zaGlmdChub2RlKVxuICAgICAgcmV0dXJuIHRydWVcbiAgICB9IGVsc2UgaWYgKG4gPT09IG1heCkge1xuICAgICAgbm9kZSA9IG1hdGNoUXVlcnkoYWxsLCBwYXJzZWQudHJpbSgpKVxuICAgICAgbm9kZS5jb21wb3NlID0gJ29yJ1xuICAgICAgcXMudW5zaGlmdChub2RlKVxuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2UoYWxsLCBxdWVyaWVzKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShxdWVyaWVzKSkgcXVlcmllcyA9IFtxdWVyaWVzXVxuICByZXR1cm4gZmxhdHRlbihcbiAgICBxdWVyaWVzLm1hcChmdW5jdGlvbiAoYmxvY2spIHtcbiAgICAgIHZhciBxcyA9IFtdXG4gICAgICBkbyB7XG4gICAgICAgIGJsb2NrID0gbWF0Y2hCbG9jayhhbGwsIGJsb2NrLCBxcylcbiAgICAgIH0gd2hpbGUgKGJsb2NrKVxuICAgICAgcmV0dXJuIHFzXG4gICAgfSlcbiAgKVxufVxuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e0o6MC4wMTMxMjE3LEQ6MC4wMDYyMTE1MixFOjAuMDQ5NzQ5MyxGOjAuMDU4MDQwOSxBOjAuMDA4MjkxNTYsQjowLjQwNjI4NixFQzowLjAwOTI5OH0sQjpcIm1zXCIsQzpbXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJFQ1wiLFwiSlwiLFwiRFwiLFwiRVwiLFwiRlwiLFwiQVwiLFwiQlwiLFwiXCIsXCJcIixcIlwiXSxFOlwiSUVcIixGOntFQzo5NjIzMjMyMDAsSjo5OTg4NzA0MDAsRDoxMTYxMTI5NjAwLEU6MTIzNzQyMDgwMCxGOjEzMDAwNjA4MDAsQToxMzQ2NzE2ODAwLEI6MTM4MTk2ODAwMH19LEI6e0E6e0M6MC4wMDQwODEsSzowLjAwNDI2NyxMOjAuMDA0MjY4LEc6MC4wMDQwODEsTTowLjAwMzcwMixOOjAuMDA0MDgxLE86MC4wMTYzMjQsUDowLFE6MC4wMDQyOTgsUjowLjAwOTQ0LFM6MC4wMDQwNDMsVDowLjAwNDA4MSxVOjAuMDAzODYxLFY6MC4wMDM4NjEsVzowLjAwNDA4MSxYOjAuMDAzOTQzLFk6MC4wMDQwODEsWjowLjAwMzk0MyxhOjAuMDAzOTQzLGI6MC4wMDgxNjIsYzowLjAwNDExOCxkOjAuMDAzOTM5LGU6MC4wMDM5NDMsaTowLjAwMzk0MyxqOjAuMDAzOTQzLGs6MC4wMDM5MjksbDowLjAwMzkwMSxtOjAuMDExODI5LG46MC4wMDc4ODYsbzowLjAwMzk0MyxwOjAuMDA4MTYyLHE6MC4wMDQwODEscjowLjAwNDA4MSxzOjAuMDA4MTYyLHQ6MC4wMTYzMjQsdTowLjA0NDg5MSx2OjAuMTE4MzQ5LGY6Mi4wNjA5LEg6Mi4xOTk2Nn0sQjpcIndlYmtpdFwiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJDXCIsXCJLXCIsXCJMXCIsXCJHXCIsXCJNXCIsXCJOXCIsXCJPXCIsXCJQXCIsXCJRXCIsXCJSXCIsXCJTXCIsXCJUXCIsXCJVXCIsXCJWXCIsXCJXXCIsXCJYXCIsXCJZXCIsXCJaXCIsXCJhXCIsXCJiXCIsXCJjXCIsXCJkXCIsXCJlXCIsXCJpXCIsXCJqXCIsXCJrXCIsXCJsXCIsXCJtXCIsXCJuXCIsXCJvXCIsXCJwXCIsXCJxXCIsXCJyXCIsXCJzXCIsXCJ0XCIsXCJ1XCIsXCJ2XCIsXCJmXCIsXCJIXCIsXCJcIixcIlwiLFwiXCJdLEU6XCJFZGdlXCIsRjp7QzoxNDM4MTI4MDAwLEs6MTQ0NzI4NjQwMCxMOjE0NzAwOTYwMDAsRzoxNDkxODY4ODAwLE06MTUwODE5ODQwMCxOOjE1MjUwNDY0MDAsTzoxNTQyMDY3MjAwLFA6MTU3OTA0NjQwMCxROjE1ODEwMzM2MDAsUjoxNTg2NzM2MDAwLFM6MTU5MDAxOTIwMCxUOjE1OTQ4NTc2MDAsVToxNTk4NDg2NDAwLFY6MTYwMjIwMTYwMCxXOjE2MDU4MzA0MDAsWDoxNjExMzYwMDAwLFk6MTYxNDgxNjAwMCxaOjE2MTgzNTg0MDAsYToxNjIyMDczNjAwLGI6MTYyNjkxMjAwMCxjOjE2MzA2MjcyMDAsZDoxNjMyNDQxNjAwLGU6MTYzNDc3NDQwMCxpOjE2Mzc1MzkyMDAsajoxNjQxNDI3MjAwLGs6MTY0MzkzMjgwMCxsOjE2NDYyNjU2MDAsbToxNjQ5NjM1MjAwLG46MTY1MTE5MDQwMCxvOjE2NTM5NTUyMDAscDoxNjU1OTQyNDAwLHE6MTY1OTY1NzYwMCxyOjE2NjE5OTA0MDAsczoxNjY0NzU1MjAwLHQ6MTY2NjkxNTIwMCx1OjE2NzAxOTg0MDAsdjoxNjczNDgxNjAwLGY6MTY3NTkwMDgwMCxIOjE2Nzg2NjU2MDB9LEQ6e0M6XCJtc1wiLEs6XCJtc1wiLEw6XCJtc1wiLEc6XCJtc1wiLE06XCJtc1wiLE46XCJtc1wiLE86XCJtc1wifX0sQzp7QTp7XCIwXCI6MC4wMDQxNjEsXCIxXCI6MC4wMDg3ODYsXCIyXCI6MC4wMDQxMTgsXCIzXCI6MC4wMDQzMTcsXCI0XCI6MC4wMDQzOTMsXCI1XCI6MC4wMDQ0MTgsXCI2XCI6MC4wMDg4MzQsXCI3XCI6MC4wMDgzMjIsXCI4XCI6MC4wMDg5MjgsXCI5XCI6MC4wMDQ0NzEsRkM6MC4wMDQxMTgsdUI6MC4wMDQyNzEsSTowLjAxMTcwMyx3OjAuMDA0ODc5LEo6MC4wMjAxMzYsRDowLjAwNTcyNSxFOjAuMDA0NTI1LEY6MC4wMDUzMyxBOjAuMDA0MjgzLEI6MC4wMDgxNjIsQzowLjAwNDQ3MSxLOjAuMDA0NDg2LEw6MC4wMDQ1MyxHOjAuMDA4MzIyLE06MC4wMDQ0MTcsTjowLjAwNDQyNSxPOjAuMDA0MTYxLHg6MC4wMDQ0NDMsZzowLjAwNDI4Myx5OjAuMDA4MzIyLHo6MC4wMTM2OTgsQUI6MC4wMDkyODQsQkI6MC4wMDQ3MDcsQ0I6MC4wMDkwNzYsREI6MC4wMDQwODEsRUI6MC4wMDQ3ODMsRkI6MC4wMDM5MjksR0I6MC4wMDQ3ODMsSEI6MC4wMDQ4NyxJQjowLjAwNTAyOSxKQjowLjAwNDcsS0I6MC4wMTIyNDMsTEI6MC4wMDQwODEsTUI6MC4wMDM4NjcsTkI6MC4wMDQ1MjUsT0I6MC4wMDQyOTMsUEI6MC4wMDQwODEsUUI6MC4wMDQ1MzgsUkI6MC4wMDgyODIsU0I6MC4wMTE2MDEsVEI6MC4wNDQ4OTEsVUI6MC4wMTE2MDEsVkI6MC4wMDM5MjksV0I6MC4wMDM5NzQsWEI6MC4wMDgxNjIsWUI6MC4wMTE2MDEsWkI6MC4wMDM5MzksdkI6MC4wMDQwODEsYUI6MC4wMDM5Mjksd0I6MC4wMDQzNTYsYkI6MC4wMDQ0MjUsY0I6MC4wMDgzMjIsZEI6MC4wMDQxNSxlQjowLjAwNDI2NyxmQjowLjAwMzgwMSxnQjowLjAwNDI2NyxoQjowLjAwNDA4MSxpQjowLjAwNDE1LGpCOjAuMDA0MjkzLGtCOjAuMDA0NDI1LGxCOjAuMDA4MTYyLGg6MC4wMDQxNSxtQjowLjAwNDE1LG5COjAuMDA0MzE4LG9COjAuMDA0MzU2LHBCOjAuMDAzOTc0LHFCOjAuMDM2NzI5LFA6MC4wMDQwODEsUTowLjAwNDA4MSxSOjAuMDA0MDgxLHhCOjAuMDAzODYxLFM6MC4wMDQwODEsVDowLjAwMzkyOSxVOjAuMDA0MjY4LFY6MC4wMDM4MDEsVzowLjAxMjI0MyxYOjAuMDA4MTYyLFk6MC4wMDM5NDMsWjowLjAwMzk0MyxhOjAuMDEyMjQzLGI6MC4wMDM4MDEsYzowLjAwNzcyMixkOjAuMDE2MzI0LGU6MC4wMDM3NzMsaTowLjAwNzg4NixqOjAuMDAzOTAxLGs6MC4wMDM5MDEsbDowLjAwNDA4MSxtOjAuMDAzODYxLG46MC4wMDQwODEsbzowLjExMDE4NyxwOjAuMDM2NzI5LHE6MC4wMDgxNjIscjowLjAwODE2MixzOjAuMDA4MTYyLHQ6MC4wMTIyNDMsdTowLjAyNDQ4Nix2OjAuMDUzMDUzLGY6MS4xMDE4NyxIOjAuOTI2Mzg3LHlCOjAuMDA4MTYyLHpCOjAsR0M6MC4wMDg3ODYsSEM6MC4wMDQ4N30sQjpcIm1velwiLEM6W1wiRkNcIixcInVCXCIsXCJHQ1wiLFwiSENcIixcIklcIixcIndcIixcIkpcIixcIkRcIixcIkVcIixcIkZcIixcIkFcIixcIkJcIixcIkNcIixcIktcIixcIkxcIixcIkdcIixcIk1cIixcIk5cIixcIk9cIixcInhcIixcImdcIixcInlcIixcInpcIixcIjBcIixcIjFcIixcIjJcIixcIjNcIixcIjRcIixcIjVcIixcIjZcIixcIjdcIixcIjhcIixcIjlcIixcIkFCXCIsXCJCQlwiLFwiQ0JcIixcIkRCXCIsXCJFQlwiLFwiRkJcIixcIkdCXCIsXCJIQlwiLFwiSUJcIixcIkpCXCIsXCJLQlwiLFwiTEJcIixcIk1CXCIsXCJOQlwiLFwiT0JcIixcIlBCXCIsXCJRQlwiLFwiUkJcIixcIlNCXCIsXCJUQlwiLFwiVUJcIixcIlZCXCIsXCJXQlwiLFwiWEJcIixcIllCXCIsXCJaQlwiLFwidkJcIixcImFCXCIsXCJ3QlwiLFwiYkJcIixcImNCXCIsXCJkQlwiLFwiZUJcIixcImZCXCIsXCJnQlwiLFwiaEJcIixcImlCXCIsXCJqQlwiLFwia0JcIixcImxCXCIsXCJoXCIsXCJtQlwiLFwibkJcIixcIm9CXCIsXCJwQlwiLFwicUJcIixcIlBcIixcIlFcIixcIlJcIixcInhCXCIsXCJTXCIsXCJUXCIsXCJVXCIsXCJWXCIsXCJXXCIsXCJYXCIsXCJZXCIsXCJaXCIsXCJhXCIsXCJiXCIsXCJjXCIsXCJkXCIsXCJlXCIsXCJpXCIsXCJqXCIsXCJrXCIsXCJsXCIsXCJtXCIsXCJuXCIsXCJvXCIsXCJwXCIsXCJxXCIsXCJyXCIsXCJzXCIsXCJ0XCIsXCJ1XCIsXCJ2XCIsXCJmXCIsXCJIXCIsXCJ5QlwiLFwiekJcIixcIlwiXSxFOlwiRmlyZWZveFwiLEY6e1wiMFwiOjEzNzIxMTg0MDAsXCIxXCI6MTM3NTc0NzIwMCxcIjJcIjoxMzc5Mzc2MDAwLFwiM1wiOjEzODY2MzM2MDAsXCI0XCI6MTM5MTQ3MjAwMCxcIjVcIjoxMzk1MTAwODAwLFwiNlwiOjEzOTg3Mjk2MDAsXCI3XCI6MTQwMjM1ODQwMCxcIjhcIjoxNDA1OTg3MjAwLFwiOVwiOjE0MDk2MTYwMDAsRkM6MTE2MTY0ODAwMCx1QjoxMjEzNjYwODAwLEdDOjEyNDYzMjAwMDAsSEM6MTI2NDAzMjAwMCxJOjEzMDA3NTIwMDAsdzoxMzA4NjE0NDAwLEo6MTMxMzQ1MjgwMCxEOjEzMTcwODE2MDAsRToxMzE3MDgxNjAwLEY6MTMyMDcxMDQwMCxBOjEzMjQzMzkyMDAsQjoxMzI3OTY4MDAwLEM6MTMzMTU5NjgwMCxLOjEzMzUyMjU2MDAsTDoxMzM4ODU0NDAwLEc6MTM0MjQ4MzIwMCxNOjEzNDYxMTIwMDAsTjoxMzQ5NzQwODAwLE86MTM1MzYyODgwMCx4OjEzNTc2MDMyMDAsZzoxMzYxMjMyMDAwLHk6MTM2NDg2MDgwMCx6OjEzNjg0ODk2MDAsQUI6MTQxMzI0NDgwMCxCQjoxNDE3MzkyMDAwLENCOjE0MjExMDcyMDAsREI6MTQyNDczNjAwMCxFQjoxNDI4Mjc4NDAwLEZCOjE0MzE0NzUyMDAsR0I6MTQzNTg4MTYwMCxIQjoxNDM5MjUxMjAwLElCOjE0NDI4ODAwMDAsSkI6MTQ0NjUwODgwMCxLQjoxNDUwMTM3NjAwLExCOjE0NTM4NTI4MDAsTUI6MTQ1NzM5NTIwMCxOQjoxNDYxNjI4ODAwLE9COjE0NjUyNTc2MDAsUEI6MTQ3MDA5NjAwMCxRQjoxNDc0MzI5NjAwLFJCOjE0NzkxNjgwMDAsU0I6MTQ4NTIxNjAwMCxUQjoxNDg4ODQ0ODAwLFVCOjE0OTI1NjAwMDAsVkI6MTQ5NzMxMjAwMCxXQjoxNTAyMTUwNDAwLFhCOjE1MDY1NTY4MDAsWUI6MTUxMDYxNzYwMCxaQjoxNTE2NjY1NjAwLHZCOjE1MjA5ODU2MDAsYUI6MTUyNTgyNDAwMCx3QjoxNTI5OTcxMjAwLGJCOjE1MzYxMDU2MDAsY0I6MTU0MDI1MjgwMCxkQjoxNTQ0NDg2NDAwLGVCOjE1NDg3MjAwMDAsZkI6MTU1Mjk1MzYwMCxnQjoxNTU4Mzk2ODAwLGhCOjE1NjI2MzA0MDAsaUI6MTU2NzQ2ODgwMCxqQjoxNTcxNzg4ODAwLGtCOjE1NzUzMzEyMDAsbEI6MTU3ODM1NTIwMCxoOjE1ODEzNzkyMDAsbUI6MTU4Mzc5ODQwMCxuQjoxNTg2MzA0MDAwLG9COjE1ODg2MzY4MDAscEI6MTU5MTA1NjAwMCxxQjoxNTkzNDc1MjAwLFA6MTU5NTg5NDQwMCxROjE1OTgzMTM2MDAsUjoxNjAwNzMyODAwLHhCOjE2MDMxNTIwMDAsUzoxNjA1NTcxMjAwLFQ6MTYwNzk5MDQwMCxVOjE2MTE2MTkyMDAsVjoxNjE0MDM4NDAwLFc6MTYxNjQ1NzYwMCxYOjE2MTg3OTA0MDAsWToxNjIyNTA1NjAwLFo6MTYyNjEzNDQwMCxhOjE2Mjg1NTM2MDAsYjoxNjMwOTcyODAwLGM6MTYzMzM5MjAwMCxkOjE2MzU4MTEyMDAsZToxNjM4ODM1MjAwLGk6MTY0MTg1OTIwMCxqOjE2NDQzNjQ4MDAsazoxNjQ2Njk3NjAwLGw6MTY0OTExNjgwMCxtOjE2NTE1MzYwMDAsbjoxNjUzOTU1MjAwLG86MTY1NjM3NDQwMCxwOjE2NTg3OTM2MDAscToxNjYxMjEyODAwLHI6MTY2MzYzMjAwMCxzOjE2NjYwNTEyMDAsdDoxNjY4NDcwNDAwLHU6MTY3MDg4OTYwMCx2OjE2NzM5MTM2MDAsZjoxNjc2MzMyODAwLEg6MTY3ODc1MjAwMCx5QjpudWxsLHpCOm51bGx9fSxEOntBOntcIjBcIjowLjAwODc4NixcIjFcIjowLjAwMzkzOSxcIjJcIjowLjAwNDQ2MSxcIjNcIjowLjAwNDE0MSxcIjRcIjowLjAwNDMyNixcIjVcIjowLjAwNDcsXCI2XCI6MC4wMDQ1MzgsXCI3XCI6MC4wMDgzMjIsXCI4XCI6MC4wMDg1OTYsXCI5XCI6MC4wMDQ1NjYsSTowLjAwNDcwNix3OjAuMDA0ODc5LEo6MC4wMDQ4NzksRDowLjAwNTU5MSxFOjAuMDA1NTkxLEY6MC4wMDU1OTEsQTowLjAwNDUzNCxCOjAuMDA0NDY0LEM6MC4wMTA0MjQsSzowLjAwODMsTDowLjAwNDcwNixHOjAuMDE1MDg3LE06MC4wMDQzOTMsTjowLjAwNDM5MyxPOjAuMDA4NjUyLHg6MC4wMDgzMjIsZzowLjAwNDM5Myx5OjAuMDA0MzE3LHo6MC4wMDM5MDEsQUI6MC4wMDQxMTgsQkI6MC4wMDQwODEsQ0I6MC4wMDgxNjIsREI6MC4wMDQzMzUsRUI6MC4wMDQ0NjQsRkI6MC4wMTYzMjQsR0I6MC4wMDM4NjcsSEI6MC4wMTYzMjQsSUI6MC4wMDM3NzMsSkI6MC4wMDM5NzQsS0I6MC4wMDgxNjIsTEI6MC4wMDc5NDgsTUI6MC4wMDM5NzQsTkI6MC4wMDM4NjcsT0I6MC4wMDgxNjIsUEI6MC4wMjA0MDUsUUI6MC4wMzY3MjksUkI6MC4wMDM4NjcsU0I6MC4wMDQwODEsVEI6MC4wMDgxNjIsVUI6MC4wMDgxNjIsVkI6MC4wMDM4NjcsV0I6MC4wMDQwODEsWEI6MC4wNzM0NTgsWUI6MC4wMDQwODEsWkI6MC4wMTU3NzIsdkI6MC4wMDM3NzMsYUI6MC4wMTYzMjQsd0I6MC4wMDgxNjIsYkI6MC4wMDM3NzMsY0I6MC4wMTIyNDMsZEI6MC4wMDM5NDMsZUI6MC4wMDgxNjIsZkI6MC4wMjg1NjcsZ0I6MC4wMDgxNjIsaEI6MC4wMDgxNjIsaUI6MC4wMzY3MjksakI6MC4wMTYzMjQsa0I6MC4wMTIyNDMsbEI6MC4wMjA0MDUsaDowLjAwODE2MixtQjowLjAzNjcyOSxuQjowLjA0ODk3MixvQjowLjA0NDg5MSxwQjowLjAxNjMyNCxxQjowLjAyNDQ4NixQOjAuMTM0NjczLFE6MC4wMzY3MjksUjowLjA0MDgxLFM6MC4wNjUyOTYsVDowLjA0MDgxLFU6MC4wODk3ODIsVjowLjA2NTI5NixXOjAuMDk3OTQ0LFg6MC4wMjA0MDUsWTowLjAzNjcyOSxaOjAuMDQwODEsYTowLjA3NzUzOSxiOjAuMDQ0ODkxLGM6MC4wODU3MDEsZDowLjA0NDg5MSxlOjAuMDMyNjQ4LGk6MC4wNDA4MSxqOjAuMDUzMDUzLGs6MC4wNDA4MSxsOjAuMDUzMDUzLG06MC4wNTMwNTMsbjowLjA0ODk3MixvOjAuMDczNDU4LHA6MC4zNTUwNDcscTowLjExNDI2OCxyOjAuMTA2MTA2LHM6MC4wNzc1MzksdDowLjEyNjUxMSx1OjAuMzk5OTM4LHY6Mi43MzAxOSxmOjcuNTQxNjksSDoxMC43MjA4LHlCOjAuMDIwNDA1LHpCOjAuMDIwNDA1LElDOjAuMDA0MDgxLEpDOjB9LEI6XCJ3ZWJraXRcIixDOltcIlwiLFwiXCIsXCJcIixcIlwiLFwiSVwiLFwid1wiLFwiSlwiLFwiRFwiLFwiRVwiLFwiRlwiLFwiQVwiLFwiQlwiLFwiQ1wiLFwiS1wiLFwiTFwiLFwiR1wiLFwiTVwiLFwiTlwiLFwiT1wiLFwieFwiLFwiZ1wiLFwieVwiLFwielwiLFwiMFwiLFwiMVwiLFwiMlwiLFwiM1wiLFwiNFwiLFwiNVwiLFwiNlwiLFwiN1wiLFwiOFwiLFwiOVwiLFwiQUJcIixcIkJCXCIsXCJDQlwiLFwiREJcIixcIkVCXCIsXCJGQlwiLFwiR0JcIixcIkhCXCIsXCJJQlwiLFwiSkJcIixcIktCXCIsXCJMQlwiLFwiTUJcIixcIk5CXCIsXCJPQlwiLFwiUEJcIixcIlFCXCIsXCJSQlwiLFwiU0JcIixcIlRCXCIsXCJVQlwiLFwiVkJcIixcIldCXCIsXCJYQlwiLFwiWUJcIixcIlpCXCIsXCJ2QlwiLFwiYUJcIixcIndCXCIsXCJiQlwiLFwiY0JcIixcImRCXCIsXCJlQlwiLFwiZkJcIixcImdCXCIsXCJoQlwiLFwiaUJcIixcImpCXCIsXCJrQlwiLFwibEJcIixcImhcIixcIm1CXCIsXCJuQlwiLFwib0JcIixcInBCXCIsXCJxQlwiLFwiUFwiLFwiUVwiLFwiUlwiLFwiU1wiLFwiVFwiLFwiVVwiLFwiVlwiLFwiV1wiLFwiWFwiLFwiWVwiLFwiWlwiLFwiYVwiLFwiYlwiLFwiY1wiLFwiZFwiLFwiZVwiLFwiaVwiLFwialwiLFwia1wiLFwibFwiLFwibVwiLFwiblwiLFwib1wiLFwicFwiLFwicVwiLFwiclwiLFwic1wiLFwidFwiLFwidVwiLFwidlwiLFwiZlwiLFwiSFwiLFwieUJcIixcInpCXCIsXCJJQ1wiLFwiSkNcIl0sRTpcIkNocm9tZVwiLEY6e1wiMFwiOjEzNDg1MzEyMDAsXCIxXCI6MTM1MjI0NjQwMCxcIjJcIjoxMzU3ODYyNDAwLFwiM1wiOjEzNjE0MDQ4MDAsXCI0XCI6MTM2NDQyODgwMCxcIjVcIjoxMzY5MDk0NDAwLFwiNlwiOjEzNzQxMDU2MDAsXCI3XCI6MTM3Njk1NjgwMCxcIjhcIjoxMzg0MjE0NDAwLFwiOVwiOjEzODk2NTc2MDAsSToxMjY0Mzc3NjAwLHc6MTI3NDc0NTYwMCxKOjEyODMzODU2MDAsRDoxMjg3NjE5MjAwLEU6MTI5MTI0ODAwMCxGOjEyOTY3Nzc2MDAsQToxMjk5NTQyNDAwLEI6MTMwMzg2MjQwMCxDOjEzMDc0MDQ4MDAsSzoxMzEyMjQzMjAwLEw6MTMxNjEzMTIwMCxHOjEzMTYxMzEyMDAsTToxMzE5NTAwODAwLE46MTMyMzczNDQwMCxPOjEzMjg2NTkyMDAseDoxMzMyODkyODAwLGc6MTMzNzA0MDAwMCx5OjEzNDA2Njg4MDAsejoxMzQzNjkyODAwLEFCOjEzOTI5NDA4MDAsQkI6MTM5NzAwMTYwMCxDQjoxNDAwNTQ0MDAwLERCOjE0MDU0Njg4MDAsRUI6MTQwOTAxMTIwMCxGQjoxNDEyNjQwMDAwLEdCOjE0MTYyNjg4MDAsSEI6MTQyMTc5ODQwMCxJQjoxNDI1NTEzNjAwLEpCOjE0Mjk0MDE2MDAsS0I6MTQzMjA4MDAwMCxMQjoxNDM3NTIzMjAwLE1COjE0NDExNTIwMDAsTkI6MTQ0NDc4MDgwMCxPQjoxNDQ5MDE0NDAwLFBCOjE0NTMyNDgwMDAsUUI6MTQ1Njk2MzIwMCxSQjoxNDYwNTkyMDAwLFNCOjE0NjQxMzQ0MDAsVEI6MTQ2OTA1OTIwMCxVQjoxNDcyNjAxNjAwLFZCOjE0NzYyMzA0MDAsV0I6MTQ4MDU1MDQwMCxYQjoxNDg1MzAyNDAwLFlCOjE0ODkwMTc2MDAsWkI6MTQ5MjU2MDAwMCx2QjoxNDk2NzA3MjAwLGFCOjE1MDA5NDA4MDAsd0I6MTUwNDU2OTYwMCxiQjoxNTA4MTk4NDAwLGNCOjE1MTI1MTg0MDAsZEI6MTUxNjc1MjAwMCxlQjoxNTIwMjk0NDAwLGZCOjE1MjM5MjMyMDAsZ0I6MTUyNzU1MjAwMCxoQjoxNTMyMzkwNDAwLGlCOjE1MzYwMTkyMDAsakI6MTUzOTY0ODAwMCxrQjoxNTQzOTY4MDAwLGxCOjE1NDg3MjAwMDAsaDoxNTUyMzQ4ODAwLG1COjE1NTU5Nzc2MDAsbkI6MTU1OTYwNjQwMCxvQjoxNTY0NDQ0ODAwLHBCOjE1NjgwNzM2MDAscUI6MTU3MTcwMjQwMCxQOjE1NzU5MzYwMDAsUToxNTgwODYwODAwLFI6MTU4NjMwNDAwMCxTOjE1ODk4NDY0MDAsVDoxNTk0Njg0ODAwLFU6MTU5ODMxMzYwMCxWOjE2MDE5NDI0MDAsVzoxNjA1NTcxMjAwLFg6MTYxMTAxNDQwMCxZOjE2MTQ1NTY4MDAsWjoxNjE4MjcyMDAwLGE6MTYyMTk4NzIwMCxiOjE2MjY3MzkyMDAsYzoxNjMwMzY4MDAwLGQ6MTYzMjI2ODgwMCxlOjE2MzQ2MDE2MDAsaToxNjM3MDIwODAwLGo6MTY0MTM0MDgwMCxrOjE2NDM2NzM2MDAsbDoxNjQ2MDkyODAwLG06MTY0ODUxMjAwMCxuOjE2NTA5MzEyMDAsbzoxNjUzMzUwNDAwLHA6MTY1NTc2OTYwMCxxOjE2NTkzOTg0MDAscjoxNjYxODE3NjAwLHM6MTY2NDIzNjgwMCx0OjE2NjY2NTYwMDAsdToxNjY5NjgwMDAwLHY6MTY3MzMwODgwMCxmOjE2NzU3MjgwMDAsSDoxNjc4MTQ3MjAwLHlCOjE2ODA1NjY0MDAsekI6bnVsbCxJQzpudWxsLEpDOm51bGx9fSxFOntBOntJOjAsdzowLjAwODMyMixKOjAuMDA0NjU2LEQ6MC4wMDQ0NjUsRTowLjAwMzk3NCxGOjAuMDAzOTI5LEE6MC4wMDQ0MjUsQjowLjAwNDMxOCxDOjAuMDAzODAxLEs6MC4wMjA0MDUsTDowLjEwMjAyNSxHOjAuMDI0NDg2LEtDOjAsXCIwQlwiOjAuMDA4NjkyLExDOjAuMDA4MTYyLE1DOjAuMDA0NTYsTkM6MC4wMDQyODMsT0M6MC4wMjg1NjcsXCIxQlwiOjAuMDA3ODAyLHJCOjAuMDA4MTYyLHNCOjAuMDM2NzI5LFwiMkJcIjowLjE4MzY0NSxQQzowLjI4OTc1MSxRQzowLjA0NDg5MSxcIjNCXCI6MC4wMzY3MjksXCI0QlwiOjAuMDkzODYzLFwiNUJcIjowLjE3MTQwMixcIjZCXCI6MC43NTQ5ODUsdEI6MC4wODE2MixcIjdCXCI6MC4yNjExODQsXCI4QlwiOjAuNDY1MjM0LFwiOUJcIjoxLjY5MzYxLEFDOjAuMDI4NTY3LEJDOjAsUkM6MH0sQjpcIndlYmtpdFwiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJLQ1wiLFwiMEJcIixcIklcIixcIndcIixcIkxDXCIsXCJKXCIsXCJNQ1wiLFwiRFwiLFwiTkNcIixcIkVcIixcIkZcIixcIk9DXCIsXCJBXCIsXCIxQlwiLFwiQlwiLFwickJcIixcIkNcIixcInNCXCIsXCJLXCIsXCIyQlwiLFwiTFwiLFwiUENcIixcIkdcIixcIlFDXCIsXCIzQlwiLFwiNEJcIixcIjVCXCIsXCI2QlwiLFwidEJcIixcIjdCXCIsXCI4QlwiLFwiOUJcIixcIkFDXCIsXCJCQ1wiLFwiUkNcIixcIlwiXSxFOlwiU2FmYXJpXCIsRjp7S0M6MTIwNTc5ODQwMCxcIjBCXCI6MTIyNjUzNDQwMCxJOjEyNDQ0MTkyMDAsdzoxMjc1ODY4ODAwLExDOjEzMTExMjAwMDAsSjoxMzQzMTc0NDAwLE1DOjEzODI0MDAwMDAsRDoxMzgyNDAwMDAwLE5DOjE0MTA5OTg0MDAsRToxNDEzNDE3NjAwLEY6MTQ0MzY1NzYwMCxPQzoxNDU4NTE4NDAwLEE6MTQ3NDMyOTYwMCxcIjFCXCI6MTQ5MDU3MjgwMCxCOjE1MDU3NzkyMDAsckI6MTUyMjI4MTYwMCxDOjE1MzcxNDI0MDAsc0I6MTU1MzQ3MjAwMCxLOjE1Njg4NTEyMDAsXCIyQlwiOjE1ODUwMDgwMDAsTDoxNjAwMjE0NDAwLFBDOjE2MTkzOTUyMDAsRzoxNjMyMDk2MDAwLFFDOjE2MzUyOTI4MDAsXCIzQlwiOjE2MzkzNTM2MDAsXCI0QlwiOjE2NDcyMTYwMDAsXCI1QlwiOjE2NTI3NDU2MDAsXCI2QlwiOjE2NTgyNzUyMDAsdEI6MTY2Mjk0MDgwMCxcIjdCXCI6MTY2NjU2OTYwMCxcIjhCXCI6MTY3MDg4OTYwMCxcIjlCXCI6MTY3NDQzMjAwMCxBQzoxNjc5ODc1MjAwLEJDOm51bGwsUkM6bnVsbH19LEY6e0E6e1wiMFwiOjAuMDEzNDM0LFwiMVwiOjAuMDA2NzAyLFwiMlwiOjAuMDA2MDE1LFwiM1wiOjAuMDA1NTk1LFwiNFwiOjAuMDA0MzkzLFwiNVwiOjAuMDA4MTYyLFwiNlwiOjAuMDA0ODc5LFwiN1wiOjAuMDA0ODc5LFwiOFwiOjAuMDAzODYxLFwiOVwiOjAuMDA1MTUyLEY6MC4wMDgyLEI6MC4wMTY1ODEsQzowLjAwNDMxNyxHOjAuMDA2ODUsTTowLjAwNjg1LE46MC4wMDY4NSxPOjAuMDA1MDE0LHg6MC4wMDYwMTUsZzowLjAwNDg3OSx5OjAuMDA2NTk3LHo6MC4wMDY1OTcsQUI6MC4wMDUwMTQsQkI6MC4wMDk3NTgsQ0I6MC4wMDQ4NzksREI6MC4wMDQwODEsRUI6MC4wMDQyODMsRkI6MC4wMDQzNjcsR0I6MC4wMDQ1MzQsSEI6MC4wMDQwODEsSUI6MC4wMDQyMjcsSkI6MC4wMDQ0MTgsS0I6MC4wMDQxNjEsTEI6MC4wMDQyMjcsTUI6MC4wMDQ3MjUsTkI6MC4wMTIyNDMsT0I6MC4wMDg5NDIsUEI6MC4wMDQ3MDcsUUI6MC4wMDQ4MjcsUkI6MC4wMDQ3MDcsU0I6MC4wMDQ3MDcsVEI6MC4wMDQzMjYsVUI6MC4wMDg5MjIsVkI6MC4wMTQzNDksV0I6MC4wMDQ0MjUsWEI6MC4wMDQ3MixZQjowLjAwNDQyNSxaQjowLjAwNDQyNSxhQjowLjAwNDcyLGJCOjAuMDA0NTMyLGNCOjAuMDA0NTY2LGRCOjAuMDIyODMsZUI6MC4wMDg2NyxmQjowLjAwNDY1NixnQjowLjAwNDY0MixoQjowLjAwMzkyOSxpQjowLjAwOTQ0LGpCOjAuMDA0MjkzLGtCOjAuMDAzOTI5LGxCOjAuMDA0Mjk4LGg6MC4wOTY2OTIsbUI6MC4wMDgxNjIsbkI6MC4wMDQxNDEsb0I6MC4wMDQyNTcscEI6MC4wMDM5MzkscUI6MC4wMDgyMzYsUDowLjAwMzg1NSxROjAuMDAzOTM5LFI6MC4wMDg1MTQseEI6MC4wMDM5MzksUzowLjAwMzkzOSxUOjAuMDAzNzAyLFU6MC4wMDQwODEsVjowLjAwMzg1NSxXOjAuMDAzODU1LFg6MC4wMDM5MjksWTowLjAwMzg2MSxaOjAuMDExNzAzLGE6MC4wMDc1NDYsYjowLjAxMTgyOSxjOjAuMDY5NDk4LGQ6MC4wMjA0MDUsZTowLjUxNDIwNixTQzowLjAwNjg1LFRDOjAsVUM6MC4wMDgzOTIsVkM6MC4wMDQ3MDYsckI6MC4wMDYyMjksQ0M6MC4wMDQ4NzksV0M6MC4wMDg3ODYsc0I6MC4wMDQ3Mn0sQjpcIndlYmtpdFwiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJGXCIsXCJTQ1wiLFwiVENcIixcIlVDXCIsXCJWQ1wiLFwiQlwiLFwickJcIixcIkNDXCIsXCJXQ1wiLFwiQ1wiLFwic0JcIixcIkdcIixcIk1cIixcIk5cIixcIk9cIixcInhcIixcImdcIixcInlcIixcInpcIixcIjBcIixcIjFcIixcIjJcIixcIjNcIixcIjRcIixcIjVcIixcIjZcIixcIjdcIixcIjhcIixcIjlcIixcIkFCXCIsXCJCQlwiLFwiQ0JcIixcIkRCXCIsXCJFQlwiLFwiRkJcIixcIkdCXCIsXCJIQlwiLFwiSUJcIixcIkpCXCIsXCJLQlwiLFwiTEJcIixcIk1CXCIsXCJOQlwiLFwiT0JcIixcIlBCXCIsXCJRQlwiLFwiUkJcIixcIlNCXCIsXCJUQlwiLFwiVUJcIixcIlZCXCIsXCJXQlwiLFwiWEJcIixcIllCXCIsXCJaQlwiLFwiYUJcIixcImJCXCIsXCJjQlwiLFwiZEJcIixcImVCXCIsXCJmQlwiLFwiZ0JcIixcImhCXCIsXCJpQlwiLFwiakJcIixcImtCXCIsXCJsQlwiLFwiaFwiLFwibUJcIixcIm5CXCIsXCJvQlwiLFwicEJcIixcInFCXCIsXCJQXCIsXCJRXCIsXCJSXCIsXCJ4QlwiLFwiU1wiLFwiVFwiLFwiVVwiLFwiVlwiLFwiV1wiLFwiWFwiLFwiWVwiLFwiWlwiLFwiYVwiLFwiYlwiLFwiY1wiLFwiZFwiLFwiZVwiLFwiXCIsXCJcIixcIlwiXSxFOlwiT3BlcmFcIixGOntcIjBcIjoxNDA1OTg3MjAwLFwiMVwiOjE0MDk2MTYwMDAsXCIyXCI6MTQxMzMzMTIwMCxcIjNcIjoxNDE3MTMyODAwLFwiNFwiOjE0MjIzMTY4MDAsXCI1XCI6MTQyNTk0NTYwMCxcIjZcIjoxNDMwMTc5MjAwLFwiN1wiOjE0MzM4MDgwMDAsXCI4XCI6MTQzODY0NjQwMCxcIjlcIjoxNDQyNDQ4MDAwLEY6MTE1MDc2MTYwMCxTQzoxMjIzNDI0MDAwLFRDOjEyNTE3NjMyMDAsVUM6MTI2NzQ4ODAwMCxWQzoxMjc3OTQyNDAwLEI6MTI5MjQ1NzYwMCxyQjoxMzAyNTY2NDAwLENDOjEzMDkyMTkyMDAsV0M6MTMyMzEyOTYwMCxDOjEzMjMxMjk2MDAsc0I6MTM1MjA3MzYwMCxHOjEzNzI3MjMyMDAsTToxMzc3NTYxNjAwLE46MTM4MTEwNDAwMCxPOjEzODYyODgwMDAseDoxMzkwODY3MjAwLGc6MTM5Mzg5MTIwMCx5OjEzOTkzMzQ0MDAsejoxNDAxNzUzNjAwLEFCOjE0NDU5MDQwMDAsQkI6MTQ0OTEwMDgwMCxDQjoxNDU0MzcxMjAwLERCOjE0NTczMDg4MDAsRUI6MTQ2MjMyMDAwMCxGQjoxNDY1MzQ0MDAwLEdCOjE0NzAwOTYwMDAsSEI6MTQ3NDMyOTYwMCxJQjoxNDc3MjY3MjAwLEpCOjE0ODE1ODcyMDAsS0I6MTQ4NjQyNTYwMCxMQjoxNDkwMDU0NDAwLE1COjE0OTQzNzQ0MDAsTkI6MTQ5ODAwMzIwMCxPQjoxNTAyMjM2ODAwLFBCOjE1MDY0NzA0MDAsUUI6MTUxMDA5OTIwMCxSQjoxNTE1MDI0MDAwLFNCOjE1MTc5NjE2MDAsVEI6MTUyMTY3NjgwMCxVQjoxNTI1OTEwNDAwLFZCOjE1MzAxNDQwMDAsV0I6MTUzNDk4MjQwMCxYQjoxNTM3ODMzNjAwLFlCOjE1NDMzNjMyMDAsWkI6MTU0ODIwMTYwMCxhQjoxNTU0NzY4MDAwLGJCOjE1NjE1OTM2MDAsY0I6MTU2NjI1OTIwMCxkQjoxNTcwNDA2NDAwLGVCOjE1NzM2ODk2MDAsZkI6MTU3ODQ0MTYwMCxnQjoxNTgzOTcxMjAwLGhCOjE1ODc1MTM2MDAsaUI6MTU5Mjk1NjgwMCxqQjoxNTk1ODk0NDAwLGtCOjE2MDAxMjgwMDAsbEI6MTYwMzIzODQwMCxoOjE2MTM1MjAwMDAsbUI6MTYxMjIyNDAwMCxuQjoxNjE2NTQ0MDAwLG9COjE2MTk1NjgwMDAscEI6MTYyMzcxNTIwMCxxQjoxNjI3OTQ4ODAwLFA6MTYzMTU3NzYwMCxROjE2MzMzOTIwMDAsUjoxNjM1OTg0MDAwLHhCOjE2Mzg0MDMyMDAsUzoxNjQyNTUwNDAwLFQ6MTY0NDk2OTYwMCxVOjE2NDc5OTM2MDAsVjoxNjUwNDEyODAwLFc6MTY1Mjc0NTYwMCxYOjE2NTQ2NDY0MDAsWToxNjU3MTUyMDAwLFo6MTY2MDc4MDgwMCxhOjE2NjMxMTM2MDAsYjoxNjY4ODE2MDAwLGM6MTY2ODY0MzIwMCxkOjE2NzEwNjI0MDAsZToxNjc1MjA5NjAwfSxEOntGOlwib1wiLEI6XCJvXCIsQzpcIm9cIixTQzpcIm9cIixUQzpcIm9cIixVQzpcIm9cIixWQzpcIm9cIixyQjpcIm9cIixDQzpcIm9cIixXQzpcIm9cIixzQjpcIm9cIn19LEc6e0E6e0U6MCxcIjBCXCI6MCxYQzowLERDOjAuMDAzMTYzOTksWUM6MC4wMDQ3NDU5OSxaQzowLjAwMzE2Mzk5LGFDOjAuMDE0MjM4LGJDOjAuMDA3OTA5OTgsY0M6MC4wMTg5ODQsZEM6MC4wNTY5NTE5LGVDOjAuMDAzMTYzOTksZkM6MC4wNjk2MDc4LGdDOjAuMDIwNTY1OSxoQzowLjAyMzcyOTksaUM6MC4wMjA1NjU5LGpDOjAuMzc2NTE1LGtDOjAuMDEyNjU2LGxDOjAuMDM0ODAzOSxtQzowLjAzMTYzOTksbkM6MC4wOTk2NjU3LG9DOjAuMjU5NDQ3LHBDOjAuNDgwOTI3LHFDOjAuMTQyMzgsXCIzQlwiOjAuMTc3MTg0LFwiNEJcIjowLjIwNzI0MSxcIjVCXCI6MC4zNTc1MzEsXCI2QlwiOjEuMDE0MDYsdEI6MS4xMTIxNCxcIjdCXCI6Mi40Nzc0MSxcIjhCXCI6MS42NzUzMyxcIjlCXCI6Ni4wNDE2NCxBQzowLjExODY1LEJDOjB9LEI6XCJ3ZWJraXRcIixDOltcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCIwQlwiLFwiWENcIixcIkRDXCIsXCJZQ1wiLFwiWkNcIixcImFDXCIsXCJFXCIsXCJiQ1wiLFwiY0NcIixcImRDXCIsXCJlQ1wiLFwiZkNcIixcImdDXCIsXCJoQ1wiLFwiaUNcIixcImpDXCIsXCJrQ1wiLFwibENcIixcIm1DXCIsXCJuQ1wiLFwib0NcIixcInBDXCIsXCJxQ1wiLFwiM0JcIixcIjRCXCIsXCI1QlwiLFwiNkJcIixcInRCXCIsXCI3QlwiLFwiOEJcIixcIjlCXCIsXCJBQ1wiLFwiQkNcIixcIlwiLFwiXCJdLEU6XCJTYWZhcmkgb24gaU9TXCIsRjp7XCIwQlwiOjEyNzAyNTI4MDAsWEM6MTI4MzkwNDAwMCxEQzoxMjk5NjI4ODAwLFlDOjEzMzEwNzg0MDAsWkM6MTM1OTMzMTIwMCxhQzoxMzk0NDA5NjAwLEU6MTQxMDkxMjAwMCxiQzoxNDEzNzYzMjAwLGNDOjE0NDIzNjE2MDAsZEM6MTQ1ODUxODQwMCxlQzoxNDczNzI0ODAwLGZDOjE0OTA1NzI4MDAsZ0M6MTUwNTc3OTIwMCxoQzoxNTIyMjgxNjAwLGlDOjE1MzcxNDI0MDAsakM6MTU1MzQ3MjAwMCxrQzoxNTY4ODUxMjAwLGxDOjE1NzIyMjA4MDAsbUM6MTU4MDE2OTYwMCxuQzoxNTg1MDA4MDAwLG9DOjE2MDAyMTQ0MDAscEM6MTYxOTM5NTIwMCxxQzoxNjMyMDk2MDAwLFwiM0JcIjoxNjM5MzUzNjAwLFwiNEJcIjoxNjQ3MjE2MDAwLFwiNUJcIjoxNjUyNjU5MjAwLFwiNkJcIjoxNjU4Mjc1MjAwLHRCOjE2NjI5NDA4MDAsXCI3QlwiOjE2NjY1Njk2MDAsXCI4QlwiOjE2NzA4ODk2MDAsXCI5QlwiOjE2NzQ0MzIwMDAsQUM6MTY3OTg3NTIwMCxCQzpudWxsfX0sSDp7QTp7ckM6MS4wMDg1fSxCOlwib1wiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwickNcIixcIlwiLFwiXCIsXCJcIl0sRTpcIk9wZXJhIE1pbmlcIixGOntyQzoxNDI2NDY0MDAwfX0sSTp7QTp7dUI6MCxJOjAuMDI0MDAwOCxIOjAsc0M6MCx0QzowLjA3MjAwMjMsdUM6MCx2QzowLjAxNjAwMDUsREM6MC4wNzIwMDIzLHdDOjAseEM6MC4yNDgwMDh9LEI6XCJ3ZWJraXRcIixDOltcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcInNDXCIsXCJ0Q1wiLFwidUNcIixcInVCXCIsXCJJXCIsXCJ2Q1wiLFwiRENcIixcIndDXCIsXCJ4Q1wiLFwiSFwiLFwiXCIsXCJcIixcIlwiXSxFOlwiQW5kcm9pZCBCcm93c2VyXCIsRjp7c0M6MTI1NjUxNTIwMCx0QzoxMjc0MzEzNjAwLHVDOjEyOTE1OTM2MDAsdUI6MTI5ODMzMjgwMCxJOjEzMTg4OTYwMDAsdkM6MTM0MTc5MjAwMCxEQzoxMzc0NjI0MDAwLHdDOjEzODY1NDcyMDAseEM6MTQwMTY2NzIwMCxIOjE2NzgxNDcyMDB9fSxKOntBOntEOjAsQTowfSxCOlwid2Via2l0XCIsQzpbXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiRFwiLFwiQVwiLFwiXCIsXCJcIixcIlwiXSxFOlwiQmxhY2tiZXJyeSBCcm93c2VyXCIsRjp7RDoxMzI1Mzc2MDAwLEE6MTM1OTUwNDAwMH19LEs6e0E6e0E6MCxCOjAsQzowLGg6MC4wMTExMzkxLHJCOjAsQ0M6MCxzQjowfSxCOlwib1wiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiQVwiLFwiQlwiLFwickJcIixcIkNDXCIsXCJDXCIsXCJzQlwiLFwiaFwiLFwiXCIsXCJcIixcIlwiXSxFOlwiT3BlcmEgTW9iaWxlXCIsRjp7QToxMjg3MTAwODAwLEI6MTMwMDc1MjAwMCxyQjoxMzE0ODM1MjAwLENDOjEzMTgyOTEyMDAsQzoxMzMwMzAwODAwLHNCOjEzNDk3NDA4MDAsaDoxNjczODI3MjAwfSxEOntoOlwid2Via2l0XCJ9fSxMOntBOntIOjQwLjg5MDd9LEI6XCJ3ZWJraXRcIixDOltcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIkhcIixcIlwiLFwiXCIsXCJcIl0sRTpcIkNocm9tZSBmb3IgQW5kcm9pZFwiLEY6e0g6MTY3ODE0NzIwMH19LE06e0E6e2Y6MC4yOTU5fSxCOlwibW96XCIsQzpbXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJmXCIsXCJcIixcIlwiLFwiXCJdLEU6XCJGaXJlZm94IGZvciBBbmRyb2lkXCIsRjp7ZjoxNjc2MzMyODAwfX0sTjp7QTp7QTowLjAxMTU5MzQsQjowLjAyMjY2NH0sQjpcIm1zXCIsQzpbXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiQVwiLFwiQlwiLFwiXCIsXCJcIixcIlwiXSxFOlwiSUUgTW9iaWxlXCIsRjp7QToxMzQwMTUwNDAwLEI6MTM1MzQ1NjAwMH19LE86e0E6e3lDOjAuOTA1NDU0fSxCOlwid2Via2l0XCIsQzpbXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJ5Q1wiLFwiXCIsXCJcIixcIlwiXSxFOlwiVUMgQnJvd3NlciBmb3IgQW5kcm9pZFwiLEY6e3lDOjE2MzQ2ODgwMDB9LEQ6e3lDOlwid2Via2l0XCJ9fSxQOntBOntJOjAuMTQ3NjIxLGc6MS45MDg1Myx6QzowLjAxMDM1NDMsXCIwQ1wiOjAuMDEwMzA0LFwiMUNcIjowLjA1MjcyMTksXCIyQ1wiOjAuMDEwMzU4NCxcIjNDXCI6MC4wMTA0NDQzLFwiMUJcIjowLjAxMDUwNDMsXCI0Q1wiOjAuMDIxMDg4NyxcIjVDXCI6MC4wMTAzOTgyLFwiNkNcIjowLjAzMTYzMzEsXCI3Q1wiOjAuMDMxNjMzMSxcIjhDXCI6MC4wMjEwODg3LHRCOjAuMDUyNzIxOSxcIjlDXCI6MC4wNjMyNjYyLEFEOjAuMDczODEwNixCRDowLjI1MzA2NX0sQjpcIndlYmtpdFwiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIklcIixcInpDXCIsXCIwQ1wiLFwiMUNcIixcIjJDXCIsXCIzQ1wiLFwiMUJcIixcIjRDXCIsXCI1Q1wiLFwiNkNcIixcIjdDXCIsXCI4Q1wiLFwidEJcIixcIjlDXCIsXCJBRFwiLFwiQkRcIixcImdcIixcIlwiLFwiXCIsXCJcIl0sRTpcIlNhbXN1bmcgSW50ZXJuZXRcIixGOntJOjE0NjEwMjQwMDAsekM6MTQ4MTg0NjQwMCxcIjBDXCI6MTUwOTQwODAwMCxcIjFDXCI6MTUyODMyOTYwMCxcIjJDXCI6MTU0NjEyODAwMCxcIjNDXCI6MTU1NDE2MzIwMCxcIjFCXCI6MTU2NzkwMDgwMCxcIjRDXCI6MTU4MjU4ODgwMCxcIjVDXCI6MTU5MzQ3NTIwMCxcIjZDXCI6MTYwNTY1NzYwMCxcIjdDXCI6MTYxODUzMTIwMCxcIjhDXCI6MTYyOTA3MjAwMCx0QjoxNjQwNzM2MDAwLFwiOUNcIjoxNjUxNzA4ODAwLEFEOjE2NTk2NTc2MDAsQkQ6MTY2NzI2MDgwMCxnOjE2NzczNjk2MDB9fSxROntBOntcIjJCXCI6MC4xMTgzNn0sQjpcIndlYmtpdFwiLEM6W1wiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiMkJcIixcIlwiLFwiXCIsXCJcIl0sRTpcIlFRIEJyb3dzZXJcIixGOntcIjJCXCI6MTY2MzcxODQwMH19LFI6e0E6e0NEOjB9LEI6XCJ3ZWJraXRcIixDOltcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIkNEXCIsXCJcIixcIlwiLFwiXCJdLEU6XCJCYWlkdSBCcm93c2VyXCIsRjp7Q0Q6MTY2MzAyNzIwMH19LFM6e0E6e0REOjAuMDcxMDE2LEVEOjB9LEI6XCJtb3pcIixDOltcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJcIixcIlwiLFwiXCIsXCJERFwiLFwiRURcIixcIlwiLFwiXCIsXCJcIl0sRTpcIkthaU9TIEJyb3dzZXJcIixGOntERDoxNTI3ODExMjAwLEVEOjE2MzE2NjQwMDB9fX07XG4iLCJtb2R1bGUuZXhwb3J0cz17XCIwXCI6XCIyM1wiLFwiMVwiOlwiMjRcIixcIjJcIjpcIjI1XCIsXCIzXCI6XCIyNlwiLFwiNFwiOlwiMjdcIixcIjVcIjpcIjI4XCIsXCI2XCI6XCIyOVwiLFwiN1wiOlwiMzBcIixcIjhcIjpcIjMxXCIsXCI5XCI6XCIzMlwiLEE6XCIxMFwiLEI6XCIxMVwiLEM6XCIxMlwiLEQ6XCI3XCIsRTpcIjhcIixGOlwiOVwiLEc6XCIxNVwiLEg6XCIxMTFcIixJOlwiNFwiLEo6XCI2XCIsSzpcIjEzXCIsTDpcIjE0XCIsTTpcIjE2XCIsTjpcIjE3XCIsTzpcIjE4XCIsUDpcIjc5XCIsUTpcIjgwXCIsUjpcIjgxXCIsUzpcIjgzXCIsVDpcIjg0XCIsVTpcIjg1XCIsVjpcIjg2XCIsVzpcIjg3XCIsWDpcIjg4XCIsWTpcIjg5XCIsWjpcIjkwXCIsYTpcIjkxXCIsYjpcIjkyXCIsYzpcIjkzXCIsZDpcIjk0XCIsZTpcIjk1XCIsZjpcIjExMFwiLGc6XCIyMFwiLGg6XCI3M1wiLGk6XCI5NlwiLGo6XCI5N1wiLGs6XCI5OFwiLGw6XCI5OVwiLG06XCIxMDBcIixuOlwiMTAxXCIsbzpcIjEwMlwiLHA6XCIxMDNcIixxOlwiMTA0XCIscjpcIjEwNVwiLHM6XCIxMDZcIix0OlwiMTA3XCIsdTpcIjEwOFwiLHY6XCIxMDlcIix3OlwiNVwiLHg6XCIxOVwiLHk6XCIyMVwiLHo6XCIyMlwiLEFCOlwiMzNcIixCQjpcIjM0XCIsQ0I6XCIzNVwiLERCOlwiMzZcIixFQjpcIjM3XCIsRkI6XCIzOFwiLEdCOlwiMzlcIixIQjpcIjQwXCIsSUI6XCI0MVwiLEpCOlwiNDJcIixLQjpcIjQzXCIsTEI6XCI0NFwiLE1COlwiNDVcIixOQjpcIjQ2XCIsT0I6XCI0N1wiLFBCOlwiNDhcIixRQjpcIjQ5XCIsUkI6XCI1MFwiLFNCOlwiNTFcIixUQjpcIjUyXCIsVUI6XCI1M1wiLFZCOlwiNTRcIixXQjpcIjU1XCIsWEI6XCI1NlwiLFlCOlwiNTdcIixaQjpcIjU4XCIsYUI6XCI2MFwiLGJCOlwiNjJcIixjQjpcIjYzXCIsZEI6XCI2NFwiLGVCOlwiNjVcIixmQjpcIjY2XCIsZ0I6XCI2N1wiLGhCOlwiNjhcIixpQjpcIjY5XCIsakI6XCI3MFwiLGtCOlwiNzFcIixsQjpcIjcyXCIsbUI6XCI3NFwiLG5COlwiNzVcIixvQjpcIjc2XCIscEI6XCI3N1wiLHFCOlwiNzhcIixyQjpcIjExLjFcIixzQjpcIjEyLjFcIix0QjpcIjE2LjBcIix1QjpcIjNcIix2QjpcIjU5XCIsd0I6XCI2MVwiLHhCOlwiODJcIix5QjpcIjExMlwiLHpCOlwiMTEzXCIsXCIwQlwiOlwiMy4yXCIsXCIxQlwiOlwiMTAuMVwiLFwiMkJcIjpcIjEzLjFcIixcIjNCXCI6XCIxNS4yLTE1LjNcIixcIjRCXCI6XCIxNS40XCIsXCI1QlwiOlwiMTUuNVwiLFwiNkJcIjpcIjE1LjZcIixcIjdCXCI6XCIxNi4xXCIsXCI4QlwiOlwiMTYuMlwiLFwiOUJcIjpcIjE2LjNcIixBQzpcIjE2LjRcIixCQzpcIjE2LjVcIixDQzpcIjExLjVcIixEQzpcIjQuMi00LjNcIixFQzpcIjUuNVwiLEZDOlwiMlwiLEdDOlwiMy41XCIsSEM6XCIzLjZcIixJQzpcIjExNFwiLEpDOlwiMTE1XCIsS0M6XCIzLjFcIixMQzpcIjUuMVwiLE1DOlwiNi4xXCIsTkM6XCI3LjFcIixPQzpcIjkuMVwiLFBDOlwiMTQuMVwiLFFDOlwiMTUuMVwiLFJDOlwiVFBcIixTQzpcIjkuNS05LjZcIixUQzpcIjEwLjAtMTAuMVwiLFVDOlwiMTAuNVwiLFZDOlwiMTAuNlwiLFdDOlwiMTEuNlwiLFhDOlwiNC4wLTQuMVwiLFlDOlwiNS4wLTUuMVwiLFpDOlwiNi4wLTYuMVwiLGFDOlwiNy4wLTcuMVwiLGJDOlwiOC4xLTguNFwiLGNDOlwiOS4wLTkuMlwiLGRDOlwiOS4zXCIsZUM6XCIxMC4wLTEwLjJcIixmQzpcIjEwLjNcIixnQzpcIjExLjAtMTEuMlwiLGhDOlwiMTEuMy0xMS40XCIsaUM6XCIxMi4wLTEyLjFcIixqQzpcIjEyLjItMTIuNVwiLGtDOlwiMTMuMC0xMy4xXCIsbEM6XCIxMy4yXCIsbUM6XCIxMy4zXCIsbkM6XCIxMy40LTEzLjdcIixvQzpcIjE0LjAtMTQuNFwiLHBDOlwiMTQuNS0xNC44XCIscUM6XCIxNS4wLTE1LjFcIixyQzpcImFsbFwiLHNDOlwiMi4xXCIsdEM6XCIyLjJcIix1QzpcIjIuM1wiLHZDOlwiNC4xXCIsd0M6XCI0LjRcIix4QzpcIjQuNC4zLTQuNC40XCIseUM6XCIxMy40XCIsekM6XCI1LjAtNS40XCIsXCIwQ1wiOlwiNi4yLTYuNFwiLFwiMUNcIjpcIjcuMi03LjRcIixcIjJDXCI6XCI4LjJcIixcIjNDXCI6XCI5LjJcIixcIjRDXCI6XCIxMS4xLTExLjJcIixcIjVDXCI6XCIxMi4wXCIsXCI2Q1wiOlwiMTMuMFwiLFwiN0NcIjpcIjE0LjBcIixcIjhDXCI6XCIxNS4wXCIsXCI5Q1wiOlwiMTcuMFwiLEFEOlwiMTguMFwiLEJEOlwiMTkuMFwiLENEOlwiMTMuMThcIixERDpcIjIuNVwiLEVEOlwiMy4wLTMuMVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOlwiaWVcIixCOlwiZWRnZVwiLEM6XCJmaXJlZm94XCIsRDpcImNocm9tZVwiLEU6XCJzYWZhcmlcIixGOlwib3BlcmFcIixHOlwiaW9zX3NhZlwiLEg6XCJvcF9taW5pXCIsSTpcImFuZHJvaWRcIixKOlwiYmJcIixLOlwib3BfbW9iXCIsTDpcImFuZF9jaHJcIixNOlwiYW5kX2ZmXCIsTjpcImllX21vYlwiLE86XCJhbmRfdWNcIixQOlwic2Ftc3VuZ1wiLFE6XCJhbmRfcXFcIixSOlwiYmFpZHVcIixTOlwia2Fpb3NcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIkcgTSBOIE9cIixcIjMzXCI6XCJDIEsgTCBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIn0sQzp7XCIxXCI6XCJRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIEdDIEhDXCJ9LEQ6e1wiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wifSxFOntcIjFcIjpcIkwgRyBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMTZcIjpcIktDIDBCXCIsXCIzM1wiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQlwifSxGOntcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCJ9LEc6e1wiMVwiOlwib0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjE2XCI6XCIwQiBYQyBEQyBZQ1wiLFwiMzNcIjpcIkUgWkMgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjE2XCI6XCJ1QiBzQyB0QyB1Q1wiLFwiMzNcIjpcIkkgSCB2QyBEQyB3QyB4Q1wifSxKOntcIjMzXCI6XCJEIEFcIn0sSzp7XCIxNlwiOlwiQSBCIEMgckIgQ0Mgc0JcIixcIjMzXCI6XCJoXCJ9LEw6e1wiMzNcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMzNcIjpcInlDXCJ9LFA6e1wiMzNcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjMzXCI6XCIyQlwifSxSOntcIjMzXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjcsQzpcIkJhY2tncm91bmQtY2xpcDogdGV4dFwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkYgQSBCXCIsXCIyXCI6XCJKIEQgRSBFQ1wifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBHQ1wiLFwiMzZcIjpcIkhDXCJ9LEQ6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjUxNlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMXCJ9LEU6e1wiMVwiOlwiRCBFIEYgQSBCIEMgSyBMIEcgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjc3MlwiOlwiSSB3IEogS0MgMEIgTEMgTUNcIn0sRjp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIyXCI6XCJGIFNDXCIsXCIzNlwiOlwiVENcIn0sRzp7XCIxXCI6XCJFIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCI0XCI6XCIwQiBYQyBEQyBaQ1wiLFwiNTE2XCI6XCJZQ1wifSxIOntcIjEzMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIIHdDIHhDXCIsXCIzNlwiOlwic0NcIixcIjUxNlwiOlwidUIgSSB2QyBEQ1wiLFwiNTQ4XCI6XCJ0QyB1Q1wifSxKOntcIjFcIjpcIkQgQVwifSxLOntcIjFcIjpcIkEgQiBDIGggckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjFcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjQsQzpcIkNTUzMgQmFja2dyb3VuZC1pbWFnZSBvcHRpb25zXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMVwiOlwiQlwiLFwiMlwiOlwiSiBEIEUgRiBBIEVDXCJ9LEI6e1wiMVwiOlwiTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMTI5XCI6XCJDIEtcIn0sQzp7XCIxXCI6XCJSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUJcIixcIjI2MFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUJcIixcIjgwNFwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEdDIEhDXCJ9LEQ6e1wiMVwiOlwiWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjI2MFwiOlwiU0IgVEIgVUIgVkIgV0JcIixcIjM4OFwiOlwiNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkJcIixcIjE0MTJcIjpcIjAgMSAyIDMgNCA1IDYgRyBNIE4gTyB4IGcgeSB6XCIsXCIxOTU2XCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIExcIn0sRTp7XCIxXCI6XCI0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMTI5XCI6XCJBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQlwiLFwiMTQxMlwiOlwiSiBEIEUgRiBNQyBOQ1wiLFwiMTk1NlwiOlwiSSB3IEtDIDBCIExDXCJ9LEY6e1wiMVwiOlwiS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIFNDIFRDXCIsXCIyNjBcIjpcIkZCIEdCIEhCIElCIEpCXCIsXCIzODhcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCXCIsXCIxNzk2XCI6XCJVQyBWQ1wiLFwiMTgyOFwiOlwiQiBDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMVwiOlwiNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjEyOVwiOlwiZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0JcIixcIjE0MTJcIjpcIkUgWkMgYUMgYkMgY0NcIixcIjE5NTZcIjpcIjBCIFhDIERDIFlDXCJ9LEg6e1wiMTgyOFwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIzODhcIjpcIndDIHhDXCIsXCIxOTU2XCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCJ9LEo6e1wiMTQxMlwiOlwiQVwiLFwiMTkyNFwiOlwiRFwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkFcIixcIjE4MjhcIjpcIkIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMVwiOlwiQlwiLFwiMlwiOlwiQVwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMjYwXCI6XCJ6QyAwQ1wiLFwiMzg4XCI6XCJJXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkVEXCIsXCIyNjBcIjpcIkREXCJ9fSxCOjQsQzpcIkNTUzMgQm9yZGVyIGltYWdlc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkYgQSBCXCIsXCIyXCI6XCJKIEQgRSBFQ1wifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjI1N1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCXCIsXCIyODlcIjpcInVCIEdDIEhDXCIsXCIyOTJcIjpcIkZDXCJ9LEQ6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMzNcIjpcIklcIn0sRTp7XCIxXCI6XCJ3IEQgRSBGIEEgQiBDIEsgTCBHIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIzM1wiOlwiSSBLQyAwQlwiLFwiMTI5XCI6XCJKIExDIE1DXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBCIEMgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMlwiOlwiRiBTQyBUQ1wifSxHOntcIjFcIjpcIkUgWEMgREMgWUMgWkMgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjMzXCI6XCIwQlwifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwidUIgSSBIIHRDIHVDIHZDIERDIHdDIHhDXCIsXCIzM1wiOlwic0NcIn0sSjp7XCIxXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJCIEMgaCByQiBDQyBzQlwiLFwiMlwiOlwiQVwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMVwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjI1N1wiOlwiRERcIn19LEI6NCxDOlwiQ1NTMyBCb3JkZXItcmFkaXVzIChyb3VuZGVkIGNvcm5lcnMpXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRUNcIixcIjI2MFwiOlwiRlwiLFwiNTE2XCI6XCJBIEJcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgR0MgSENcIixcIjMzXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgR1wifSxEOntcIjFcIjpcIjMgNCA1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPXCIsXCIzM1wiOlwiMCAxIDIgeCBnIHkgelwifSxFOntcIjFcIjpcIkQgRSBGIEEgQiBDIEsgTCBHIE1DIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgS0MgMEIgTENcIixcIjMzXCI6XCJKXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwifSxHOntcIjFcIjpcIkUgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDXCIsXCIzM1wiOlwiWkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgRENcIixcIjEzMlwiOlwid0MgeENcIn0sSjp7XCIxXCI6XCJBXCIsXCIyXCI6XCJEXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjFcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjQsQzpcImNhbGMoKSBhcyBDU1MgdW5pdCB2YWx1ZVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkEgQlwiLFwiMlwiOlwiSiBEIEUgRiBFQ1wifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBJIEdDIEhDXCIsXCIzM1wiOlwidyBKIEQgRSBGIEEgQiBDIEsgTCBHXCJ9LEQ6e1wiMVwiOlwiS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkJcIn0sRTp7XCIxXCI6XCJGIEEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJLQyAwQlwiLFwiMzNcIjpcIkogRCBFIExDIE1DIE5DXCIsXCIyOTJcIjpcIkkgd1wifSxGOntcIjFcIjpcIjcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBzQlwiLFwiMlwiOlwiRiBCIFNDIFRDIFVDIFZDIHJCIENDIFdDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiBDIEcgTSBOIE8geCBnIHkgelwifSxHOntcIjFcIjpcImNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIzM1wiOlwiRSBaQyBhQyBiQ1wiLFwiMTY0XCI6XCIwQiBYQyBEQyBZQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMzNcIjpcIkkgdkMgREMgd0MgeENcIixcIjE2NFwiOlwidUIgc0MgdEMgdUNcIn0sSjp7XCIzM1wiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaCBzQlwiLFwiMlwiOlwiQSBCIEMgckIgQ0NcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjFcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjUsQzpcIkNTUyBBbmltYXRpb25cIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIlJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIxNlwiOlwiRkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgR0MgSENcIn0sRDp7XCIxXCI6XCJlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMTZcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTFwiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCXCJ9LEU6e1wiMVwiOlwiRiBBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMTZcIjpcIkkgdyBKIEtDIDBCIExDXCIsXCIzM1wiOlwiRCBFIE1DIE5DXCJ9LEY6e1wiMVwiOlwiVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCXCJ9LEc6e1wiMVwiOlwiY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjE2XCI6XCIwQiBYQyBEQyBZQ1wiLFwiMzNcIjpcIkUgWkMgYUMgYkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjE2XCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCIsXCIzM1wiOlwid0MgeENcIn0sSjp7XCIxNlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMTZcIjpcIklcIixcIjMzXCI6XCJ6QyAwQyAxQyAyQ1wifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiMzNcIjpcIkREXCJ9fSxCOjUsQzpcIkNTUyA6YW55LWxpbmsgc2VsZWN0b3JcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjMzXCI6XCJTXCIsXCIxNjRcIjpcIlAgUSBSXCIsXCIzODhcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIxNjRcIjpcIkNCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUFwiLFwiNjc2XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgR0MgSENcIn0sRDp7XCIxXCI6XCJUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIzM1wiOlwiU1wiLFwiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUlwifSxFOntcIjFcIjpcIjRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIxNjRcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIEtDIDBCIExDIE1DIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCXCJ9LEY6e1wiMVwiOlwiaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMzNcIjpcImpCIGtCIGxCXCIsXCIxNjRcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCXCJ9LEc6e1wiMVwiOlwiNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjE2NFwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQlwifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMTY0XCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMTY0XCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQVwiLFwiMzg4XCI6XCJCXCJ9LE86e1wiMTY0XCI6XCJ5Q1wifSxQOntcIjE2NFwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMTY0XCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjE2NFwiOlwiRERcIn19LEI6NSxDOlwiQ1NTIEFwcGVhcmFuY2VcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7RDp7XCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCJ9LEw6e1wiMzNcIjpcIkhcIn0sQjp7XCIyXCI6XCJDIEsgTCBHIE0gTiBPXCIsXCIzM1wiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBHQyBIQ1wifSxNOntcIjFcIjpcImZcIn0sQTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxGOntcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCJ9LEs6e1wiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIixcIjMzXCI6XCJoXCJ9LEU6e1wiMVwiOlwiRyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiUkNcIixcIjMzXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgS0MgMEIgTEMgTUMgTkMgT0MgMUIgckIgc0IgMkIgUENcIn0sRzp7XCIxXCI6XCJxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMzNcIjpcIkUgMEIgWEMgREMgWUMgWkMgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcENcIn0sUDp7XCIzM1wiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LEk6e1wiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMzNcIjpcIkggd0MgeENcIn19LEI6NixDOlwiOmF1dG9maWxsIENTUyBwc2V1ZG8tY2xhc3NcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNXCIsXCIyNTdcIjpcIk4gT1wifSxDOntcIjFcIjpcInAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgR0MgSENcIixcIjU3OFwiOlwiakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG9cIn0sRDp7XCIxXCI6XCJvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQlwiLFwiMTk0XCI6XCJPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CXCJ9LEU6e1wiMlwiOlwiSSB3IEogRCBFIEtDIDBCIExDIE1DIE5DXCIsXCIzM1wiOlwiRiBBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wifSxGOntcIjFcIjpcImRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjE5NFwiOlwiQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0JcIn0sRzp7XCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDXCIsXCIzM1wiOlwiY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJJXCIsXCIxOTRcIjpcInpDIDBDIDFDIDJDIDNDIDFCIDRDXCJ9LFE6e1wiMlwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjJcIjpcIkREIEVEXCJ9fSxCOjcsQzpcIkNTUyBCYWNrZHJvcCBGaWx0ZXJcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIixcIjE2NFwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBHQyBIQ1wifSxEOntcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5XCIsXCIxNjRcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wifSxFOntcIjJcIjpcIkkgdyBKIEtDIDBCIExDXCIsXCIxNjRcIjpcIkQgRSBGIEEgQiBDIEsgTCBHIE1DIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCJ9LEY6e1wiMlwiOlwiRiBTQyBUQyBVQyBWQ1wiLFwiMTI5XCI6XCJCIEMgckIgQ0MgV0Mgc0JcIixcIjE2NFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCJ9LEc6e1wiMlwiOlwiMEIgWEMgREMgWUMgWkNcIixcIjE2NFwiOlwiRSBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxIOntcIjEzMlwiOlwickNcIn0sSTp7XCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCIsXCIxNjRcIjpcIkggd0MgeENcIn0sSjp7XCIyXCI6XCJEXCIsXCIxNjRcIjpcIkFcIn0sSzp7XCIyXCI6XCJBXCIsXCIxMjlcIjpcIkIgQyByQiBDQyBzQlwiLFwiMTY0XCI6XCJoXCJ9LEw6e1wiMTY0XCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjE2NFwiOlwieUNcIn0sUDp7XCIxNjRcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjE2NFwiOlwiMkJcIn0sUjp7XCIxNjRcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6NCxDOlwiQ1NTIGJveC1kZWNvcmF0aW9uLWJyZWFrXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMVwiOlwiRiBBIEJcIixcIjJcIjpcIkogRCBFIEVDXCJ9LEI6e1wiMVwiOlwiQyBLIEwgRyBNIE4gTyBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIn0sQzp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCXCIsXCIzM1wiOlwiR0MgSENcIn0sRDp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCJJIHcgSiBEIEUgRlwifSxFOntcIjFcIjpcIkogRCBFIEYgQSBCIEMgSyBMIEcgTEMgTUMgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjMzXCI6XCJ3XCIsXCIxNjRcIjpcIkkgS0MgMEJcIn0sRjp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIyXCI6XCJGIFNDIFRDXCJ9LEc6e1wiMVwiOlwiRSBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMzNcIjpcIlhDIERDXCIsXCIxNjRcIjpcIjBCXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJJIEggdkMgREMgd0MgeENcIixcIjE2NFwiOlwidUIgc0MgdEMgdUNcIn0sSjp7XCIxXCI6XCJBXCIsXCIzM1wiOlwiRFwifSxLOntcIjFcIjpcIkIgQyBoIHJCIENDIHNCXCIsXCIyXCI6XCJBXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIxXCI6XCJBIEJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo0LEM6XCJDU1MzIEJveC1zaGFkb3dcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjJcIjpcIkMgSyBMIEcgTSBOXCIsXCIyNjBcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMzEzOFwiOlwiT1wifSxDOntcIjFcIjpcIlZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QlwiLFwiMTMyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgR0MgSENcIixcIjY0NFwiOlwiT0IgUEIgUUIgUkIgU0IgVEIgVUJcIn0sRDp7XCIyXCI6XCIwIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHpcIixcIjI2MFwiOlwiV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjI5MlwiOlwiMSAyIDMgNCA1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkJcIn0sRTp7XCIyXCI6XCJJIHcgSiBLQyAwQiBMQyBNQ1wiLFwiMjYwXCI6XCJMIEcgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjI5MlwiOlwiRCBFIEYgQSBCIEMgSyBOQyBPQyAxQiByQiBzQlwifSxGOntcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIyNjBcIjpcIkpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMjkyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQlwifSxHOntcIjJcIjpcIjBCIFhDIERDIFlDIFpDXCIsXCIyNjBcIjpcImtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyOTJcIjpcIkUgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgRENcIixcIjI2MFwiOlwiSFwiLFwiMjkyXCI6XCJ3QyB4Q1wifSxKOntcIjJcIjpcIkQgQVwifSxLOntcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCIsXCIyNjBcIjpcImhcIn0sTDp7XCIyNjBcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMjYwXCI6XCJ5Q1wifSxQOntcIjI5MlwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMjYwXCI6XCIyQlwifSxSOntcIjI2MFwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiNjQ0XCI6XCJERFwifX0sQjo0LEM6XCJDU1MgY2xpcC1wYXRoIHByb3BlcnR5IChmb3IgSFRNTClcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEVDXCIsXCIyMzQwXCI6XCJEIEUgRiBBIEJcIn0sQjp7XCIyXCI6XCJDIEsgTCBHIE0gTiBPXCIsXCIxMDI1XCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIn0sQzp7XCIxXCI6XCJjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBHQ1wiLFwiNTEzXCI6XCJlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGJcIixcIjU0NVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIEhDXCJ9LEQ6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCXCIsXCIxMDI1XCI6XCJJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wifSxFOntcIjFcIjpcIkEgQiBDIEsgTCBHIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgS0MgMEIgTENcIixcIjE2NFwiOlwiSlwiLFwiNDY0NFwiOlwiRCBFIEYgTUMgTkMgT0NcIn0sRjp7XCIyXCI6XCIwIDEgMiAzIDQgRiBCIEcgTSBOIE8geCBnIHkgeiBTQyBUQyBVQyBWQyByQiBDQ1wiLFwiNTQ1XCI6XCJDIFdDIHNCXCIsXCIxMDI1XCI6XCI1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCJ9LEc6e1wiMVwiOlwiZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDXCIsXCI0MjYwXCI6XCJZQyBaQ1wiLFwiNDY0NFwiOlwiRSBhQyBiQyBjQyBkQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wiLFwiMTAyNVwiOlwiSFwifSxKOntcIjJcIjpcIkRcIixcIjQyNjBcIjpcIkFcIn0sSzp7XCIyXCI6XCJBIEIgckIgQ0NcIixcIjU0NVwiOlwiQyBzQlwiLFwiMTAyNVwiOlwiaFwifSxMOntcIjEwMjVcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMjM0MFwiOlwiQSBCXCJ9LE86e1wiMTAyNVwiOlwieUNcIn0sUDp7XCIxMDI1XCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxMDI1XCI6XCIyQlwifSxSOntcIjEwMjVcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjQwOTdcIjpcIkREXCJ9fSxCOjQsQzpcIkNyaXNwIGVkZ2VzL3BpeGVsYXRlZCBpbWFnZXNcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIixcIjMzXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIn0sQzp7XCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgR0MgSENcIn0sRDp7XCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wifSxFOntcIjFcIjpcIkEgQiBDIEsgTCBHIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgS0MgMEJcIixcIjMzXCI6XCJKIEQgRSBGIExDIE1DIE5DIE9DXCJ9LEY6e1wiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIn0sRzp7XCIxXCI6XCJlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWEMgRENcIixcIjMzXCI6XCJFIFlDIFpDIGFDIGJDIGNDIGRDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCIsXCIzM1wiOlwiSCB3QyB4Q1wifSxKOntcIjJcIjpcIkQgQVwifSxLOntcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCIsXCIzM1wiOlwiaFwifSxMOntcIjMzXCI6XCJIXCJ9LE06e1wiMlwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjMzXCI6XCJ5Q1wifSxQOntcIjMzXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIzM1wiOlwiMkJcIn0sUjp7XCIzM1wiOlwiQ0RcIn0sUzp7XCIyXCI6XCJERCBFRFwifX0sQjo0LEM6XCJDU1MgQ3Jvc3MtRmFkZSBGdW5jdGlvblwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgRUNcIixcIjE2NFwiOlwiQSBCXCJ9LEI6e1wiNjZcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMTY0XCI6XCJDIEsgTCBHIE0gTiBPXCJ9LEM6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIEdDIEhDXCJ9LEQ6e1wiMlwiOlwiMCAxIDIgMyA0IDUgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgelwiLFwiNjZcIjpcIjYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIn0sRTp7XCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBLQyAwQiBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wifSxGOntcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRiBCIEMgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCI2NlwiOlwiSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCJ9LEc6e1wiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxIOntcIjI5MlwiOlwickNcIn0sSTp7XCIyXCI6XCJ1QiBJIEggc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyXCI6XCJEIEFcIn0sSzp7XCIyXCI6XCJBIGhcIixcIjI5MlwiOlwiQiBDIHJCIENDIHNCXCJ9LEw6e1wiMlwiOlwiSFwifSxNOntcIjJcIjpcImZcIn0sTjp7XCIxNjRcIjpcIkEgQlwifSxPOntcIjJcIjpcInlDXCJ9LFA6e1wiMlwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiNjZcIjpcIjJCXCJ9LFI6e1wiMlwiOlwiQ0RcIn0sUzp7XCIyXCI6XCJERCBFRFwifX0sQjo1LEM6XCJDU1MgRGV2aWNlIEFkYXB0YXRpb25cIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjJcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMTY0XCI6XCJGQyB1QiBHQyBIQ1wifSxEOntcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wifSxFOntcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIEtDIDBCIExDIE1DIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCJ9LEY6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMlwiOlwidUIgSSBIIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMlwiOlwiQSBCIEMgaCByQiBDQyBzQlwifSxMOntcIjJcIjpcIkhcIn0sTTp7XCIzM1wiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjJcIjpcInlDXCJ9LFA6e1wiMlwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMlwiOlwiMkJcIn0sUjp7XCIyXCI6XCJDRFwifSxTOntcIjMzXCI6XCJERCBFRFwifX0sQjo1LEM6XCJDU1MgZWxlbWVudCgpIGZ1bmN0aW9uXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgR0MgSENcIn0sRDp7XCIxXCI6XCI1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6XCJ9LEU6e1wiMVwiOlwiRiBBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiSSB3IEogRCBFIEtDIDBCIExDIE1DIE5DXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIHNCXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQ1wifSxHOntcIjFcIjpcImNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDXCJ9LEg6e1wiMVwiOlwickNcIn0sSTp7XCIxXCI6XCJIIHdDIHhDXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjQsQzpcIkNTUyBGZWF0dXJlIFF1ZXJpZXNcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7RDp7XCIxXCI6XCJZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWFwifSxMOntcIjFcIjpcIkhcIn0sQjp7XCIxXCI6XCJZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjMzXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYXCJ9LEM6e1wiMVwiOlwieEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBHQyBIQ1wifSxNOntcIjFcIjpcImZcIn0sQTp7XCIyXCI6XCJKIEQgRSBGIEVDXCIsXCIzM1wiOlwiQSBCXCJ9LEY6e1wiMVwiOlwibkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sRTp7XCIxXCI6XCJHIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJSQ1wiLFwiMzNcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBLQyAwQiBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQlwifSxHOntcIjFcIjpcInBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIzM1wiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQ1wifSxQOntcIjFcIjpcImcgOEMgdEIgOUMgQUQgQkRcIixcIjMzXCI6XCJJIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMzNcIjpcIndDIHhDXCJ9fSxCOjYsQzpcIjo6ZmlsZS1zZWxlY3Rvci1idXR0b24gQ1NTIHBzZXVkby1lbGVtZW50XCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIyXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBHQyBIQ1wifSxEOntcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wifSxFOntcIjFcIjpcIkEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgSiBEIEUgS0MgMEIgTEMgTUMgTkNcIixcIjMzXCI6XCJGXCJ9LEY6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMVwiOlwiZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIkUgMEIgWEMgREMgWUMgWkMgYUMgYkNcIixcIjMzXCI6XCJjQyBkQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMlwiOlwidUIgSSBIIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMlwiOlwiQSBCIEMgaCByQiBDQyBzQlwifSxMOntcIjJcIjpcIkhcIn0sTTp7XCIyXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMlwiOlwieUNcIn0sUDp7XCIyXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIyXCI6XCIyQlwifSxSOntcIjJcIjpcIkNEXCJ9LFM6e1wiMlwiOlwiREQgRURcIn19LEI6NSxDOlwiQ1NTIGZpbHRlcigpIGZ1bmN0aW9uXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjEwMjhcIjpcIksgTCBHIE0gTiBPXCIsXCIxMzQ2XCI6XCJDXCJ9LEM6e1wiMVwiOlwiQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCIEdDXCIsXCIxOTZcIjpcIkJCXCIsXCI1MTZcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBIQ1wifSxEOntcIjFcIjpcIlVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE5cIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQlwifSxFOntcIjFcIjpcIkEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgS0MgMEIgTENcIixcIjMzXCI6XCJKIEQgRSBGIE1DIE5DXCJ9LEY6e1wiMVwiOlwiSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCXCJ9LEc6e1wiMVwiOlwiZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDXCIsXCIzM1wiOlwiRSBaQyBhQyBiQyBjQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMzNcIjpcIndDIHhDXCJ9LEo6e1wiMlwiOlwiRFwiLFwiMzNcIjpcIkFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIzM1wiOlwiSSB6QyAwQ1wifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo1LEM6XCJDU1MgRmlsdGVyIEVmZmVjdHNcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIxXCI6XCJBIEJcIixcIjJcIjpcIkogRCBFIEYgRUNcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIkRCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBHQ1wiLFwiMjYwXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IE0gTiBPIHggZyB5IHogQUIgQkIgQ0JcIixcIjI5MlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgSENcIn0sRDp7XCIxXCI6XCIzIDQgNSA2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIzM1wiOlwiMCAxIDIgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgelwiLFwiNTQ4XCI6XCJJIHcgSiBEIEUgRlwifSxFOntcIjFcIjpcIjRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJLQyAwQlwiLFwiMjYwXCI6XCJEIEUgRiBBIEIgQyBLIEwgRyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQlwiLFwiMjkyXCI6XCJKIExDXCIsXCI4MDRcIjpcIkkgd1wifSxGOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBzQlwiLFwiMlwiOlwiRiBCIFNDIFRDIFVDIFZDXCIsXCIzM1wiOlwiQyBXQ1wiLFwiMTY0XCI6XCJyQiBDQ1wifSxHOntcIjFcIjpcIjRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyNjBcIjpcIkUgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0JcIixcIjI5MlwiOlwiWUMgWkNcIixcIjgwNFwiOlwiMEIgWEMgRENcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkggd0MgeENcIixcIjMzXCI6XCJJIHZDIERDXCIsXCI1NDhcIjpcInVCIHNDIHRDIHVDXCJ9LEo6e1wiMVwiOlwiQVwiLFwiNTQ4XCI6XCJEXCJ9LEs6e1wiMVwiOlwiaCBzQlwiLFwiMlwiOlwiQSBCXCIsXCIzM1wiOlwiQ1wiLFwiMTY0XCI6XCJyQiBDQ1wifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMVwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6NCxDOlwiQ1NTIEdyYWRpZW50c1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEVDXCIsXCI4XCI6XCJGXCIsXCIyOTJcIjpcIkEgQlwifSxCOntcIjFcIjpcIk0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMjkyXCI6XCJDIEsgTCBHXCJ9LEM6e1wiMVwiOlwiVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIEdDIEhDXCIsXCI4XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0JcIixcIjU4NFwiOlwiSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0JcIixcIjEwMjVcIjpcIlRCIFVCXCJ9LEQ6e1wiMVwiOlwiWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6XCIsXCI4XCI6XCIyIDMgNCA1XCIsXCIyMDBcIjpcIjYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEJcIixcIjEwMjVcIjpcIllCXCJ9LEU6e1wiMVwiOlwiQiBDIEsgTCBHIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgS0MgMEIgTENcIixcIjhcIjpcIkogRCBFIEYgQSBNQyBOQyBPQ1wifSxGOntcIjFcIjpcIkxCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMjAwXCI6XCI1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0JcIn0sRzp7XCIxXCI6XCJmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWEMgREMgWUNcIixcIjhcIjpcIkUgWkMgYUMgYkMgY0MgZEMgZUNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkNcIixcIjhcIjpcIkRDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjI5MlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJ6Q1wiLFwiOFwiOlwiSVwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo0LEM6XCJDU1MgR3JpZCBMYXlvdXQgKGxldmVsIDEpXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBFQ1wiLFwiMzNcIjpcIkEgQlwifSxCOntcIjFcIjpcInIgcyB0IHUgdiBmIEhcIixcIjMzXCI6XCJDIEsgTCBHIE0gTiBPXCIsXCIxMzJcIjpcIlAgUSBSIFMgVCBVIFYgV1wiLFwiMjYwXCI6XCJYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHFcIn0sQzp7XCIxXCI6XCJLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEdDIEhDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkJcIn0sRDp7XCIxXCI6XCJYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCXCIsXCIxMzJcIjpcIldCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXXCJ9LEU6e1wiMlwiOlwiSSB3IEtDIDBCXCIsXCIzM1wiOlwiSiBEIEUgRiBBIEIgQyBLIEwgRyBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wifSxGOntcIjFcIjpcImEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjEzMlwiOlwiSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFpcIn0sRzp7XCIyXCI6XCIwQiBYQ1wiLFwiMzNcIjpcIkUgREMgWUMgWkMgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiNFwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJJXCIsXCIxMzJcIjpcInpDXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjQsQzpcIkNTUyBIeXBoZW5hdGlvblwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEI6e1wiMlwiOlwiQyBLIEwgRyBNIE4gT1wiLFwiMTY0XCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIn0sQzp7XCIxXCI6XCJ6QlwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgR0MgSENcIixcIjY2XCI6XCJWIFdcIixcIjIzMDVcIjpcIlkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QlwiLFwiMjgyMFwiOlwiWFwifSxEOntcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZ1wiLFwiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QlwiLFwiMjA0OVwiOlwiekIgSUMgSkNcIn0sRTp7XCIxXCI6XCJSQ1wiLFwiMlwiOlwiSSB3IEtDIDBCIExDXCIsXCIxMzJcIjpcIkEgQiBDIEsgMUIgckIgc0IgMkJcIixcIjE2NFwiOlwiSiBEIEUgRiBNQyBOQyBPQ1wiLFwiMTU0MFwiOlwiTCBHIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LEY6e1wiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjE2NFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCJ9LEc6e1wiMlwiOlwiMEIgWEMgREMgWUNcIixcIjEzMlwiOlwiZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkNcIixcIjE2NFwiOlwiRSBaQyBhQyBiQyBjQyBkQ1wiLFwiMTU0MFwiOlwib0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgRENcIixcIjE2NFwiOlwiSCB3QyB4Q1wifSxKOntcIjJcIjpcIkRcIixcIjE2NFwiOlwiQVwifSxLOntcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCIsXCIxNjRcIjpcImhcIn0sTDp7XCIxNjRcIjpcIkhcIn0sTTp7XCIyMzA1XCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMTY0XCI6XCJ5Q1wifSxQOntcIjE2NFwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMTY0XCI6XCIyQlwifSxSOntcIjE2NFwiOlwiQ0RcIn0sUzp7XCIyXCI6XCJERCBFRFwifX0sQjo1LEM6XCJDU1MgaW1hZ2Utc2V0XCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIixcIjEwMjhcIjpcIlcgWFwiLFwiMTU0MFwiOlwiUCBRIFIgUyBUIFUgVlwifSxDOntcIjFcIjpcImZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQ1wiLFwiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgR0MgSENcIixcIjE1NDBcIjpcIklCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCXCJ9LEQ6e1wiMVwiOlwiWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyOTJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQlwiLFwiMTAyOFwiOlwiVyBYXCIsXCIxNTQwXCI6XCJpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFZcIn0sRTp7XCIxXCI6XCJHIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyOTJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEtDIDBCIExDIE1DIE5DIE9DIDFCIHJCXCIsXCIxNTQwXCI6XCJLIEwgc0IgMkJcIixcIjUxMjRcIjpcIlBDXCJ9LEY6e1wiMVwiOlwib0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjI5MlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0JcIixcIjEwMjhcIjpcIm1CIG5CXCIsXCIxNTQwXCI6XCJYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoXCJ9LEc6e1wiMVwiOlwicUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjI5MlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQ1wiLFwiMTU0MFwiOlwiakMga0MgbEMgbUMgbkMgb0NcIixcIjUxMjRcIjpcInBDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIyOTJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyOTJcIjpcIkQgQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIyOTJcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyA4QyB0QiA5QyBBRCBCRFwiLFwiMjkyXCI6XCJJIHpDIDBDIDFDIDJDIDNDXCIsXCIxNTQwXCI6XCIxQiA0QyA1QyA2QyA3Q1wifSxROntcIjE1NDBcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiMTU0MFwiOlwiRERcIn19LEI6NSxDOlwiQ1NTIExvZ2ljYWwgUHJvcGVydGllc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEI6e1wiMlwiOlwiQyBLIEwgRyBNXCIsXCIxNjRcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMzEzOFwiOlwiTlwiLFwiMTIyOTJcIjpcIk9cIn0sQzp7XCIxXCI6XCJVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUJcIixcIjI2MFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIEdDIEhDXCJ9LEQ6e1wiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIn0sRTp7XCIxXCI6XCI0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiS0MgMEJcIixcIjE2NFwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTEMgTUMgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0JcIn0sRjp7XCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIn0sRzp7XCIxXCI6XCI0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMTY0XCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxNjRcIjpcIkggd0MgeENcIixcIjY3NlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wifSxKOntcIjE2NFwiOlwiRCBBXCJ9LEs6e1wiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIixcIjE2NFwiOlwiaFwifSxMOntcIjE2NFwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIxNjRcIjpcInlDXCJ9LFA6e1wiMTY0XCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxNjRcIjpcIjJCXCJ9LFI6e1wiMTY0XCI6XCJDRFwifSxTOntcIjFcIjpcIkVEXCIsXCIyNjBcIjpcIkREXCJ9fSxCOjQsQzpcIkNTUyBNYXNrc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEVDXCIsXCIxMzJcIjpcIkYgQSBCXCJ9LEI6e1wiMVwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIxMDI4XCI6XCJDIEsgTCBHIE0gTiBPXCJ9LEM6e1wiMVwiOlwiYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCXCIsXCIyNjBcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIEdDIEhDXCIsXCIxMDI4XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0JcIn0sRDp7XCIxXCI6XCJoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiNTQ4XCI6XCIwIDEgMiAzIDQgNSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6XCIsXCIxMDI4XCI6XCI2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCXCJ9LEU6e1wiMVwiOlwidEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIktDIDBCXCIsXCI1NDhcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIExDIE1DIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCXCJ9LEY6e1wiMVwiOlwiV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIHNCXCIsXCIyXCI6XCJGXCIsXCI1NDhcIjpcIkIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQ1wiLFwiMTAyOFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkJcIn0sRzp7XCIxXCI6XCJ0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMTZcIjpcIjBCXCIsXCI1NDhcIjpcIkUgWEMgREMgWUMgWkMgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkJcIn0sSDp7XCIxMzJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMTZcIjpcInNDIHRDXCIsXCI1NDhcIjpcInVCIEkgdUMgdkMgRENcIixcIjEwMjhcIjpcIndDIHhDXCJ9LEo6e1wiNTQ4XCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoIHNCXCIsXCI1NDhcIjpcIkEgQiBDIHJCIENDXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIxMzJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMTAyOFwiOlwiSSB6QyAwQyAxQyAyQyAzQ1wifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo0LEM6XCJNZWRpYSBRdWVyaWVzOiByZXNvbHV0aW9uIGZlYXR1cmVcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEVDXCIsXCIxMzJcIjpcIkEgQlwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMTMyXCI6XCJDIEsgTCBHIE0gTlwiLFwiNTE2XCI6XCJPXCJ9LEM6e1wiMVwiOlwidkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBHQyBIQ1wifSxEOntcIjFcIjpcImVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkJcIixcIjI2MFwiOlwiY0IgZEJcIn0sRTp7XCIxXCI6XCJ0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEtDIDBCIExDIE1DIE5DIE9DIDFCIHJCIHNCIDJCXCIsXCIxMDkwXCI6XCJHIFBDIFFDIDNCIDRCIDVCIDZCXCJ9LEY6e1wiMVwiOlwiVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMjYwXCI6XCJSQiBTQlwifSxHOntcIjFcIjpcInRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DXCIsXCIxMDkwXCI6XCJwQyBxQyAzQiA0QiA1QiA2QlwifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjJcIjpcIkQgQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIxMzJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMlwiOlwiSSB6QyAwQyAxQ1wifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiMlwiOlwiRERcIn19LEI6NSxDOlwiQ1NTIG92ZXJzY3JvbGwtYmVoYXZpb3JcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEVDXCIsXCIyOTJcIjpcIkEgQlwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIlNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBHQyBIQ1wiLFwiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkJcIn0sRDp7XCIxXCI6XCJPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CXCJ9LEU6e1wiMVwiOlwiRiBBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiSSB3IEogRCBFIEtDIDBCIExDIE1DIE5DXCJ9LEY6e1wiMVwiOlwiQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwifSxHOntcIjFcIjpcImNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMlwiOlwiSVwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiMTY0XCI6XCJERFwifX0sQjo1LEM6XCI6cGxhY2Vob2xkZXItc2hvd24gQ1NTIHBzZXVkby1jbGFzc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEI6e1wiMVwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIzNlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIlNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyBHQyBIQ1wiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgeCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQlwifSxEOntcIjFcIjpcIllCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIzNlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCXCJ9LEU6e1wiMVwiOlwiQiBDIEsgTCBHIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIEtDIDBCXCIsXCIzNlwiOlwidyBKIEQgRSBGIEEgTEMgTUMgTkMgT0NcIn0sRjp7XCIxXCI6XCJMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIzNlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0JcIn0sRzp7XCIxXCI6XCJmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWENcIixcIjM2XCI6XCJFIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIzNlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjM2XCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMzZcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMzZcIjpcIkkgekMgMENcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjMzXCI6XCJERFwifX0sQjo1LEM6XCI6OnBsYWNlaG9sZGVyIENTUyBwc2V1ZG8tZWxlbWVudFwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntEOntcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE1cIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCJ9LEw6e1wiMzNcIjpcIkhcIn0sQjp7XCIyXCI6XCJDIEsgTCBHIE0gTiBPXCIsXCIzM1wiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBHQyBIQ1wiLFwiMzNcIjpcIlBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpXCJ9LE06e1wiMVwiOlwiZlwifSxBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEY6e1wiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIn0sSzp7XCIyXCI6XCJBIEIgQyByQiBDQyBzQlwiLFwiMzNcIjpcImhcIn0sRTp7XCIxXCI6XCI0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiSSB3IEtDIDBCIExDIFJDXCIsXCIzM1wiOlwiSiBEIEUgRiBBIEIgQyBLIEwgRyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQlwifSxHOntcIjFcIjpcIjRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCIwQiBYQyBEQyBZQ1wiLFwiMzNcIjpcIkUgWkMgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0JcIn0sUDp7XCIzM1wiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LEk6e1wiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMzNcIjpcIkggd0MgeENcIn19LEI6NixDOlwicHJpbnQtY29sb3ItYWRqdXN0IHByb3BlcnR5XCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJLIEwgRyBNIE4gTyBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjJcIjpcIkNcIn0sQzp7XCIxXCI6XCJxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjE2XCI6XCJGQ1wiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIEdDIEhDXCJ9LEQ6e1wiMVwiOlwiREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjE2XCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIExcIixcIjEzMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0JcIn0sRTp7XCIxXCI6XCJGIEEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIxNlwiOlwiS0MgMEJcIixcIjEzMlwiOlwiSSB3IEogRCBFIExDIE1DIE5DXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjE2XCI6XCJGIEIgU0MgVEMgVUMgVkMgckJcIixcIjEzMlwiOlwiQyBHIE0gTiBPIHggZyB5IHogQ0MgV0Mgc0JcIn0sRzp7XCIxXCI6XCJjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMTZcIjpcIjBCIFhDXCIsXCIxMzJcIjpcIkUgREMgWUMgWkMgYUMgYkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjE2XCI6XCJzQyB0Q1wiLFwiMTMyXCI6XCJ1QiBJIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMVwiOlwiQVwiLFwiMTMyXCI6XCJEXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIHJCXCIsXCIxMzJcIjpcIkMgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkVEXCIsXCIzM1wiOlwiRERcIn19LEI6MSxDOlwiQ1NTIDpyZWFkLW9ubHkgYW5kIDpyZWFkLXdyaXRlIHNlbGVjdG9yc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgRUNcIixcIjQyMFwiOlwiQSBCXCJ9LEI6e1wiMlwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCI0MjBcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgR0MgSENcIn0sRDp7XCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjM2XCI6XCJHIE0gTiBPXCIsXCI2NlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB4IGcgeSB6IEFCIEJCXCJ9LEU6e1wiMlwiOlwiSSB3IEogQyBLIEwgRyBLQyAwQiBMQyByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMzNcIjpcIkQgRSBGIEEgQiBNQyBOQyBPQyAxQlwifSxGOntcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRiBCIEMgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwifSxHOntcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIzM1wiOlwiRSBhQyBiQyBjQyBkQyBlQyBmQyBnQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMlwiOlwidUIgSSBIIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMlwiOlwiQSBCIEMgaCByQiBDQyBzQlwifSxMOntcIjJcIjpcIkhcIn0sTTp7XCIyXCI6XCJmXCJ9LE46e1wiNDIwXCI6XCJBIEJcIn0sTzp7XCIyXCI6XCJ5Q1wifSxQOntcIjJcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjJcIjpcIjJCXCJ9LFI6e1wiMlwiOlwiQ0RcIn0sUzp7XCIyXCI6XCJERCBFRFwifX0sQjo1LEM6XCJDU1MgUmVnaW9uc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkYgQSBCXCIsXCIyXCI6XCJKIEQgRSBFQ1wifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgR0MgSENcIn0sRDp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIn0sRTp7XCIxXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBLQyAwQiBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wifSxGOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjJcIjpcIkZcIn0sRzp7XCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIIHdDIHhDXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCJ9LEo6e1wiMVwiOlwiQVwiLFwiMlwiOlwiRFwifSxLOntcIjFcIjpcIkMgaCBDQyBzQlwiLFwiMTZcIjpcIkEgQiByQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMVwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjMzXCI6XCJERFwifX0sQjo1LEM6XCI6OnNlbGVjdGlvbiBDU1MgcHNldWRvLWVsZW1lbnRcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcImJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgR0MgSENcIixcIjMyMlwiOlwiU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0JcIn0sRDp7XCIxXCI6XCJFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCXCIsXCIxOTRcIjpcIkJCIENCIERCXCJ9LEU6e1wiMVwiOlwiQiBDIEsgTCBHIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgSiBEIEtDIDBCIExDIE1DXCIsXCIzM1wiOlwiRSBGIEEgTkMgT0NcIn0sRjp7XCIxXCI6XCIxIDIgMyA0IDUgNiA3IDggOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIjAgRiBCIEMgRyBNIE4gTyB4IGcgeSB6IFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMVwiOlwiZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGFDXCIsXCIzM1wiOlwiRSBiQyBjQyBkQyBlQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjJcIjpcIkQgQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiMlwiOlwiRERcIn19LEI6NCxDOlwiQ1NTIFNoYXBlcyBMZXZlbCAxXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBFQ1wiLFwiNjMwOFwiOlwiQVwiLFwiNjQzNlwiOlwiQlwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiNjQzNlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcImhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0MgSENcIixcIjIwNTJcIjpcIkdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCXCJ9LEQ6e1wiMVwiOlwiaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQlwiLFwiODI1OFwiOlwiZkIgZ0IgaEJcIn0sRTp7XCIxXCI6XCJCIEMgSyBMIEcgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkkgdyBKIEQgRSBLQyAwQiBMQyBNQyBOQ1wiLFwiMzEwOFwiOlwiRiBBIE9DIDFCXCJ9LEY6e1wiMVwiOlwiZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiODI1OFwiOlwiVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0JcIn0sRzp7XCIxXCI6XCJnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQ1wiLFwiMzEwOFwiOlwiY0MgZEMgZUMgZkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJJIHpDIDBDIDFDIDJDIDNDXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkVEXCIsXCIyMDUyXCI6XCJERFwifX0sQjo0LEM6XCJDU1MgU2Nyb2xsIFNuYXBcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcImEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIyXCI6XCJDIEsgTCBHXCIsXCIxMDI4XCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFpcIixcIjQxMDBcIjpcIk0gTiBPXCJ9LEM6e1wiMVwiOlwidkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIjAgMSAyIEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogR0MgSENcIixcIjE5NFwiOlwiMyA0IDUgNiA3IDhcIixcIjUxNlwiOlwiOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQlwifSxEOntcIjFcIjpcImEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCXCIsXCIzMjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgQUIgQkIgQ0IgREIgVEIgVUIgVkIgV0JcIixcIjEwMjhcIjpcIlhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaXCJ9LEU6e1wiMVwiOlwiSyBMIEcgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkkgdyBKIEtDIDBCIExDXCIsXCIzM1wiOlwiRSBGIEEgQiBDIE5DIE9DIDFCIHJCIHNCXCIsXCIyMDg0XCI6XCJEIE1DXCJ9LEY6e1wiMVwiOlwicUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMyMlwiOlwiR0IgSEIgSUJcIixcIjEwMjhcIjpcIkpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEJcIn0sRzp7XCIxXCI6XCJrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWEMgREMgWUNcIixcIjMzXCI6XCJFIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDXCIsXCIyMDg0XCI6XCJaQyBhQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjJcIjpcIkQgQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIxMDI4XCI6XCJ5Q1wifSxQOntcIjFcIjpcImcgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjJcIjpcIkkgekNcIn0sUTp7XCIxMDI4XCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjUxNlwiOlwiRERcIn19LEI6NSxDOlwiQ1NTIHBvc2l0aW9uOnN0aWNreVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjEzMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjRcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEogRCBFIEYgQSBCIEdDIEhDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEJcIn0sRDp7XCIxXCI6XCJPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCXCIsXCIzMjJcIjpcIkNCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CXCJ9LEU6e1wiMVwiOlwidEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIEtDIDBCIExDIE1DIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCXCJ9LEY6e1wiMVwiOlwiQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIEIgQyBHIE0gTiBPIHggZyB5IFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCI1NzhcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgeiBBQlwifSxHOntcIjFcIjpcInRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjEzMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJJXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkVEXCIsXCIzM1wiOlwiRERcIn19LEI6NCxDOlwiQ1NTMyB0ZXh0LWFsaWduLWxhc3RcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIklCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgR0MgSENcIixcIjE5NFwiOlwiRkIgR0IgSEJcIn0sRDp7XCIxXCI6XCJQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CXCJ9LEU6e1wiMVwiOlwiTCBHIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgSiBEIEUgRiBLQyAwQiBMQyBNQyBOQyBPQ1wiLFwiMTZcIjpcIkFcIixcIjMzXCI6XCJCIEMgSyAxQiByQiBzQiAyQlwifSxGOntcIjFcIjpcIkNCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIn0sRzp7XCIxXCI6XCJlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjJcIjpcIkQgQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcImcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjJcIjpcIklcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6MixDOlwiQ1NTIHRleHQtb3JpZW50YXRpb25cIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRUNcIixcIjE2MVwiOlwiRSBGIEEgQlwifSxCOntcIjJcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMTYxXCI6XCJDIEsgTCBHIE0gTiBPXCJ9LEM6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIEdDIEhDXCJ9LEQ6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCJ9LEU6e1wiMlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgS0MgMEIgTEMgTUMgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIn0sRjp7XCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIn0sRzp7XCIyXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIyXCI6XCJ1QiBJIEggc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyXCI6XCJEIEFcIn0sSzp7XCIyXCI6XCJBIEIgQyBoIHJCIENDIHNCXCJ9LEw6e1wiMlwiOlwiSFwifSxNOntcIjJcIjpcImZcIn0sTjp7XCIxNlwiOlwiQSBCXCJ9LE86e1wiMlwiOlwieUNcIn0sUDp7XCIyXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIyXCI6XCIyQlwifSxSOntcIjJcIjpcIkNEXCJ9LFM6e1wiMlwiOlwiREQgRURcIn19LEI6NSxDOlwiQ1NTIFRleHQgNCB0ZXh0LXNwYWNpbmdcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIxXCI6XCJBIEJcIixcIjJcIjpcIkogRCBFIEYgRUNcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgR0MgSENcIixcIjMzXCI6XCJ3IEogRCBFIEYgQSBCIEMgSyBMIEdcIixcIjE2NFwiOlwiSVwifSxEOntcIjFcIjpcIjMgNCA1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6XCJ9LEU6e1wiMVwiOlwiRCBFIEYgQSBCIEMgSyBMIEcgTUMgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjMzXCI6XCJKIExDXCIsXCIxNjRcIjpcIkkgdyBLQyAwQlwifSxGOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBzQlwiLFwiMlwiOlwiRiBTQyBUQ1wiLFwiMzNcIjpcIkNcIixcIjE2NFwiOlwiQiBVQyBWQyByQiBDQyBXQ1wifSxHOntcIjFcIjpcIkUgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjMzXCI6XCJaQ1wiLFwiMTY0XCI6XCIwQiBYQyBEQyBZQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSCB3QyB4Q1wiLFwiMzNcIjpcInVCIEkgc0MgdEMgdUMgdkMgRENcIn0sSjp7XCIxXCI6XCJBXCIsXCIzM1wiOlwiRFwifSxLOntcIjFcIjpcImggc0JcIixcIjMzXCI6XCJDXCIsXCIxNjRcIjpcIkEgQiByQiBDQ1wifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMVwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6NSxDOlwiQ1NTMyBUcmFuc2l0aW9uc1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntEOntcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5XCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCJ9LEw6e1wiMzNcIjpcIkhcIn0sQjp7XCIyXCI6XCJDIEsgTCBHIE0gTiBPXCIsXCIzM1wiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMlwiOlwiRkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgR0MgSENcIn0sTTp7XCIzM1wiOlwiZlwifSxBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEY6e1wiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIn0sSzp7XCIyXCI6XCJBIEIgQyByQiBDQyBzQlwiLFwiMzNcIjpcImhcIn0sRTp7XCIyXCI6XCJJIHcgSiBLQyAwQiBMQyBNQyBSQ1wiLFwiMzNcIjpcIkQgRSBGIEEgQiBDIEsgTCBHIE5DIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LEc6e1wiMlwiOlwiMEIgWEMgREMgWUMgWkNcIixcIjMzXCI6XCJFIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LFA6e1wiMlwiOlwiSVwiLFwiMzNcIjpcImcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sSTp7XCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCIsXCIzM1wiOlwiSCB3QyB4Q1wifX0sQjo2LEM6XCJ3aWR0aDogc3RyZXRjaCBwcm9wZXJ0eVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjEzMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIklCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgR0MgSENcIixcIjMyMlwiOlwiREIgRUIgRkIgR0IgSEJcIn0sRDp7XCIxXCI6XCJQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiSSB3IEpcIixcIjE2XCI6XCJEXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQlwifSxFOntcIjFcIjpcIkIgQyBLIEwgRyByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiSSBLQyAwQlwiLFwiMTZcIjpcIndcIixcIjMzXCI6XCJKIEQgRSBGIEEgTEMgTUMgTkMgT0MgMUJcIn0sRjp7XCIxXCI6XCJDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkJcIn0sRzp7XCIxXCI6XCJnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMTZcIjpcIjBCIFhDIERDXCIsXCIzM1wiOlwiRSBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwic0MgdEMgdUNcIixcIjMzXCI6XCJ1QiBJIHZDIERDIHdDIHhDXCJ9LEo6e1wiMzNcIjpcIkQgQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIzNlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIzM1wiOlwiSVwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjoyLEM6XCJDU1Mgd3JpdGluZy1tb2RlIHByb3BlcnR5XCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMVwiOlwiRSBGIEEgQlwiLFwiOFwiOlwiSiBEIEVDXCJ9LEI6e1wiMVwiOlwiQyBLIEwgRyBNIE4gTyBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIn0sQzp7XCIxXCI6XCI2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBHQyBIQ1wifSxEOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMzNcIjpcIkkgdyBKIEQgRSBGXCJ9LEU6e1wiMVwiOlwiSiBEIEUgRiBBIEIgQyBLIEwgRyBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMzNcIjpcIkkgdyBLQyAwQlwifSxGOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjJcIjpcIkZcIn0sRzp7XCIxXCI6XCJFIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIzM1wiOlwiMEIgWEMgRENcIn0sSDp7XCIxXCI6XCJyQ1wifSxJOntcIjFcIjpcIkkgSCB2QyBEQyB3QyB4Q1wiLFwiMzNcIjpcInVCIHNDIHRDIHVDXCJ9LEo6e1wiMVwiOlwiQVwiLFwiMzNcIjpcIkRcIn0sSzp7XCIxXCI6XCJBIEIgQyBoIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIxXCI6XCJBIEJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo1LEM6XCJDU1MzIEJveC1zaXppbmdcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIkcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIyXCI6XCJDIEsgTFwifSxDOntcIjFcIjpcIjQgNSA2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIzM1wiOlwiMCAxIDIgMyBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEdDIEhDXCJ9LEQ6e1wiMVwiOlwiaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0JcIn0sRTp7XCIxXCI6XCJCIEMgSyBMIEcgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjMzXCI6XCJJIHcgSiBEIEUgRiBBIEtDIDBCIExDIE1DIE5DIE9DIDFCXCJ9LEY6e1wiMVwiOlwiQyBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgV0Mgc0JcIixcIjJcIjpcIkYgQiBTQyBUQyBVQyBWQyByQiBDQ1wiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCXCJ9LEc6e1wiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjMzXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIyXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIyXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMlwiOlwiREQgRURcIn19LEI6MixDOlwiQ1NTIGdyYWIgJiBncmFiYmluZyBjdXJzb3JzXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjEgMiAzIDQgNSA2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIzM1wiOlwiMCBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEdDIEhDXCJ9LEQ6e1wiMVwiOlwiRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREJcIn0sRTp7XCIxXCI6XCJGIEEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIzM1wiOlwiSSB3IEogRCBFIEtDIDBCIExDIE1DIE5DXCJ9LEY6e1wiMVwiOlwiMSAyIDMgNCA1IDYgNyA4IDkgQyBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgV0Mgc0JcIixcIjJcIjpcIkYgQiBTQyBUQyBVQyBWQyByQiBDQ1wiLFwiMzNcIjpcIjAgRyBNIE4gTyB4IGcgeSB6XCJ9LEc6e1wiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjMzXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIyXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIyXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMlwiOlwiREQgRURcIn19LEI6MixDOlwiQ1NTMyBDdXJzb3JzOiB6b29tLWluICYgem9vbS1vdXRcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcImEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBHQyBIQ1wiLFwiMzNcIjpcIlVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaXCIsXCIxNjRcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQlwifSxEOntcIjFcIjpcIkpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGdcIixcIjEzMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUJcIn0sRTp7XCIxXCI6XCJMIEcgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkkgdyBKIEtDIDBCIExDXCIsXCIxMzJcIjpcIkQgRSBGIEEgQiBDIEsgTUMgTkMgT0MgMUIgckIgc0JcIn0sRjp7XCIxXCI6XCI2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBTQyBUQyBVQ1wiLFwiMTMyXCI6XCIwIDEgMiAzIDQgNSBHIE0gTiBPIHggZyB5IHpcIixcIjE2NFwiOlwiQiBDIFZDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMVwiOlwibkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDIFpDXCIsXCIxMzJcIjpcIkUgYUMgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUNcIn0sSDp7XCIxNjRcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMTMyXCI6XCJ3QyB4Q1wifSxKOntcIjEzMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQVwiLFwiMTY0XCI6XCJCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjE2NFwiOlwiREQgRURcIn19LEI6NCxDOlwiQ1NTMyB0YWItc2l6ZVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgRUNcIixcIjEwMjhcIjpcIkJcIixcIjEzMTZcIjpcIkFcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjUgNiA3IDggOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMTY0XCI6XCJGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSBHQyBIQ1wiLFwiNTE2XCI6XCIwIDEgMiAzIDQgelwifSxEOntcIjFcIjpcIjYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSB5IHpcIixcIjE2NFwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnXCJ9LEU6e1wiMVwiOlwiRiBBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMzNcIjpcIkQgRSBNQyBOQ1wiLFwiMTY0XCI6XCJJIHcgSiBLQyAwQiBMQ1wifSxGOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIHNCXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQ1wiLFwiMzNcIjpcIkcgTVwifSxHOntcIjFcIjpcImNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIzM1wiOlwiRSBhQyBiQ1wiLFwiMTY0XCI6XCIwQiBYQyBEQyBZQyBaQ1wifSxIOntcIjFcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSCB3QyB4Q1wiLFwiMTY0XCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCJ9LEo6e1wiMVwiOlwiQVwiLFwiMTY0XCI6XCJEXCJ9LEs6e1wiMVwiOlwiaCBzQlwiLFwiMlwiOlwiQSBCIEMgckIgQ0NcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjFcIjpcIkJcIixcIjI5MlwiOlwiQVwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiSSBnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMVwiOlwiMkJcIn0sUjp7XCIxXCI6XCJDRFwifSxTOntcIjFcIjpcIkREIEVEXCJ9fSxCOjQsQzpcIkNTUyBGbGV4aWJsZSBCb3ggTGF5b3V0IE1vZHVsZVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkEgQlwiLFwiMlwiOlwiSiBEIEUgRiBFQ1wifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwiQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCIEdDIEhDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUJcIixcIjE2NFwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMXCJ9LEQ6e1wiMVwiOlwiUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0JcIixcIjI5MlwiOlwiTSBOIE8geCBnXCJ9LEU6e1wiMVwiOlwiQSBCIEMgSyBMIEcgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkQgRSBGIEtDIDBCIE1DIE5DXCIsXCI0XCI6XCJJIHcgSiBMQ1wifSxGOntcIjFcIjpcIkNCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQlwifSxHOntcIjFcIjpcImRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJFIGFDIGJDIGNDXCIsXCI0XCI6XCIwQiBYQyBEQyBZQyBaQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMzNcIjpcIndDIHhDXCJ9LEo6e1wiMlwiOlwiRFwiLFwiMzNcIjpcIkFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIzM1wiOlwiSVwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjoyLEM6XCJDU1MgZm9udC1mZWF0dXJlLXNldHRpbmdzXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiMCBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEdDIEhDXCIsXCIxOTRcIjpcIjEgMiAzIDQgNSA2IDcgOCA5IEFCXCJ9LEQ6e1wiMVwiOlwiQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCA1IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHpcIixcIjMzXCI6XCI2IDcgOCA5XCJ9LEU6e1wiMVwiOlwiQSBCIEMgSyBMIEcgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkkgdyBKIEtDIDBCIExDIE1DXCIsXCIzM1wiOlwiRCBFIEYgTkNcIn0sRjp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBCIEMgRyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiMzNcIjpcIk0gTiBPIHhcIn0sRzp7XCIxXCI6XCJpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWEMgREMgWUMgWkMgYUNcIixcIjMzXCI6XCJFIGJDIGNDIGRDIGVDIGZDIGdDIGhDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIIHhDXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCIsXCIzM1wiOlwid0NcIn0sSjp7XCIyXCI6XCJEXCIsXCIzM1wiOlwiQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo0LEM6XCJDU1MzIGZvbnQta2VybmluZ1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgQSBFQ1wiLFwiNTQ4XCI6XCJCXCJ9LEI6e1wiMVwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCI1MTZcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEogRCBFIEYgR0MgSENcIixcIjY3NlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CXCIsXCIxNzAwXCI6XCJPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQlwifSxEOntcIjFcIjpcImtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIExcIixcIjY3NlwiOlwiRyBNIE4gTyB4XCIsXCI4MDRcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakJcIn0sRTp7XCIxXCI6XCJBQyBCQyBSQ1wiLFwiMlwiOlwiSSB3IEtDIDBCXCIsXCI1NDhcIjpcIjRCIDVCIDZCIHRCIDdCIDhCIDlCXCIsXCI2NzZcIjpcIkxDXCIsXCI4MDRcIjpcIkogRCBFIEYgQSBCIEMgSyBMIEcgTUMgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0JcIn0sRjp7XCIxXCI6XCJkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgc0JcIixcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDXCIsXCI4MDRcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCXCJ9LEc6e1wiMlwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQ1wiLFwiMjA1MlwiOlwiaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjJcIjpcInVCIEkgSCBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjJcIjpcIkRcIixcIjI5MlwiOlwiQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBXCIsXCI1NDhcIjpcIkJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcImcgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjgwNFwiOlwiSSB6QyAwQyAxQyAyQyAzQ1wifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjoxLEM6XCJGdWxsIFNjcmVlbiBBUElcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIixcIjEwMjVcIjpcImQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIxNTM3XCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGNcIn0sQzp7XCIyXCI6XCJGQ1wiLFwiOTMyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgR0MgSENcIixcIjIzMDhcIjpcImZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCJ9LEQ6e1wiMlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHlcIixcIjU0NVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CXCIsXCIxMDI1XCI6XCJkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMTUzN1wiOlwiTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGNcIn0sRTp7XCIxXCI6XCJ0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiSSB3IEogS0MgMEIgTENcIixcIjUxNlwiOlwiQiBDIEsgTCBHIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCXCIsXCI1NDhcIjpcIkYgQSBPQyAxQlwiLFwiNjc2XCI6XCJEIEUgTUMgTkNcIn0sRjp7XCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiNTEzXCI6XCJCQlwiLFwiNTQ1XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgelwiLFwiMTAyNVwiOlwiZVwiLFwiMTUzN1wiOlwiQUIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZFwifSxHOntcIjFcIjpcInRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCIwQiBYQyBEQyBZQyBaQ1wiLFwiNTE2XCI6XCJvQyBwQyBxQyAzQiA0QiA1QiA2QlwiLFwiNTQ4XCI6XCJjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQ1wiLFwiNjc2XCI6XCJFIGFDIGJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDXCIsXCI1NDVcIjpcIndDIHhDXCIsXCIxMDI1XCI6XCJIXCJ9LEo6e1wiMlwiOlwiRFwiLFwiNTQ1XCI6XCJBXCJ9LEs6e1wiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIixcIjEwMjVcIjpcImhcIn0sTDp7XCIxMDI1XCI6XCJIXCJ9LE06e1wiMjMwOFwiOlwiZlwifSxOOntcIjJcIjpcIkEgQlwifSxPOntcIjE1MzdcIjpcInlDXCJ9LFA6e1wiNTQ1XCI6XCJJXCIsXCIxMDI1XCI6XCJnIDlDIEFEIEJEXCIsXCIxNTM3XCI6XCJ6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QlwifSxROntcIjE1MzdcIjpcIjJCXCJ9LFI6e1wiMTUzN1wiOlwiQ0RcIn0sUzp7XCI5MzJcIjpcIkREXCIsXCIyMzA4XCI6XCJFRFwifX0sQjo1LEM6XCJJbnRyaW5zaWMgJiBFeHRyaW5zaWMgU2l6aW5nXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0Q6e1wiMVwiOlwiUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQlwifSxMOntcIjFcIjpcIkhcIn0sQjp7XCIxXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBHQyBIQ1wiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUJcIn0sTTp7XCIxXCI6XCJmXCJ9LEE6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sRjp7XCIxXCI6XCJDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRiBCIEMgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sRTp7XCIxXCI6XCJCIEMgSyBMIEcgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIkkgdyBKIEtDIDBCIExDIE1DIFJDXCIsXCIzM1wiOlwiRCBFIEYgQSBOQyBPQyAxQlwifSxHOntcIjFcIjpcImdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCIwQiBYQyBEQyBZQyBaQ1wiLFwiMzNcIjpcIkUgYUMgYkMgY0MgZEMgZUMgZkNcIn0sUDp7XCIxXCI6XCJnIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJJXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifX0sQjo2LEM6XCJpc29sYXRlLW92ZXJyaWRlIGZyb20gdW5pY29kZS1iaWRpXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0Q6e1wiMVwiOlwiUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CXCJ9LEw6e1wiMVwiOlwiSFwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIlJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBJIHcgSiBEIEUgRiBHQyBIQ1wiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQlwifSxNOntcIjFcIjpcImZcIn0sQTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxGOntcIjFcIjpcIkNCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQlwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEU6e1wiMVwiOlwiQiBDIEsgTCBHIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJJIHcgS0MgMEIgTEMgUkNcIixcIjMzXCI6XCJKIEQgRSBGIEEgTUMgTkMgT0MgMUJcIn0sRzp7XCIxXCI6XCJnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWEMgREMgWUNcIixcIjMzXCI6XCJFIFpDIGFDIGJDIGNDIGRDIGVDIGZDXCJ9LFA6e1wiMVwiOlwiZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMlwiOlwiSVwifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn19LEI6NixDOlwiaXNvbGF0ZSBmcm9tIHVuaWNvZGUtYmlkaVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntEOntcIjFcIjpcIlBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0JcIn0sTDp7XCIxXCI6XCJIXCJ9LEI6e1wiMVwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIyXCI6XCJDIEsgTCBHIE0gTiBPXCJ9LEM6e1wiMVwiOlwiUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCIEkgdyBKIEQgRSBGIEdDIEhDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCXCJ9LE06e1wiMVwiOlwiZlwifSxBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEY6e1wiMVwiOlwiQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEU6e1wiMVwiOlwiQiBDIEsgTCBHIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJJIHcgS0MgMEIgTEMgUkNcIixcIjMzXCI6XCJKIEQgRSBGIEEgTUMgTkMgT0MgMUJcIn0sRzp7XCIxXCI6XCJnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiMEIgWEMgREMgWUNcIixcIjMzXCI6XCJFIFpDIGFDIGJDIGNDIGRDIGVDIGZDXCJ9LFA6e1wiMVwiOlwiZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMlwiOlwiSVwifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn19LEI6NixDOlwicGxhaW50ZXh0IGZyb20gdW5pY29kZS1iaWRpXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0Q6e1wiMVwiOlwiWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQlwifSxMOntcIjFcIjpcIkhcIn0sQjp7XCIxXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEdDIEhDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0JcIn0sTTp7XCIxXCI6XCJmXCJ9LEE6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sRjp7XCIxXCI6XCJMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRiBCIEMgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sRTp7XCIxXCI6XCJLIEwgRyBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMlwiOlwiSSB3IEogRCBLQyAwQiBMQyBNQyBOQyBSQ1wiLFwiMzNcIjpcIkUgRiBBIEIgQyBPQyAxQiByQlwifSxHOntcIjFcIjpcImpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCIwQiBYQyBEQyBZQyBaQyBhQ1wiLFwiMzNcIjpcIkUgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUNcIn0sUDp7XCIxXCI6XCJnIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJJIHpDIDBDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifX0sQjo2LEM6XCJ0ZXh0LWRlY29yYXRpb24tY29sb3IgcHJvcGVydHlcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7RDp7XCIxXCI6XCJZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCXCJ9LEw6e1wiMVwiOlwiSFwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIkRCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBJIHcgR0MgSENcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQlwifSxNOntcIjFcIjpcImZcIn0sQTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxGOntcIjFcIjpcIkxCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxFOntcIjFcIjpcIksgTCBHIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJJIHcgSiBEIEtDIDBCIExDIE1DIE5DIFJDXCIsXCIzM1wiOlwiRSBGIEEgQiBDIE9DIDFCIHJCXCJ9LEc6e1wiMVwiOlwiakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGFDXCIsXCIzM1wiOlwiRSBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQ1wifSxQOntcIjFcIjpcImcgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjJcIjpcIkkgekMgMENcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9fSxCOjYsQzpcInRleHQtZGVjb3JhdGlvbi1saW5lIHByb3BlcnR5XCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0Q6e1wiMVwiOlwiWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQlwifSxMOntcIjFcIjpcIkhcIn0sQjp7XCIxXCI6XCJQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjJcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEdDIEhDXCJ9LE06e1wiMVwiOlwiZlwifSxBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEY6e1wiMVwiOlwiTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEYgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEU6e1wiMlwiOlwiSSB3IEogRCBLQyAwQiBMQyBNQyBOQyBSQ1wiLFwiMzNcIjpcIkUgRiBBIEIgQyBLIEwgRyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxHOntcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGFDXCIsXCIzM1wiOlwiRSBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxQOntcIjFcIjpcImcgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjJcIjpcIkkgekMgMENcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9fSxCOjYsQzpcInRleHQtZGVjb3JhdGlvbiBzaG9ydGhhbmQgcHJvcGVydHlcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7RDp7XCIxXCI6XCJZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCXCJ9LEw6e1wiMVwiOlwiSFwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgRyBNIE4gT1wifSxDOntcIjFcIjpcIkRCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QiBJIHcgR0MgSENcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQlwifSxNOntcIjFcIjpcImZcIn0sQTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxGOntcIjFcIjpcIkxCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxFOntcIjFcIjpcIksgTCBHIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCJJIHcgSiBEIEtDIDBCIExDIE1DIE5DIFJDXCIsXCIzM1wiOlwiRSBGIEEgQiBDIE9DIDFCIHJCXCJ9LEc6e1wiMVwiOlwiakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGFDXCIsXCIzM1wiOlwiRSBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQ1wifSxQOntcIjFcIjpcImcgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjJcIjpcIkkgekMgMENcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9fSxCOjYsQzpcInRleHQtZGVjb3JhdGlvbi1zdHlsZSBwcm9wZXJ0eVwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkEgQlwiLFwiMlwiOlwiSiBEIEUgRiBFQ1wifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE9cIixcIjUxNlwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMTMyXCI6XCJUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQlwiLFwiMTY0XCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgR0MgSENcIixcIjUxNlwiOlwiZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYVwiLFwiMTAyOFwiOlwiYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCJ9LEQ6e1wiNDIwXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUJcIixcIjUxNlwiOlwiUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIn0sRTp7XCIxXCI6XCJBIEIgQyBLIEwgRyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMTMyXCI6XCJGIE9DXCIsXCIxNjRcIjpcIkQgRSBOQ1wiLFwiNDIwXCI6XCJJIHcgSiBLQyAwQiBMQyBNQ1wifSxGOntcIjFcIjpcIkMgckIgQ0MgV0Mgc0JcIixcIjJcIjpcIkYgQiBTQyBUQyBVQyBWQ1wiLFwiNDIwXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQlwiLFwiNTE2XCI6XCJFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIn0sRzp7XCIxXCI6XCJlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiMTMyXCI6XCJjQyBkQ1wiLFwiMTY0XCI6XCJFIGFDIGJDXCIsXCI0MjBcIjpcIjBCIFhDIERDIFlDIFpDXCJ9LEg6e1wiMVwiOlwickNcIn0sSTp7XCI0MjBcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIixcIjUxNlwiOlwiSFwifSxKOntcIjQyMFwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiQyByQiBDQyBzQlwiLFwiMlwiOlwiQSBCXCIsXCI1MTZcIjpcImhcIn0sTDp7XCI1MTZcIjpcIkhcIn0sTTp7XCIxMDI4XCI6XCJmXCJ9LE46e1wiMVwiOlwiQSBCXCJ9LE86e1wiNTE2XCI6XCJ5Q1wifSxQOntcIjFcIjpcImcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIixcIjQyMFwiOlwiSVwifSxROntcIjUxNlwiOlwiMkJcIn0sUjp7XCI1MTZcIjpcIkNEXCJ9LFM6e1wiMTY0XCI6XCJERCBFRFwifX0sQjo0LEM6XCJDU1MzIE11bHRpcGxlIGNvbHVtbiBsYXlvdXRcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMlwiOlwiQyBLIEwgR1wiLFwiMjYwXCI6XCJNIE4gT1wifSxDOntcIjFcIjpcIkRCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgR0MgSENcIn0sRDp7XCIxXCI6XCI5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6XCJ9LEU6e1wiMVwiOlwiQSBCIEMgSyBMIEcgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjJcIjpcIkkgdyBKIEQgS0MgMEIgTEMgTUNcIixcIjEzMlwiOlwiRSBGIE5DIE9DXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBHIE0gTiBPIFNDIFRDIFVDXCIsXCIzM1wiOlwiQiBDIFZDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMVwiOlwiZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGFDXCIsXCIxMzJcIjpcIkUgYkMgY0MgZENcIn0sSDp7XCIzM1wiOlwickNcIn0sSTp7XCIxXCI6XCJIIHhDXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQVwiLFwiMzNcIjpcIkIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6NCxDOlwiQ1NTMyBvYmplY3QtZml0L29iamVjdC1wb3NpdGlvblwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjFcIjpcIkJcIixcIjJcIjpcIkogRCBFIEYgRUNcIixcIjE2NFwiOlwiQVwifSxCOntcIjFcIjpcIkMgSyBMIEcgTSBOIE8gUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMVwiOlwidkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekJcIixcIjJcIjpcIkZDIHVCIEkgdyBHQyBIQ1wiLFwiOFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEJcIixcIjMyOFwiOlwiSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkJcIn0sRDp7XCIxXCI6XCJXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHlcIixcIjhcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQlwiLFwiNTg0XCI6XCJUQiBVQiBWQlwifSxFOntcIjFcIjpcIksgTCBHIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJJIHcgSiBLQyAwQiBMQ1wiLFwiOFwiOlwiRCBFIEYgQSBCIEMgTUMgTkMgT0MgMUIgckJcIixcIjEwOTZcIjpcInNCXCJ9LEY6e1wiMVwiOlwiSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgYUIgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlXCIsXCIyXCI6XCJGIEIgQyBTQyBUQyBVQyBWQyByQiBDQyBXQyBzQlwiLFwiOFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkJcIixcIjU4NFwiOlwiR0IgSEIgSUJcIn0sRzp7XCIxXCI6XCJsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wiLFwiOFwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQ1wiLFwiNjE0OFwiOlwia0NcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjhcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCI4XCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBXCIsXCI4XCI6XCJCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjFcIjpcIkJcIixcIjM2XCI6XCJBXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJnIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCIsXCIyXCI6XCJ6Q1wiLFwiOFwiOlwiSVwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJFRFwiLFwiMzI4XCI6XCJERFwifX0sQjoyLEM6XCJQb2ludGVyIGV2ZW50c1wifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkogRCBFIEYgQSBCIEVDXCJ9LEI6e1wiMlwiOlwiQyBLIEwgRyBNIE4gT1wiLFwiMjA1MlwiOlwiUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCJ9LEM6e1wiMlwiOlwiRkMgdUIgSSB3IEdDIEhDXCIsXCIxMDI4XCI6XCJEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMTA2MFwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0JcIn0sRDp7XCIyXCI6XCIwIDEgMiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6XCIsXCIyMjZcIjpcIjMgNCA1IDYgNyA4IDkgQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEJcIixcIjIwNTJcIjpcIllCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCJ9LEU6e1wiMlwiOlwiSSB3IEogRCBLQyAwQiBMQyBNQ1wiLFwiNzcyXCI6XCJLIEwgRyBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiODA0XCI6XCJFIEYgQSBCIEMgT0MgMUIgckJcIixcIjEzMTZcIjpcIk5DXCJ9LEY6e1wiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGIEIgQyBHIE0gTiBPIHggZyB5IHogQUIgQkIgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjIyNlwiOlwiQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0JcIixcIjIwNTJcIjpcIkxCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwifSxHOntcIjJcIjpcIjBCIFhDIERDIFlDIFpDIGFDXCIsXCIyOTJcIjpcIkUgYkMgY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIn0sSDp7XCIyXCI6XCJyQ1wifSxJOntcIjFcIjpcIkhcIixcIjJcIjpcInVCIEkgc0MgdEMgdUMgdkMgREMgd0MgeENcIn0sSjp7XCIyXCI6XCJEIEFcIn0sSzp7XCIyXCI6XCJBIEIgQyByQiBDQyBzQlwiLFwiMjA1MlwiOlwiaFwifSxMOntcIjIwNTJcIjpcIkhcIn0sTTp7XCIxMDI4XCI6XCJmXCJ9LE46e1wiMlwiOlwiQSBCXCJ9LE86e1wiMjA1MlwiOlwieUNcIn0sUDp7XCIyXCI6XCJJIHpDIDBDXCIsXCIyMDUyXCI6XCJnIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDIEFEIEJEXCJ9LFE6e1wiMjA1MlwiOlwiMkJcIn0sUjp7XCIyMDUyXCI6XCJDRFwifSxTOntcIjEwMjhcIjpcIkREIEVEXCJ9fSxCOjQsQzpcInRleHQtZGVjb3JhdGlvbiBzdHlsaW5nXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBBIEIgRUNcIn0sQjp7XCIxXCI6XCJsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIXCIsXCIyXCI6XCJDIEsgTCBHIE0gTiBPXCIsXCIxNjRcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGtcIn0sQzp7XCIxXCI6XCJOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBGQyB1QiBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIEdDIEhDXCIsXCIzMjJcIjpcIk1CXCJ9LEQ6e1wiMVwiOlwibCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHpcIixcIjE2NFwiOlwiMiAzIDQgNSA2IDcgOCA5IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGoga1wifSxFOntcIjFcIjpcIkUgRiBBIEIgQyBLIEwgRyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wiLFwiMlwiOlwiSSB3IEogS0MgMEIgTENcIixcIjE2NFwiOlwiRCBNQ1wifSxGOntcIjFcIjpcIlYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIxNjRcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFVcIn0sRzp7XCIxXCI6XCJFIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCIsXCIyXCI6XCIwQiBYQyBEQyBZQyBaQ1wifSxIOntcIjJcIjpcInJDXCJ9LEk6e1wiMVwiOlwiSFwiLFwiMlwiOlwidUIgSSBzQyB0QyB1QyB2QyBEQ1wiLFwiMTY0XCI6XCJ3QyB4Q1wifSxKOntcIjJcIjpcIkRcIixcIjE2NFwiOlwiQVwifSxLOntcIjFcIjpcImhcIixcIjJcIjpcIkEgQiBDIHJCIENDIHNCXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIyXCI6XCJBIEJcIn0sTzp7XCIxNjRcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyBBRCBCRFwiLFwiMTY0XCI6XCJJIHpDIDBDIDFDIDJDIDNDIDFCIDRDIDVDIDZDIDdDIDhDIHRCIDlDXCJ9LFE6e1wiMTY0XCI6XCIyQlwifSxSOntcIjE2NFwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjo0LEM6XCJ0ZXh0LWVtcGhhc2lzIHN0eWxpbmdcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIxXCI6XCJKIEQgRSBGIEEgQlwiLFwiMlwiOlwiRUNcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiOFwiOlwiRkMgdUIgSSB3IEogR0MgSENcIn0sRDp7XCIxXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIn0sRTp7XCIxXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBLQyAwQiBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQyBSQ1wifSxGOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgQiBDIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCJGIFNDIFRDIFVDIFZDXCJ9LEc6e1wiMVwiOlwiRSAwQiBYQyBEQyBZQyBaQyBhQyBiQyBjQyBkQyBlQyBmQyBnQyBoQyBpQyBqQyBrQyBsQyBtQyBuQyBvQyBwQyBxQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxIOntcIjFcIjpcInJDXCJ9LEk6e1wiMVwiOlwidUIgSSBIIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMVwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaCBzQlwiLFwiMzNcIjpcIkEgQiBDIHJCIENDXCJ9LEw6e1wiMVwiOlwiSFwifSxNOntcIjFcIjpcImZcIn0sTjp7XCIxXCI6XCJBIEJcIn0sTzp7XCIxXCI6XCJ5Q1wifSxQOntcIjFcIjpcIkkgZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIxXCI6XCJERCBFRFwifX0sQjoyLEM6XCJDU1MzIFRleHQtb3ZlcmZsb3dcIn07XG4iLCJtb2R1bGUuZXhwb3J0cz17QTp7QTp7XCIyXCI6XCJKIEQgRSBGIEEgQiBFQ1wifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMzNcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIyXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEZDIHVCIEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0IgREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiB4QiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgR0MgSENcIn0sRDp7XCIxXCI6XCJWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QiBJQyBKQ1wiLFwiMlwiOlwiMCAxIDIgNCA1IDYgNyA4IDkgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQlwiLFwiMjU4XCI6XCIzXCJ9LEU6e1wiMlwiOlwiSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgS0MgMEIgTUMgTkMgT0MgMUIgckIgc0IgMkIgUEMgUUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkMgUkNcIixcIjI1OFwiOlwiTENcIn0sRjp7XCIxXCI6XCJLQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRiBCIEMgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIExCIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCJ9LEc6e1wiMlwiOlwiMEIgWEMgRENcIixcIjMzXCI6XCJFIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJ1QiBJIHNDIHRDIHVDIHZDIERDIHdDIHhDXCJ9LEo6e1wiMlwiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMzNcIjpcImZcIn0sTjp7XCIxNjFcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyB6QyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMlwiOlwiSVwifSxROntcIjFcIjpcIjJCXCJ9LFI6e1wiMVwiOlwiQ0RcIn0sUzp7XCIyXCI6XCJERCBFRFwifX0sQjo3LEM6XCJDU1MgdGV4dC1zaXplLWFkanVzdFwifTtcbiIsIm1vZHVsZS5leHBvcnRzPXtBOntBOntcIjJcIjpcIkVDXCIsXCI4XCI6XCJKIEQgRVwiLFwiMTI5XCI6XCJBIEJcIixcIjE2MVwiOlwiRlwifSxCOntcIjFcIjpcIk4gTyBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEhcIixcIjEyOVwiOlwiQyBLIEwgRyBNXCJ9LEM6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCXCIsXCIyXCI6XCJGQyB1QlwiLFwiMzNcIjpcIkkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIEdDIEhDXCJ9LEQ6e1wiMVwiOlwiREIgRUIgRkIgR0IgSEIgSUIgSkIgS0IgTEIgTUIgTkIgT0IgUEIgUUIgUkIgU0IgVEIgVUIgVkIgV0IgWEIgWUIgWkIgdkIgYUIgd0IgYkIgY0IgZEIgZUIgZkIgZ0IgaEIgaUIgakIga0IgbEIgaCBtQiBuQiBvQiBwQiBxQiBQIFEgUiBTIFQgVSBWIFcgWCBZIFogYSBiIGMgZCBlIGkgaiBrIGwgbSBuIG8gcCBxIHIgcyB0IHUgdiBmIEggeUIgekIgSUMgSkNcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEkgdyBKIEQgRSBGIEEgQiBDIEsgTCBHIE0gTiBPIHggZyB5IHogQUIgQkIgQ0JcIn0sRTp7XCIxXCI6XCJGIEEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIzM1wiOlwiSSB3IEogRCBFIEtDIDBCIExDIE1DIE5DXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgc0JcIixcIjJcIjpcIkYgU0MgVENcIixcIjMzXCI6XCJCIEMgRyBNIE4gTyB4IGcgeSB6IFVDIFZDIHJCIENDIFdDXCJ9LEc6e1wiMVwiOlwiY0MgZEMgZUMgZkMgZ0MgaEMgaUMgakMga0MgbEMgbUMgbkMgb0MgcEMgcUMgM0IgNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjMzXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIzM1wiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjMzXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJCIEMgaCByQiBDQyBzQlwiLFwiMlwiOlwiQVwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMVwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6NCxDOlwiQ1NTMyAyRCBUcmFuc2Zvcm1zXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBFQ1wiLFwiMTMyXCI6XCJBIEJcIn0sQjp7XCIxXCI6XCJDIEsgTCBHIE0gTiBPIFAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwifSxDOntcIjFcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMlwiOlwiRkMgdUIgSSB3IEogRCBFIEYgR0MgSENcIixcIjMzXCI6XCJBIEIgQyBLIEwgR1wifSxEOntcIjFcIjpcIkRCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIyXCI6XCJJIHcgSiBEIEUgRiBBIEJcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQlwifSxFOntcIjFcIjpcIjRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDIFJDXCIsXCIyXCI6XCJLQyAwQlwiLFwiMzNcIjpcIkkgdyBKIEQgRSBMQyBNQyBOQ1wiLFwiMjU3XCI6XCJGIEEgQiBDIEsgTCBHIE9DIDFCIHJCIHNCIDJCIFBDIFFDIDNCXCJ9LEY6e1wiMVwiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiBhQiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGVcIixcIjJcIjpcIkYgQiBDIFNDIFRDIFVDIFZDIHJCIENDIFdDIHNCXCIsXCIzM1wiOlwiRyBNIE4gTyB4IGcgeSB6XCJ9LEc6e1wiMVwiOlwiNEIgNUIgNkIgdEIgN0IgOEIgOUIgQUMgQkNcIixcIjMzXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDXCIsXCIyNTdcIjpcImNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIyXCI6XCJzQyB0QyB1Q1wiLFwiMzNcIjpcInVCIEkgdkMgREMgd0MgeENcIn0sSjp7XCIzM1wiOlwiRCBBXCJ9LEs6e1wiMVwiOlwiaFwiLFwiMlwiOlwiQSBCIEMgckIgQ0Mgc0JcIn0sTDp7XCIxXCI6XCJIXCJ9LE06e1wiMVwiOlwiZlwifSxOOntcIjEzMlwiOlwiQSBCXCJ9LE86e1wiMVwiOlwieUNcIn0sUDp7XCIxXCI6XCJJIGcgekMgMEMgMUMgMkMgM0MgMUIgNEMgNUMgNkMgN0MgOEMgdEIgOUMgQUQgQkRcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiREQgRURcIn19LEI6NSxDOlwiQ1NTMyAzRCBUcmFuc2Zvcm1zXCJ9O1xuIiwibW9kdWxlLmV4cG9ydHM9e0E6e0E6e1wiMlwiOlwiSiBEIEUgRiBFQ1wiLFwiMzNcIjpcIkEgQlwifSxCOntcIjFcIjpcIlAgUSBSIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSFwiLFwiMzNcIjpcIkMgSyBMIEcgTSBOIE9cIn0sQzp7XCIxXCI6XCJpQiBqQiBrQiBsQiBoIG1CIG5CIG9CIHBCIHFCIFAgUSBSIHhCIFMgVCBVIFYgVyBYIFkgWiBhIGIgYyBkIGUgaSBqIGsgbCBtIG4gbyBwIHEgciBzIHQgdSB2IGYgSCB5QiB6QlwiLFwiMzNcIjpcIjAgMSAyIDMgNCA1IDYgNyA4IDkgRkMgdUIgSSB3IEogRCBFIEYgQSBCIEMgSyBMIEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQiBJQiBKQiBLQiBMQiBNQiBOQiBPQiBQQiBRQiBSQiBTQiBUQiBVQiBWQiBXQiBYQiBZQiBaQiB2QiBhQiB3QiBiQiBjQiBkQiBlQiBmQiBnQiBoQiBHQyBIQ1wifSxEOntcIjFcIjpcIlZCIFdCIFhCIFlCIFpCIHZCIGFCIHdCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZSBpIGogayBsIG0gbiBvIHAgcSByIHMgdCB1IHYgZiBIIHlCIHpCIElDIEpDXCIsXCIzM1wiOlwiMCAxIDIgMyA0IDUgNiA3IDggOSBJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBNIE4gTyB4IGcgeSB6IEFCIEJCIENCIERCIEVCIEZCIEdCIEhCIElCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCXCJ9LEU6e1wiMVwiOlwiUkNcIixcIjMzXCI6XCJJIHcgSiBEIEUgRiBBIEIgQyBLIEwgRyBLQyAwQiBMQyBNQyBOQyBPQyAxQiByQiBzQiAyQiBQQyBRQyAzQiA0QiA1QiA2QiB0QiA3QiA4QiA5QiBBQyBCQ1wifSxGOntcIjFcIjpcIklCIEpCIEtCIExCIE1CIE5CIE9CIFBCIFFCIFJCIFNCIFRCIFVCIFZCIFdCIFhCIFlCIFpCIGFCIGJCIGNCIGRCIGVCIGZCIGdCIGhCIGlCIGpCIGtCIGxCIGggbUIgbkIgb0IgcEIgcUIgUCBRIFIgeEIgUyBUIFUgViBXIFggWSBaIGEgYiBjIGQgZVwiLFwiMlwiOlwiRiBCIEMgU0MgVEMgVUMgVkMgckIgQ0MgV0Mgc0JcIixcIjMzXCI6XCIwIDEgMiAzIDQgNSA2IDcgOCA5IEcgTSBOIE8geCBnIHkgeiBBQiBCQiBDQiBEQiBFQiBGQiBHQiBIQlwifSxHOntcIjMzXCI6XCJFIDBCIFhDIERDIFlDIFpDIGFDIGJDIGNDIGRDIGVDIGZDIGdDIGhDIGlDIGpDIGtDIGxDIG1DIG5DIG9DIHBDIHFDIDNCIDRCIDVCIDZCIHRCIDdCIDhCIDlCIEFDIEJDXCJ9LEg6e1wiMlwiOlwickNcIn0sSTp7XCIxXCI6XCJIXCIsXCIzM1wiOlwidUIgSSBzQyB0QyB1QyB2QyBEQyB3QyB4Q1wifSxKOntcIjMzXCI6XCJEIEFcIn0sSzp7XCIxXCI6XCJoXCIsXCIyXCI6XCJBIEIgQyByQiBDQyBzQlwifSxMOntcIjFcIjpcIkhcIn0sTTp7XCIxXCI6XCJmXCJ9LE46e1wiMzNcIjpcIkEgQlwifSxPOntcIjFcIjpcInlDXCJ9LFA6e1wiMVwiOlwiZyAwQyAxQyAyQyAzQyAxQiA0QyA1QyA2QyA3QyA4QyB0QiA5QyBBRCBCRFwiLFwiMzNcIjpcIkkgekNcIn0sUTp7XCIxXCI6XCIyQlwifSxSOntcIjFcIjpcIkNEXCJ9LFM6e1wiMVwiOlwiRURcIixcIjMzXCI6XCJERFwifX0sQjo1LEM6XCJDU1MgdXNlci1zZWxlY3Q6IG5vbmVcIn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgMTogJ2xzJywgLy8gV0hBVFdHIExpdmluZyBTdGFuZGFyZFxuICAyOiAncmVjJywgLy8gVzNDIFJlY29tbWVuZGF0aW9uXG4gIDM6ICdwcicsIC8vIFczQyBQcm9wb3NlZCBSZWNvbW1lbmRhdGlvblxuICA0OiAnY3InLCAvLyBXM0MgQ2FuZGlkYXRlIFJlY29tbWVuZGF0aW9uXG4gIDU6ICd3ZCcsIC8vIFczQyBXb3JraW5nIERyYWZ0XG4gIDY6ICdvdGhlcicsIC8vIE5vbi1XM0MsIGJ1dCByZXB1dGFibGVcbiAgNzogJ3Vub2ZmJyAvLyBVbm9mZmljaWFsLCBFZGl0b3IncyBEcmFmdCBvciBXM0MgXCJOb3RlXCJcbn1cbiIsIm1vZHVsZS5leHBvcnRzID0ge1xuICB5OiAxIDw8IDAsXG4gIG46IDEgPDwgMSxcbiAgYTogMSA8PCAyLFxuICBwOiAxIDw8IDMsXG4gIHU6IDEgPDwgNCxcbiAgeDogMSA8PCA1LFxuICBkOiAxIDw8IDZcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBicm93c2VycyA9IHJlcXVpcmUoJy4vYnJvd3NlcnMnKS5icm93c2Vyc1xuY29uc3QgdmVyc2lvbnMgPSByZXF1aXJlKCcuL2Jyb3dzZXJWZXJzaW9ucycpLmJyb3dzZXJWZXJzaW9uc1xuY29uc3QgYWdlbnRzRGF0YSA9IHJlcXVpcmUoJy4uLy4uL2RhdGEvYWdlbnRzJylcblxuZnVuY3Rpb24gdW5wYWNrQnJvd3NlclZlcnNpb25zKHZlcnNpb25zRGF0YSkge1xuICByZXR1cm4gT2JqZWN0LmtleXModmVyc2lvbnNEYXRhKS5yZWR1Y2UoKHVzYWdlLCB2ZXJzaW9uKSA9PiB7XG4gICAgdXNhZ2VbdmVyc2lvbnNbdmVyc2lvbl1dID0gdmVyc2lvbnNEYXRhW3ZlcnNpb25dXG4gICAgcmV0dXJuIHVzYWdlXG4gIH0sIHt9KVxufVxuXG5tb2R1bGUuZXhwb3J0cy5hZ2VudHMgPSBPYmplY3Qua2V5cyhhZ2VudHNEYXRhKS5yZWR1Y2UoKG1hcCwga2V5KSA9PiB7XG4gIGxldCB2ZXJzaW9uc0RhdGEgPSBhZ2VudHNEYXRhW2tleV1cbiAgbWFwW2Jyb3dzZXJzW2tleV1dID0gT2JqZWN0LmtleXModmVyc2lvbnNEYXRhKS5yZWR1Y2UoKGRhdGEsIGVudHJ5KSA9PiB7XG4gICAgaWYgKGVudHJ5ID09PSAnQScpIHtcbiAgICAgIGRhdGEudXNhZ2VfZ2xvYmFsID0gdW5wYWNrQnJvd3NlclZlcnNpb25zKHZlcnNpb25zRGF0YVtlbnRyeV0pXG4gICAgfSBlbHNlIGlmIChlbnRyeSA9PT0gJ0MnKSB7XG4gICAgICBkYXRhLnZlcnNpb25zID0gdmVyc2lvbnNEYXRhW2VudHJ5XS5yZWR1Y2UoKGxpc3QsIHZlcnNpb24pID0+IHtcbiAgICAgICAgaWYgKHZlcnNpb24gPT09ICcnKSB7XG4gICAgICAgICAgbGlzdC5wdXNoKG51bGwpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGlzdC5wdXNoKHZlcnNpb25zW3ZlcnNpb25dKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaXN0XG4gICAgICB9LCBbXSlcbiAgICB9IGVsc2UgaWYgKGVudHJ5ID09PSAnRCcpIHtcbiAgICAgIGRhdGEucHJlZml4X2V4Y2VwdGlvbnMgPSB1bnBhY2tCcm93c2VyVmVyc2lvbnModmVyc2lvbnNEYXRhW2VudHJ5XSlcbiAgICB9IGVsc2UgaWYgKGVudHJ5ID09PSAnRScpIHtcbiAgICAgIGRhdGEuYnJvd3NlciA9IHZlcnNpb25zRGF0YVtlbnRyeV1cbiAgICB9IGVsc2UgaWYgKGVudHJ5ID09PSAnRicpIHtcbiAgICAgIGRhdGEucmVsZWFzZV9kYXRlID0gT2JqZWN0LmtleXModmVyc2lvbnNEYXRhW2VudHJ5XSkucmVkdWNlKFxuICAgICAgICAobWFwMiwga2V5MikgPT4ge1xuICAgICAgICAgIG1hcDJbdmVyc2lvbnNba2V5Ml1dID0gdmVyc2lvbnNEYXRhW2VudHJ5XVtrZXkyXVxuICAgICAgICAgIHJldHVybiBtYXAyXG4gICAgICAgIH0sXG4gICAgICAgIHt9XG4gICAgICApXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGVudHJ5IGlzIEJcbiAgICAgIGRhdGEucHJlZml4ID0gdmVyc2lvbnNEYXRhW2VudHJ5XVxuICAgIH1cbiAgICByZXR1cm4gZGF0YVxuICB9LCB7fSlcbiAgcmV0dXJuIG1hcFxufSwge30pXG4iLCJtb2R1bGUuZXhwb3J0cy5icm93c2VyVmVyc2lvbnMgPSByZXF1aXJlKCcuLi8uLi9kYXRhL2Jyb3dzZXJWZXJzaW9ucycpXG4iLCJtb2R1bGUuZXhwb3J0cy5icm93c2VycyA9IHJlcXVpcmUoJy4uLy4uL2RhdGEvYnJvd3NlcnMnKVxuIiwiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHN0YXR1c2VzID0gcmVxdWlyZSgnLi4vbGliL3N0YXR1c2VzJylcbmNvbnN0IHN1cHBvcnRlZCA9IHJlcXVpcmUoJy4uL2xpYi9zdXBwb3J0ZWQnKVxuY29uc3QgYnJvd3NlcnMgPSByZXF1aXJlKCcuL2Jyb3dzZXJzJykuYnJvd3NlcnNcbmNvbnN0IHZlcnNpb25zID0gcmVxdWlyZSgnLi9icm93c2VyVmVyc2lvbnMnKS5icm93c2VyVmVyc2lvbnNcblxuY29uc3QgTUFUSDJMT0cgPSBNYXRoLmxvZygyKVxuXG5mdW5jdGlvbiB1bnBhY2tTdXBwb3J0KGNpcGhlcikge1xuICAvLyBiaXQgZmxhZ3NcbiAgbGV0IHN0YXRzID0gT2JqZWN0LmtleXMoc3VwcG9ydGVkKS5yZWR1Y2UoKGxpc3QsIHN1cHBvcnQpID0+IHtcbiAgICBpZiAoY2lwaGVyICYgc3VwcG9ydGVkW3N1cHBvcnRdKSBsaXN0LnB1c2goc3VwcG9ydClcbiAgICByZXR1cm4gbGlzdFxuICB9LCBbXSlcblxuICAvLyBub3Rlc1xuICBsZXQgbm90ZXMgPSBjaXBoZXIgPj4gN1xuICBsZXQgbm90ZXNBcnJheSA9IFtdXG4gIHdoaWxlIChub3Rlcykge1xuICAgIGxldCBub3RlID0gTWF0aC5mbG9vcihNYXRoLmxvZyhub3RlcykgLyBNQVRIMkxPRykgKyAxXG4gICAgbm90ZXNBcnJheS51bnNoaWZ0KGAjJHtub3RlfWApXG4gICAgbm90ZXMgLT0gTWF0aC5wb3coMiwgbm90ZSAtIDEpXG4gIH1cblxuICByZXR1cm4gc3RhdHMuY29uY2F0KG5vdGVzQXJyYXkpLmpvaW4oJyAnKVxufVxuXG5mdW5jdGlvbiB1bnBhY2tGZWF0dXJlKHBhY2tlZCkge1xuICBsZXQgdW5wYWNrZWQgPSB7IHN0YXR1czogc3RhdHVzZXNbcGFja2VkLkJdLCB0aXRsZTogcGFja2VkLkMgfVxuICB1bnBhY2tlZC5zdGF0cyA9IE9iamVjdC5rZXlzKHBhY2tlZC5BKS5yZWR1Y2UoKGJyb3dzZXJTdGF0cywga2V5KSA9PiB7XG4gICAgbGV0IGJyb3dzZXIgPSBwYWNrZWQuQVtrZXldXG4gICAgYnJvd3NlclN0YXRzW2Jyb3dzZXJzW2tleV1dID0gT2JqZWN0LmtleXMoYnJvd3NlcikucmVkdWNlKFxuICAgICAgKHN0YXRzLCBzdXBwb3J0KSA9PiB7XG4gICAgICAgIGxldCBwYWNrZWRWZXJzaW9ucyA9IGJyb3dzZXJbc3VwcG9ydF0uc3BsaXQoJyAnKVxuICAgICAgICBsZXQgdW5wYWNrZWQyID0gdW5wYWNrU3VwcG9ydChzdXBwb3J0KVxuICAgICAgICBwYWNrZWRWZXJzaW9ucy5mb3JFYWNoKHYgPT4gKHN0YXRzW3ZlcnNpb25zW3ZdXSA9IHVucGFja2VkMikpXG4gICAgICAgIHJldHVybiBzdGF0c1xuICAgICAgfSxcbiAgICAgIHt9XG4gICAgKVxuICAgIHJldHVybiBicm93c2VyU3RhdHNcbiAgfSwge30pXG4gIHJldHVybiB1bnBhY2tlZFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHVucGFja0ZlYXR1cmVcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSB1bnBhY2tGZWF0dXJlXG4iLCJtb2R1bGUuZXhwb3J0cyA9IHtcblx0XCIwLjIwXCI6IFwiMzlcIixcblx0XCIwLjIxXCI6IFwiNDFcIixcblx0XCIwLjIyXCI6IFwiNDFcIixcblx0XCIwLjIzXCI6IFwiNDFcIixcblx0XCIwLjI0XCI6IFwiNDFcIixcblx0XCIwLjI1XCI6IFwiNDJcIixcblx0XCIwLjI2XCI6IFwiNDJcIixcblx0XCIwLjI3XCI6IFwiNDNcIixcblx0XCIwLjI4XCI6IFwiNDNcIixcblx0XCIwLjI5XCI6IFwiNDNcIixcblx0XCIwLjMwXCI6IFwiNDRcIixcblx0XCIwLjMxXCI6IFwiNDVcIixcblx0XCIwLjMyXCI6IFwiNDVcIixcblx0XCIwLjMzXCI6IFwiNDVcIixcblx0XCIwLjM0XCI6IFwiNDVcIixcblx0XCIwLjM1XCI6IFwiNDVcIixcblx0XCIwLjM2XCI6IFwiNDdcIixcblx0XCIwLjM3XCI6IFwiNDlcIixcblx0XCIxLjBcIjogXCI0OVwiLFxuXHRcIjEuMVwiOiBcIjUwXCIsXG5cdFwiMS4yXCI6IFwiNTFcIixcblx0XCIxLjNcIjogXCI1MlwiLFxuXHRcIjEuNFwiOiBcIjUzXCIsXG5cdFwiMS41XCI6IFwiNTRcIixcblx0XCIxLjZcIjogXCI1NlwiLFxuXHRcIjEuN1wiOiBcIjU4XCIsXG5cdFwiMS44XCI6IFwiNTlcIixcblx0XCIyLjBcIjogXCI2MVwiLFxuXHRcIjIuMVwiOiBcIjYxXCIsXG5cdFwiMy4wXCI6IFwiNjZcIixcblx0XCIzLjFcIjogXCI2NlwiLFxuXHRcIjQuMFwiOiBcIjY5XCIsXG5cdFwiNC4xXCI6IFwiNjlcIixcblx0XCI0LjJcIjogXCI2OVwiLFxuXHRcIjUuMFwiOiBcIjczXCIsXG5cdFwiNi4wXCI6IFwiNzZcIixcblx0XCI2LjFcIjogXCI3NlwiLFxuXHRcIjcuMFwiOiBcIjc4XCIsXG5cdFwiNy4xXCI6IFwiNzhcIixcblx0XCI3LjJcIjogXCI3OFwiLFxuXHRcIjcuM1wiOiBcIjc4XCIsXG5cdFwiOC4wXCI6IFwiODBcIixcblx0XCI4LjFcIjogXCI4MFwiLFxuXHRcIjguMlwiOiBcIjgwXCIsXG5cdFwiOC4zXCI6IFwiODBcIixcblx0XCI4LjRcIjogXCI4MFwiLFxuXHRcIjguNVwiOiBcIjgwXCIsXG5cdFwiOS4wXCI6IFwiODNcIixcblx0XCI5LjFcIjogXCI4M1wiLFxuXHRcIjkuMlwiOiBcIjgzXCIsXG5cdFwiOS4zXCI6IFwiODNcIixcblx0XCI5LjRcIjogXCI4M1wiLFxuXHRcIjEwLjBcIjogXCI4NVwiLFxuXHRcIjEwLjFcIjogXCI4NVwiLFxuXHRcIjEwLjJcIjogXCI4NVwiLFxuXHRcIjEwLjNcIjogXCI4NVwiLFxuXHRcIjEwLjRcIjogXCI4NVwiLFxuXHRcIjExLjBcIjogXCI4N1wiLFxuXHRcIjExLjFcIjogXCI4N1wiLFxuXHRcIjExLjJcIjogXCI4N1wiLFxuXHRcIjExLjNcIjogXCI4N1wiLFxuXHRcIjExLjRcIjogXCI4N1wiLFxuXHRcIjExLjVcIjogXCI4N1wiLFxuXHRcIjEyLjBcIjogXCI4OVwiLFxuXHRcIjEyLjFcIjogXCI4OVwiLFxuXHRcIjEyLjJcIjogXCI4OVwiLFxuXHRcIjEzLjBcIjogXCI5MVwiLFxuXHRcIjEzLjFcIjogXCI5MVwiLFxuXHRcIjEzLjJcIjogXCI5MVwiLFxuXHRcIjEzLjNcIjogXCI5MVwiLFxuXHRcIjEzLjRcIjogXCI5MVwiLFxuXHRcIjEzLjVcIjogXCI5MVwiLFxuXHRcIjEzLjZcIjogXCI5MVwiLFxuXHRcIjE0LjBcIjogXCI5M1wiLFxuXHRcIjE0LjFcIjogXCI5M1wiLFxuXHRcIjE0LjJcIjogXCI5M1wiLFxuXHRcIjE1LjBcIjogXCI5NFwiLFxuXHRcIjE1LjFcIjogXCI5NFwiLFxuXHRcIjE1LjJcIjogXCI5NFwiLFxuXHRcIjE1LjNcIjogXCI5NFwiLFxuXHRcIjE1LjRcIjogXCI5NFwiLFxuXHRcIjE1LjVcIjogXCI5NFwiLFxuXHRcIjE2LjBcIjogXCI5NlwiLFxuXHRcIjE2LjFcIjogXCI5NlwiLFxuXHRcIjE2LjJcIjogXCI5NlwiLFxuXHRcIjE3LjBcIjogXCI5OFwiLFxuXHRcIjE3LjFcIjogXCI5OFwiLFxuXHRcIjE3LjJcIjogXCI5OFwiLFxuXHRcIjE3LjNcIjogXCI5OFwiLFxuXHRcIjE3LjRcIjogXCI5OFwiLFxuXHRcIjE4LjBcIjogXCIxMDBcIixcblx0XCIxOC4xXCI6IFwiMTAwXCIsXG5cdFwiMTguMlwiOiBcIjEwMFwiLFxuXHRcIjE4LjNcIjogXCIxMDBcIixcblx0XCIxOS4wXCI6IFwiMTAyXCIsXG5cdFwiMTkuMVwiOiBcIjEwMlwiLFxuXHRcIjIwLjBcIjogXCIxMDRcIixcblx0XCIyMC4xXCI6IFwiMTA0XCIsXG5cdFwiMjAuMlwiOiBcIjEwNFwiLFxuXHRcIjIwLjNcIjogXCIxMDRcIixcblx0XCIyMS4wXCI6IFwiMTA2XCIsXG5cdFwiMjEuMVwiOiBcIjEwNlwiLFxuXHRcIjIxLjJcIjogXCIxMDZcIixcblx0XCIyMS4zXCI6IFwiMTA2XCIsXG5cdFwiMjEuNFwiOiBcIjEwNlwiLFxuXHRcIjIyLjBcIjogXCIxMDhcIixcblx0XCIyMi4xXCI6IFwiMTA4XCIsXG5cdFwiMjIuMlwiOiBcIjEwOFwiLFxuXHRcIjIyLjNcIjogXCIxMDhcIixcblx0XCIyMy4wXCI6IFwiMTEwXCIsXG5cdFwiMjMuMVwiOiBcIjExMFwiLFxuXHRcIjIzLjJcIjogXCIxMTBcIixcblx0XCIyNC4wXCI6IFwiMTEyXCIsXG5cdFwiMjQuMVwiOiBcIjExMlwiLFxuXHRcIjI1LjBcIjogXCIxMTRcIlxufTsiLCIvKipcbiAqIEBsaWNlbnNlIEZyYWN0aW9uLmpzIHY0LjIuMCAwNS8wMy8yMDIyXG4gKiBodHRwczovL3d3dy54YXJnLm9yZy8yMDE0LzAzL3JhdGlvbmFsLW51bWJlcnMtaW4tamF2YXNjcmlwdC9cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEsIFJvYmVydCBFaXNlbGUgKHJvYmVydEB4YXJnLm9yZylcbiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBvciBHUEwgVmVyc2lvbiAyIGxpY2Vuc2VzLlxuICoqL1xuXG5cbi8qKlxuICpcbiAqIFRoaXMgY2xhc3Mgb2ZmZXJzIHRoZSBwb3NzaWJpbGl0eSB0byBjYWxjdWxhdGUgZnJhY3Rpb25zLlxuICogWW91IGNhbiBwYXNzIGEgZnJhY3Rpb24gaW4gZGlmZmVyZW50IGZvcm1hdHMuIEVpdGhlciBhcyBhcnJheSwgYXMgZG91YmxlLCBhcyBzdHJpbmcgb3IgYXMgYW4gaW50ZWdlci5cbiAqXG4gKiBBcnJheS9PYmplY3QgZm9ybVxuICogWyAwID0+IDxub21pbmF0b3I+LCAxID0+IDxkZW5vbWluYXRvcj4gXVxuICogWyBuID0+IDxub21pbmF0b3I+LCBkID0+IDxkZW5vbWluYXRvcj4gXVxuICpcbiAqIEludGVnZXIgZm9ybVxuICogLSBTaW5nbGUgaW50ZWdlciB2YWx1ZVxuICpcbiAqIERvdWJsZSBmb3JtXG4gKiAtIFNpbmdsZSBkb3VibGUgdmFsdWVcbiAqXG4gKiBTdHJpbmcgZm9ybVxuICogMTIzLjQ1NiAtIGEgc2ltcGxlIGRvdWJsZVxuICogMTIzLzQ1NiAtIGEgc3RyaW5nIGZyYWN0aW9uXG4gKiAxMjMuJzQ1NicgLSBhIGRvdWJsZSB3aXRoIHJlcGVhdGluZyBkZWNpbWFsIHBsYWNlc1xuICogMTIzLig0NTYpIC0gc3lub255bVxuICogMTIzLjQ1JzYnIC0gYSBkb3VibGUgd2l0aCByZXBlYXRpbmcgbGFzdCBwbGFjZVxuICogMTIzLjQ1KDYpIC0gc3lub255bVxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogdmFyIGYgPSBuZXcgRnJhY3Rpb24oXCI5LjQnMzEnXCIpO1xuICogZi5tdWwoWy00LCAzXSkuZGl2KDQuOSk7XG4gKlxuICovXG5cbihmdW5jdGlvbihyb290KSB7XG5cbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgLy8gTWF4aW11bSBzZWFyY2ggZGVwdGggZm9yIGN5Y2xpYyByYXRpb25hbCBudW1iZXJzLiAyMDAwIHNob3VsZCBiZSBtb3JlIHRoYW4gZW5vdWdoLlxuICAvLyBFeGFtcGxlOiAxLzcgPSAwLigxNDI4NTcpIGhhcyA2IHJlcGVhdGluZyBkZWNpbWFsIHBsYWNlcy5cbiAgLy8gSWYgTUFYX0NZQ0xFX0xFTiBnZXRzIHJlZHVjZWQsIGxvbmcgY3ljbGVzIHdpbGwgbm90IGJlIGRldGVjdGVkIGFuZCB0b1N0cmluZygpIG9ubHkgZ2V0cyB0aGUgZmlyc3QgMTAgZGlnaXRzXG4gIHZhciBNQVhfQ1lDTEVfTEVOID0gMjAwMDtcblxuICAvLyBQYXJzZWQgZGF0YSB0byBhdm9pZCBjYWxsaW5nIFwibmV3XCIgYWxsIHRoZSB0aW1lXG4gIHZhciBQID0ge1xuICAgIFwic1wiOiAxLFxuICAgIFwiblwiOiAwLFxuICAgIFwiZFwiOiAxXG4gIH07XG5cbiAgZnVuY3Rpb24gYXNzaWduKG4sIHMpIHtcblxuICAgIGlmIChpc05hTihuID0gcGFyc2VJbnQobiwgMTApKSkge1xuICAgICAgdGhyb3cgRnJhY3Rpb25bJ0ludmFsaWRQYXJhbWV0ZXInXTtcbiAgICB9XG4gICAgcmV0dXJuIG4gKiBzO1xuICB9XG5cbiAgLy8gQ3JlYXRlcyBhIG5ldyBGcmFjdGlvbiBpbnRlcm5hbGx5IHdpdGhvdXQgdGhlIG5lZWQgb2YgdGhlIGJ1bGt5IGNvbnN0cnVjdG9yXG4gIGZ1bmN0aW9uIG5ld0ZyYWN0aW9uKG4sIGQpIHtcblxuICAgIGlmIChkID09PSAwKSB7XG4gICAgICB0aHJvdyBGcmFjdGlvblsnRGl2aXNpb25CeVplcm8nXTtcbiAgICB9XG5cbiAgICB2YXIgZiA9IE9iamVjdC5jcmVhdGUoRnJhY3Rpb24ucHJvdG90eXBlKTtcbiAgICBmW1wic1wiXSA9IG4gPCAwID8gLTEgOiAxO1xuXG4gICAgbiA9IG4gPCAwID8gLW4gOiBuO1xuXG4gICAgdmFyIGEgPSBnY2QobiwgZCk7XG5cbiAgICBmW1wiblwiXSA9IG4gLyBhO1xuICAgIGZbXCJkXCJdID0gZCAvIGE7XG4gICAgcmV0dXJuIGY7XG4gIH1cblxuICBmdW5jdGlvbiBmYWN0b3JpemUobnVtKSB7XG5cbiAgICB2YXIgZmFjdG9ycyA9IHt9O1xuXG4gICAgdmFyIG4gPSBudW07XG4gICAgdmFyIGkgPSAyO1xuICAgIHZhciBzID0gNDtcblxuICAgIHdoaWxlIChzIDw9IG4pIHtcblxuICAgICAgd2hpbGUgKG4gJSBpID09PSAwKSB7XG4gICAgICAgIG4vPSBpO1xuICAgICAgICBmYWN0b3JzW2ldID0gKGZhY3RvcnNbaV0gfHwgMCkgKyAxO1xuICAgICAgfVxuICAgICAgcys9IDEgKyAyICogaSsrO1xuICAgIH1cblxuICAgIGlmIChuICE9PSBudW0pIHtcbiAgICAgIGlmIChuID4gMSlcbiAgICAgICAgZmFjdG9yc1tuXSA9IChmYWN0b3JzW25dIHx8IDApICsgMTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmFjdG9yc1tudW1dID0gKGZhY3RvcnNbbnVtXSB8fCAwKSArIDE7XG4gICAgfVxuICAgIHJldHVybiBmYWN0b3JzO1xuICB9XG5cbiAgdmFyIHBhcnNlID0gZnVuY3Rpb24ocDEsIHAyKSB7XG5cbiAgICB2YXIgbiA9IDAsIGQgPSAxLCBzID0gMTtcbiAgICB2YXIgdiA9IDAsIHcgPSAwLCB4ID0gMCwgeSA9IDEsIHogPSAxO1xuXG4gICAgdmFyIEEgPSAwLCBCID0gMTtcbiAgICB2YXIgQyA9IDEsIEQgPSAxO1xuXG4gICAgdmFyIE4gPSAxMDAwMDAwMDtcbiAgICB2YXIgTTtcblxuICAgIGlmIChwMSA9PT0gdW5kZWZpbmVkIHx8IHAxID09PSBudWxsKSB7XG4gICAgICAvKiB2b2lkICovXG4gICAgfSBlbHNlIGlmIChwMiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBuID0gcDE7XG4gICAgICBkID0gcDI7XG4gICAgICBzID0gbiAqIGQ7XG5cbiAgICAgIGlmIChuICUgMSAhPT0gMCB8fCBkICUgMSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBGcmFjdGlvblsnTm9uSW50ZWdlclBhcmFtZXRlciddO1xuICAgICAgfVxuXG4gICAgfSBlbHNlXG4gICAgICBzd2l0Y2ggKHR5cGVvZiBwMSkge1xuXG4gICAgICAgIGNhc2UgXCJvYmplY3RcIjpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZiAoXCJkXCIgaW4gcDEgJiYgXCJuXCIgaW4gcDEpIHtcbiAgICAgICAgICAgICAgbiA9IHAxW1wiblwiXTtcbiAgICAgICAgICAgICAgZCA9IHAxW1wiZFwiXTtcbiAgICAgICAgICAgICAgaWYgKFwic1wiIGluIHAxKVxuICAgICAgICAgICAgICAgIG4qPSBwMVtcInNcIl07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKDAgaW4gcDEpIHtcbiAgICAgICAgICAgICAgbiA9IHAxWzBdO1xuICAgICAgICAgICAgICBpZiAoMSBpbiBwMSlcbiAgICAgICAgICAgICAgICBkID0gcDFbMV07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aHJvdyBGcmFjdGlvblsnSW52YWxpZFBhcmFtZXRlciddO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcyA9IG4gKiBkO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgICAge1xuICAgICAgICAgICAgaWYgKHAxIDwgMCkge1xuICAgICAgICAgICAgICBzID0gcDE7XG4gICAgICAgICAgICAgIHAxID0gLXAxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocDEgJSAxID09PSAwKSB7XG4gICAgICAgICAgICAgIG4gPSBwMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocDEgPiAwKSB7IC8vIGNoZWNrIGZvciAhPSAwLCBzY2FsZSB3b3VsZCBiZWNvbWUgTmFOIChsb2coMCkpLCB3aGljaCBjb252ZXJnZXMgcmVhbGx5IHNsb3dcblxuICAgICAgICAgICAgICBpZiAocDEgPj0gMSkge1xuICAgICAgICAgICAgICAgIHogPSBNYXRoLnBvdygxMCwgTWF0aC5mbG9vcigxICsgTWF0aC5sb2cocDEpIC8gTWF0aC5MTjEwKSk7XG4gICAgICAgICAgICAgICAgcDEvPSB6O1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgLy8gVXNpbmcgRmFyZXkgU2VxdWVuY2VzXG4gICAgICAgICAgICAgIC8vIGh0dHA6Ly93d3cuam9obmRjb29rLmNvbS9ibG9nLzIwMTAvMTAvMjAvYmVzdC1yYXRpb25hbC1hcHByb3hpbWF0aW9uL1xuXG4gICAgICAgICAgICAgIHdoaWxlIChCIDw9IE4gJiYgRCA8PSBOKSB7XG4gICAgICAgICAgICAgICAgTSA9IChBICsgQykgLyAoQiArIEQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHAxID09PSBNKSB7XG4gICAgICAgICAgICAgICAgICBpZiAoQiArIEQgPD0gTikge1xuICAgICAgICAgICAgICAgICAgICBuID0gQSArIEM7XG4gICAgICAgICAgICAgICAgICAgIGQgPSBCICsgRDtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoRCA+IEIpIHtcbiAgICAgICAgICAgICAgICAgICAgbiA9IEM7XG4gICAgICAgICAgICAgICAgICAgIGQgPSBEO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbiA9IEE7XG4gICAgICAgICAgICAgICAgICAgIGQgPSBCO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgICBpZiAocDEgPiBNKSB7XG4gICAgICAgICAgICAgICAgICAgIEErPSBDO1xuICAgICAgICAgICAgICAgICAgICBCKz0gRDtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIEMrPSBBO1xuICAgICAgICAgICAgICAgICAgICBEKz0gQjtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgaWYgKEIgPiBOKSB7XG4gICAgICAgICAgICAgICAgICAgIG4gPSBDO1xuICAgICAgICAgICAgICAgICAgICBkID0gRDtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG4gPSBBO1xuICAgICAgICAgICAgICAgICAgICBkID0gQjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgbio9IHo7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzTmFOKHAxKSB8fCBpc05hTihwMikpIHtcbiAgICAgICAgICAgICAgZCA9IG4gPSBOYU47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBCID0gcDEubWF0Y2goL1xcZCt8Li9nKTtcblxuICAgICAgICAgICAgaWYgKEIgPT09IG51bGwpXG4gICAgICAgICAgICAgIHRocm93IEZyYWN0aW9uWydJbnZhbGlkUGFyYW1ldGVyJ107XG5cbiAgICAgICAgICAgIGlmIChCW0FdID09PSAnLScpIHsvLyBDaGVjayBmb3IgbWludXMgc2lnbiBhdCB0aGUgYmVnaW5uaW5nXG4gICAgICAgICAgICAgIHMgPSAtMTtcbiAgICAgICAgICAgICAgQSsrO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChCW0FdID09PSAnKycpIHsvLyBDaGVjayBmb3IgcGx1cyBzaWduIGF0IHRoZSBiZWdpbm5pbmdcbiAgICAgICAgICAgICAgQSsrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoQi5sZW5ndGggPT09IEEgKyAxKSB7IC8vIENoZWNrIGlmIGl0J3MganVzdCBhIHNpbXBsZSBudW1iZXIgXCIxMjM0XCJcbiAgICAgICAgICAgICAgdyA9IGFzc2lnbihCW0ErK10sIHMpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChCW0EgKyAxXSA9PT0gJy4nIHx8IEJbQV0gPT09ICcuJykgeyAvLyBDaGVjayBpZiBpdCdzIGEgZGVjaW1hbCBudW1iZXJcblxuICAgICAgICAgICAgICBpZiAoQltBXSAhPT0gJy4nKSB7IC8vIEhhbmRsZSAwLjUgYW5kIC41XG4gICAgICAgICAgICAgICAgdiA9IGFzc2lnbihCW0ErK10sIHMpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIEErKztcblxuICAgICAgICAgICAgICAvLyBDaGVjayBmb3IgZGVjaW1hbCBwbGFjZXNcbiAgICAgICAgICAgICAgaWYgKEEgKyAxID09PSBCLmxlbmd0aCB8fCBCW0EgKyAxXSA9PT0gJygnICYmIEJbQSArIDNdID09PSAnKScgfHwgQltBICsgMV0gPT09IFwiJ1wiICYmIEJbQSArIDNdID09PSBcIidcIikge1xuICAgICAgICAgICAgICAgIHcgPSBhc3NpZ24oQltBXSwgcyk7XG4gICAgICAgICAgICAgICAgeSA9IE1hdGgucG93KDEwLCBCW0FdLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgQSsrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIHJlcGVhdGluZyBwbGFjZXNcbiAgICAgICAgICAgICAgaWYgKEJbQV0gPT09ICcoJyAmJiBCW0EgKyAyXSA9PT0gJyknIHx8IEJbQV0gPT09IFwiJ1wiICYmIEJbQSArIDJdID09PSBcIidcIikge1xuICAgICAgICAgICAgICAgIHggPSBhc3NpZ24oQltBICsgMV0sIHMpO1xuICAgICAgICAgICAgICAgIHogPSBNYXRoLnBvdygxMCwgQltBICsgMV0ubGVuZ3RoKSAtIDE7XG4gICAgICAgICAgICAgICAgQSs9IDM7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSBlbHNlIGlmIChCW0EgKyAxXSA9PT0gJy8nIHx8IEJbQSArIDFdID09PSAnOicpIHsgLy8gQ2hlY2sgZm9yIGEgc2ltcGxlIGZyYWN0aW9uIFwiMTIzLzQ1NlwiIG9yIFwiMTIzOjQ1NlwiXG4gICAgICAgICAgICAgIHcgPSBhc3NpZ24oQltBXSwgcyk7XG4gICAgICAgICAgICAgIHkgPSBhc3NpZ24oQltBICsgMl0sIDEpO1xuICAgICAgICAgICAgICBBKz0gMztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoQltBICsgM10gPT09ICcvJyAmJiBCW0EgKyAxXSA9PT0gJyAnKSB7IC8vIENoZWNrIGZvciBhIGNvbXBsZXggZnJhY3Rpb24gXCIxMjMgMS8yXCJcbiAgICAgICAgICAgICAgdiA9IGFzc2lnbihCW0FdLCBzKTtcbiAgICAgICAgICAgICAgdyA9IGFzc2lnbihCW0EgKyAyXSwgcyk7XG4gICAgICAgICAgICAgIHkgPSBhc3NpZ24oQltBICsgNF0sIDEpO1xuICAgICAgICAgICAgICBBKz0gNTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKEIubGVuZ3RoIDw9IEEpIHsgLy8gQ2hlY2sgZm9yIG1vcmUgdG9rZW5zIG9uIHRoZSBzdGFja1xuICAgICAgICAgICAgICBkID0geSAqIHo7XG4gICAgICAgICAgICAgIHMgPSAvKiB2b2lkICovXG4gICAgICAgICAgICAgIG4gPSB4ICsgZCAqIHYgKyB6ICogdztcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qIEZhbGwgdGhyb3VnaCBvbiBlcnJvciAqL1xuICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aHJvdyBGcmFjdGlvblsnSW52YWxpZFBhcmFtZXRlciddO1xuICAgICAgfVxuXG4gICAgaWYgKGQgPT09IDApIHtcbiAgICAgIHRocm93IEZyYWN0aW9uWydEaXZpc2lvbkJ5WmVybyddO1xuICAgIH1cblxuICAgIFBbXCJzXCJdID0gcyA8IDAgPyAtMSA6IDE7XG4gICAgUFtcIm5cIl0gPSBNYXRoLmFicyhuKTtcbiAgICBQW1wiZFwiXSA9IE1hdGguYWJzKGQpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1vZHBvdyhiLCBlLCBtKSB7XG5cbiAgICB2YXIgciA9IDE7XG4gICAgZm9yICg7IGUgPiAwOyBiID0gKGIgKiBiKSAlIG0sIGUgPj49IDEpIHtcblxuICAgICAgaWYgKGUgJiAxKSB7XG4gICAgICAgIHIgPSAociAqIGIpICUgbTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHI7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIGN5Y2xlTGVuKG4sIGQpIHtcblxuICAgIGZvciAoOyBkICUgMiA9PT0gMDtcbiAgICAgIGQvPSAyKSB7XG4gICAgfVxuXG4gICAgZm9yICg7IGQgJSA1ID09PSAwO1xuICAgICAgZC89IDUpIHtcbiAgICB9XG5cbiAgICBpZiAoZCA9PT0gMSkgLy8gQ2F0Y2ggbm9uLWN5Y2xpYyBudW1iZXJzXG4gICAgICByZXR1cm4gMDtcblxuICAgIC8vIElmIHdlIHdvdWxkIGxpa2UgdG8gY29tcHV0ZSByZWFsbHkgbGFyZ2UgbnVtYmVycyBxdWlja2VyLCB3ZSBjb3VsZCBtYWtlIHVzZSBvZiBGZXJtYXQncyBsaXR0bGUgdGhlb3JlbTpcbiAgICAvLyAxMF4oZC0xKSAlIGQgPT0gMVxuICAgIC8vIEhvd2V2ZXIsIHdlIGRvbid0IG5lZWQgc3VjaCBsYXJnZSBudW1iZXJzIGFuZCBNQVhfQ1lDTEVfTEVOIHNob3VsZCBiZSB0aGUgY2Fwc3RvbmUsXG4gICAgLy8gYXMgd2Ugd2FudCB0byB0cmFuc2xhdGUgdGhlIG51bWJlcnMgdG8gc3RyaW5ncy5cblxuICAgIHZhciByZW0gPSAxMCAlIGQ7XG4gICAgdmFyIHQgPSAxO1xuXG4gICAgZm9yICg7IHJlbSAhPT0gMTsgdCsrKSB7XG4gICAgICByZW0gPSByZW0gKiAxMCAlIGQ7XG5cbiAgICAgIGlmICh0ID4gTUFYX0NZQ0xFX0xFTilcbiAgICAgICAgcmV0dXJuIDA7IC8vIFJldHVybmluZyAwIGhlcmUgbWVhbnMgdGhhdCB3ZSBkb24ndCBwcmludCBpdCBhcyBhIGN5Y2xpYyBudW1iZXIuIEl0J3MgbGlrZWx5IHRoYXQgdGhlIGFuc3dlciBpcyBgZC0xYFxuICAgIH1cbiAgICByZXR1cm4gdDtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gY3ljbGVTdGFydChuLCBkLCBsZW4pIHtcblxuICAgIHZhciByZW0xID0gMTtcbiAgICB2YXIgcmVtMiA9IG1vZHBvdygxMCwgbGVuLCBkKTtcblxuICAgIGZvciAodmFyIHQgPSAwOyB0IDwgMzAwOyB0KyspIHsgLy8gcyA8IH5sb2cxMChOdW1iZXIuTUFYX1ZBTFVFKVxuICAgICAgLy8gU29sdmUgMTBecyA9PSAxMF4ocyt0KSAobW9kIGQpXG5cbiAgICAgIGlmIChyZW0xID09PSByZW0yKVxuICAgICAgICByZXR1cm4gdDtcblxuICAgICAgcmVtMSA9IHJlbTEgKiAxMCAlIGQ7XG4gICAgICByZW0yID0gcmVtMiAqIDEwICUgZDtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBmdW5jdGlvbiBnY2QoYSwgYikge1xuXG4gICAgaWYgKCFhKVxuICAgICAgcmV0dXJuIGI7XG4gICAgaWYgKCFiKVxuICAgICAgcmV0dXJuIGE7XG5cbiAgICB3aGlsZSAoMSkge1xuICAgICAgYSU9IGI7XG4gICAgICBpZiAoIWEpXG4gICAgICAgIHJldHVybiBiO1xuICAgICAgYiU9IGE7XG4gICAgICBpZiAoIWIpXG4gICAgICAgIHJldHVybiBhO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogTW9kdWxlIGNvbnN0cnVjdG9yXG4gICAqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0ge251bWJlcnxGcmFjdGlvbj19IGFcbiAgICogQHBhcmFtIHtudW1iZXI9fSBiXG4gICAqL1xuICBmdW5jdGlvbiBGcmFjdGlvbihhLCBiKSB7XG5cbiAgICBwYXJzZShhLCBiKTtcblxuICAgIGlmICh0aGlzIGluc3RhbmNlb2YgRnJhY3Rpb24pIHtcbiAgICAgIGEgPSBnY2QoUFtcImRcIl0sIFBbXCJuXCJdKTsgLy8gQWJ1c2UgdmFyaWFibGUgYVxuICAgICAgdGhpc1tcInNcIl0gPSBQW1wic1wiXTtcbiAgICAgIHRoaXNbXCJuXCJdID0gUFtcIm5cIl0gLyBhO1xuICAgICAgdGhpc1tcImRcIl0gPSBQW1wiZFwiXSAvIGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXdGcmFjdGlvbihQWydzJ10gKiBQWyduJ10sIFBbJ2QnXSk7XG4gICAgfVxuICB9XG5cbiAgRnJhY3Rpb25bJ0RpdmlzaW9uQnlaZXJvJ10gPSBuZXcgRXJyb3IoXCJEaXZpc2lvbiBieSBaZXJvXCIpO1xuICBGcmFjdGlvblsnSW52YWxpZFBhcmFtZXRlciddID0gbmV3IEVycm9yKFwiSW52YWxpZCBhcmd1bWVudFwiKTtcbiAgRnJhY3Rpb25bJ05vbkludGVnZXJQYXJhbWV0ZXInXSA9IG5ldyBFcnJvcihcIlBhcmFtZXRlcnMgbXVzdCBiZSBpbnRlZ2VyXCIpO1xuXG4gIEZyYWN0aW9uLnByb3RvdHlwZSA9IHtcblxuICAgIFwic1wiOiAxLFxuICAgIFwiblwiOiAwLFxuICAgIFwiZFwiOiAxLFxuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgYWJzb2x1dGUgdmFsdWVcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oLTQpLmFicygpID0+IDRcbiAgICAgKiovXG4gICAgXCJhYnNcIjogZnVuY3Rpb24oKSB7XG5cbiAgICAgIHJldHVybiBuZXdGcmFjdGlvbih0aGlzW1wiblwiXSwgdGhpc1tcImRcIl0pO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBJbnZlcnRzIHRoZSBzaWduIG9mIHRoZSBjdXJyZW50IGZyYWN0aW9uXG4gICAgICpcbiAgICAgKiBFeDogbmV3IEZyYWN0aW9uKC00KS5uZWcoKSA9PiA0XG4gICAgICoqL1xuICAgIFwibmVnXCI6IGZ1bmN0aW9uKCkge1xuXG4gICAgICByZXR1cm4gbmV3RnJhY3Rpb24oLXRoaXNbXCJzXCJdICogdGhpc1tcIm5cIl0sIHRoaXNbXCJkXCJdKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQWRkcyB0d28gcmF0aW9uYWwgbnVtYmVyc1xuICAgICAqXG4gICAgICogRXg6IG5ldyBGcmFjdGlvbih7bjogMiwgZDogM30pLmFkZChcIjE0LjlcIikgPT4gNDY3IC8gMzBcbiAgICAgKiovXG4gICAgXCJhZGRcIjogZnVuY3Rpb24oYSwgYikge1xuXG4gICAgICBwYXJzZShhLCBiKTtcbiAgICAgIHJldHVybiBuZXdGcmFjdGlvbihcbiAgICAgICAgdGhpc1tcInNcIl0gKiB0aGlzW1wiblwiXSAqIFBbXCJkXCJdICsgUFtcInNcIl0gKiB0aGlzW1wiZFwiXSAqIFBbXCJuXCJdLFxuICAgICAgICB0aGlzW1wiZFwiXSAqIFBbXCJkXCJdXG4gICAgICApO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTdWJ0cmFjdHMgdHdvIHJhdGlvbmFsIG51bWJlcnNcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oe246IDIsIGQ6IDN9KS5hZGQoXCIxNC45XCIpID0+IC00MjcgLyAzMFxuICAgICAqKi9cbiAgICBcInN1YlwiOiBmdW5jdGlvbihhLCBiKSB7XG5cbiAgICAgIHBhcnNlKGEsIGIpO1xuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKFxuICAgICAgICB0aGlzW1wic1wiXSAqIHRoaXNbXCJuXCJdICogUFtcImRcIl0gLSBQW1wic1wiXSAqIHRoaXNbXCJkXCJdICogUFtcIm5cIl0sXG4gICAgICAgIHRoaXNbXCJkXCJdICogUFtcImRcIl1cbiAgICAgICk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIE11bHRpcGxpZXMgdHdvIHJhdGlvbmFsIG51bWJlcnNcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oXCItMTcuKDM0NSlcIikubXVsKDMpID0+IDU3NzYgLyAxMTFcbiAgICAgKiovXG4gICAgXCJtdWxcIjogZnVuY3Rpb24oYSwgYikge1xuXG4gICAgICBwYXJzZShhLCBiKTtcbiAgICAgIHJldHVybiBuZXdGcmFjdGlvbihcbiAgICAgICAgdGhpc1tcInNcIl0gKiBQW1wic1wiXSAqIHRoaXNbXCJuXCJdICogUFtcIm5cIl0sXG4gICAgICAgIHRoaXNbXCJkXCJdICogUFtcImRcIl1cbiAgICAgICk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIERpdmlkZXMgdHdvIHJhdGlvbmFsIG51bWJlcnNcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oXCItMTcuKDM0NSlcIikuaW52ZXJzZSgpLmRpdigzKVxuICAgICAqKi9cbiAgICBcImRpdlwiOiBmdW5jdGlvbihhLCBiKSB7XG5cbiAgICAgIHBhcnNlKGEsIGIpO1xuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKFxuICAgICAgICB0aGlzW1wic1wiXSAqIFBbXCJzXCJdICogdGhpc1tcIm5cIl0gKiBQW1wiZFwiXSxcbiAgICAgICAgdGhpc1tcImRcIl0gKiBQW1wiblwiXVxuICAgICAgKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ2xvbmVzIHRoZSBhY3R1YWwgb2JqZWN0XG4gICAgICpcbiAgICAgKiBFeDogbmV3IEZyYWN0aW9uKFwiLTE3LigzNDUpXCIpLmNsb25lKClcbiAgICAgKiovXG4gICAgXCJjbG9uZVwiOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBuZXdGcmFjdGlvbih0aGlzWydzJ10gKiB0aGlzWyduJ10sIHRoaXNbJ2QnXSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZXMgdGhlIG1vZHVsbyBvZiB0d28gcmF0aW9uYWwgbnVtYmVycyAtIGEgbW9yZSBwcmVjaXNlIGZtb2RcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oJzQuKDMpJykubW9kKFs3LCA4XSkgPT4gKDEzLzMpICUgKDcvOCkgPSAoNS82KVxuICAgICAqKi9cbiAgICBcIm1vZFwiOiBmdW5jdGlvbihhLCBiKSB7XG5cbiAgICAgIGlmIChpc05hTih0aGlzWyduJ10pIHx8IGlzTmFOKHRoaXNbJ2QnXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFjdGlvbihOYU4pO1xuICAgICAgfVxuXG4gICAgICBpZiAoYSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBuZXdGcmFjdGlvbih0aGlzW1wic1wiXSAqIHRoaXNbXCJuXCJdICUgdGhpc1tcImRcIl0sIDEpO1xuICAgICAgfVxuXG4gICAgICBwYXJzZShhLCBiKTtcbiAgICAgIGlmICgwID09PSBQW1wiblwiXSAmJiAwID09PSB0aGlzW1wiZFwiXSkge1xuICAgICAgICB0aHJvdyBGcmFjdGlvblsnRGl2aXNpb25CeVplcm8nXTtcbiAgICAgIH1cblxuICAgICAgLypcbiAgICAgICAqIEZpcnN0IHNpbGx5IGF0dGVtcHQsIGtpbmRhIHNsb3dcbiAgICAgICAqXG4gICAgICAgcmV0dXJuIHRoYXRbXCJzdWJcIl0oe1xuICAgICAgIFwiblwiOiBudW1bXCJuXCJdICogTWF0aC5mbG9vcigodGhpcy5uIC8gdGhpcy5kKSAvIChudW0ubiAvIG51bS5kKSksXG4gICAgICAgXCJkXCI6IG51bVtcImRcIl0sXG4gICAgICAgXCJzXCI6IHRoaXNbXCJzXCJdXG4gICAgICAgfSk7Ki9cblxuICAgICAgLypcbiAgICAgICAqIE5ldyBhdHRlbXB0OiBhMSAvIGIxID0gYTIgLyBiMiAqIHEgKyByXG4gICAgICAgKiA9PiBiMiAqIGExID0gYTIgKiBiMSAqIHEgKyBiMSAqIGIyICogclxuICAgICAgICogPT4gKGIyICogYTEgJSBhMiAqIGIxKSAvIChiMSAqIGIyKVxuICAgICAgICovXG4gICAgICByZXR1cm4gbmV3RnJhY3Rpb24oXG4gICAgICAgIHRoaXNbXCJzXCJdICogKFBbXCJkXCJdICogdGhpc1tcIm5cIl0pICUgKFBbXCJuXCJdICogdGhpc1tcImRcIl0pLFxuICAgICAgICBQW1wiZFwiXSAqIHRoaXNbXCJkXCJdXG4gICAgICApO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDYWxjdWxhdGVzIHRoZSBmcmFjdGlvbmFsIGdjZCBvZiB0d28gcmF0aW9uYWwgbnVtYmVyc1xuICAgICAqXG4gICAgICogRXg6IG5ldyBGcmFjdGlvbig1LDgpLmdjZCgzLDcpID0+IDEvNTZcbiAgICAgKi9cbiAgICBcImdjZFwiOiBmdW5jdGlvbihhLCBiKSB7XG5cbiAgICAgIHBhcnNlKGEsIGIpO1xuXG4gICAgICAvLyBnY2QoYSAvIGIsIGMgLyBkKSA9IGdjZChhLCBjKSAvIGxjbShiLCBkKVxuXG4gICAgICByZXR1cm4gbmV3RnJhY3Rpb24oZ2NkKFBbXCJuXCJdLCB0aGlzW1wiblwiXSkgKiBnY2QoUFtcImRcIl0sIHRoaXNbXCJkXCJdKSwgUFtcImRcIl0gKiB0aGlzW1wiZFwiXSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZXMgdGhlIGZyYWN0aW9uYWwgbGNtIG9mIHR3byByYXRpb25hbCBudW1iZXJzXG4gICAgICpcbiAgICAgKiBFeDogbmV3IEZyYWN0aW9uKDUsOCkubGNtKDMsNykgPT4gMTVcbiAgICAgKi9cbiAgICBcImxjbVwiOiBmdW5jdGlvbihhLCBiKSB7XG5cbiAgICAgIHBhcnNlKGEsIGIpO1xuXG4gICAgICAvLyBsY20oYSAvIGIsIGMgLyBkKSA9IGxjbShhLCBjKSAvIGdjZChiLCBkKVxuXG4gICAgICBpZiAoUFtcIm5cIl0gPT09IDAgJiYgdGhpc1tcIm5cIl0gPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKDAsIDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKFBbXCJuXCJdICogdGhpc1tcIm5cIl0sIGdjZChQW1wiblwiXSwgdGhpc1tcIm5cIl0pICogZ2NkKFBbXCJkXCJdLCB0aGlzW1wiZFwiXSkpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDYWxjdWxhdGVzIHRoZSBjZWlsIG9mIGEgcmF0aW9uYWwgbnVtYmVyXG4gICAgICpcbiAgICAgKiBFeDogbmV3IEZyYWN0aW9uKCc0LigzKScpLmNlaWwoKSA9PiAoNSAvIDEpXG4gICAgICoqL1xuICAgIFwiY2VpbFwiOiBmdW5jdGlvbihwbGFjZXMpIHtcblxuICAgICAgcGxhY2VzID0gTWF0aC5wb3coMTAsIHBsYWNlcyB8fCAwKTtcblxuICAgICAgaWYgKGlzTmFOKHRoaXNbXCJuXCJdKSB8fCBpc05hTih0aGlzW1wiZFwiXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFjdGlvbihOYU4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKE1hdGguY2VpbChwbGFjZXMgKiB0aGlzW1wic1wiXSAqIHRoaXNbXCJuXCJdIC8gdGhpc1tcImRcIl0pLCBwbGFjZXMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDYWxjdWxhdGVzIHRoZSBmbG9vciBvZiBhIHJhdGlvbmFsIG51bWJlclxuICAgICAqXG4gICAgICogRXg6IG5ldyBGcmFjdGlvbignNC4oMyknKS5mbG9vcigpID0+ICg0IC8gMSlcbiAgICAgKiovXG4gICAgXCJmbG9vclwiOiBmdW5jdGlvbihwbGFjZXMpIHtcblxuICAgICAgcGxhY2VzID0gTWF0aC5wb3coMTAsIHBsYWNlcyB8fCAwKTtcblxuICAgICAgaWYgKGlzTmFOKHRoaXNbXCJuXCJdKSB8fCBpc05hTih0aGlzW1wiZFwiXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFjdGlvbihOYU4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKE1hdGguZmxvb3IocGxhY2VzICogdGhpc1tcInNcIl0gKiB0aGlzW1wiblwiXSAvIHRoaXNbXCJkXCJdKSwgcGxhY2VzKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUm91bmRzIGEgcmF0aW9uYWwgbnVtYmVyc1xuICAgICAqXG4gICAgICogRXg6IG5ldyBGcmFjdGlvbignNC4oMyknKS5yb3VuZCgpID0+ICg0IC8gMSlcbiAgICAgKiovXG4gICAgXCJyb3VuZFwiOiBmdW5jdGlvbihwbGFjZXMpIHtcblxuICAgICAgcGxhY2VzID0gTWF0aC5wb3coMTAsIHBsYWNlcyB8fCAwKTtcblxuICAgICAgaWYgKGlzTmFOKHRoaXNbXCJuXCJdKSB8fCBpc05hTih0aGlzW1wiZFwiXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGcmFjdGlvbihOYU4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKE1hdGgucm91bmQocGxhY2VzICogdGhpc1tcInNcIl0gKiB0aGlzW1wiblwiXSAvIHRoaXNbXCJkXCJdKSwgcGxhY2VzKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgaW52ZXJzZSBvZiB0aGUgZnJhY3Rpb24sIG1lYW5zIG51bWVyYXRvciBhbmQgZGVub21pbmF0b3IgYXJlIGV4Y2hhbmdlZFxuICAgICAqXG4gICAgICogRXg6IG5ldyBGcmFjdGlvbihbLTMsIDRdKS5pbnZlcnNlKCkgPT4gLTQgLyAzXG4gICAgICoqL1xuICAgIFwiaW52ZXJzZVwiOiBmdW5jdGlvbigpIHtcblxuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKHRoaXNbXCJzXCJdICogdGhpc1tcImRcIl0sIHRoaXNbXCJuXCJdKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgZnJhY3Rpb24gdG8gc29tZSByYXRpb25hbCBleHBvbmVudCwgaWYgcG9zc2libGVcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oLTEsMikucG93KC0zKSA9PiAtOFxuICAgICAqL1xuICAgIFwicG93XCI6IGZ1bmN0aW9uKGEsIGIpIHtcblxuICAgICAgcGFyc2UoYSwgYik7XG5cbiAgICAgIC8vIFRyaXZpYWwgY2FzZSB3aGVuIGV4cCBpcyBhbiBpbnRlZ2VyXG5cbiAgICAgIGlmIChQWydkJ10gPT09IDEpIHtcblxuICAgICAgICBpZiAoUFsncyddIDwgMCkge1xuICAgICAgICAgIHJldHVybiBuZXdGcmFjdGlvbihNYXRoLnBvdyh0aGlzWydzJ10gKiB0aGlzW1wiZFwiXSwgUFsnbiddKSwgTWF0aC5wb3codGhpc1tcIm5cIl0sIFBbJ24nXSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBuZXdGcmFjdGlvbihNYXRoLnBvdyh0aGlzWydzJ10gKiB0aGlzW1wiblwiXSwgUFsnbiddKSwgTWF0aC5wb3codGhpc1tcImRcIl0sIFBbJ24nXSkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIE5lZ2F0aXZlIHJvb3RzIGJlY29tZSBjb21wbGV4XG4gICAgICAvLyAgICAgKC1hL2IpXihjL2QpID0geFxuICAgICAgLy8gPD0+ICgtMSleKGMvZCkgKiAoYS9iKV4oYy9kKSA9IHhcbiAgICAgIC8vIDw9PiAoY29zKHBpKSArIGkqc2luKHBpKSleKGMvZCkgKiAoYS9iKV4oYy9kKSA9IHggICAgICAgICAjIHJvdGF0ZSAxIGJ5IDE4MMKwXG4gICAgICAvLyA8PT4gKGNvcyhjKnBpL2QpICsgaSpzaW4oYypwaS9kKSkgKiAoYS9iKV4oYy9kKSA9IHggICAgICAgIyBEZU1vaXZyZSdzIGZvcm11bGEgaW4gUSAoIGh0dHBzOi8vcHJvb2Z3aWtpLm9yZy93aWtpL0RlX01vaXZyZSUyN3NfRm9ybXVsYS9SYXRpb25hbF9JbmRleCApXG4gICAgICAvLyBGcm9tIHdoaWNoIGZvbGxvd3MgdGhhdCBvbmx5IGZvciBjPTAgdGhlIHJvb3QgaXMgbm9uLWNvbXBsZXguIGMvZCBpcyBhIHJlZHVjZWQgZnJhY3Rpb24sIHNvIHRoYXQgc2luKGMvZHBpKT0wIG9jY3VycyBmb3IgZD0xLCB3aGljaCBpcyBoYW5kbGVkIGJ5IG91ciB0cml2aWFsIGNhc2UuXG4gICAgICBpZiAodGhpc1sncyddIDwgMCkgcmV0dXJuIG51bGw7XG5cbiAgICAgIC8vIE5vdyBwcmltZSBmYWN0b3IgbiBhbmQgZFxuICAgICAgdmFyIE4gPSBmYWN0b3JpemUodGhpc1snbiddKTtcbiAgICAgIHZhciBEID0gZmFjdG9yaXplKHRoaXNbJ2QnXSk7XG5cbiAgICAgIC8vIEV4cG9uZW50aWF0ZSBhbmQgdGFrZSByb290IGZvciBuIGFuZCBkIGluZGl2aWR1YWxseVxuICAgICAgdmFyIG4gPSAxO1xuICAgICAgdmFyIGQgPSAxO1xuICAgICAgZm9yICh2YXIgayBpbiBOKSB7XG4gICAgICAgIGlmIChrID09PSAnMScpIGNvbnRpbnVlO1xuICAgICAgICBpZiAoayA9PT0gJzAnKSB7XG4gICAgICAgICAgbiA9IDA7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgTltrXSo9IFBbJ24nXTtcblxuICAgICAgICBpZiAoTltrXSAlIFBbJ2QnXSA9PT0gMCkge1xuICAgICAgICAgIE5ba10vPSBQWydkJ107XG4gICAgICAgIH0gZWxzZSByZXR1cm4gbnVsbDtcbiAgICAgICAgbio9IE1hdGgucG93KGssIE5ba10pO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBrIGluIEQpIHtcbiAgICAgICAgaWYgKGsgPT09ICcxJykgY29udGludWU7XG4gICAgICAgIERba10qPSBQWyduJ107XG5cbiAgICAgICAgaWYgKERba10gJSBQWydkJ10gPT09IDApIHtcbiAgICAgICAgICBEW2tdLz0gUFsnZCddO1xuICAgICAgICB9IGVsc2UgcmV0dXJuIG51bGw7XG4gICAgICAgIGQqPSBNYXRoLnBvdyhrLCBEW2tdKTtcbiAgICAgIH1cblxuICAgICAgaWYgKFBbJ3MnXSA8IDApIHtcbiAgICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKGQsIG4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0ZyYWN0aW9uKG4sIGQpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiB0d28gcmF0aW9uYWwgbnVtYmVycyBhcmUgdGhlIHNhbWVcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oMTkuNikuZXF1YWxzKFs5OCwgNV0pO1xuICAgICAqKi9cbiAgICBcImVxdWFsc1wiOiBmdW5jdGlvbihhLCBiKSB7XG5cbiAgICAgIHBhcnNlKGEsIGIpO1xuICAgICAgcmV0dXJuIHRoaXNbXCJzXCJdICogdGhpc1tcIm5cIl0gKiBQW1wiZFwiXSA9PT0gUFtcInNcIl0gKiBQW1wiblwiXSAqIHRoaXNbXCJkXCJdOyAvLyBTYW1lIGFzIGNvbXBhcmUoKSA9PT0gMFxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiB0d28gcmF0aW9uYWwgbnVtYmVycyBhcmUgdGhlIHNhbWVcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oMTkuNikuZXF1YWxzKFs5OCwgNV0pO1xuICAgICAqKi9cbiAgICBcImNvbXBhcmVcIjogZnVuY3Rpb24oYSwgYikge1xuXG4gICAgICBwYXJzZShhLCBiKTtcbiAgICAgIHZhciB0ID0gKHRoaXNbXCJzXCJdICogdGhpc1tcIm5cIl0gKiBQW1wiZFwiXSAtIFBbXCJzXCJdICogUFtcIm5cIl0gKiB0aGlzW1wiZFwiXSk7XG4gICAgICByZXR1cm4gKDAgPCB0KSAtICh0IDwgMCk7XG4gICAgfSxcblxuICAgIFwic2ltcGxpZnlcIjogZnVuY3Rpb24oZXBzKSB7XG5cbiAgICAgIGlmIChpc05hTih0aGlzWyduJ10pIHx8IGlzTmFOKHRoaXNbJ2QnXSkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAgIGVwcyA9IGVwcyB8fCAwLjAwMTtcblxuICAgICAgdmFyIHRoaXNBQlMgPSB0aGlzWydhYnMnXSgpO1xuICAgICAgdmFyIGNvbnQgPSB0aGlzQUJTWyd0b0NvbnRpbnVlZCddKCk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgY29udC5sZW5ndGg7IGkrKykge1xuXG4gICAgICAgIHZhciBzID0gbmV3RnJhY3Rpb24oY29udFtpIC0gMV0sIDEpO1xuICAgICAgICBmb3IgKHZhciBrID0gaSAtIDI7IGsgPj0gMDsgay0tKSB7XG4gICAgICAgICAgcyA9IHNbJ2ludmVyc2UnXSgpWydhZGQnXShjb250W2tdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzWydzdWInXSh0aGlzQUJTKVsnYWJzJ10oKS52YWx1ZU9mKCkgPCBlcHMpIHtcbiAgICAgICAgICByZXR1cm4gc1snbXVsJ10odGhpc1sncyddKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHR3byByYXRpb25hbCBudW1iZXJzIGFyZSBkaXZpc2libGVcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oMTkuNikuZGl2aXNpYmxlKDEuNSk7XG4gICAgICovXG4gICAgXCJkaXZpc2libGVcIjogZnVuY3Rpb24oYSwgYikge1xuXG4gICAgICBwYXJzZShhLCBiKTtcbiAgICAgIHJldHVybiAhKCEoUFtcIm5cIl0gKiB0aGlzW1wiZFwiXSkgfHwgKCh0aGlzW1wiblwiXSAqIFBbXCJkXCJdKSAlIChQW1wiblwiXSAqIHRoaXNbXCJkXCJdKSkpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZGVjaW1hbCByZXByZXNlbnRhdGlvbiBvZiB0aGUgZnJhY3Rpb25cbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oXCIxMDAuJzkxODIzJ1wiKS52YWx1ZU9mKCkgPT4gMTAwLjkxODIzOTE4MjM5MTgzXG4gICAgICoqL1xuICAgICd2YWx1ZU9mJzogZnVuY3Rpb24oKSB7XG5cbiAgICAgIHJldHVybiB0aGlzW1wic1wiXSAqIHRoaXNbXCJuXCJdIC8gdGhpc1tcImRcIl07XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBzdHJpbmctZnJhY3Rpb24gcmVwcmVzZW50YXRpb24gb2YgYSBGcmFjdGlvbiBvYmplY3RcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oXCIxLiczJ1wiKS50b0ZyYWN0aW9uKHRydWUpID0+IFwiNCAxLzNcIlxuICAgICAqKi9cbiAgICAndG9GcmFjdGlvbic6IGZ1bmN0aW9uKGV4Y2x1ZGVXaG9sZSkge1xuXG4gICAgICB2YXIgd2hvbGUsIHN0ciA9IFwiXCI7XG4gICAgICB2YXIgbiA9IHRoaXNbXCJuXCJdO1xuICAgICAgdmFyIGQgPSB0aGlzW1wiZFwiXTtcbiAgICAgIGlmICh0aGlzW1wic1wiXSA8IDApIHtcbiAgICAgICAgc3RyKz0gJy0nO1xuICAgICAgfVxuXG4gICAgICBpZiAoZCA9PT0gMSkge1xuICAgICAgICBzdHIrPSBuO1xuICAgICAgfSBlbHNlIHtcblxuICAgICAgICBpZiAoZXhjbHVkZVdob2xlICYmICh3aG9sZSA9IE1hdGguZmxvb3IobiAvIGQpKSA+IDApIHtcbiAgICAgICAgICBzdHIrPSB3aG9sZTtcbiAgICAgICAgICBzdHIrPSBcIiBcIjtcbiAgICAgICAgICBuJT0gZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0cis9IG47XG4gICAgICAgIHN0cis9ICcvJztcbiAgICAgICAgc3RyKz0gZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzdHI7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsYXRleCByZXByZXNlbnRhdGlvbiBvZiBhIEZyYWN0aW9uIG9iamVjdFxuICAgICAqXG4gICAgICogRXg6IG5ldyBGcmFjdGlvbihcIjEuJzMnXCIpLnRvTGF0ZXgoKSA9PiBcIlxcZnJhY3s0fXszfVwiXG4gICAgICoqL1xuICAgICd0b0xhdGV4JzogZnVuY3Rpb24oZXhjbHVkZVdob2xlKSB7XG5cbiAgICAgIHZhciB3aG9sZSwgc3RyID0gXCJcIjtcbiAgICAgIHZhciBuID0gdGhpc1tcIm5cIl07XG4gICAgICB2YXIgZCA9IHRoaXNbXCJkXCJdO1xuICAgICAgaWYgKHRoaXNbXCJzXCJdIDwgMCkge1xuICAgICAgICBzdHIrPSAnLSc7XG4gICAgICB9XG5cbiAgICAgIGlmIChkID09PSAxKSB7XG4gICAgICAgIHN0cis9IG47XG4gICAgICB9IGVsc2Uge1xuXG4gICAgICAgIGlmIChleGNsdWRlV2hvbGUgJiYgKHdob2xlID0gTWF0aC5mbG9vcihuIC8gZCkpID4gMCkge1xuICAgICAgICAgIHN0cis9IHdob2xlO1xuICAgICAgICAgIG4lPSBkO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RyKz0gXCJcXFxcZnJhY3tcIjtcbiAgICAgICAgc3RyKz0gbjtcbiAgICAgICAgc3RyKz0gJ317JztcbiAgICAgICAgc3RyKz0gZDtcbiAgICAgICAgc3RyKz0gJ30nO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBjb250aW51ZWQgZnJhY3Rpb24gZWxlbWVudHNcbiAgICAgKlxuICAgICAqIEV4OiBuZXcgRnJhY3Rpb24oXCI3LzhcIikudG9Db250aW51ZWQoKSA9PiBbMCwxLDddXG4gICAgICovXG4gICAgJ3RvQ29udGludWVkJzogZnVuY3Rpb24oKSB7XG5cbiAgICAgIHZhciB0O1xuICAgICAgdmFyIGEgPSB0aGlzWyduJ107XG4gICAgICB2YXIgYiA9IHRoaXNbJ2QnXTtcbiAgICAgIHZhciByZXMgPSBbXTtcblxuICAgICAgaWYgKGlzTmFOKGEpIHx8IGlzTmFOKGIpKSB7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgICB9XG5cbiAgICAgIGRvIHtcbiAgICAgICAgcmVzLnB1c2goTWF0aC5mbG9vcihhIC8gYikpO1xuICAgICAgICB0ID0gYSAlIGI7XG4gICAgICAgIGEgPSBiO1xuICAgICAgICBiID0gdDtcbiAgICAgIH0gd2hpbGUgKGEgIT09IDEpO1xuXG4gICAgICByZXR1cm4gcmVzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgZnJhY3Rpb24gd2l0aCBhbGwgZGlnaXRzXG4gICAgICpcbiAgICAgKiBFeDogbmV3IEZyYWN0aW9uKFwiMTAwLic5MTgyMydcIikudG9TdHJpbmcoKSA9PiBcIjEwMC4oOTE4MjMpXCJcbiAgICAgKiovXG4gICAgJ3RvU3RyaW5nJzogZnVuY3Rpb24oZGVjKSB7XG5cbiAgICAgIHZhciBOID0gdGhpc1tcIm5cIl07XG4gICAgICB2YXIgRCA9IHRoaXNbXCJkXCJdO1xuXG4gICAgICBpZiAoaXNOYU4oTikgfHwgaXNOYU4oRCkpIHtcbiAgICAgICAgcmV0dXJuIFwiTmFOXCI7XG4gICAgICB9XG5cbiAgICAgIGRlYyA9IGRlYyB8fCAxNTsgLy8gMTUgPSBkZWNpbWFsIHBsYWNlcyB3aGVuIG5vIHJlcGV0YXRpb25cblxuICAgICAgdmFyIGN5Y0xlbiA9IGN5Y2xlTGVuKE4sIEQpOyAvLyBDeWNsZSBsZW5ndGhcbiAgICAgIHZhciBjeWNPZmYgPSBjeWNsZVN0YXJ0KE4sIEQsIGN5Y0xlbik7IC8vIEN5Y2xlIHN0YXJ0XG5cbiAgICAgIHZhciBzdHIgPSB0aGlzWydzJ10gPCAwID8gXCItXCIgOiBcIlwiO1xuXG4gICAgICBzdHIrPSBOIC8gRCB8IDA7XG5cbiAgICAgIE4lPSBEO1xuICAgICAgTio9IDEwO1xuXG4gICAgICBpZiAoTilcbiAgICAgICAgc3RyKz0gXCIuXCI7XG5cbiAgICAgIGlmIChjeWNMZW4pIHtcblxuICAgICAgICBmb3IgKHZhciBpID0gY3ljT2ZmOyBpLS07KSB7XG4gICAgICAgICAgc3RyKz0gTiAvIEQgfCAwO1xuICAgICAgICAgIE4lPSBEO1xuICAgICAgICAgIE4qPSAxMDtcbiAgICAgICAgfVxuICAgICAgICBzdHIrPSBcIihcIjtcbiAgICAgICAgZm9yICh2YXIgaSA9IGN5Y0xlbjsgaS0tOykge1xuICAgICAgICAgIHN0cis9IE4gLyBEIHwgMDtcbiAgICAgICAgICBOJT0gRDtcbiAgICAgICAgICBOKj0gMTA7XG4gICAgICAgIH1cbiAgICAgICAgc3RyKz0gXCIpXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKHZhciBpID0gZGVjOyBOICYmIGktLTspIHtcbiAgICAgICAgICBzdHIrPSBOIC8gRCB8IDA7XG4gICAgICAgICAgTiU9IEQ7XG4gICAgICAgICAgTio9IDEwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgfTtcblxuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZVtcImFtZFwiXSkge1xuICAgIGRlZmluZShbXSwgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gRnJhY3Rpb247XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09IFwib2JqZWN0XCIpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRnJhY3Rpb24sIFwiX19lc01vZHVsZVwiLCB7ICd2YWx1ZSc6IHRydWUgfSk7XG4gICAgRnJhY3Rpb25bJ2RlZmF1bHQnXSA9IEZyYWN0aW9uO1xuICAgIEZyYWN0aW9uWydGcmFjdGlvbiddID0gRnJhY3Rpb247XG4gICAgbW9kdWxlWydleHBvcnRzJ10gPSBGcmFjdGlvbjtcbiAgfSBlbHNlIHtcbiAgICByb290WydGcmFjdGlvbiddID0gRnJhY3Rpb247XG4gIH1cblxufSkodGhpcyk7XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgd3JhcDogd3JhcFJhbmdlLFxuICBsaW1pdDogbGltaXRSYW5nZSxcbiAgdmFsaWRhdGU6IHZhbGlkYXRlUmFuZ2UsXG4gIHRlc3Q6IHRlc3RSYW5nZSxcbiAgY3Vycnk6IGN1cnJ5LFxuICBuYW1lOiBuYW1lXG59O1xuXG5mdW5jdGlvbiB3cmFwUmFuZ2UobWluLCBtYXgsIHZhbHVlKSB7XG4gIHZhciBtYXhMZXNzTWluID0gbWF4IC0gbWluO1xuICByZXR1cm4gKCh2YWx1ZSAtIG1pbikgJSBtYXhMZXNzTWluICsgbWF4TGVzc01pbikgJSBtYXhMZXNzTWluICsgbWluO1xufVxuXG5mdW5jdGlvbiBsaW1pdFJhbmdlKG1pbiwgbWF4LCB2YWx1ZSkge1xuICByZXR1cm4gTWF0aC5tYXgobWluLCBNYXRoLm1pbihtYXgsIHZhbHVlKSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlUmFuZ2UobWluLCBtYXgsIHZhbHVlLCBtaW5FeGNsdXNpdmUsIG1heEV4Y2x1c2l2ZSkge1xuICBpZiAoIXRlc3RSYW5nZShtaW4sIG1heCwgdmFsdWUsIG1pbkV4Y2x1c2l2ZSwgbWF4RXhjbHVzaXZlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcih2YWx1ZSArICcgaXMgb3V0c2lkZSBvZiByYW5nZSBbJyArIG1pbiArICcsJyArIG1heCArICcpJyk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiB0ZXN0UmFuZ2UobWluLCBtYXgsIHZhbHVlLCBtaW5FeGNsdXNpdmUsIG1heEV4Y2x1c2l2ZSkge1xuICByZXR1cm4gIShcbiAgICAgICB2YWx1ZSA8IG1pbiB8fFxuICAgICAgIHZhbHVlID4gbWF4IHx8XG4gICAgICAgKG1heEV4Y2x1c2l2ZSAmJiAodmFsdWUgPT09IG1heCkpIHx8XG4gICAgICAgKG1pbkV4Y2x1c2l2ZSAmJiAodmFsdWUgPT09IG1pbikpXG4gICk7XG59XG5cbmZ1bmN0aW9uIG5hbWUobWluLCBtYXgsIG1pbkV4Y2wsIG1heEV4Y2wpIHtcbiAgcmV0dXJuIChtaW5FeGNsID8gJygnIDogJ1snKSArIG1pbiArICcsJyArIG1heCArIChtYXhFeGNsID8gJyknIDogJ10nKTtcbn1cblxuZnVuY3Rpb24gY3VycnkobWluLCBtYXgsIG1pbkV4Y2x1c2l2ZSwgbWF4RXhjbHVzaXZlKSB7XG4gIHZhciBib3VuZE5hbWVGbiA9IG5hbWUuYmluZChudWxsLCBtaW4sIG1heCwgbWluRXhjbHVzaXZlLCBtYXhFeGNsdXNpdmUpO1xuICByZXR1cm4ge1xuICAgIHdyYXA6IHdyYXBSYW5nZS5iaW5kKG51bGwsIG1pbiwgbWF4KSxcbiAgICBsaW1pdDogbGltaXRSYW5nZS5iaW5kKG51bGwsIG1pbiwgbWF4KSxcbiAgICB2YWxpZGF0ZTogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWxpZGF0ZVJhbmdlKG1pbiwgbWF4LCB2YWx1ZSwgbWluRXhjbHVzaXZlLCBtYXhFeGNsdXNpdmUpO1xuICAgIH0sXG4gICAgdGVzdDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiB0ZXN0UmFuZ2UobWluLCBtYXgsIHZhbHVlLCBtaW5FeGNsdXNpdmUsIG1heEV4Y2x1c2l2ZSk7XG4gICAgfSxcbiAgICB0b1N0cmluZzogYm91bmROYW1lRm4sXG4gICAgbmFtZTogYm91bmROYW1lRm5cbiAgfTtcbn1cbiIsInZhciB4PVN0cmluZztcbnZhciBjcmVhdGU9ZnVuY3Rpb24oKSB7cmV0dXJuIHtpc0NvbG9yU3VwcG9ydGVkOmZhbHNlLHJlc2V0OngsYm9sZDp4LGRpbTp4LGl0YWxpYzp4LHVuZGVybGluZTp4LGludmVyc2U6eCxoaWRkZW46eCxzdHJpa2V0aHJvdWdoOngsYmxhY2s6eCxyZWQ6eCxncmVlbjp4LHllbGxvdzp4LGJsdWU6eCxtYWdlbnRhOngsY3lhbjp4LHdoaXRlOngsZ3JheTp4LGJnQmxhY2s6eCxiZ1JlZDp4LGJnR3JlZW46eCxiZ1llbGxvdzp4LGJnQmx1ZTp4LGJnTWFnZW50YTp4LGJnQ3lhbjp4LGJnV2hpdGU6eH19O1xubW9kdWxlLmV4cG9ydHM9Y3JlYXRlKCk7XG5tb2R1bGUuZXhwb3J0cy5jcmVhdGVDb2xvcnMgPSBjcmVhdGU7XG4iLCJ2YXIgcGFyc2UgPSByZXF1aXJlKFwiLi9wYXJzZVwiKTtcbnZhciB3YWxrID0gcmVxdWlyZShcIi4vd2Fsa1wiKTtcbnZhciBzdHJpbmdpZnkgPSByZXF1aXJlKFwiLi9zdHJpbmdpZnlcIik7XG5cbmZ1bmN0aW9uIFZhbHVlUGFyc2VyKHZhbHVlKSB7XG4gIGlmICh0aGlzIGluc3RhbmNlb2YgVmFsdWVQYXJzZXIpIHtcbiAgICB0aGlzLm5vZGVzID0gcGFyc2UodmFsdWUpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIHJldHVybiBuZXcgVmFsdWVQYXJzZXIodmFsdWUpO1xufVxuXG5WYWx1ZVBhcnNlci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5ub2RlcykgPyBzdHJpbmdpZnkodGhpcy5ub2RlcykgOiBcIlwiO1xufTtcblxuVmFsdWVQYXJzZXIucHJvdG90eXBlLndhbGsgPSBmdW5jdGlvbihjYiwgYnViYmxlKSB7XG4gIHdhbGsodGhpcy5ub2RlcywgY2IsIGJ1YmJsZSk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuVmFsdWVQYXJzZXIudW5pdCA9IHJlcXVpcmUoXCIuL3VuaXRcIik7XG5cblZhbHVlUGFyc2VyLndhbGsgPSB3YWxrO1xuXG5WYWx1ZVBhcnNlci5zdHJpbmdpZnkgPSBzdHJpbmdpZnk7XG5cbm1vZHVsZS5leHBvcnRzID0gVmFsdWVQYXJzZXI7XG4iLCJ2YXIgb3BlblBhcmVudGhlc2VzID0gXCIoXCIuY2hhckNvZGVBdCgwKTtcbnZhciBjbG9zZVBhcmVudGhlc2VzID0gXCIpXCIuY2hhckNvZGVBdCgwKTtcbnZhciBzaW5nbGVRdW90ZSA9IFwiJ1wiLmNoYXJDb2RlQXQoMCk7XG52YXIgZG91YmxlUXVvdGUgPSAnXCInLmNoYXJDb2RlQXQoMCk7XG52YXIgYmFja3NsYXNoID0gXCJcXFxcXCIuY2hhckNvZGVBdCgwKTtcbnZhciBzbGFzaCA9IFwiL1wiLmNoYXJDb2RlQXQoMCk7XG52YXIgY29tbWEgPSBcIixcIi5jaGFyQ29kZUF0KDApO1xudmFyIGNvbG9uID0gXCI6XCIuY2hhckNvZGVBdCgwKTtcbnZhciBzdGFyID0gXCIqXCIuY2hhckNvZGVBdCgwKTtcbnZhciB1TG93ZXIgPSBcInVcIi5jaGFyQ29kZUF0KDApO1xudmFyIHVVcHBlciA9IFwiVVwiLmNoYXJDb2RlQXQoMCk7XG52YXIgcGx1cyA9IFwiK1wiLmNoYXJDb2RlQXQoMCk7XG52YXIgaXNVbmljb2RlUmFuZ2UgPSAvXlthLWYwLTk/LV0rJC9pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGlucHV0KSB7XG4gIHZhciB0b2tlbnMgPSBbXTtcbiAgdmFyIHZhbHVlID0gaW5wdXQ7XG5cbiAgdmFyIG5leHQsXG4gICAgcXVvdGUsXG4gICAgcHJldixcbiAgICB0b2tlbixcbiAgICBlc2NhcGUsXG4gICAgZXNjYXBlUG9zLFxuICAgIHdoaXRlc3BhY2VQb3MsXG4gICAgcGFyZW50aGVzZXNPcGVuUG9zO1xuICB2YXIgcG9zID0gMDtcbiAgdmFyIGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyk7XG4gIHZhciBtYXggPSB2YWx1ZS5sZW5ndGg7XG4gIHZhciBzdGFjayA9IFt7IG5vZGVzOiB0b2tlbnMgfV07XG4gIHZhciBiYWxhbmNlZCA9IDA7XG4gIHZhciBwYXJlbnQ7XG5cbiAgdmFyIG5hbWUgPSBcIlwiO1xuICB2YXIgYmVmb3JlID0gXCJcIjtcbiAgdmFyIGFmdGVyID0gXCJcIjtcblxuICB3aGlsZSAocG9zIDwgbWF4KSB7XG4gICAgLy8gV2hpdGVzcGFjZXNcbiAgICBpZiAoY29kZSA8PSAzMikge1xuICAgICAgbmV4dCA9IHBvcztcbiAgICAgIGRvIHtcbiAgICAgICAgbmV4dCArPSAxO1xuICAgICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChuZXh0KTtcbiAgICAgIH0gd2hpbGUgKGNvZGUgPD0gMzIpO1xuICAgICAgdG9rZW4gPSB2YWx1ZS5zbGljZShwb3MsIG5leHQpO1xuXG4gICAgICBwcmV2ID0gdG9rZW5zW3Rva2Vucy5sZW5ndGggLSAxXTtcbiAgICAgIGlmIChjb2RlID09PSBjbG9zZVBhcmVudGhlc2VzICYmIGJhbGFuY2VkKSB7XG4gICAgICAgIGFmdGVyID0gdG9rZW47XG4gICAgICB9IGVsc2UgaWYgKHByZXYgJiYgcHJldi50eXBlID09PSBcImRpdlwiKSB7XG4gICAgICAgIHByZXYuYWZ0ZXIgPSB0b2tlbjtcbiAgICAgICAgcHJldi5zb3VyY2VFbmRJbmRleCArPSB0b2tlbi5sZW5ndGg7XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICBjb2RlID09PSBjb21tYSB8fFxuICAgICAgICBjb2RlID09PSBjb2xvbiB8fFxuICAgICAgICAoY29kZSA9PT0gc2xhc2ggJiZcbiAgICAgICAgICB2YWx1ZS5jaGFyQ29kZUF0KG5leHQgKyAxKSAhPT0gc3RhciAmJlxuICAgICAgICAgICghcGFyZW50IHx8XG4gICAgICAgICAgICAocGFyZW50ICYmIHBhcmVudC50eXBlID09PSBcImZ1bmN0aW9uXCIgJiYgcGFyZW50LnZhbHVlICE9PSBcImNhbGNcIikpKVxuICAgICAgKSB7XG4gICAgICAgIGJlZm9yZSA9IHRva2VuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdG9rZW5zLnB1c2goe1xuICAgICAgICAgIHR5cGU6IFwic3BhY2VcIixcbiAgICAgICAgICBzb3VyY2VJbmRleDogcG9zLFxuICAgICAgICAgIHNvdXJjZUVuZEluZGV4OiBuZXh0LFxuICAgICAgICAgIHZhbHVlOiB0b2tlblxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcG9zID0gbmV4dDtcblxuICAgICAgLy8gUXVvdGVzXG4gICAgfSBlbHNlIGlmIChjb2RlID09PSBzaW5nbGVRdW90ZSB8fCBjb2RlID09PSBkb3VibGVRdW90ZSkge1xuICAgICAgbmV4dCA9IHBvcztcbiAgICAgIHF1b3RlID0gY29kZSA9PT0gc2luZ2xlUXVvdGUgPyBcIidcIiA6ICdcIic7XG4gICAgICB0b2tlbiA9IHtcbiAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgICAgc291cmNlSW5kZXg6IHBvcyxcbiAgICAgICAgcXVvdGU6IHF1b3RlXG4gICAgICB9O1xuICAgICAgZG8ge1xuICAgICAgICBlc2NhcGUgPSBmYWxzZTtcbiAgICAgICAgbmV4dCA9IHZhbHVlLmluZGV4T2YocXVvdGUsIG5leHQgKyAxKTtcbiAgICAgICAgaWYgKH5uZXh0KSB7XG4gICAgICAgICAgZXNjYXBlUG9zID0gbmV4dDtcbiAgICAgICAgICB3aGlsZSAodmFsdWUuY2hhckNvZGVBdChlc2NhcGVQb3MgLSAxKSA9PT0gYmFja3NsYXNoKSB7XG4gICAgICAgICAgICBlc2NhcGVQb3MgLT0gMTtcbiAgICAgICAgICAgIGVzY2FwZSA9ICFlc2NhcGU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhbHVlICs9IHF1b3RlO1xuICAgICAgICAgIG5leHQgPSB2YWx1ZS5sZW5ndGggLSAxO1xuICAgICAgICAgIHRva2VuLnVuY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSB3aGlsZSAoZXNjYXBlKTtcbiAgICAgIHRva2VuLnZhbHVlID0gdmFsdWUuc2xpY2UocG9zICsgMSwgbmV4dCk7XG4gICAgICB0b2tlbi5zb3VyY2VFbmRJbmRleCA9IHRva2VuLnVuY2xvc2VkID8gbmV4dCA6IG5leHQgKyAxO1xuICAgICAgdG9rZW5zLnB1c2godG9rZW4pO1xuICAgICAgcG9zID0gbmV4dCArIDE7XG4gICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChwb3MpO1xuXG4gICAgICAvLyBDb21tZW50c1xuICAgIH0gZWxzZSBpZiAoY29kZSA9PT0gc2xhc2ggJiYgdmFsdWUuY2hhckNvZGVBdChwb3MgKyAxKSA9PT0gc3Rhcikge1xuICAgICAgbmV4dCA9IHZhbHVlLmluZGV4T2YoXCIqL1wiLCBwb3MpO1xuXG4gICAgICB0b2tlbiA9IHtcbiAgICAgICAgdHlwZTogXCJjb21tZW50XCIsXG4gICAgICAgIHNvdXJjZUluZGV4OiBwb3MsXG4gICAgICAgIHNvdXJjZUVuZEluZGV4OiBuZXh0ICsgMlxuICAgICAgfTtcblxuICAgICAgaWYgKG5leHQgPT09IC0xKSB7XG4gICAgICAgIHRva2VuLnVuY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgbmV4dCA9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgdG9rZW4uc291cmNlRW5kSW5kZXggPSBuZXh0O1xuICAgICAgfVxuXG4gICAgICB0b2tlbi52YWx1ZSA9IHZhbHVlLnNsaWNlKHBvcyArIDIsIG5leHQpO1xuICAgICAgdG9rZW5zLnB1c2godG9rZW4pO1xuXG4gICAgICBwb3MgPSBuZXh0ICsgMjtcbiAgICAgIGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyk7XG5cbiAgICAgIC8vIE9wZXJhdGlvbiB3aXRoaW4gY2FsY1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICAoY29kZSA9PT0gc2xhc2ggfHwgY29kZSA9PT0gc3RhcikgJiZcbiAgICAgIHBhcmVudCAmJlxuICAgICAgcGFyZW50LnR5cGUgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgcGFyZW50LnZhbHVlID09PSBcImNhbGNcIlxuICAgICkge1xuICAgICAgdG9rZW4gPSB2YWx1ZVtwb3NdO1xuICAgICAgdG9rZW5zLnB1c2goe1xuICAgICAgICB0eXBlOiBcIndvcmRcIixcbiAgICAgICAgc291cmNlSW5kZXg6IHBvcyAtIGJlZm9yZS5sZW5ndGgsXG4gICAgICAgIHNvdXJjZUVuZEluZGV4OiBwb3MgKyB0b2tlbi5sZW5ndGgsXG4gICAgICAgIHZhbHVlOiB0b2tlblxuICAgICAgfSk7XG4gICAgICBwb3MgKz0gMTtcbiAgICAgIGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyk7XG5cbiAgICAgIC8vIERpdmlkZXJzXG4gICAgfSBlbHNlIGlmIChjb2RlID09PSBzbGFzaCB8fCBjb2RlID09PSBjb21tYSB8fCBjb2RlID09PSBjb2xvbikge1xuICAgICAgdG9rZW4gPSB2YWx1ZVtwb3NdO1xuXG4gICAgICB0b2tlbnMucHVzaCh7XG4gICAgICAgIHR5cGU6IFwiZGl2XCIsXG4gICAgICAgIHNvdXJjZUluZGV4OiBwb3MgLSBiZWZvcmUubGVuZ3RoLFxuICAgICAgICBzb3VyY2VFbmRJbmRleDogcG9zICsgdG9rZW4ubGVuZ3RoLFxuICAgICAgICB2YWx1ZTogdG9rZW4sXG4gICAgICAgIGJlZm9yZTogYmVmb3JlLFxuICAgICAgICBhZnRlcjogXCJcIlxuICAgICAgfSk7XG4gICAgICBiZWZvcmUgPSBcIlwiO1xuXG4gICAgICBwb3MgKz0gMTtcbiAgICAgIGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyk7XG5cbiAgICAgIC8vIE9wZW4gcGFyZW50aGVzZXNcbiAgICB9IGVsc2UgaWYgKG9wZW5QYXJlbnRoZXNlcyA9PT0gY29kZSkge1xuICAgICAgLy8gV2hpdGVzcGFjZXMgYWZ0ZXIgb3BlbiBwYXJlbnRoZXNlc1xuICAgICAgbmV4dCA9IHBvcztcbiAgICAgIGRvIHtcbiAgICAgICAgbmV4dCArPSAxO1xuICAgICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChuZXh0KTtcbiAgICAgIH0gd2hpbGUgKGNvZGUgPD0gMzIpO1xuICAgICAgcGFyZW50aGVzZXNPcGVuUG9zID0gcG9zO1xuICAgICAgdG9rZW4gPSB7XG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgICAgc291cmNlSW5kZXg6IHBvcyAtIG5hbWUubGVuZ3RoLFxuICAgICAgICB2YWx1ZTogbmFtZSxcbiAgICAgICAgYmVmb3JlOiB2YWx1ZS5zbGljZShwYXJlbnRoZXNlc09wZW5Qb3MgKyAxLCBuZXh0KVxuICAgICAgfTtcbiAgICAgIHBvcyA9IG5leHQ7XG5cbiAgICAgIGlmIChuYW1lID09PSBcInVybFwiICYmIGNvZGUgIT09IHNpbmdsZVF1b3RlICYmIGNvZGUgIT09IGRvdWJsZVF1b3RlKSB7XG4gICAgICAgIG5leHQgLT0gMTtcbiAgICAgICAgZG8ge1xuICAgICAgICAgIGVzY2FwZSA9IGZhbHNlO1xuICAgICAgICAgIG5leHQgPSB2YWx1ZS5pbmRleE9mKFwiKVwiLCBuZXh0ICsgMSk7XG4gICAgICAgICAgaWYgKH5uZXh0KSB7XG4gICAgICAgICAgICBlc2NhcGVQb3MgPSBuZXh0O1xuICAgICAgICAgICAgd2hpbGUgKHZhbHVlLmNoYXJDb2RlQXQoZXNjYXBlUG9zIC0gMSkgPT09IGJhY2tzbGFzaCkge1xuICAgICAgICAgICAgICBlc2NhcGVQb3MgLT0gMTtcbiAgICAgICAgICAgICAgZXNjYXBlID0gIWVzY2FwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFsdWUgKz0gXCIpXCI7XG4gICAgICAgICAgICBuZXh0ID0gdmFsdWUubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIHRva2VuLnVuY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gd2hpbGUgKGVzY2FwZSk7XG4gICAgICAgIC8vIFdoaXRlc3BhY2VzIGJlZm9yZSBjbG9zZWRcbiAgICAgICAgd2hpdGVzcGFjZVBvcyA9IG5leHQ7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICB3aGl0ZXNwYWNlUG9zIC09IDE7XG4gICAgICAgICAgY29kZSA9IHZhbHVlLmNoYXJDb2RlQXQod2hpdGVzcGFjZVBvcyk7XG4gICAgICAgIH0gd2hpbGUgKGNvZGUgPD0gMzIpO1xuICAgICAgICBpZiAocGFyZW50aGVzZXNPcGVuUG9zIDwgd2hpdGVzcGFjZVBvcykge1xuICAgICAgICAgIGlmIChwb3MgIT09IHdoaXRlc3BhY2VQb3MgKyAxKSB7XG4gICAgICAgICAgICB0b2tlbi5ub2RlcyA9IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwid29yZFwiLFxuICAgICAgICAgICAgICAgIHNvdXJjZUluZGV4OiBwb3MsXG4gICAgICAgICAgICAgICAgc291cmNlRW5kSW5kZXg6IHdoaXRlc3BhY2VQb3MgKyAxLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZS5zbGljZShwb3MsIHdoaXRlc3BhY2VQb3MgKyAxKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0b2tlbi5ub2RlcyA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodG9rZW4udW5jbG9zZWQgJiYgd2hpdGVzcGFjZVBvcyArIDEgIT09IG5leHQpIHtcbiAgICAgICAgICAgIHRva2VuLmFmdGVyID0gXCJcIjtcbiAgICAgICAgICAgIHRva2VuLm5vZGVzLnB1c2goe1xuICAgICAgICAgICAgICB0eXBlOiBcInNwYWNlXCIsXG4gICAgICAgICAgICAgIHNvdXJjZUluZGV4OiB3aGl0ZXNwYWNlUG9zICsgMSxcbiAgICAgICAgICAgICAgc291cmNlRW5kSW5kZXg6IG5leHQsXG4gICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZS5zbGljZSh3aGl0ZXNwYWNlUG9zICsgMSwgbmV4dClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0b2tlbi5hZnRlciA9IHZhbHVlLnNsaWNlKHdoaXRlc3BhY2VQb3MgKyAxLCBuZXh0KTtcbiAgICAgICAgICAgIHRva2VuLnNvdXJjZUVuZEluZGV4ID0gbmV4dDtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdG9rZW4uYWZ0ZXIgPSBcIlwiO1xuICAgICAgICAgIHRva2VuLm5vZGVzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgcG9zID0gbmV4dCArIDE7XG4gICAgICAgIHRva2VuLnNvdXJjZUVuZEluZGV4ID0gdG9rZW4udW5jbG9zZWQgPyBuZXh0IDogcG9zO1xuICAgICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChwb3MpO1xuICAgICAgICB0b2tlbnMucHVzaCh0b2tlbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiYWxhbmNlZCArPSAxO1xuICAgICAgICB0b2tlbi5hZnRlciA9IFwiXCI7XG4gICAgICAgIHRva2VuLnNvdXJjZUVuZEluZGV4ID0gcG9zICsgMTtcbiAgICAgICAgdG9rZW5zLnB1c2godG9rZW4pO1xuICAgICAgICBzdGFjay5wdXNoKHRva2VuKTtcbiAgICAgICAgdG9rZW5zID0gdG9rZW4ubm9kZXMgPSBbXTtcbiAgICAgICAgcGFyZW50ID0gdG9rZW47XG4gICAgICB9XG4gICAgICBuYW1lID0gXCJcIjtcblxuICAgICAgLy8gQ2xvc2UgcGFyZW50aGVzZXNcbiAgICB9IGVsc2UgaWYgKGNsb3NlUGFyZW50aGVzZXMgPT09IGNvZGUgJiYgYmFsYW5jZWQpIHtcbiAgICAgIHBvcyArPSAxO1xuICAgICAgY29kZSA9IHZhbHVlLmNoYXJDb2RlQXQocG9zKTtcblxuICAgICAgcGFyZW50LmFmdGVyID0gYWZ0ZXI7XG4gICAgICBwYXJlbnQuc291cmNlRW5kSW5kZXggKz0gYWZ0ZXIubGVuZ3RoO1xuICAgICAgYWZ0ZXIgPSBcIlwiO1xuICAgICAgYmFsYW5jZWQgLT0gMTtcbiAgICAgIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdLnNvdXJjZUVuZEluZGV4ID0gcG9zO1xuICAgICAgc3RhY2sucG9wKCk7XG4gICAgICBwYXJlbnQgPSBzdGFja1tiYWxhbmNlZF07XG4gICAgICB0b2tlbnMgPSBwYXJlbnQubm9kZXM7XG5cbiAgICAgIC8vIFdvcmRzXG4gICAgfSBlbHNlIHtcbiAgICAgIG5leHQgPSBwb3M7XG4gICAgICBkbyB7XG4gICAgICAgIGlmIChjb2RlID09PSBiYWNrc2xhc2gpIHtcbiAgICAgICAgICBuZXh0ICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgbmV4dCArPSAxO1xuICAgICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChuZXh0KTtcbiAgICAgIH0gd2hpbGUgKFxuICAgICAgICBuZXh0IDwgbWF4ICYmXG4gICAgICAgICEoXG4gICAgICAgICAgY29kZSA8PSAzMiB8fFxuICAgICAgICAgIGNvZGUgPT09IHNpbmdsZVF1b3RlIHx8XG4gICAgICAgICAgY29kZSA9PT0gZG91YmxlUXVvdGUgfHxcbiAgICAgICAgICBjb2RlID09PSBjb21tYSB8fFxuICAgICAgICAgIGNvZGUgPT09IGNvbG9uIHx8XG4gICAgICAgICAgY29kZSA9PT0gc2xhc2ggfHxcbiAgICAgICAgICBjb2RlID09PSBvcGVuUGFyZW50aGVzZXMgfHxcbiAgICAgICAgICAoY29kZSA9PT0gc3RhciAmJlxuICAgICAgICAgICAgcGFyZW50ICYmXG4gICAgICAgICAgICBwYXJlbnQudHlwZSA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgICAgICBwYXJlbnQudmFsdWUgPT09IFwiY2FsY1wiKSB8fFxuICAgICAgICAgIChjb2RlID09PSBzbGFzaCAmJlxuICAgICAgICAgICAgcGFyZW50LnR5cGUgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICAgICAgcGFyZW50LnZhbHVlID09PSBcImNhbGNcIikgfHxcbiAgICAgICAgICAoY29kZSA9PT0gY2xvc2VQYXJlbnRoZXNlcyAmJiBiYWxhbmNlZClcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICAgIHRva2VuID0gdmFsdWUuc2xpY2UocG9zLCBuZXh0KTtcblxuICAgICAgaWYgKG9wZW5QYXJlbnRoZXNlcyA9PT0gY29kZSkge1xuICAgICAgICBuYW1lID0gdG9rZW47XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAodUxvd2VyID09PSB0b2tlbi5jaGFyQ29kZUF0KDApIHx8IHVVcHBlciA9PT0gdG9rZW4uY2hhckNvZGVBdCgwKSkgJiZcbiAgICAgICAgcGx1cyA9PT0gdG9rZW4uY2hhckNvZGVBdCgxKSAmJlxuICAgICAgICBpc1VuaWNvZGVSYW5nZS50ZXN0KHRva2VuLnNsaWNlKDIpKVxuICAgICAgKSB7XG4gICAgICAgIHRva2Vucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiBcInVuaWNvZGUtcmFuZ2VcIixcbiAgICAgICAgICBzb3VyY2VJbmRleDogcG9zLFxuICAgICAgICAgIHNvdXJjZUVuZEluZGV4OiBuZXh0LFxuICAgICAgICAgIHZhbHVlOiB0b2tlblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRva2Vucy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiBcIndvcmRcIixcbiAgICAgICAgICBzb3VyY2VJbmRleDogcG9zLFxuICAgICAgICAgIHNvdXJjZUVuZEluZGV4OiBuZXh0LFxuICAgICAgICAgIHZhbHVlOiB0b2tlblxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcG9zID0gbmV4dDtcbiAgICB9XG4gIH1cblxuICBmb3IgKHBvcyA9IHN0YWNrLmxlbmd0aCAtIDE7IHBvczsgcG9zIC09IDEpIHtcbiAgICBzdGFja1twb3NdLnVuY2xvc2VkID0gdHJ1ZTtcbiAgICBzdGFja1twb3NdLnNvdXJjZUVuZEluZGV4ID0gdmFsdWUubGVuZ3RoO1xuICB9XG5cbiAgcmV0dXJuIHN0YWNrWzBdLm5vZGVzO1xufTtcbiIsImZ1bmN0aW9uIHN0cmluZ2lmeU5vZGUobm9kZSwgY3VzdG9tKSB7XG4gIHZhciB0eXBlID0gbm9kZS50eXBlO1xuICB2YXIgdmFsdWUgPSBub2RlLnZhbHVlO1xuICB2YXIgYnVmO1xuICB2YXIgY3VzdG9tUmVzdWx0O1xuXG4gIGlmIChjdXN0b20gJiYgKGN1c3RvbVJlc3VsdCA9IGN1c3RvbShub2RlKSkgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBjdXN0b21SZXN1bHQ7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJ3b3JkXCIgfHwgdHlwZSA9PT0gXCJzcGFjZVwiKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICBidWYgPSBub2RlLnF1b3RlIHx8IFwiXCI7XG4gICAgcmV0dXJuIGJ1ZiArIHZhbHVlICsgKG5vZGUudW5jbG9zZWQgPyBcIlwiIDogYnVmKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSBcImNvbW1lbnRcIikge1xuICAgIHJldHVybiBcIi8qXCIgKyB2YWx1ZSArIChub2RlLnVuY2xvc2VkID8gXCJcIiA6IFwiKi9cIik7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJkaXZcIikge1xuICAgIHJldHVybiAobm9kZS5iZWZvcmUgfHwgXCJcIikgKyB2YWx1ZSArIChub2RlLmFmdGVyIHx8IFwiXCIpO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkobm9kZS5ub2RlcykpIHtcbiAgICBidWYgPSBzdHJpbmdpZnkobm9kZS5ub2RlcywgY3VzdG9tKTtcbiAgICBpZiAodHlwZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICByZXR1cm4gYnVmO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgdmFsdWUgK1xuICAgICAgXCIoXCIgK1xuICAgICAgKG5vZGUuYmVmb3JlIHx8IFwiXCIpICtcbiAgICAgIGJ1ZiArXG4gICAgICAobm9kZS5hZnRlciB8fCBcIlwiKSArXG4gICAgICAobm9kZS51bmNsb3NlZCA/IFwiXCIgOiBcIilcIilcbiAgICApO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KG5vZGVzLCBjdXN0b20pIHtcbiAgdmFyIHJlc3VsdCwgaTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShub2RlcykpIHtcbiAgICByZXN1bHQgPSBcIlwiO1xuICAgIGZvciAoaSA9IG5vZGVzLmxlbmd0aCAtIDE7IH5pOyBpIC09IDEpIHtcbiAgICAgIHJlc3VsdCA9IHN0cmluZ2lmeU5vZGUobm9kZXNbaV0sIGN1c3RvbSkgKyByZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgcmV0dXJuIHN0cmluZ2lmeU5vZGUobm9kZXMsIGN1c3RvbSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaW5naWZ5O1xuIiwidmFyIG1pbnVzID0gXCItXCIuY2hhckNvZGVBdCgwKTtcbnZhciBwbHVzID0gXCIrXCIuY2hhckNvZGVBdCgwKTtcbnZhciBkb3QgPSBcIi5cIi5jaGFyQ29kZUF0KDApO1xudmFyIGV4cCA9IFwiZVwiLmNoYXJDb2RlQXQoMCk7XG52YXIgRVhQID0gXCJFXCIuY2hhckNvZGVBdCgwKTtcblxuLy8gQ2hlY2sgaWYgdGhyZWUgY29kZSBwb2ludHMgd291bGQgc3RhcnQgYSBudW1iZXJcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3Mtc3ludGF4LTMvI3N0YXJ0cy13aXRoLWEtbnVtYmVyXG5mdW5jdGlvbiBsaWtlTnVtYmVyKHZhbHVlKSB7XG4gIHZhciBjb2RlID0gdmFsdWUuY2hhckNvZGVBdCgwKTtcbiAgdmFyIG5leHRDb2RlO1xuXG4gIGlmIChjb2RlID09PSBwbHVzIHx8IGNvZGUgPT09IG1pbnVzKSB7XG4gICAgbmV4dENvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KDEpO1xuXG4gICAgaWYgKG5leHRDb2RlID49IDQ4ICYmIG5leHRDb2RlIDw9IDU3KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgbmV4dE5leHRDb2RlID0gdmFsdWUuY2hhckNvZGVBdCgyKTtcblxuICAgIGlmIChuZXh0Q29kZSA9PT0gZG90ICYmIG5leHROZXh0Q29kZSA+PSA0OCAmJiBuZXh0TmV4dENvZGUgPD0gNTcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChjb2RlID09PSBkb3QpIHtcbiAgICBuZXh0Q29kZSA9IHZhbHVlLmNoYXJDb2RlQXQoMSk7XG5cbiAgICBpZiAobmV4dENvZGUgPj0gNDggJiYgbmV4dENvZGUgPD0gNTcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChjb2RlID49IDQ4ICYmIGNvZGUgPD0gNTcpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLy8gQ29uc3VtZSBhIG51bWJlclxuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1zeW50YXgtMy8jY29uc3VtZS1udW1iZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIHBvcyA9IDA7XG4gIHZhciBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gIHZhciBjb2RlO1xuICB2YXIgbmV4dENvZGU7XG4gIHZhciBuZXh0TmV4dENvZGU7XG5cbiAgaWYgKGxlbmd0aCA9PT0gMCB8fCAhbGlrZU51bWJlcih2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChwb3MpO1xuXG4gIGlmIChjb2RlID09PSBwbHVzIHx8IGNvZGUgPT09IG1pbnVzKSB7XG4gICAgcG9zKys7XG4gIH1cblxuICB3aGlsZSAocG9zIDwgbGVuZ3RoKSB7XG4gICAgY29kZSA9IHZhbHVlLmNoYXJDb2RlQXQocG9zKTtcblxuICAgIGlmIChjb2RlIDwgNDggfHwgY29kZSA+IDU3KSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBwb3MgKz0gMTtcbiAgfVxuXG4gIGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyk7XG4gIG5leHRDb2RlID0gdmFsdWUuY2hhckNvZGVBdChwb3MgKyAxKTtcblxuICBpZiAoY29kZSA9PT0gZG90ICYmIG5leHRDb2RlID49IDQ4ICYmIG5leHRDb2RlIDw9IDU3KSB7XG4gICAgcG9zICs9IDI7XG5cbiAgICB3aGlsZSAocG9zIDwgbGVuZ3RoKSB7XG4gICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChwb3MpO1xuXG4gICAgICBpZiAoY29kZSA8IDQ4IHx8IGNvZGUgPiA1Nykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcG9zICs9IDE7XG4gICAgfVxuICB9XG5cbiAgY29kZSA9IHZhbHVlLmNoYXJDb2RlQXQocG9zKTtcbiAgbmV4dENvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyArIDEpO1xuICBuZXh0TmV4dENvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KHBvcyArIDIpO1xuXG4gIGlmIChcbiAgICAoY29kZSA9PT0gZXhwIHx8IGNvZGUgPT09IEVYUCkgJiZcbiAgICAoKG5leHRDb2RlID49IDQ4ICYmIG5leHRDb2RlIDw9IDU3KSB8fFxuICAgICAgKChuZXh0Q29kZSA9PT0gcGx1cyB8fCBuZXh0Q29kZSA9PT0gbWludXMpICYmXG4gICAgICAgIG5leHROZXh0Q29kZSA+PSA0OCAmJlxuICAgICAgICBuZXh0TmV4dENvZGUgPD0gNTcpKVxuICApIHtcbiAgICBwb3MgKz0gbmV4dENvZGUgPT09IHBsdXMgfHwgbmV4dENvZGUgPT09IG1pbnVzID8gMyA6IDI7XG5cbiAgICB3aGlsZSAocG9zIDwgbGVuZ3RoKSB7XG4gICAgICBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChwb3MpO1xuXG4gICAgICBpZiAoY29kZSA8IDQ4IHx8IGNvZGUgPiA1Nykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcG9zICs9IDE7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBudW1iZXI6IHZhbHVlLnNsaWNlKDAsIHBvcyksXG4gICAgdW5pdDogdmFsdWUuc2xpY2UocG9zKVxuICB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gd2Fsayhub2RlcywgY2IsIGJ1YmJsZSkge1xuICB2YXIgaSwgbWF4LCBub2RlLCByZXN1bHQ7XG5cbiAgZm9yIChpID0gMCwgbWF4ID0gbm9kZXMubGVuZ3RoOyBpIDwgbWF4OyBpICs9IDEpIHtcbiAgICBub2RlID0gbm9kZXNbaV07XG4gICAgaWYgKCFidWJibGUpIHtcbiAgICAgIHJlc3VsdCA9IGNiKG5vZGUsIGksIG5vZGVzKTtcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICByZXN1bHQgIT09IGZhbHNlICYmXG4gICAgICBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgQXJyYXkuaXNBcnJheShub2RlLm5vZGVzKVxuICAgICkge1xuICAgICAgd2Fsayhub2RlLm5vZGVzLCBjYiwgYnViYmxlKTtcbiAgICB9XG5cbiAgICBpZiAoYnViYmxlKSB7XG4gICAgICBjYihub2RlLCBpLCBub2Rlcyk7XG4gICAgfVxuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnXG5cbmxldCBDb250YWluZXIgPSByZXF1aXJlKCcuL2NvbnRhaW5lcicpXG5cbmNsYXNzIEF0UnVsZSBleHRlbmRzIENvbnRhaW5lciB7XG4gIGNvbnN0cnVjdG9yKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ2F0cnVsZSdcbiAgfVxuXG4gIGFwcGVuZCguLi5jaGlsZHJlbikge1xuICAgIGlmICghdGhpcy5wcm94eU9mLm5vZGVzKSB0aGlzLm5vZGVzID0gW11cbiAgICByZXR1cm4gc3VwZXIuYXBwZW5kKC4uLmNoaWxkcmVuKVxuICB9XG5cbiAgcHJlcGVuZCguLi5jaGlsZHJlbikge1xuICAgIGlmICghdGhpcy5wcm94eU9mLm5vZGVzKSB0aGlzLm5vZGVzID0gW11cbiAgICByZXR1cm4gc3VwZXIucHJlcGVuZCguLi5jaGlsZHJlbilcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEF0UnVsZVxuQXRSdWxlLmRlZmF1bHQgPSBBdFJ1bGVcblxuQ29udGFpbmVyLnJlZ2lzdGVyQXRSdWxlKEF0UnVsZSlcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgTm9kZSA9IHJlcXVpcmUoJy4vbm9kZScpXG5cbmNsYXNzIENvbW1lbnQgZXh0ZW5kcyBOb2RlIHtcbiAgY29uc3RydWN0b3IoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAnY29tbWVudCdcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbW1lbnRcbkNvbW1lbnQuZGVmYXVsdCA9IENvbW1lbnRcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgeyBpc0NsZWFuLCBteSB9ID0gcmVxdWlyZSgnLi9zeW1ib2xzJylcbmxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4vZGVjbGFyYXRpb24nKVxubGV0IENvbW1lbnQgPSByZXF1aXJlKCcuL2NvbW1lbnQnKVxubGV0IE5vZGUgPSByZXF1aXJlKCcuL25vZGUnKVxuXG5sZXQgcGFyc2UsIFJ1bGUsIEF0UnVsZSwgUm9vdFxuXG5mdW5jdGlvbiBjbGVhblNvdXJjZShub2Rlcykge1xuICByZXR1cm4gbm9kZXMubWFwKGkgPT4ge1xuICAgIGlmIChpLm5vZGVzKSBpLm5vZGVzID0gY2xlYW5Tb3VyY2UoaS5ub2RlcylcbiAgICBkZWxldGUgaS5zb3VyY2VcbiAgICByZXR1cm4gaVxuICB9KVxufVxuXG5mdW5jdGlvbiBtYXJrRGlydHlVcChub2RlKSB7XG4gIG5vZGVbaXNDbGVhbl0gPSBmYWxzZVxuICBpZiAobm9kZS5wcm94eU9mLm5vZGVzKSB7XG4gICAgZm9yIChsZXQgaSBvZiBub2RlLnByb3h5T2Yubm9kZXMpIHtcbiAgICAgIG1hcmtEaXJ0eVVwKGkpXG4gICAgfVxuICB9XG59XG5cbmNsYXNzIENvbnRhaW5lciBleHRlbmRzIE5vZGUge1xuICBwdXNoKGNoaWxkKSB7XG4gICAgY2hpbGQucGFyZW50ID0gdGhpc1xuICAgIHRoaXMucHJveHlPZi5ub2Rlcy5wdXNoKGNoaWxkKVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBlYWNoKGNhbGxiYWNrKSB7XG4gICAgaWYgKCF0aGlzLnByb3h5T2Yubm9kZXMpIHJldHVybiB1bmRlZmluZWRcbiAgICBsZXQgaXRlcmF0b3IgPSB0aGlzLmdldEl0ZXJhdG9yKClcblxuICAgIGxldCBpbmRleCwgcmVzdWx0XG4gICAgd2hpbGUgKHRoaXMuaW5kZXhlc1tpdGVyYXRvcl0gPCB0aGlzLnByb3h5T2Yubm9kZXMubGVuZ3RoKSB7XG4gICAgICBpbmRleCA9IHRoaXMuaW5kZXhlc1tpdGVyYXRvcl1cbiAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKHRoaXMucHJveHlPZi5ub2Rlc1tpbmRleF0sIGluZGV4KVxuICAgICAgaWYgKHJlc3VsdCA9PT0gZmFsc2UpIGJyZWFrXG5cbiAgICAgIHRoaXMuaW5kZXhlc1tpdGVyYXRvcl0gKz0gMVxuICAgIH1cblxuICAgIGRlbGV0ZSB0aGlzLmluZGV4ZXNbaXRlcmF0b3JdXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgd2FsayhjYWxsYmFjaykge1xuICAgIHJldHVybiB0aGlzLmVhY2goKGNoaWxkLCBpKSA9PiB7XG4gICAgICBsZXQgcmVzdWx0XG4gICAgICB0cnkge1xuICAgICAgICByZXN1bHQgPSBjYWxsYmFjayhjaGlsZCwgaSlcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgY2hpbGQuYWRkVG9FcnJvcihlKVxuICAgICAgfVxuICAgICAgaWYgKHJlc3VsdCAhPT0gZmFsc2UgJiYgY2hpbGQud2Fsaykge1xuICAgICAgICByZXN1bHQgPSBjaGlsZC53YWxrKGNhbGxiYWNrKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfSlcbiAgfVxuXG4gIHdhbGtEZWNscyhwcm9wLCBjYWxsYmFjaykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gcHJvcFxuICAgICAgcmV0dXJuIHRoaXMud2FsaygoY2hpbGQsIGkpID0+IHtcbiAgICAgICAgaWYgKGNoaWxkLnR5cGUgPT09ICdkZWNsJykge1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhjaGlsZCwgaSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gICAgaWYgKHByb3AgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgIHJldHVybiB0aGlzLndhbGsoKGNoaWxkLCBpKSA9PiB7XG4gICAgICAgIGlmIChjaGlsZC50eXBlID09PSAnZGVjbCcgJiYgcHJvcC50ZXN0KGNoaWxkLnByb3ApKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGNoaWxkLCBpKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy53YWxrKChjaGlsZCwgaSkgPT4ge1xuICAgICAgaWYgKGNoaWxkLnR5cGUgPT09ICdkZWNsJyAmJiBjaGlsZC5wcm9wID09PSBwcm9wKSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhjaGlsZCwgaSlcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgd2Fsa1J1bGVzKHNlbGVjdG9yLCBjYWxsYmFjaykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gc2VsZWN0b3JcblxuICAgICAgcmV0dXJuIHRoaXMud2FsaygoY2hpbGQsIGkpID0+IHtcbiAgICAgICAgaWYgKGNoaWxkLnR5cGUgPT09ICdydWxlJykge1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhjaGlsZCwgaSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gICAgaWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICByZXR1cm4gdGhpcy53YWxrKChjaGlsZCwgaSkgPT4ge1xuICAgICAgICBpZiAoY2hpbGQudHlwZSA9PT0gJ3J1bGUnICYmIHNlbGVjdG9yLnRlc3QoY2hpbGQuc2VsZWN0b3IpKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGNoaWxkLCBpKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy53YWxrKChjaGlsZCwgaSkgPT4ge1xuICAgICAgaWYgKGNoaWxkLnR5cGUgPT09ICdydWxlJyAmJiBjaGlsZC5zZWxlY3RvciA9PT0gc2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGNoaWxkLCBpKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICB3YWxrQXRSdWxlcyhuYW1lLCBjYWxsYmFjaykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gbmFtZVxuICAgICAgcmV0dXJuIHRoaXMud2FsaygoY2hpbGQsIGkpID0+IHtcbiAgICAgICAgaWYgKGNoaWxkLnR5cGUgPT09ICdhdHJ1bGUnKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGNoaWxkLCBpKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgICBpZiAobmFtZSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgcmV0dXJuIHRoaXMud2FsaygoY2hpbGQsIGkpID0+IHtcbiAgICAgICAgaWYgKGNoaWxkLnR5cGUgPT09ICdhdHJ1bGUnICYmIG5hbWUudGVzdChjaGlsZC5uYW1lKSkge1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhjaGlsZCwgaSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMud2FsaygoY2hpbGQsIGkpID0+IHtcbiAgICAgIGlmIChjaGlsZC50eXBlID09PSAnYXRydWxlJyAmJiBjaGlsZC5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhjaGlsZCwgaSlcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgd2Fsa0NvbW1lbnRzKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMud2FsaygoY2hpbGQsIGkpID0+IHtcbiAgICAgIGlmIChjaGlsZC50eXBlID09PSAnY29tbWVudCcpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGNoaWxkLCBpKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBhcHBlbmQoLi4uY2hpbGRyZW4pIHtcbiAgICBmb3IgKGxldCBjaGlsZCBvZiBjaGlsZHJlbikge1xuICAgICAgbGV0IG5vZGVzID0gdGhpcy5ub3JtYWxpemUoY2hpbGQsIHRoaXMubGFzdClcbiAgICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHRoaXMucHJveHlPZi5ub2Rlcy5wdXNoKG5vZGUpXG4gICAgfVxuXG4gICAgdGhpcy5tYXJrRGlydHkoKVxuXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIHByZXBlbmQoLi4uY2hpbGRyZW4pIHtcbiAgICBjaGlsZHJlbiA9IGNoaWxkcmVuLnJldmVyc2UoKVxuICAgIGZvciAobGV0IGNoaWxkIG9mIGNoaWxkcmVuKSB7XG4gICAgICBsZXQgbm9kZXMgPSB0aGlzLm5vcm1hbGl6ZShjaGlsZCwgdGhpcy5maXJzdCwgJ3ByZXBlbmQnKS5yZXZlcnNlKClcbiAgICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHRoaXMucHJveHlPZi5ub2Rlcy51bnNoaWZ0KG5vZGUpXG4gICAgICBmb3IgKGxldCBpZCBpbiB0aGlzLmluZGV4ZXMpIHtcbiAgICAgICAgdGhpcy5pbmRleGVzW2lkXSA9IHRoaXMuaW5kZXhlc1tpZF0gKyBub2Rlcy5sZW5ndGhcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm1hcmtEaXJ0eSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgY2xlYW5SYXdzKGtlZXBCZXR3ZWVuKSB7XG4gICAgc3VwZXIuY2xlYW5SYXdzKGtlZXBCZXR3ZWVuKVxuICAgIGlmICh0aGlzLm5vZGVzKSB7XG4gICAgICBmb3IgKGxldCBub2RlIG9mIHRoaXMubm9kZXMpIG5vZGUuY2xlYW5SYXdzKGtlZXBCZXR3ZWVuKVxuICAgIH1cbiAgfVxuXG4gIGluc2VydEJlZm9yZShleGlzdCwgYWRkKSB7XG4gICAgbGV0IGV4aXN0SW5kZXggPSB0aGlzLmluZGV4KGV4aXN0KVxuICAgIGxldCB0eXBlID0gZXhpc3RJbmRleCA9PT0gMCA/ICdwcmVwZW5kJyA6IGZhbHNlXG4gICAgbGV0IG5vZGVzID0gdGhpcy5ub3JtYWxpemUoYWRkLCB0aGlzLnByb3h5T2Yubm9kZXNbZXhpc3RJbmRleF0sIHR5cGUpLnJldmVyc2UoKVxuICAgIGV4aXN0SW5kZXggPSB0aGlzLmluZGV4KGV4aXN0KVxuICAgIGZvciAobGV0IG5vZGUgb2Ygbm9kZXMpIHRoaXMucHJveHlPZi5ub2Rlcy5zcGxpY2UoZXhpc3RJbmRleCwgMCwgbm9kZSlcblxuICAgIGxldCBpbmRleFxuICAgIGZvciAobGV0IGlkIGluIHRoaXMuaW5kZXhlcykge1xuICAgICAgaW5kZXggPSB0aGlzLmluZGV4ZXNbaWRdXG4gICAgICBpZiAoZXhpc3RJbmRleCA8PSBpbmRleCkge1xuICAgICAgICB0aGlzLmluZGV4ZXNbaWRdID0gaW5kZXggKyBub2Rlcy5sZW5ndGhcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm1hcmtEaXJ0eSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgaW5zZXJ0QWZ0ZXIoZXhpc3QsIGFkZCkge1xuICAgIGxldCBleGlzdEluZGV4ID0gdGhpcy5pbmRleChleGlzdClcbiAgICBsZXQgbm9kZXMgPSB0aGlzLm5vcm1hbGl6ZShhZGQsIHRoaXMucHJveHlPZi5ub2Rlc1tleGlzdEluZGV4XSkucmV2ZXJzZSgpXG4gICAgZXhpc3RJbmRleCA9IHRoaXMuaW5kZXgoZXhpc3QpXG4gICAgZm9yIChsZXQgbm9kZSBvZiBub2RlcykgdGhpcy5wcm94eU9mLm5vZGVzLnNwbGljZShleGlzdEluZGV4ICsgMSwgMCwgbm9kZSlcblxuICAgIGxldCBpbmRleFxuICAgIGZvciAobGV0IGlkIGluIHRoaXMuaW5kZXhlcykge1xuICAgICAgaW5kZXggPSB0aGlzLmluZGV4ZXNbaWRdXG4gICAgICBpZiAoZXhpc3RJbmRleCA8IGluZGV4KSB7XG4gICAgICAgIHRoaXMuaW5kZXhlc1tpZF0gPSBpbmRleCArIG5vZGVzLmxlbmd0aFxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubWFya0RpcnR5KClcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICByZW1vdmVDaGlsZChjaGlsZCkge1xuICAgIGNoaWxkID0gdGhpcy5pbmRleChjaGlsZClcbiAgICB0aGlzLnByb3h5T2Yubm9kZXNbY2hpbGRdLnBhcmVudCA9IHVuZGVmaW5lZFxuICAgIHRoaXMucHJveHlPZi5ub2Rlcy5zcGxpY2UoY2hpbGQsIDEpXG5cbiAgICBsZXQgaW5kZXhcbiAgICBmb3IgKGxldCBpZCBpbiB0aGlzLmluZGV4ZXMpIHtcbiAgICAgIGluZGV4ID0gdGhpcy5pbmRleGVzW2lkXVxuICAgICAgaWYgKGluZGV4ID49IGNoaWxkKSB7XG4gICAgICAgIHRoaXMuaW5kZXhlc1tpZF0gPSBpbmRleCAtIDFcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm1hcmtEaXJ0eSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgcmVtb3ZlQWxsKCkge1xuICAgIGZvciAobGV0IG5vZGUgb2YgdGhpcy5wcm94eU9mLm5vZGVzKSBub2RlLnBhcmVudCA9IHVuZGVmaW5lZFxuICAgIHRoaXMucHJveHlPZi5ub2RlcyA9IFtdXG5cbiAgICB0aGlzLm1hcmtEaXJ0eSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgcmVwbGFjZVZhbHVlcyhwYXR0ZXJuLCBvcHRzLCBjYWxsYmFjaykge1xuICAgIGlmICghY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrID0gb3B0c1xuICAgICAgb3B0cyA9IHt9XG4gICAgfVxuXG4gICAgdGhpcy53YWxrRGVjbHMoZGVjbCA9PiB7XG4gICAgICBpZiAob3B0cy5wcm9wcyAmJiAhb3B0cy5wcm9wcy5pbmNsdWRlcyhkZWNsLnByb3ApKSByZXR1cm5cbiAgICAgIGlmIChvcHRzLmZhc3QgJiYgIWRlY2wudmFsdWUuaW5jbHVkZXMob3B0cy5mYXN0KSkgcmV0dXJuXG5cbiAgICAgIGRlY2wudmFsdWUgPSBkZWNsLnZhbHVlLnJlcGxhY2UocGF0dGVybiwgY2FsbGJhY2spXG4gICAgfSlcblxuICAgIHRoaXMubWFya0RpcnR5KClcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBldmVyeShjb25kaXRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5ub2Rlcy5ldmVyeShjb25kaXRpb24pXG4gIH1cblxuICBzb21lKGNvbmRpdGlvbikge1xuICAgIHJldHVybiB0aGlzLm5vZGVzLnNvbWUoY29uZGl0aW9uKVxuICB9XG5cbiAgaW5kZXgoY2hpbGQpIHtcbiAgICBpZiAodHlwZW9mIGNoaWxkID09PSAnbnVtYmVyJykgcmV0dXJuIGNoaWxkXG4gICAgaWYgKGNoaWxkLnByb3h5T2YpIGNoaWxkID0gY2hpbGQucHJveHlPZlxuICAgIHJldHVybiB0aGlzLnByb3h5T2Yubm9kZXMuaW5kZXhPZihjaGlsZClcbiAgfVxuXG4gIGdldCBmaXJzdCgpIHtcbiAgICBpZiAoIXRoaXMucHJveHlPZi5ub2RlcykgcmV0dXJuIHVuZGVmaW5lZFxuICAgIHJldHVybiB0aGlzLnByb3h5T2Yubm9kZXNbMF1cbiAgfVxuXG4gIGdldCBsYXN0KCkge1xuICAgIGlmICghdGhpcy5wcm94eU9mLm5vZGVzKSByZXR1cm4gdW5kZWZpbmVkXG4gICAgcmV0dXJuIHRoaXMucHJveHlPZi5ub2Rlc1t0aGlzLnByb3h5T2Yubm9kZXMubGVuZ3RoIC0gMV1cbiAgfVxuXG4gIG5vcm1hbGl6ZShub2Rlcywgc2FtcGxlKSB7XG4gICAgaWYgKHR5cGVvZiBub2RlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5vZGVzID0gY2xlYW5Tb3VyY2UocGFyc2Uobm9kZXMpLm5vZGVzKVxuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShub2RlcykpIHtcbiAgICAgIG5vZGVzID0gbm9kZXMuc2xpY2UoMClcbiAgICAgIGZvciAobGV0IGkgb2Ygbm9kZXMpIHtcbiAgICAgICAgaWYgKGkucGFyZW50KSBpLnBhcmVudC5yZW1vdmVDaGlsZChpLCAnaWdub3JlJylcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5vZGVzLnR5cGUgPT09ICdyb290JyAmJiB0aGlzLnR5cGUgIT09ICdkb2N1bWVudCcpIHtcbiAgICAgIG5vZGVzID0gbm9kZXMubm9kZXMuc2xpY2UoMClcbiAgICAgIGZvciAobGV0IGkgb2Ygbm9kZXMpIHtcbiAgICAgICAgaWYgKGkucGFyZW50KSBpLnBhcmVudC5yZW1vdmVDaGlsZChpLCAnaWdub3JlJylcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5vZGVzLnR5cGUpIHtcbiAgICAgIG5vZGVzID0gW25vZGVzXVxuICAgIH0gZWxzZSBpZiAobm9kZXMucHJvcCkge1xuICAgICAgaWYgKHR5cGVvZiBub2Rlcy52YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdWYWx1ZSBmaWVsZCBpcyBtaXNzZWQgaW4gbm9kZSBjcmVhdGlvbicpXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBub2Rlcy52YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgbm9kZXMudmFsdWUgPSBTdHJpbmcobm9kZXMudmFsdWUpXG4gICAgICB9XG4gICAgICBub2RlcyA9IFtuZXcgRGVjbGFyYXRpb24obm9kZXMpXVxuICAgIH0gZWxzZSBpZiAobm9kZXMuc2VsZWN0b3IpIHtcbiAgICAgIG5vZGVzID0gW25ldyBSdWxlKG5vZGVzKV1cbiAgICB9IGVsc2UgaWYgKG5vZGVzLm5hbWUpIHtcbiAgICAgIG5vZGVzID0gW25ldyBBdFJ1bGUobm9kZXMpXVxuICAgIH0gZWxzZSBpZiAobm9kZXMudGV4dCkge1xuICAgICAgbm9kZXMgPSBbbmV3IENvbW1lbnQobm9kZXMpXVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gbm9kZSB0eXBlIGluIG5vZGUgY3JlYXRpb24nKVxuICAgIH1cblxuICAgIGxldCBwcm9jZXNzZWQgPSBub2Rlcy5tYXAoaSA9PiB7XG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgaWYgKCFpW215XSkgQ29udGFpbmVyLnJlYnVpbGQoaSlcbiAgICAgIGkgPSBpLnByb3h5T2ZcbiAgICAgIGlmIChpLnBhcmVudCkgaS5wYXJlbnQucmVtb3ZlQ2hpbGQoaSlcbiAgICAgIGlmIChpW2lzQ2xlYW5dKSBtYXJrRGlydHlVcChpKVxuICAgICAgaWYgKHR5cGVvZiBpLnJhd3MuYmVmb3JlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAoc2FtcGxlICYmIHR5cGVvZiBzYW1wbGUucmF3cy5iZWZvcmUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgaS5yYXdzLmJlZm9yZSA9IHNhbXBsZS5yYXdzLmJlZm9yZS5yZXBsYWNlKC9cXFMvZywgJycpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGkucGFyZW50ID0gdGhpcy5wcm94eU9mXG4gICAgICByZXR1cm4gaVxuICAgIH0pXG5cbiAgICByZXR1cm4gcHJvY2Vzc2VkXG4gIH1cblxuICBnZXRQcm94eVByb2Nlc3NvcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2V0KG5vZGUsIHByb3AsIHZhbHVlKSB7XG4gICAgICAgIGlmIChub2RlW3Byb3BdID09PSB2YWx1ZSkgcmV0dXJuIHRydWVcbiAgICAgICAgbm9kZVtwcm9wXSA9IHZhbHVlXG4gICAgICAgIGlmIChwcm9wID09PSAnbmFtZScgfHwgcHJvcCA9PT0gJ3BhcmFtcycgfHwgcHJvcCA9PT0gJ3NlbGVjdG9yJykge1xuICAgICAgICAgIG5vZGUubWFya0RpcnR5KClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfSxcblxuICAgICAgZ2V0KG5vZGUsIHByb3ApIHtcbiAgICAgICAgaWYgKHByb3AgPT09ICdwcm94eU9mJykge1xuICAgICAgICAgIHJldHVybiBub2RlXG4gICAgICAgIH0gZWxzZSBpZiAoIW5vZGVbcHJvcF0pIHtcbiAgICAgICAgICByZXR1cm4gbm9kZVtwcm9wXVxuICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgIHByb3AgPT09ICdlYWNoJyB8fFxuICAgICAgICAgICh0eXBlb2YgcHJvcCA9PT0gJ3N0cmluZycgJiYgcHJvcC5zdGFydHNXaXRoKCd3YWxrJykpXG4gICAgICAgICkge1xuICAgICAgICAgIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5vZGVbcHJvcF0oXG4gICAgICAgICAgICAgIC4uLmFyZ3MubWFwKGkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIChjaGlsZCwgaW5kZXgpID0+IGkoY2hpbGQudG9Qcm94eSgpLCBpbmRleClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdldmVyeScgfHwgcHJvcCA9PT0gJ3NvbWUnKSB7XG4gICAgICAgICAgcmV0dXJuIGNiID0+IHtcbiAgICAgICAgICAgIHJldHVybiBub2RlW3Byb3BdKChjaGlsZCwgLi4ub3RoZXIpID0+XG4gICAgICAgICAgICAgIGNiKGNoaWxkLnRvUHJveHkoKSwgLi4ub3RoZXIpXG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdyb290Jykge1xuICAgICAgICAgIHJldHVybiAoKSA9PiBub2RlLnJvb3QoKS50b1Byb3h5KClcbiAgICAgICAgfSBlbHNlIGlmIChwcm9wID09PSAnbm9kZXMnKSB7XG4gICAgICAgICAgcmV0dXJuIG5vZGUubm9kZXMubWFwKGkgPT4gaS50b1Byb3h5KCkpXG4gICAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gJ2ZpcnN0JyB8fCBwcm9wID09PSAnbGFzdCcpIHtcbiAgICAgICAgICByZXR1cm4gbm9kZVtwcm9wXS50b1Byb3h5KClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gbm9kZVtwcm9wXVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0SXRlcmF0b3IoKSB7XG4gICAgaWYgKCF0aGlzLmxhc3RFYWNoKSB0aGlzLmxhc3RFYWNoID0gMFxuICAgIGlmICghdGhpcy5pbmRleGVzKSB0aGlzLmluZGV4ZXMgPSB7fVxuXG4gICAgdGhpcy5sYXN0RWFjaCArPSAxXG4gICAgbGV0IGl0ZXJhdG9yID0gdGhpcy5sYXN0RWFjaFxuICAgIHRoaXMuaW5kZXhlc1tpdGVyYXRvcl0gPSAwXG5cbiAgICByZXR1cm4gaXRlcmF0b3JcbiAgfVxufVxuXG5Db250YWluZXIucmVnaXN0ZXJQYXJzZSA9IGRlcGVuZGFudCA9PiB7XG4gIHBhcnNlID0gZGVwZW5kYW50XG59XG5cbkNvbnRhaW5lci5yZWdpc3RlclJ1bGUgPSBkZXBlbmRhbnQgPT4ge1xuICBSdWxlID0gZGVwZW5kYW50XG59XG5cbkNvbnRhaW5lci5yZWdpc3RlckF0UnVsZSA9IGRlcGVuZGFudCA9PiB7XG4gIEF0UnVsZSA9IGRlcGVuZGFudFxufVxuXG5Db250YWluZXIucmVnaXN0ZXJSb290ID0gZGVwZW5kYW50ID0+IHtcbiAgUm9vdCA9IGRlcGVuZGFudFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbnRhaW5lclxuQ29udGFpbmVyLmRlZmF1bHQgPSBDb250YWluZXJcblxuLyogYzggaWdub3JlIHN0YXJ0ICovXG5Db250YWluZXIucmVidWlsZCA9IG5vZGUgPT4ge1xuICBpZiAobm9kZS50eXBlID09PSAnYXRydWxlJykge1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihub2RlLCBBdFJ1bGUucHJvdG90eXBlKVxuICB9IGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ3J1bGUnKSB7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKG5vZGUsIFJ1bGUucHJvdG90eXBlKVxuICB9IGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ2RlY2wnKSB7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKG5vZGUsIERlY2xhcmF0aW9uLnByb3RvdHlwZSlcbiAgfSBlbHNlIGlmIChub2RlLnR5cGUgPT09ICdjb21tZW50Jykge1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihub2RlLCBDb21tZW50LnByb3RvdHlwZSlcbiAgfSBlbHNlIGlmIChub2RlLnR5cGUgPT09ICdyb290Jykge1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihub2RlLCBSb290LnByb3RvdHlwZSlcbiAgfVxuXG4gIG5vZGVbbXldID0gdHJ1ZVxuXG4gIGlmIChub2RlLm5vZGVzKSB7XG4gICAgbm9kZS5ub2Rlcy5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgIENvbnRhaW5lci5yZWJ1aWxkKGNoaWxkKVxuICAgIH0pXG4gIH1cbn1cbi8qIGM4IGlnbm9yZSBzdG9wICovXG4iLCIndXNlIHN0cmljdCdcblxubGV0IHBpY28gPSByZXF1aXJlKCdwaWNvY29sb3JzJylcblxubGV0IHRlcm1pbmFsSGlnaGxpZ2h0ID0gcmVxdWlyZSgnLi90ZXJtaW5hbC1oaWdobGlnaHQnKVxuXG5jbGFzcyBDc3NTeW50YXhFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgbGluZSwgY29sdW1uLCBzb3VyY2UsIGZpbGUsIHBsdWdpbikge1xuICAgIHN1cGVyKG1lc3NhZ2UpXG4gICAgdGhpcy5uYW1lID0gJ0Nzc1N5bnRheEVycm9yJ1xuICAgIHRoaXMucmVhc29uID0gbWVzc2FnZVxuXG4gICAgaWYgKGZpbGUpIHtcbiAgICAgIHRoaXMuZmlsZSA9IGZpbGVcbiAgICB9XG4gICAgaWYgKHNvdXJjZSkge1xuICAgICAgdGhpcy5zb3VyY2UgPSBzb3VyY2VcbiAgICB9XG4gICAgaWYgKHBsdWdpbikge1xuICAgICAgdGhpcy5wbHVnaW4gPSBwbHVnaW5cbiAgICB9XG4gICAgaWYgKHR5cGVvZiBsaW5lICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29sdW1uICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgaWYgKHR5cGVvZiBsaW5lID09PSAnbnVtYmVyJykge1xuICAgICAgICB0aGlzLmxpbmUgPSBsaW5lXG4gICAgICAgIHRoaXMuY29sdW1uID0gY29sdW1uXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmxpbmUgPSBsaW5lLmxpbmVcbiAgICAgICAgdGhpcy5jb2x1bW4gPSBsaW5lLmNvbHVtblxuICAgICAgICB0aGlzLmVuZExpbmUgPSBjb2x1bW4ubGluZVxuICAgICAgICB0aGlzLmVuZENvbHVtbiA9IGNvbHVtbi5jb2x1bW5cbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnNldE1lc3NhZ2UoKVxuXG4gICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBDc3NTeW50YXhFcnJvcilcbiAgICB9XG4gIH1cblxuICBzZXRNZXNzYWdlKCkge1xuICAgIHRoaXMubWVzc2FnZSA9IHRoaXMucGx1Z2luID8gdGhpcy5wbHVnaW4gKyAnOiAnIDogJydcbiAgICB0aGlzLm1lc3NhZ2UgKz0gdGhpcy5maWxlID8gdGhpcy5maWxlIDogJzxjc3MgaW5wdXQ+J1xuICAgIGlmICh0eXBlb2YgdGhpcy5saW5lICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5tZXNzYWdlICs9ICc6JyArIHRoaXMubGluZSArICc6JyArIHRoaXMuY29sdW1uXG4gICAgfVxuICAgIHRoaXMubWVzc2FnZSArPSAnOiAnICsgdGhpcy5yZWFzb25cbiAgfVxuXG4gIHNob3dTb3VyY2VDb2RlKGNvbG9yKSB7XG4gICAgaWYgKCF0aGlzLnNvdXJjZSkgcmV0dXJuICcnXG5cbiAgICBsZXQgY3NzID0gdGhpcy5zb3VyY2VcbiAgICBpZiAoY29sb3IgPT0gbnVsbCkgY29sb3IgPSBwaWNvLmlzQ29sb3JTdXBwb3J0ZWRcbiAgICBpZiAodGVybWluYWxIaWdobGlnaHQpIHtcbiAgICAgIGlmIChjb2xvcikgY3NzID0gdGVybWluYWxIaWdobGlnaHQoY3NzKVxuICAgIH1cblxuICAgIGxldCBsaW5lcyA9IGNzcy5zcGxpdCgvXFxyP1xcbi8pXG4gICAgbGV0IHN0YXJ0ID0gTWF0aC5tYXgodGhpcy5saW5lIC0gMywgMClcbiAgICBsZXQgZW5kID0gTWF0aC5taW4odGhpcy5saW5lICsgMiwgbGluZXMubGVuZ3RoKVxuXG4gICAgbGV0IG1heFdpZHRoID0gU3RyaW5nKGVuZCkubGVuZ3RoXG5cbiAgICBsZXQgbWFyaywgYXNpZGVcbiAgICBpZiAoY29sb3IpIHtcbiAgICAgIGxldCB7IGJvbGQsIHJlZCwgZ3JheSB9ID0gcGljby5jcmVhdGVDb2xvcnModHJ1ZSlcbiAgICAgIG1hcmsgPSB0ZXh0ID0+IGJvbGQocmVkKHRleHQpKVxuICAgICAgYXNpZGUgPSB0ZXh0ID0+IGdyYXkodGV4dClcbiAgICB9IGVsc2Uge1xuICAgICAgbWFyayA9IGFzaWRlID0gc3RyID0+IHN0clxuICAgIH1cblxuICAgIHJldHVybiBsaW5lc1xuICAgICAgLnNsaWNlKHN0YXJ0LCBlbmQpXG4gICAgICAubWFwKChsaW5lLCBpbmRleCkgPT4ge1xuICAgICAgICBsZXQgbnVtYmVyID0gc3RhcnQgKyAxICsgaW5kZXhcbiAgICAgICAgbGV0IGd1dHRlciA9ICcgJyArICgnICcgKyBudW1iZXIpLnNsaWNlKC1tYXhXaWR0aCkgKyAnIHwgJ1xuICAgICAgICBpZiAobnVtYmVyID09PSB0aGlzLmxpbmUpIHtcbiAgICAgICAgICBsZXQgc3BhY2luZyA9XG4gICAgICAgICAgICBhc2lkZShndXR0ZXIucmVwbGFjZSgvXFxkL2csICcgJykpICtcbiAgICAgICAgICAgIGxpbmUuc2xpY2UoMCwgdGhpcy5jb2x1bW4gLSAxKS5yZXBsYWNlKC9bXlxcdF0vZywgJyAnKVxuICAgICAgICAgIHJldHVybiBtYXJrKCc+JykgKyBhc2lkZShndXR0ZXIpICsgbGluZSArICdcXG4gJyArIHNwYWNpbmcgKyBtYXJrKCdeJylcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJyAnICsgYXNpZGUoZ3V0dGVyKSArIGxpbmVcbiAgICAgIH0pXG4gICAgICAuam9pbignXFxuJylcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIGxldCBjb2RlID0gdGhpcy5zaG93U291cmNlQ29kZSgpXG4gICAgaWYgKGNvZGUpIHtcbiAgICAgIGNvZGUgPSAnXFxuXFxuJyArIGNvZGUgKyAnXFxuJ1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5uYW1lICsgJzogJyArIHRoaXMubWVzc2FnZSArIGNvZGVcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENzc1N5bnRheEVycm9yXG5Dc3NTeW50YXhFcnJvci5kZWZhdWx0ID0gQ3NzU3ludGF4RXJyb3JcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgTm9kZSA9IHJlcXVpcmUoJy4vbm9kZScpXG5cbmNsYXNzIERlY2xhcmF0aW9uIGV4dGVuZHMgTm9kZSB7XG4gIGNvbnN0cnVjdG9yKGRlZmF1bHRzKSB7XG4gICAgaWYgKFxuICAgICAgZGVmYXVsdHMgJiZcbiAgICAgIHR5cGVvZiBkZWZhdWx0cy52YWx1ZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgIHR5cGVvZiBkZWZhdWx0cy52YWx1ZSAhPT0gJ3N0cmluZydcbiAgICApIHtcbiAgICAgIGRlZmF1bHRzID0geyAuLi5kZWZhdWx0cywgdmFsdWU6IFN0cmluZyhkZWZhdWx0cy52YWx1ZSkgfVxuICAgIH1cbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAnZGVjbCdcbiAgfVxuXG4gIGdldCB2YXJpYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wLnN0YXJ0c1dpdGgoJy0tJykgfHwgdGhpcy5wcm9wWzBdID09PSAnJCdcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IERlY2xhcmF0aW9uXG5EZWNsYXJhdGlvbi5kZWZhdWx0ID0gRGVjbGFyYXRpb25cbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgQ29udGFpbmVyID0gcmVxdWlyZSgnLi9jb250YWluZXInKVxuXG5sZXQgTGF6eVJlc3VsdCwgUHJvY2Vzc29yXG5cbmNsYXNzIERvY3VtZW50IGV4dGVuZHMgQ29udGFpbmVyIHtcbiAgY29uc3RydWN0b3IoZGVmYXVsdHMpIHtcbiAgICAvLyB0eXBlIG5lZWRzIHRvIGJlIHBhc3NlZCB0byBzdXBlciwgb3RoZXJ3aXNlIGNoaWxkIHJvb3RzIHdvbid0IGJlIG5vcm1hbGl6ZWQgY29ycmVjdGx5XG4gICAgc3VwZXIoeyB0eXBlOiAnZG9jdW1lbnQnLCAuLi5kZWZhdWx0cyB9KVxuXG4gICAgaWYgKCF0aGlzLm5vZGVzKSB7XG4gICAgICB0aGlzLm5vZGVzID0gW11cbiAgICB9XG4gIH1cblxuICB0b1Jlc3VsdChvcHRzID0ge30pIHtcbiAgICBsZXQgbGF6eSA9IG5ldyBMYXp5UmVzdWx0KG5ldyBQcm9jZXNzb3IoKSwgdGhpcywgb3B0cylcblxuICAgIHJldHVybiBsYXp5LnN0cmluZ2lmeSgpXG4gIH1cbn1cblxuRG9jdW1lbnQucmVnaXN0ZXJMYXp5UmVzdWx0ID0gZGVwZW5kYW50ID0+IHtcbiAgTGF6eVJlc3VsdCA9IGRlcGVuZGFudFxufVxuXG5Eb2N1bWVudC5yZWdpc3RlclByb2Nlc3NvciA9IGRlcGVuZGFudCA9PiB7XG4gIFByb2Nlc3NvciA9IGRlcGVuZGFudFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IERvY3VtZW50XG5Eb2N1bWVudC5kZWZhdWx0ID0gRG9jdW1lbnRcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgRGVjbGFyYXRpb24gPSByZXF1aXJlKCcuL2RlY2xhcmF0aW9uJylcbmxldCBQcmV2aW91c01hcCA9IHJlcXVpcmUoJy4vcHJldmlvdXMtbWFwJylcbmxldCBDb21tZW50ID0gcmVxdWlyZSgnLi9jb21tZW50JylcbmxldCBBdFJ1bGUgPSByZXF1aXJlKCcuL2F0LXJ1bGUnKVxubGV0IElucHV0ID0gcmVxdWlyZSgnLi9pbnB1dCcpXG5sZXQgUm9vdCA9IHJlcXVpcmUoJy4vcm9vdCcpXG5sZXQgUnVsZSA9IHJlcXVpcmUoJy4vcnVsZScpXG5cbmZ1bmN0aW9uIGZyb21KU09OKGpzb24sIGlucHV0cykge1xuICBpZiAoQXJyYXkuaXNBcnJheShqc29uKSkgcmV0dXJuIGpzb24ubWFwKG4gPT4gZnJvbUpTT04obikpXG5cbiAgbGV0IHsgaW5wdXRzOiBvd25JbnB1dHMsIC4uLmRlZmF1bHRzIH0gPSBqc29uXG4gIGlmIChvd25JbnB1dHMpIHtcbiAgICBpbnB1dHMgPSBbXVxuICAgIGZvciAobGV0IGlucHV0IG9mIG93bklucHV0cykge1xuICAgICAgbGV0IGlucHV0SHlkcmF0ZWQgPSB7IC4uLmlucHV0LCBfX3Byb3RvX186IElucHV0LnByb3RvdHlwZSB9XG4gICAgICBpZiAoaW5wdXRIeWRyYXRlZC5tYXApIHtcbiAgICAgICAgaW5wdXRIeWRyYXRlZC5tYXAgPSB7XG4gICAgICAgICAgLi4uaW5wdXRIeWRyYXRlZC5tYXAsXG4gICAgICAgICAgX19wcm90b19fOiBQcmV2aW91c01hcC5wcm90b3R5cGVcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaW5wdXRzLnB1c2goaW5wdXRIeWRyYXRlZClcbiAgICB9XG4gIH1cbiAgaWYgKGRlZmF1bHRzLm5vZGVzKSB7XG4gICAgZGVmYXVsdHMubm9kZXMgPSBqc29uLm5vZGVzLm1hcChuID0+IGZyb21KU09OKG4sIGlucHV0cykpXG4gIH1cbiAgaWYgKGRlZmF1bHRzLnNvdXJjZSkge1xuICAgIGxldCB7IGlucHV0SWQsIC4uLnNvdXJjZSB9ID0gZGVmYXVsdHMuc291cmNlXG4gICAgZGVmYXVsdHMuc291cmNlID0gc291cmNlXG4gICAgaWYgKGlucHV0SWQgIT0gbnVsbCkge1xuICAgICAgZGVmYXVsdHMuc291cmNlLmlucHV0ID0gaW5wdXRzW2lucHV0SWRdXG4gICAgfVxuICB9XG4gIGlmIChkZWZhdWx0cy50eXBlID09PSAncm9vdCcpIHtcbiAgICByZXR1cm4gbmV3IFJvb3QoZGVmYXVsdHMpXG4gIH0gZWxzZSBpZiAoZGVmYXVsdHMudHlwZSA9PT0gJ2RlY2wnKSB7XG4gICAgcmV0dXJuIG5ldyBEZWNsYXJhdGlvbihkZWZhdWx0cylcbiAgfSBlbHNlIGlmIChkZWZhdWx0cy50eXBlID09PSAncnVsZScpIHtcbiAgICByZXR1cm4gbmV3IFJ1bGUoZGVmYXVsdHMpXG4gIH0gZWxzZSBpZiAoZGVmYXVsdHMudHlwZSA9PT0gJ2NvbW1lbnQnKSB7XG4gICAgcmV0dXJuIG5ldyBDb21tZW50KGRlZmF1bHRzKVxuICB9IGVsc2UgaWYgKGRlZmF1bHRzLnR5cGUgPT09ICdhdHJ1bGUnKSB7XG4gICAgcmV0dXJuIG5ldyBBdFJ1bGUoZGVmYXVsdHMpXG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG5vZGUgdHlwZTogJyArIGpzb24udHlwZSlcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZyb21KU09OXG5mcm9tSlNPTi5kZWZhdWx0ID0gZnJvbUpTT05cbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgeyBTb3VyY2VNYXBDb25zdW1lciwgU291cmNlTWFwR2VuZXJhdG9yIH0gPSByZXF1aXJlKCdzb3VyY2UtbWFwLWpzJylcbmxldCB7IGZpbGVVUkxUb1BhdGgsIHBhdGhUb0ZpbGVVUkwgfSA9IHJlcXVpcmUoJ3VybCcpXG5sZXQgeyByZXNvbHZlLCBpc0Fic29sdXRlIH0gPSByZXF1aXJlKCdwYXRoJylcbmxldCB7IG5hbm9pZCB9ID0gcmVxdWlyZSgnbmFub2lkL25vbi1zZWN1cmUnKVxuXG5sZXQgdGVybWluYWxIaWdobGlnaHQgPSByZXF1aXJlKCcuL3Rlcm1pbmFsLWhpZ2hsaWdodCcpXG5sZXQgQ3NzU3ludGF4RXJyb3IgPSByZXF1aXJlKCcuL2Nzcy1zeW50YXgtZXJyb3InKVxubGV0IFByZXZpb3VzTWFwID0gcmVxdWlyZSgnLi9wcmV2aW91cy1tYXAnKVxuXG5sZXQgZnJvbU9mZnNldENhY2hlID0gU3ltYm9sKCdmcm9tT2Zmc2V0Q2FjaGUnKVxuXG5sZXQgc291cmNlTWFwQXZhaWxhYmxlID0gQm9vbGVhbihTb3VyY2VNYXBDb25zdW1lciAmJiBTb3VyY2VNYXBHZW5lcmF0b3IpXG5sZXQgcGF0aEF2YWlsYWJsZSA9IEJvb2xlYW4ocmVzb2x2ZSAmJiBpc0Fic29sdXRlKVxuXG5jbGFzcyBJbnB1dCB7XG4gIGNvbnN0cnVjdG9yKGNzcywgb3B0cyA9IHt9KSB7XG4gICAgaWYgKFxuICAgICAgY3NzID09PSBudWxsIHx8XG4gICAgICB0eXBlb2YgY3NzID09PSAndW5kZWZpbmVkJyB8fFxuICAgICAgKHR5cGVvZiBjc3MgPT09ICdvYmplY3QnICYmICFjc3MudG9TdHJpbmcpXG4gICAgKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFBvc3RDU1MgcmVjZWl2ZWQgJHtjc3N9IGluc3RlYWQgb2YgQ1NTIHN0cmluZ2ApXG4gICAgfVxuXG4gICAgdGhpcy5jc3MgPSBjc3MudG9TdHJpbmcoKVxuXG4gICAgaWYgKHRoaXMuY3NzWzBdID09PSAnXFx1RkVGRicgfHwgdGhpcy5jc3NbMF0gPT09ICdcXHVGRkZFJykge1xuICAgICAgdGhpcy5oYXNCT00gPSB0cnVlXG4gICAgICB0aGlzLmNzcyA9IHRoaXMuY3NzLnNsaWNlKDEpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaGFzQk9NID0gZmFsc2VcbiAgICB9XG5cbiAgICBpZiAob3B0cy5mcm9tKSB7XG4gICAgICBpZiAoXG4gICAgICAgICFwYXRoQXZhaWxhYmxlIHx8XG4gICAgICAgIC9eXFx3KzpcXC9cXC8vLnRlc3Qob3B0cy5mcm9tKSB8fFxuICAgICAgICBpc0Fic29sdXRlKG9wdHMuZnJvbSlcbiAgICAgICkge1xuICAgICAgICB0aGlzLmZpbGUgPSBvcHRzLmZyb21cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZmlsZSA9IHJlc29sdmUob3B0cy5mcm9tKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwYXRoQXZhaWxhYmxlICYmIHNvdXJjZU1hcEF2YWlsYWJsZSkge1xuICAgICAgbGV0IG1hcCA9IG5ldyBQcmV2aW91c01hcCh0aGlzLmNzcywgb3B0cylcbiAgICAgIGlmIChtYXAudGV4dCkge1xuICAgICAgICB0aGlzLm1hcCA9IG1hcFxuICAgICAgICBsZXQgZmlsZSA9IG1hcC5jb25zdW1lcigpLmZpbGVcbiAgICAgICAgaWYgKCF0aGlzLmZpbGUgJiYgZmlsZSkgdGhpcy5maWxlID0gdGhpcy5tYXBSZXNvbHZlKGZpbGUpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmZpbGUpIHtcbiAgICAgIHRoaXMuaWQgPSAnPGlucHV0IGNzcyAnICsgbmFub2lkKDYpICsgJz4nXG4gICAgfVxuICAgIGlmICh0aGlzLm1hcCkgdGhpcy5tYXAuZmlsZSA9IHRoaXMuZnJvbVxuICB9XG5cbiAgZnJvbU9mZnNldChvZmZzZXQpIHtcbiAgICBsZXQgbGFzdExpbmUsIGxpbmVUb0luZGV4XG4gICAgaWYgKCF0aGlzW2Zyb21PZmZzZXRDYWNoZV0pIHtcbiAgICAgIGxldCBsaW5lcyA9IHRoaXMuY3NzLnNwbGl0KCdcXG4nKVxuICAgICAgbGluZVRvSW5kZXggPSBuZXcgQXJyYXkobGluZXMubGVuZ3RoKVxuICAgICAgbGV0IHByZXZJbmRleCA9IDBcblxuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBsaW5lcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgbGluZVRvSW5kZXhbaV0gPSBwcmV2SW5kZXhcbiAgICAgICAgcHJldkluZGV4ICs9IGxpbmVzW2ldLmxlbmd0aCArIDFcbiAgICAgIH1cblxuICAgICAgdGhpc1tmcm9tT2Zmc2V0Q2FjaGVdID0gbGluZVRvSW5kZXhcbiAgICB9IGVsc2Uge1xuICAgICAgbGluZVRvSW5kZXggPSB0aGlzW2Zyb21PZmZzZXRDYWNoZV1cbiAgICB9XG4gICAgbGFzdExpbmUgPSBsaW5lVG9JbmRleFtsaW5lVG9JbmRleC5sZW5ndGggLSAxXVxuXG4gICAgbGV0IG1pbiA9IDBcbiAgICBpZiAob2Zmc2V0ID49IGxhc3RMaW5lKSB7XG4gICAgICBtaW4gPSBsaW5lVG9JbmRleC5sZW5ndGggLSAxXG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBtYXggPSBsaW5lVG9JbmRleC5sZW5ndGggLSAyXG4gICAgICBsZXQgbWlkXG4gICAgICB3aGlsZSAobWluIDwgbWF4KSB7XG4gICAgICAgIG1pZCA9IG1pbiArICgobWF4IC0gbWluKSA+PiAxKVxuICAgICAgICBpZiAob2Zmc2V0IDwgbGluZVRvSW5kZXhbbWlkXSkge1xuICAgICAgICAgIG1heCA9IG1pZCAtIDFcbiAgICAgICAgfSBlbHNlIGlmIChvZmZzZXQgPj0gbGluZVRvSW5kZXhbbWlkICsgMV0pIHtcbiAgICAgICAgICBtaW4gPSBtaWQgKyAxXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbWluID0gbWlkXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgbGluZTogbWluICsgMSxcbiAgICAgIGNvbDogb2Zmc2V0IC0gbGluZVRvSW5kZXhbbWluXSArIDFcbiAgICB9XG4gIH1cblxuICBlcnJvcihtZXNzYWdlLCBsaW5lLCBjb2x1bW4sIG9wdHMgPSB7fSkge1xuICAgIGxldCByZXN1bHQsIGVuZExpbmUsIGVuZENvbHVtblxuXG4gICAgaWYgKGxpbmUgJiYgdHlwZW9mIGxpbmUgPT09ICdvYmplY3QnKSB7XG4gICAgICBsZXQgc3RhcnQgPSBsaW5lXG4gICAgICBsZXQgZW5kID0gY29sdW1uXG4gICAgICBpZiAodHlwZW9mIHN0YXJ0Lm9mZnNldCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgbGV0IHBvcyA9IHRoaXMuZnJvbU9mZnNldChzdGFydC5vZmZzZXQpXG4gICAgICAgIGxpbmUgPSBwb3MubGluZVxuICAgICAgICBjb2x1bW4gPSBwb3MuY29sXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaW5lID0gc3RhcnQubGluZVxuICAgICAgICBjb2x1bW4gPSBzdGFydC5jb2x1bW5cbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgZW5kLm9mZnNldCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgbGV0IHBvcyA9IHRoaXMuZnJvbU9mZnNldChlbmQub2Zmc2V0KVxuICAgICAgICBlbmRMaW5lID0gcG9zLmxpbmVcbiAgICAgICAgZW5kQ29sdW1uID0gcG9zLmNvbFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZW5kTGluZSA9IGVuZC5saW5lXG4gICAgICAgIGVuZENvbHVtbiA9IGVuZC5jb2x1bW5cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFjb2x1bW4pIHtcbiAgICAgIGxldCBwb3MgPSB0aGlzLmZyb21PZmZzZXQobGluZSlcbiAgICAgIGxpbmUgPSBwb3MubGluZVxuICAgICAgY29sdW1uID0gcG9zLmNvbFxuICAgIH1cblxuICAgIGxldCBvcmlnaW4gPSB0aGlzLm9yaWdpbihsaW5lLCBjb2x1bW4sIGVuZExpbmUsIGVuZENvbHVtbilcbiAgICBpZiAob3JpZ2luKSB7XG4gICAgICByZXN1bHQgPSBuZXcgQ3NzU3ludGF4RXJyb3IoXG4gICAgICAgIG1lc3NhZ2UsXG4gICAgICAgIG9yaWdpbi5lbmRMaW5lID09PSB1bmRlZmluZWRcbiAgICAgICAgICA/IG9yaWdpbi5saW5lXG4gICAgICAgICAgOiB7IGxpbmU6IG9yaWdpbi5saW5lLCBjb2x1bW46IG9yaWdpbi5jb2x1bW4gfSxcbiAgICAgICAgb3JpZ2luLmVuZExpbmUgPT09IHVuZGVmaW5lZFxuICAgICAgICAgID8gb3JpZ2luLmNvbHVtblxuICAgICAgICAgIDogeyBsaW5lOiBvcmlnaW4uZW5kTGluZSwgY29sdW1uOiBvcmlnaW4uZW5kQ29sdW1uIH0sXG4gICAgICAgIG9yaWdpbi5zb3VyY2UsXG4gICAgICAgIG9yaWdpbi5maWxlLFxuICAgICAgICBvcHRzLnBsdWdpblxuICAgICAgKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgPSBuZXcgQ3NzU3ludGF4RXJyb3IoXG4gICAgICAgIG1lc3NhZ2UsXG4gICAgICAgIGVuZExpbmUgPT09IHVuZGVmaW5lZCA/IGxpbmUgOiB7IGxpbmUsIGNvbHVtbiB9LFxuICAgICAgICBlbmRMaW5lID09PSB1bmRlZmluZWQgPyBjb2x1bW4gOiB7IGxpbmU6IGVuZExpbmUsIGNvbHVtbjogZW5kQ29sdW1uIH0sXG4gICAgICAgIHRoaXMuY3NzLFxuICAgICAgICB0aGlzLmZpbGUsXG4gICAgICAgIG9wdHMucGx1Z2luXG4gICAgICApXG4gICAgfVxuXG4gICAgcmVzdWx0LmlucHV0ID0geyBsaW5lLCBjb2x1bW4sIGVuZExpbmUsIGVuZENvbHVtbiwgc291cmNlOiB0aGlzLmNzcyB9XG4gICAgaWYgKHRoaXMuZmlsZSkge1xuICAgICAgaWYgKHBhdGhUb0ZpbGVVUkwpIHtcbiAgICAgICAgcmVzdWx0LmlucHV0LnVybCA9IHBhdGhUb0ZpbGVVUkwodGhpcy5maWxlKS50b1N0cmluZygpXG4gICAgICB9XG4gICAgICByZXN1bHQuaW5wdXQuZmlsZSA9IHRoaXMuZmlsZVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIG9yaWdpbihsaW5lLCBjb2x1bW4sIGVuZExpbmUsIGVuZENvbHVtbikge1xuICAgIGlmICghdGhpcy5tYXApIHJldHVybiBmYWxzZVxuICAgIGxldCBjb25zdW1lciA9IHRoaXMubWFwLmNvbnN1bWVyKClcblxuICAgIGxldCBmcm9tID0gY29uc3VtZXIub3JpZ2luYWxQb3NpdGlvbkZvcih7IGxpbmUsIGNvbHVtbiB9KVxuICAgIGlmICghZnJvbS5zb3VyY2UpIHJldHVybiBmYWxzZVxuXG4gICAgbGV0IHRvXG4gICAgaWYgKHR5cGVvZiBlbmRMaW5lID09PSAnbnVtYmVyJykge1xuICAgICAgdG8gPSBjb25zdW1lci5vcmlnaW5hbFBvc2l0aW9uRm9yKHsgbGluZTogZW5kTGluZSwgY29sdW1uOiBlbmRDb2x1bW4gfSlcbiAgICB9XG5cbiAgICBsZXQgZnJvbVVybFxuXG4gICAgaWYgKGlzQWJzb2x1dGUoZnJvbS5zb3VyY2UpKSB7XG4gICAgICBmcm9tVXJsID0gcGF0aFRvRmlsZVVSTChmcm9tLnNvdXJjZSlcbiAgICB9IGVsc2Uge1xuICAgICAgZnJvbVVybCA9IG5ldyBVUkwoXG4gICAgICAgIGZyb20uc291cmNlLFxuICAgICAgICB0aGlzLm1hcC5jb25zdW1lcigpLnNvdXJjZVJvb3QgfHwgcGF0aFRvRmlsZVVSTCh0aGlzLm1hcC5tYXBGaWxlKVxuICAgICAgKVxuICAgIH1cblxuICAgIGxldCByZXN1bHQgPSB7XG4gICAgICB1cmw6IGZyb21VcmwudG9TdHJpbmcoKSxcbiAgICAgIGxpbmU6IGZyb20ubGluZSxcbiAgICAgIGNvbHVtbjogZnJvbS5jb2x1bW4sXG4gICAgICBlbmRMaW5lOiB0byAmJiB0by5saW5lLFxuICAgICAgZW5kQ29sdW1uOiB0byAmJiB0by5jb2x1bW5cbiAgICB9XG5cbiAgICBpZiAoZnJvbVVybC5wcm90b2NvbCA9PT0gJ2ZpbGU6Jykge1xuICAgICAgaWYgKGZpbGVVUkxUb1BhdGgpIHtcbiAgICAgICAgcmVzdWx0LmZpbGUgPSBmaWxlVVJMVG9QYXRoKGZyb21VcmwpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAyICovXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgZmlsZTogcHJvdG9jb2wgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIFBvc3RDU1MgYnVpbGRgKVxuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBzb3VyY2UgPSBjb25zdW1lci5zb3VyY2VDb250ZW50Rm9yKGZyb20uc291cmNlKVxuICAgIGlmIChzb3VyY2UpIHJlc3VsdC5zb3VyY2UgPSBzb3VyY2VcblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIG1hcFJlc29sdmUoZmlsZSkge1xuICAgIGlmICgvXlxcdys6XFwvXFwvLy50ZXN0KGZpbGUpKSB7XG4gICAgICByZXR1cm4gZmlsZVxuICAgIH1cbiAgICByZXR1cm4gcmVzb2x2ZSh0aGlzLm1hcC5jb25zdW1lcigpLnNvdXJjZVJvb3QgfHwgdGhpcy5tYXAucm9vdCB8fCAnLicsIGZpbGUpXG4gIH1cblxuICBnZXQgZnJvbSgpIHtcbiAgICByZXR1cm4gdGhpcy5maWxlIHx8IHRoaXMuaWRcbiAgfVxuXG4gIHRvSlNPTigpIHtcbiAgICBsZXQganNvbiA9IHt9XG4gICAgZm9yIChsZXQgbmFtZSBvZiBbJ2hhc0JPTScsICdjc3MnLCAnZmlsZScsICdpZCddKSB7XG4gICAgICBpZiAodGhpc1tuYW1lXSAhPSBudWxsKSB7XG4gICAgICAgIGpzb25bbmFtZV0gPSB0aGlzW25hbWVdXG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0aGlzLm1hcCkge1xuICAgICAganNvbi5tYXAgPSB7IC4uLnRoaXMubWFwIH1cbiAgICAgIGlmIChqc29uLm1hcC5jb25zdW1lckNhY2hlKSB7XG4gICAgICAgIGpzb24ubWFwLmNvbnN1bWVyQ2FjaGUgPSB1bmRlZmluZWRcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGpzb25cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IElucHV0XG5JbnB1dC5kZWZhdWx0ID0gSW5wdXRcblxuaWYgKHRlcm1pbmFsSGlnaGxpZ2h0ICYmIHRlcm1pbmFsSGlnaGxpZ2h0LnJlZ2lzdGVySW5wdXQpIHtcbiAgdGVybWluYWxIaWdobGlnaHQucmVnaXN0ZXJJbnB1dChJbnB1dClcbn1cbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgeyBpc0NsZWFuLCBteSB9ID0gcmVxdWlyZSgnLi9zeW1ib2xzJylcbmxldCBNYXBHZW5lcmF0b3IgPSByZXF1aXJlKCcuL21hcC1nZW5lcmF0b3InKVxubGV0IHN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vc3RyaW5naWZ5JylcbmxldCBDb250YWluZXIgPSByZXF1aXJlKCcuL2NvbnRhaW5lcicpXG5sZXQgRG9jdW1lbnQgPSByZXF1aXJlKCcuL2RvY3VtZW50JylcbmxldCB3YXJuT25jZSA9IHJlcXVpcmUoJy4vd2Fybi1vbmNlJylcbmxldCBSZXN1bHQgPSByZXF1aXJlKCcuL3Jlc3VsdCcpXG5sZXQgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJylcbmxldCBSb290ID0gcmVxdWlyZSgnLi9yb290JylcblxuY29uc3QgVFlQRV9UT19DTEFTU19OQU1FID0ge1xuICBkb2N1bWVudDogJ0RvY3VtZW50JyxcbiAgcm9vdDogJ1Jvb3QnLFxuICBhdHJ1bGU6ICdBdFJ1bGUnLFxuICBydWxlOiAnUnVsZScsXG4gIGRlY2w6ICdEZWNsYXJhdGlvbicsXG4gIGNvbW1lbnQ6ICdDb21tZW50J1xufVxuXG5jb25zdCBQTFVHSU5fUFJPUFMgPSB7XG4gIHBvc3Rjc3NQbHVnaW46IHRydWUsXG4gIHByZXBhcmU6IHRydWUsXG4gIE9uY2U6IHRydWUsXG4gIERvY3VtZW50OiB0cnVlLFxuICBSb290OiB0cnVlLFxuICBEZWNsYXJhdGlvbjogdHJ1ZSxcbiAgUnVsZTogdHJ1ZSxcbiAgQXRSdWxlOiB0cnVlLFxuICBDb21tZW50OiB0cnVlLFxuICBEZWNsYXJhdGlvbkV4aXQ6IHRydWUsXG4gIFJ1bGVFeGl0OiB0cnVlLFxuICBBdFJ1bGVFeGl0OiB0cnVlLFxuICBDb21tZW50RXhpdDogdHJ1ZSxcbiAgUm9vdEV4aXQ6IHRydWUsXG4gIERvY3VtZW50RXhpdDogdHJ1ZSxcbiAgT25jZUV4aXQ6IHRydWVcbn1cblxuY29uc3QgTk9UX1ZJU0lUT1JTID0ge1xuICBwb3N0Y3NzUGx1Z2luOiB0cnVlLFxuICBwcmVwYXJlOiB0cnVlLFxuICBPbmNlOiB0cnVlXG59XG5cbmNvbnN0IENISUxEUkVOID0gMFxuXG5mdW5jdGlvbiBpc1Byb21pc2Uob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqLnRoZW4gPT09ICdmdW5jdGlvbidcbn1cblxuZnVuY3Rpb24gZ2V0RXZlbnRzKG5vZGUpIHtcbiAgbGV0IGtleSA9IGZhbHNlXG4gIGxldCB0eXBlID0gVFlQRV9UT19DTEFTU19OQU1FW25vZGUudHlwZV1cbiAgaWYgKG5vZGUudHlwZSA9PT0gJ2RlY2wnKSB7XG4gICAga2V5ID0gbm9kZS5wcm9wLnRvTG93ZXJDYXNlKClcbiAgfSBlbHNlIGlmIChub2RlLnR5cGUgPT09ICdhdHJ1bGUnKSB7XG4gICAga2V5ID0gbm9kZS5uYW1lLnRvTG93ZXJDYXNlKClcbiAgfVxuXG4gIGlmIChrZXkgJiYgbm9kZS5hcHBlbmQpIHtcbiAgICByZXR1cm4gW1xuICAgICAgdHlwZSxcbiAgICAgIHR5cGUgKyAnLScgKyBrZXksXG4gICAgICBDSElMRFJFTixcbiAgICAgIHR5cGUgKyAnRXhpdCcsXG4gICAgICB0eXBlICsgJ0V4aXQtJyArIGtleVxuICAgIF1cbiAgfSBlbHNlIGlmIChrZXkpIHtcbiAgICByZXR1cm4gW3R5cGUsIHR5cGUgKyAnLScgKyBrZXksIHR5cGUgKyAnRXhpdCcsIHR5cGUgKyAnRXhpdC0nICsga2V5XVxuICB9IGVsc2UgaWYgKG5vZGUuYXBwZW5kKSB7XG4gICAgcmV0dXJuIFt0eXBlLCBDSElMRFJFTiwgdHlwZSArICdFeGl0J11cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gW3R5cGUsIHR5cGUgKyAnRXhpdCddXG4gIH1cbn1cblxuZnVuY3Rpb24gdG9TdGFjayhub2RlKSB7XG4gIGxldCBldmVudHNcbiAgaWYgKG5vZGUudHlwZSA9PT0gJ2RvY3VtZW50Jykge1xuICAgIGV2ZW50cyA9IFsnRG9jdW1lbnQnLCBDSElMRFJFTiwgJ0RvY3VtZW50RXhpdCddXG4gIH0gZWxzZSBpZiAobm9kZS50eXBlID09PSAncm9vdCcpIHtcbiAgICBldmVudHMgPSBbJ1Jvb3QnLCBDSElMRFJFTiwgJ1Jvb3RFeGl0J11cbiAgfSBlbHNlIHtcbiAgICBldmVudHMgPSBnZXRFdmVudHMobm9kZSlcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbm9kZSxcbiAgICBldmVudHMsXG4gICAgZXZlbnRJbmRleDogMCxcbiAgICB2aXNpdG9yczogW10sXG4gICAgdmlzaXRvckluZGV4OiAwLFxuICAgIGl0ZXJhdG9yOiAwXG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYW5NYXJrcyhub2RlKSB7XG4gIG5vZGVbaXNDbGVhbl0gPSBmYWxzZVxuICBpZiAobm9kZS5ub2Rlcykgbm9kZS5ub2Rlcy5mb3JFYWNoKGkgPT4gY2xlYW5NYXJrcyhpKSlcbiAgcmV0dXJuIG5vZGVcbn1cblxubGV0IHBvc3Rjc3MgPSB7fVxuXG5jbGFzcyBMYXp5UmVzdWx0IHtcbiAgY29uc3RydWN0b3IocHJvY2Vzc29yLCBjc3MsIG9wdHMpIHtcbiAgICB0aGlzLnN0cmluZ2lmaWVkID0gZmFsc2VcbiAgICB0aGlzLnByb2Nlc3NlZCA9IGZhbHNlXG5cbiAgICBsZXQgcm9vdFxuICAgIGlmIChcbiAgICAgIHR5cGVvZiBjc3MgPT09ICdvYmplY3QnICYmXG4gICAgICBjc3MgIT09IG51bGwgJiZcbiAgICAgIChjc3MudHlwZSA9PT0gJ3Jvb3QnIHx8IGNzcy50eXBlID09PSAnZG9jdW1lbnQnKVxuICAgICkge1xuICAgICAgcm9vdCA9IGNsZWFuTWFya3MoY3NzKVxuICAgIH0gZWxzZSBpZiAoY3NzIGluc3RhbmNlb2YgTGF6eVJlc3VsdCB8fCBjc3MgaW5zdGFuY2VvZiBSZXN1bHQpIHtcbiAgICAgIHJvb3QgPSBjbGVhbk1hcmtzKGNzcy5yb290KVxuICAgICAgaWYgKGNzcy5tYXApIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRzLm1hcCA9PT0gJ3VuZGVmaW5lZCcpIG9wdHMubWFwID0ge31cbiAgICAgICAgaWYgKCFvcHRzLm1hcC5pbmxpbmUpIG9wdHMubWFwLmlubGluZSA9IGZhbHNlXG4gICAgICAgIG9wdHMubWFwLnByZXYgPSBjc3MubWFwXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBwYXJzZXIgPSBwYXJzZVxuICAgICAgaWYgKG9wdHMuc3ludGF4KSBwYXJzZXIgPSBvcHRzLnN5bnRheC5wYXJzZVxuICAgICAgaWYgKG9wdHMucGFyc2VyKSBwYXJzZXIgPSBvcHRzLnBhcnNlclxuICAgICAgaWYgKHBhcnNlci5wYXJzZSkgcGFyc2VyID0gcGFyc2VyLnBhcnNlXG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHJvb3QgPSBwYXJzZXIoY3NzLCBvcHRzKVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhpcy5wcm9jZXNzZWQgPSB0cnVlXG4gICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvclxuICAgICAgfVxuXG4gICAgICBpZiAocm9vdCAmJiAhcm9vdFtteV0pIHtcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgICAgICBDb250YWluZXIucmVidWlsZChyb290KVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMucmVzdWx0ID0gbmV3IFJlc3VsdChwcm9jZXNzb3IsIHJvb3QsIG9wdHMpXG4gICAgdGhpcy5oZWxwZXJzID0geyAuLi5wb3N0Y3NzLCByZXN1bHQ6IHRoaXMucmVzdWx0LCBwb3N0Y3NzIH1cbiAgICB0aGlzLnBsdWdpbnMgPSB0aGlzLnByb2Nlc3Nvci5wbHVnaW5zLm1hcChwbHVnaW4gPT4ge1xuICAgICAgaWYgKHR5cGVvZiBwbHVnaW4gPT09ICdvYmplY3QnICYmIHBsdWdpbi5wcmVwYXJlKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnBsdWdpbiwgLi4ucGx1Z2luLnByZXBhcmUodGhpcy5yZXN1bHQpIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBwbHVnaW5cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgZ2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuICAgIHJldHVybiAnTGF6eVJlc3VsdCdcbiAgfVxuXG4gIGdldCBwcm9jZXNzb3IoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVzdWx0LnByb2Nlc3NvclxuICB9XG5cbiAgZ2V0IG9wdHMoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVzdWx0Lm9wdHNcbiAgfVxuXG4gIGdldCBjc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RyaW5naWZ5KCkuY3NzXG4gIH1cblxuICBnZXQgY29udGVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdHJpbmdpZnkoKS5jb250ZW50XG4gIH1cblxuICBnZXQgbWFwKCkge1xuICAgIHJldHVybiB0aGlzLnN0cmluZ2lmeSgpLm1hcFxuICB9XG5cbiAgZ2V0IHJvb3QoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3luYygpLnJvb3RcbiAgfVxuXG4gIGdldCBtZXNzYWdlcygpIHtcbiAgICByZXR1cm4gdGhpcy5zeW5jKCkubWVzc2FnZXNcbiAgfVxuXG4gIHdhcm5pbmdzKCkge1xuICAgIHJldHVybiB0aGlzLnN5bmMoKS53YXJuaW5ncygpXG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5jc3NcbiAgfVxuXG4gIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKCEoJ2Zyb20nIGluIHRoaXMub3B0cykpIHtcbiAgICAgICAgd2Fybk9uY2UoXG4gICAgICAgICAgJ1dpdGhvdXQgYGZyb21gIG9wdGlvbiBQb3N0Q1NTIGNvdWxkIGdlbmVyYXRlIHdyb25nIHNvdXJjZSBtYXAgJyArXG4gICAgICAgICAgICAnYW5kIHdpbGwgbm90IGZpbmQgQnJvd3NlcnNsaXN0IGNvbmZpZy4gU2V0IGl0IHRvIENTUyBmaWxlIHBhdGggJyArXG4gICAgICAgICAgICAnb3IgdG8gYHVuZGVmaW5lZGAgdG8gcHJldmVudCB0aGlzIHdhcm5pbmcuJ1xuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmFzeW5jKCkudGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZClcbiAgfVxuXG4gIGNhdGNoKG9uUmVqZWN0ZWQpIHtcbiAgICByZXR1cm4gdGhpcy5hc3luYygpLmNhdGNoKG9uUmVqZWN0ZWQpXG4gIH1cblxuICBmaW5hbGx5KG9uRmluYWxseSkge1xuICAgIHJldHVybiB0aGlzLmFzeW5jKCkudGhlbihvbkZpbmFsbHksIG9uRmluYWxseSlcbiAgfVxuXG4gIGFzeW5jKCkge1xuICAgIGlmICh0aGlzLmVycm9yKSByZXR1cm4gUHJvbWlzZS5yZWplY3QodGhpcy5lcnJvcilcbiAgICBpZiAodGhpcy5wcm9jZXNzZWQpIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5yZXN1bHQpXG4gICAgaWYgKCF0aGlzLnByb2Nlc3NpbmcpIHtcbiAgICAgIHRoaXMucHJvY2Vzc2luZyA9IHRoaXMucnVuQXN5bmMoKVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5wcm9jZXNzaW5nXG4gIH1cblxuICBzeW5jKCkge1xuICAgIGlmICh0aGlzLmVycm9yKSB0aHJvdyB0aGlzLmVycm9yXG4gICAgaWYgKHRoaXMucHJvY2Vzc2VkKSByZXR1cm4gdGhpcy5yZXN1bHRcbiAgICB0aGlzLnByb2Nlc3NlZCA9IHRydWVcblxuICAgIGlmICh0aGlzLnByb2Nlc3NpbmcpIHtcbiAgICAgIHRocm93IHRoaXMuZ2V0QXN5bmNFcnJvcigpXG4gICAgfVxuXG4gICAgZm9yIChsZXQgcGx1Z2luIG9mIHRoaXMucGx1Z2lucykge1xuICAgICAgbGV0IHByb21pc2UgPSB0aGlzLnJ1bk9uUm9vdChwbHVnaW4pXG4gICAgICBpZiAoaXNQcm9taXNlKHByb21pc2UpKSB7XG4gICAgICAgIHRocm93IHRoaXMuZ2V0QXN5bmNFcnJvcigpXG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5wcmVwYXJlVmlzaXRvcnMoKVxuICAgIGlmICh0aGlzLmhhc0xpc3RlbmVyKSB7XG4gICAgICBsZXQgcm9vdCA9IHRoaXMucmVzdWx0LnJvb3RcbiAgICAgIHdoaWxlICghcm9vdFtpc0NsZWFuXSkge1xuICAgICAgICByb290W2lzQ2xlYW5dID0gdHJ1ZVxuICAgICAgICB0aGlzLndhbGtTeW5jKHJvb3QpXG4gICAgICB9XG4gICAgICBpZiAodGhpcy5saXN0ZW5lcnMuT25jZUV4aXQpIHtcbiAgICAgICAgaWYgKHJvb3QudHlwZSA9PT0gJ2RvY3VtZW50Jykge1xuICAgICAgICAgIGZvciAobGV0IHN1YlJvb3Qgb2Ygcm9vdC5ub2Rlcykge1xuICAgICAgICAgICAgdGhpcy52aXNpdFN5bmModGhpcy5saXN0ZW5lcnMuT25jZUV4aXQsIHN1YlJvb3QpXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudmlzaXRTeW5jKHRoaXMubGlzdGVuZXJzLk9uY2VFeGl0LCByb290KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucmVzdWx0XG4gIH1cblxuICBzdHJpbmdpZnkoKSB7XG4gICAgaWYgKHRoaXMuZXJyb3IpIHRocm93IHRoaXMuZXJyb3JcbiAgICBpZiAodGhpcy5zdHJpbmdpZmllZCkgcmV0dXJuIHRoaXMucmVzdWx0XG4gICAgdGhpcy5zdHJpbmdpZmllZCA9IHRydWVcblxuICAgIHRoaXMuc3luYygpXG5cbiAgICBsZXQgb3B0cyA9IHRoaXMucmVzdWx0Lm9wdHNcbiAgICBsZXQgc3RyID0gc3RyaW5naWZ5XG4gICAgaWYgKG9wdHMuc3ludGF4KSBzdHIgPSBvcHRzLnN5bnRheC5zdHJpbmdpZnlcbiAgICBpZiAob3B0cy5zdHJpbmdpZmllcikgc3RyID0gb3B0cy5zdHJpbmdpZmllclxuICAgIGlmIChzdHIuc3RyaW5naWZ5KSBzdHIgPSBzdHIuc3RyaW5naWZ5XG5cbiAgICBsZXQgbWFwID0gbmV3IE1hcEdlbmVyYXRvcihzdHIsIHRoaXMucmVzdWx0LnJvb3QsIHRoaXMucmVzdWx0Lm9wdHMpXG4gICAgbGV0IGRhdGEgPSBtYXAuZ2VuZXJhdGUoKVxuICAgIHRoaXMucmVzdWx0LmNzcyA9IGRhdGFbMF1cbiAgICB0aGlzLnJlc3VsdC5tYXAgPSBkYXRhWzFdXG5cbiAgICByZXR1cm4gdGhpcy5yZXN1bHRcbiAgfVxuXG4gIHdhbGtTeW5jKG5vZGUpIHtcbiAgICBub2RlW2lzQ2xlYW5dID0gdHJ1ZVxuICAgIGxldCBldmVudHMgPSBnZXRFdmVudHMobm9kZSlcbiAgICBmb3IgKGxldCBldmVudCBvZiBldmVudHMpIHtcbiAgICAgIGlmIChldmVudCA9PT0gQ0hJTERSRU4pIHtcbiAgICAgICAgaWYgKG5vZGUubm9kZXMpIHtcbiAgICAgICAgICBub2RlLmVhY2goY2hpbGQgPT4ge1xuICAgICAgICAgICAgaWYgKCFjaGlsZFtpc0NsZWFuXSkgdGhpcy53YWxrU3luYyhjaGlsZClcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgdmlzaXRvcnMgPSB0aGlzLmxpc3RlbmVyc1tldmVudF1cbiAgICAgICAgaWYgKHZpc2l0b3JzKSB7XG4gICAgICAgICAgaWYgKHRoaXMudmlzaXRTeW5jKHZpc2l0b3JzLCBub2RlLnRvUHJveHkoKSkpIHJldHVyblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmlzaXRTeW5jKHZpc2l0b3JzLCBub2RlKSB7XG4gICAgZm9yIChsZXQgW3BsdWdpbiwgdmlzaXRvcl0gb2YgdmlzaXRvcnMpIHtcbiAgICAgIHRoaXMucmVzdWx0Lmxhc3RQbHVnaW4gPSBwbHVnaW5cbiAgICAgIGxldCBwcm9taXNlXG4gICAgICB0cnkge1xuICAgICAgICBwcm9taXNlID0gdmlzaXRvcihub2RlLCB0aGlzLmhlbHBlcnMpXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IHRoaXMuaGFuZGxlRXJyb3IoZSwgbm9kZS5wcm94eU9mKVxuICAgICAgfVxuICAgICAgaWYgKG5vZGUudHlwZSAhPT0gJ3Jvb3QnICYmIG5vZGUudHlwZSAhPT0gJ2RvY3VtZW50JyAmJiAhbm9kZS5wYXJlbnQpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICAgIGlmIChpc1Byb21pc2UocHJvbWlzZSkpIHtcbiAgICAgICAgdGhyb3cgdGhpcy5nZXRBc3luY0Vycm9yKClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBydW5PblJvb3QocGx1Z2luKSB7XG4gICAgdGhpcy5yZXN1bHQubGFzdFBsdWdpbiA9IHBsdWdpblxuICAgIHRyeSB7XG4gICAgICBpZiAodHlwZW9mIHBsdWdpbiA9PT0gJ29iamVjdCcgJiYgcGx1Z2luLk9uY2UpIHtcbiAgICAgICAgaWYgKHRoaXMucmVzdWx0LnJvb3QudHlwZSA9PT0gJ2RvY3VtZW50Jykge1xuICAgICAgICAgIGxldCByb290cyA9IHRoaXMucmVzdWx0LnJvb3Qubm9kZXMubWFwKHJvb3QgPT5cbiAgICAgICAgICAgIHBsdWdpbi5PbmNlKHJvb3QsIHRoaXMuaGVscGVycylcbiAgICAgICAgICApXG5cbiAgICAgICAgICBpZiAoaXNQcm9taXNlKHJvb3RzWzBdKSkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHJvb3RzKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiByb290c1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHBsdWdpbi5PbmNlKHRoaXMucmVzdWx0LnJvb3QsIHRoaXMuaGVscGVycylcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHBsdWdpbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gcGx1Z2luKHRoaXMucmVzdWx0LnJvb3QsIHRoaXMucmVzdWx0KVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aHJvdyB0aGlzLmhhbmRsZUVycm9yKGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIGdldEFzeW5jRXJyb3IoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVc2UgcHJvY2Vzcyhjc3MpLnRoZW4oY2IpIHRvIHdvcmsgd2l0aCBhc3luYyBwbHVnaW5zJylcbiAgfVxuXG4gIGhhbmRsZUVycm9yKGVycm9yLCBub2RlKSB7XG4gICAgbGV0IHBsdWdpbiA9IHRoaXMucmVzdWx0Lmxhc3RQbHVnaW5cbiAgICB0cnkge1xuICAgICAgaWYgKG5vZGUpIG5vZGUuYWRkVG9FcnJvcihlcnJvcilcbiAgICAgIHRoaXMuZXJyb3IgPSBlcnJvclxuICAgICAgaWYgKGVycm9yLm5hbWUgPT09ICdDc3NTeW50YXhFcnJvcicgJiYgIWVycm9yLnBsdWdpbikge1xuICAgICAgICBlcnJvci5wbHVnaW4gPSBwbHVnaW4ucG9zdGNzc1BsdWdpblxuICAgICAgICBlcnJvci5zZXRNZXNzYWdlKClcbiAgICAgIH0gZWxzZSBpZiAocGx1Z2luLnBvc3Rjc3NWZXJzaW9uKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgbGV0IHBsdWdpbk5hbWUgPSBwbHVnaW4ucG9zdGNzc1BsdWdpblxuICAgICAgICAgIGxldCBwbHVnaW5WZXIgPSBwbHVnaW4ucG9zdGNzc1ZlcnNpb25cbiAgICAgICAgICBsZXQgcnVudGltZVZlciA9IHRoaXMucmVzdWx0LnByb2Nlc3Nvci52ZXJzaW9uXG4gICAgICAgICAgbGV0IGEgPSBwbHVnaW5WZXIuc3BsaXQoJy4nKVxuICAgICAgICAgIGxldCBiID0gcnVudGltZVZlci5zcGxpdCgnLicpXG5cbiAgICAgICAgICBpZiAoYVswXSAhPT0gYlswXSB8fCBwYXJzZUludChhWzFdKSA+IHBhcnNlSW50KGJbMV0pKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAgICAgJ1Vua25vd24gZXJyb3IgZnJvbSBQb3N0Q1NTIHBsdWdpbi4gWW91ciBjdXJyZW50IFBvc3RDU1MgJyArXG4gICAgICAgICAgICAgICAgJ3ZlcnNpb24gaXMgJyArXG4gICAgICAgICAgICAgICAgcnVudGltZVZlciArXG4gICAgICAgICAgICAgICAgJywgYnV0ICcgK1xuICAgICAgICAgICAgICAgIHBsdWdpbk5hbWUgK1xuICAgICAgICAgICAgICAgICcgdXNlcyAnICtcbiAgICAgICAgICAgICAgICBwbHVnaW5WZXIgK1xuICAgICAgICAgICAgICAgICcuIFBlcmhhcHMgdGhpcyBpcyB0aGUgc291cmNlIG9mIHRoZSBlcnJvciBiZWxvdy4nXG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS5lcnJvcikgY29uc29sZS5lcnJvcihlcnIpXG4gICAgfVxuICAgIHJldHVybiBlcnJvclxuICB9XG5cbiAgYXN5bmMgcnVuQXN5bmMoKSB7XG4gICAgdGhpcy5wbHVnaW4gPSAwXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBsdWdpbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCBwbHVnaW4gPSB0aGlzLnBsdWdpbnNbaV1cbiAgICAgIGxldCBwcm9taXNlID0gdGhpcy5ydW5PblJvb3QocGx1Z2luKVxuICAgICAgaWYgKGlzUHJvbWlzZShwcm9taXNlKSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGF3YWl0IHByb21pc2VcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyB0aGlzLmhhbmRsZUVycm9yKGVycm9yKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5wcmVwYXJlVmlzaXRvcnMoKVxuICAgIGlmICh0aGlzLmhhc0xpc3RlbmVyKSB7XG4gICAgICBsZXQgcm9vdCA9IHRoaXMucmVzdWx0LnJvb3RcbiAgICAgIHdoaWxlICghcm9vdFtpc0NsZWFuXSkge1xuICAgICAgICByb290W2lzQ2xlYW5dID0gdHJ1ZVxuICAgICAgICBsZXQgc3RhY2sgPSBbdG9TdGFjayhyb290KV1cbiAgICAgICAgd2hpbGUgKHN0YWNrLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBsZXQgcHJvbWlzZSA9IHRoaXMudmlzaXRUaWNrKHN0YWNrKVxuICAgICAgICAgIGlmIChpc1Byb21pc2UocHJvbWlzZSkpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGF3YWl0IHByb21pc2VcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgbGV0IG5vZGUgPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXS5ub2RlXG4gICAgICAgICAgICAgIHRocm93IHRoaXMuaGFuZGxlRXJyb3IoZSwgbm9kZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMubGlzdGVuZXJzLk9uY2VFeGl0KSB7XG4gICAgICAgIGZvciAobGV0IFtwbHVnaW4sIHZpc2l0b3JdIG9mIHRoaXMubGlzdGVuZXJzLk9uY2VFeGl0KSB7XG4gICAgICAgICAgdGhpcy5yZXN1bHQubGFzdFBsdWdpbiA9IHBsdWdpblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAocm9vdC50eXBlID09PSAnZG9jdW1lbnQnKSB7XG4gICAgICAgICAgICAgIGxldCByb290cyA9IHJvb3Qubm9kZXMubWFwKHN1YlJvb3QgPT5cbiAgICAgICAgICAgICAgICB2aXNpdG9yKHN1YlJvb3QsIHRoaXMuaGVscGVycylcbiAgICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHJvb3RzKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgYXdhaXQgdmlzaXRvcihyb290LCB0aGlzLmhlbHBlcnMpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgdGhpcy5oYW5kbGVFcnJvcihlKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMucHJvY2Vzc2VkID0gdHJ1ZVxuICAgIHJldHVybiB0aGlzLnN0cmluZ2lmeSgpXG4gIH1cblxuICBwcmVwYXJlVmlzaXRvcnMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSB7fVxuICAgIGxldCBhZGQgPSAocGx1Z2luLCB0eXBlLCBjYikgPT4ge1xuICAgICAgaWYgKCF0aGlzLmxpc3RlbmVyc1t0eXBlXSkgdGhpcy5saXN0ZW5lcnNbdHlwZV0gPSBbXVxuICAgICAgdGhpcy5saXN0ZW5lcnNbdHlwZV0ucHVzaChbcGx1Z2luLCBjYl0pXG4gICAgfVxuICAgIGZvciAobGV0IHBsdWdpbiBvZiB0aGlzLnBsdWdpbnMpIHtcbiAgICAgIGlmICh0eXBlb2YgcGx1Z2luID09PSAnb2JqZWN0Jykge1xuICAgICAgICBmb3IgKGxldCBldmVudCBpbiBwbHVnaW4pIHtcbiAgICAgICAgICBpZiAoIVBMVUdJTl9QUk9QU1tldmVudF0gJiYgL15bQS1aXS8udGVzdChldmVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgICAgYFVua25vd24gZXZlbnQgJHtldmVudH0gaW4gJHtwbHVnaW4ucG9zdGNzc1BsdWdpbn0uIGAgK1xuICAgICAgICAgICAgICAgIGBUcnkgdG8gdXBkYXRlIFBvc3RDU1MgKCR7dGhpcy5wcm9jZXNzb3IudmVyc2lvbn0gbm93KS5gXG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghTk9UX1ZJU0lUT1JTW2V2ZW50XSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBwbHVnaW5bZXZlbnRdID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICBmb3IgKGxldCBmaWx0ZXIgaW4gcGx1Z2luW2V2ZW50XSkge1xuICAgICAgICAgICAgICAgIGlmIChmaWx0ZXIgPT09ICcqJykge1xuICAgICAgICAgICAgICAgICAgYWRkKHBsdWdpbiwgZXZlbnQsIHBsdWdpbltldmVudF1bZmlsdGVyXSlcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgYWRkKFxuICAgICAgICAgICAgICAgICAgICBwbHVnaW4sXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50ICsgJy0nICsgZmlsdGVyLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgICAgIHBsdWdpbltldmVudF1bZmlsdGVyXVxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcGx1Z2luW2V2ZW50XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICBhZGQocGx1Z2luLCBldmVudCwgcGx1Z2luW2V2ZW50XSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5oYXNMaXN0ZW5lciA9IE9iamVjdC5rZXlzKHRoaXMubGlzdGVuZXJzKS5sZW5ndGggPiAwXG4gIH1cblxuICB2aXNpdFRpY2soc3RhY2spIHtcbiAgICBsZXQgdmlzaXQgPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXVxuICAgIGxldCB7IG5vZGUsIHZpc2l0b3JzIH0gPSB2aXNpdFxuXG4gICAgaWYgKG5vZGUudHlwZSAhPT0gJ3Jvb3QnICYmIG5vZGUudHlwZSAhPT0gJ2RvY3VtZW50JyAmJiAhbm9kZS5wYXJlbnQpIHtcbiAgICAgIHN0YWNrLnBvcCgpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAodmlzaXRvcnMubGVuZ3RoID4gMCAmJiB2aXNpdC52aXNpdG9ySW5kZXggPCB2aXNpdG9ycy5sZW5ndGgpIHtcbiAgICAgIGxldCBbcGx1Z2luLCB2aXNpdG9yXSA9IHZpc2l0b3JzW3Zpc2l0LnZpc2l0b3JJbmRleF1cbiAgICAgIHZpc2l0LnZpc2l0b3JJbmRleCArPSAxXG4gICAgICBpZiAodmlzaXQudmlzaXRvckluZGV4ID09PSB2aXNpdG9ycy5sZW5ndGgpIHtcbiAgICAgICAgdmlzaXQudmlzaXRvcnMgPSBbXVxuICAgICAgICB2aXNpdC52aXNpdG9ySW5kZXggPSAwXG4gICAgICB9XG4gICAgICB0aGlzLnJlc3VsdC5sYXN0UGx1Z2luID0gcGx1Z2luXG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gdmlzaXRvcihub2RlLnRvUHJveHkoKSwgdGhpcy5oZWxwZXJzKVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyB0aGlzLmhhbmRsZUVycm9yKGUsIG5vZGUpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHZpc2l0Lml0ZXJhdG9yICE9PSAwKSB7XG4gICAgICBsZXQgaXRlcmF0b3IgPSB2aXNpdC5pdGVyYXRvclxuICAgICAgbGV0IGNoaWxkXG4gICAgICB3aGlsZSAoKGNoaWxkID0gbm9kZS5ub2Rlc1tub2RlLmluZGV4ZXNbaXRlcmF0b3JdXSkpIHtcbiAgICAgICAgbm9kZS5pbmRleGVzW2l0ZXJhdG9yXSArPSAxXG4gICAgICAgIGlmICghY2hpbGRbaXNDbGVhbl0pIHtcbiAgICAgICAgICBjaGlsZFtpc0NsZWFuXSA9IHRydWVcbiAgICAgICAgICBzdGFjay5wdXNoKHRvU3RhY2soY2hpbGQpKVxuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2aXNpdC5pdGVyYXRvciA9IDBcbiAgICAgIGRlbGV0ZSBub2RlLmluZGV4ZXNbaXRlcmF0b3JdXG4gICAgfVxuXG4gICAgbGV0IGV2ZW50cyA9IHZpc2l0LmV2ZW50c1xuICAgIHdoaWxlICh2aXNpdC5ldmVudEluZGV4IDwgZXZlbnRzLmxlbmd0aCkge1xuICAgICAgbGV0IGV2ZW50ID0gZXZlbnRzW3Zpc2l0LmV2ZW50SW5kZXhdXG4gICAgICB2aXNpdC5ldmVudEluZGV4ICs9IDFcbiAgICAgIGlmIChldmVudCA9PT0gQ0hJTERSRU4pIHtcbiAgICAgICAgaWYgKG5vZGUubm9kZXMgJiYgbm9kZS5ub2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICBub2RlW2lzQ2xlYW5dID0gdHJ1ZVxuICAgICAgICAgIHZpc2l0Lml0ZXJhdG9yID0gbm9kZS5nZXRJdGVyYXRvcigpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuXG4gICAgICB9IGVsc2UgaWYgKHRoaXMubGlzdGVuZXJzW2V2ZW50XSkge1xuICAgICAgICB2aXNpdC52aXNpdG9ycyA9IHRoaXMubGlzdGVuZXJzW2V2ZW50XVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICB9XG4gICAgc3RhY2sucG9wKClcbiAgfVxufVxuXG5MYXp5UmVzdWx0LnJlZ2lzdGVyUG9zdGNzcyA9IGRlcGVuZGFudCA9PiB7XG4gIHBvc3Rjc3MgPSBkZXBlbmRhbnRcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBMYXp5UmVzdWx0XG5MYXp5UmVzdWx0LmRlZmF1bHQgPSBMYXp5UmVzdWx0XG5cblJvb3QucmVnaXN0ZXJMYXp5UmVzdWx0KExhenlSZXN1bHQpXG5Eb2N1bWVudC5yZWdpc3RlckxhenlSZXN1bHQoTGF6eVJlc3VsdClcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgbGlzdCA9IHtcbiAgc3BsaXQoc3RyaW5nLCBzZXBhcmF0b3JzLCBsYXN0KSB7XG4gICAgbGV0IGFycmF5ID0gW11cbiAgICBsZXQgY3VycmVudCA9ICcnXG4gICAgbGV0IHNwbGl0ID0gZmFsc2VcblxuICAgIGxldCBmdW5jID0gMFxuICAgIGxldCBpblF1b3RlID0gZmFsc2VcbiAgICBsZXQgcHJldlF1b3RlID0gJydcbiAgICBsZXQgZXNjYXBlID0gZmFsc2VcblxuICAgIGZvciAobGV0IGxldHRlciBvZiBzdHJpbmcpIHtcbiAgICAgIGlmIChlc2NhcGUpIHtcbiAgICAgICAgZXNjYXBlID0gZmFsc2VcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnXFxcXCcpIHtcbiAgICAgICAgZXNjYXBlID0gdHJ1ZVxuICAgICAgfSBlbHNlIGlmIChpblF1b3RlKSB7XG4gICAgICAgIGlmIChsZXR0ZXIgPT09IHByZXZRdW90ZSkge1xuICAgICAgICAgIGluUXVvdGUgPSBmYWxzZVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGxldHRlciA9PT0gJ1wiJyB8fCBsZXR0ZXIgPT09IFwiJ1wiKSB7XG4gICAgICAgIGluUXVvdGUgPSB0cnVlXG4gICAgICAgIHByZXZRdW90ZSA9IGxldHRlclxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICcoJykge1xuICAgICAgICBmdW5jICs9IDFcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnKScpIHtcbiAgICAgICAgaWYgKGZ1bmMgPiAwKSBmdW5jIC09IDFcbiAgICAgIH0gZWxzZSBpZiAoZnVuYyA9PT0gMCkge1xuICAgICAgICBpZiAoc2VwYXJhdG9ycy5pbmNsdWRlcyhsZXR0ZXIpKSBzcGxpdCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKHNwbGl0KSB7XG4gICAgICAgIGlmIChjdXJyZW50ICE9PSAnJykgYXJyYXkucHVzaChjdXJyZW50LnRyaW0oKSlcbiAgICAgICAgY3VycmVudCA9ICcnXG4gICAgICAgIHNwbGl0ID0gZmFsc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgKz0gbGV0dGVyXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGxhc3QgfHwgY3VycmVudCAhPT0gJycpIGFycmF5LnB1c2goY3VycmVudC50cmltKCkpXG4gICAgcmV0dXJuIGFycmF5XG4gIH0sXG5cbiAgc3BhY2Uoc3RyaW5nKSB7XG4gICAgbGV0IHNwYWNlcyA9IFsnICcsICdcXG4nLCAnXFx0J11cbiAgICByZXR1cm4gbGlzdC5zcGxpdChzdHJpbmcsIHNwYWNlcylcbiAgfSxcblxuICBjb21tYShzdHJpbmcpIHtcbiAgICByZXR1cm4gbGlzdC5zcGxpdChzdHJpbmcsIFsnLCddLCB0cnVlKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdFxubGlzdC5kZWZhdWx0ID0gbGlzdFxuIiwiJ3VzZSBzdHJpY3QnXG5cbmxldCB7IFNvdXJjZU1hcENvbnN1bWVyLCBTb3VyY2VNYXBHZW5lcmF0b3IgfSA9IHJlcXVpcmUoJ3NvdXJjZS1tYXAtanMnKVxubGV0IHsgZGlybmFtZSwgcmVzb2x2ZSwgcmVsYXRpdmUsIHNlcCB9ID0gcmVxdWlyZSgncGF0aCcpXG5sZXQgeyBwYXRoVG9GaWxlVVJMIH0gPSByZXF1aXJlKCd1cmwnKVxuXG5sZXQgSW5wdXQgPSByZXF1aXJlKCcuL2lucHV0JylcblxubGV0IHNvdXJjZU1hcEF2YWlsYWJsZSA9IEJvb2xlYW4oU291cmNlTWFwQ29uc3VtZXIgJiYgU291cmNlTWFwR2VuZXJhdG9yKVxubGV0IHBhdGhBdmFpbGFibGUgPSBCb29sZWFuKGRpcm5hbWUgJiYgcmVzb2x2ZSAmJiByZWxhdGl2ZSAmJiBzZXApXG5cbmNsYXNzIE1hcEdlbmVyYXRvciB7XG4gIGNvbnN0cnVjdG9yKHN0cmluZ2lmeSwgcm9vdCwgb3B0cywgY3NzU3RyaW5nKSB7XG4gICAgdGhpcy5zdHJpbmdpZnkgPSBzdHJpbmdpZnlcbiAgICB0aGlzLm1hcE9wdHMgPSBvcHRzLm1hcCB8fCB7fVxuICAgIHRoaXMucm9vdCA9IHJvb3RcbiAgICB0aGlzLm9wdHMgPSBvcHRzXG4gICAgdGhpcy5jc3MgPSBjc3NTdHJpbmdcbiAgICB0aGlzLnVzZXNGaWxlVXJscyA9ICF0aGlzLm1hcE9wdHMuZnJvbSAmJiB0aGlzLm1hcE9wdHMuYWJzb2x1dGVcbiAgfVxuXG4gIGlzTWFwKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5vcHRzLm1hcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiAhIXRoaXMub3B0cy5tYXBcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMucHJldmlvdXMoKS5sZW5ndGggPiAwXG4gIH1cblxuICBwcmV2aW91cygpIHtcbiAgICBpZiAoIXRoaXMucHJldmlvdXNNYXBzKSB7XG4gICAgICB0aGlzLnByZXZpb3VzTWFwcyA9IFtdXG4gICAgICBpZiAodGhpcy5yb290KSB7XG4gICAgICAgIHRoaXMucm9vdC53YWxrKG5vZGUgPT4ge1xuICAgICAgICAgIGlmIChub2RlLnNvdXJjZSAmJiBub2RlLnNvdXJjZS5pbnB1dC5tYXApIHtcbiAgICAgICAgICAgIGxldCBtYXAgPSBub2RlLnNvdXJjZS5pbnB1dC5tYXBcbiAgICAgICAgICAgIGlmICghdGhpcy5wcmV2aW91c01hcHMuaW5jbHVkZXMobWFwKSkge1xuICAgICAgICAgICAgICB0aGlzLnByZXZpb3VzTWFwcy5wdXNoKG1hcClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgaW5wdXQgPSBuZXcgSW5wdXQodGhpcy5jc3MsIHRoaXMub3B0cylcbiAgICAgICAgaWYgKGlucHV0Lm1hcCkgdGhpcy5wcmV2aW91c01hcHMucHVzaChpbnB1dC5tYXApXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucHJldmlvdXNNYXBzXG4gIH1cblxuICBpc0lubGluZSgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMubWFwT3B0cy5pbmxpbmUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdGhpcy5tYXBPcHRzLmlubGluZVxuICAgIH1cblxuICAgIGxldCBhbm5vdGF0aW9uID0gdGhpcy5tYXBPcHRzLmFubm90YXRpb25cbiAgICBpZiAodHlwZW9mIGFubm90YXRpb24gIT09ICd1bmRlZmluZWQnICYmIGFubm90YXRpb24gIT09IHRydWUpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGlmICh0aGlzLnByZXZpb3VzKCkubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcmV2aW91cygpLnNvbWUoaSA9PiBpLmlubGluZSlcbiAgICB9XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIGlzU291cmNlc0NvbnRlbnQoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLm1hcE9wdHMuc291cmNlc0NvbnRlbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdGhpcy5tYXBPcHRzLnNvdXJjZXNDb250ZW50XG4gICAgfVxuICAgIGlmICh0aGlzLnByZXZpb3VzKCkubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcmV2aW91cygpLnNvbWUoaSA9PiBpLndpdGhDb250ZW50KCkpXG4gICAgfVxuICAgIHJldHVybiB0cnVlXG4gIH1cblxuICBjbGVhckFubm90YXRpb24oKSB7XG4gICAgaWYgKHRoaXMubWFwT3B0cy5hbm5vdGF0aW9uID09PSBmYWxzZSkgcmV0dXJuXG5cbiAgICBpZiAodGhpcy5yb290KSB7XG4gICAgICBsZXQgbm9kZVxuICAgICAgZm9yIChsZXQgaSA9IHRoaXMucm9vdC5ub2Rlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICBub2RlID0gdGhpcy5yb290Lm5vZGVzW2ldXG4gICAgICAgIGlmIChub2RlLnR5cGUgIT09ICdjb21tZW50JykgY29udGludWVcbiAgICAgICAgaWYgKG5vZGUudGV4dC5pbmRleE9mKCcjIHNvdXJjZU1hcHBpbmdVUkw9JykgPT09IDApIHtcbiAgICAgICAgICB0aGlzLnJvb3QucmVtb3ZlQ2hpbGQoaSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodGhpcy5jc3MpIHtcbiAgICAgIHRoaXMuY3NzID0gdGhpcy5jc3MucmVwbGFjZSgvKFxcbik/XFwvXFwqI1tcXFNcXHNdKj9cXCpcXC8kL2dtLCAnJylcbiAgICB9XG4gIH1cblxuICBzZXRTb3VyY2VzQ29udGVudCgpIHtcbiAgICBsZXQgYWxyZWFkeSA9IHt9XG4gICAgaWYgKHRoaXMucm9vdCkge1xuICAgICAgdGhpcy5yb290LndhbGsobm9kZSA9PiB7XG4gICAgICAgIGlmIChub2RlLnNvdXJjZSkge1xuICAgICAgICAgIGxldCBmcm9tID0gbm9kZS5zb3VyY2UuaW5wdXQuZnJvbVxuICAgICAgICAgIGlmIChmcm9tICYmICFhbHJlYWR5W2Zyb21dKSB7XG4gICAgICAgICAgICBhbHJlYWR5W2Zyb21dID0gdHJ1ZVxuICAgICAgICAgICAgbGV0IGZyb21VcmwgPSB0aGlzLnVzZXNGaWxlVXJsc1xuICAgICAgICAgICAgICA/IHRoaXMudG9GaWxlVXJsKGZyb20pXG4gICAgICAgICAgICAgIDogdGhpcy50b1VybCh0aGlzLnBhdGgoZnJvbSkpXG4gICAgICAgICAgICB0aGlzLm1hcC5zZXRTb3VyY2VDb250ZW50KGZyb21VcmwsIG5vZGUuc291cmNlLmlucHV0LmNzcylcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSBlbHNlIGlmICh0aGlzLmNzcykge1xuICAgICAgbGV0IGZyb20gPSB0aGlzLm9wdHMuZnJvbVxuICAgICAgICA/IHRoaXMudG9VcmwodGhpcy5wYXRoKHRoaXMub3B0cy5mcm9tKSlcbiAgICAgICAgOiAnPG5vIHNvdXJjZT4nXG4gICAgICB0aGlzLm1hcC5zZXRTb3VyY2VDb250ZW50KGZyb20sIHRoaXMuY3NzKVxuICAgIH1cbiAgfVxuXG4gIGFwcGx5UHJldk1hcHMoKSB7XG4gICAgZm9yIChsZXQgcHJldiBvZiB0aGlzLnByZXZpb3VzKCkpIHtcbiAgICAgIGxldCBmcm9tID0gdGhpcy50b1VybCh0aGlzLnBhdGgocHJldi5maWxlKSlcbiAgICAgIGxldCByb290ID0gcHJldi5yb290IHx8IGRpcm5hbWUocHJldi5maWxlKVxuICAgICAgbGV0IG1hcFxuXG4gICAgICBpZiAodGhpcy5tYXBPcHRzLnNvdXJjZXNDb250ZW50ID09PSBmYWxzZSkge1xuICAgICAgICBtYXAgPSBuZXcgU291cmNlTWFwQ29uc3VtZXIocHJldi50ZXh0KVxuICAgICAgICBpZiAobWFwLnNvdXJjZXNDb250ZW50KSB7XG4gICAgICAgICAgbWFwLnNvdXJjZXNDb250ZW50ID0gbWFwLnNvdXJjZXNDb250ZW50Lm1hcCgoKSA9PiBudWxsKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtYXAgPSBwcmV2LmNvbnN1bWVyKClcbiAgICAgIH1cblxuICAgICAgdGhpcy5tYXAuYXBwbHlTb3VyY2VNYXAobWFwLCBmcm9tLCB0aGlzLnRvVXJsKHRoaXMucGF0aChyb290KSkpXG4gICAgfVxuICB9XG5cbiAgaXNBbm5vdGF0aW9uKCkge1xuICAgIGlmICh0aGlzLmlzSW5saW5lKCkpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGhpcy5tYXBPcHRzLmFubm90YXRpb24gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdGhpcy5tYXBPcHRzLmFubm90YXRpb25cbiAgICB9XG4gICAgaWYgKHRoaXMucHJldmlvdXMoKS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLnByZXZpb3VzKCkuc29tZShpID0+IGkuYW5ub3RhdGlvbilcbiAgICB9XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIHRvQmFzZTY0KHN0cikge1xuICAgIGlmIChCdWZmZXIpIHtcbiAgICAgIHJldHVybiBCdWZmZXIuZnJvbShzdHIpLnRvU3RyaW5nKCdiYXNlNjQnKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gd2luZG93LmJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpKVxuICAgIH1cbiAgfVxuXG4gIGFkZEFubm90YXRpb24oKSB7XG4gICAgbGV0IGNvbnRlbnRcblxuICAgIGlmICh0aGlzLmlzSW5saW5lKCkpIHtcbiAgICAgIGNvbnRlbnQgPVxuICAgICAgICAnZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCwnICsgdGhpcy50b0Jhc2U2NCh0aGlzLm1hcC50b1N0cmluZygpKVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIHRoaXMubWFwT3B0cy5hbm5vdGF0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IHRoaXMubWFwT3B0cy5hbm5vdGF0aW9uXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5tYXBPcHRzLmFubm90YXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNvbnRlbnQgPSB0aGlzLm1hcE9wdHMuYW5ub3RhdGlvbih0aGlzLm9wdHMudG8sIHRoaXMucm9vdClcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGVudCA9IHRoaXMub3V0cHV0RmlsZSgpICsgJy5tYXAnXG4gICAgfVxuICAgIGxldCBlb2wgPSAnXFxuJ1xuICAgIGlmICh0aGlzLmNzcy5pbmNsdWRlcygnXFxyXFxuJykpIGVvbCA9ICdcXHJcXG4nXG5cbiAgICB0aGlzLmNzcyArPSBlb2wgKyAnLyojIHNvdXJjZU1hcHBpbmdVUkw9JyArIGNvbnRlbnQgKyAnICovJ1xuICB9XG5cbiAgb3V0cHV0RmlsZSgpIHtcbiAgICBpZiAodGhpcy5vcHRzLnRvKSB7XG4gICAgICByZXR1cm4gdGhpcy5wYXRoKHRoaXMub3B0cy50bylcbiAgICB9IGVsc2UgaWYgKHRoaXMub3B0cy5mcm9tKSB7XG4gICAgICByZXR1cm4gdGhpcy5wYXRoKHRoaXMub3B0cy5mcm9tKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ3RvLmNzcydcbiAgICB9XG4gIH1cblxuICBnZW5lcmF0ZU1hcCgpIHtcbiAgICBpZiAodGhpcy5yb290KSB7XG4gICAgICB0aGlzLmdlbmVyYXRlU3RyaW5nKClcbiAgICB9IGVsc2UgaWYgKHRoaXMucHJldmlvdXMoKS5sZW5ndGggPT09IDEpIHtcbiAgICAgIGxldCBwcmV2ID0gdGhpcy5wcmV2aW91cygpWzBdLmNvbnN1bWVyKClcbiAgICAgIHByZXYuZmlsZSA9IHRoaXMub3V0cHV0RmlsZSgpXG4gICAgICB0aGlzLm1hcCA9IFNvdXJjZU1hcEdlbmVyYXRvci5mcm9tU291cmNlTWFwKHByZXYpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubWFwID0gbmV3IFNvdXJjZU1hcEdlbmVyYXRvcih7IGZpbGU6IHRoaXMub3V0cHV0RmlsZSgpIH0pXG4gICAgICB0aGlzLm1hcC5hZGRNYXBwaW5nKHtcbiAgICAgICAgc291cmNlOiB0aGlzLm9wdHMuZnJvbVxuICAgICAgICAgID8gdGhpcy50b1VybCh0aGlzLnBhdGgodGhpcy5vcHRzLmZyb20pKVxuICAgICAgICAgIDogJzxubyBzb3VyY2U+JyxcbiAgICAgICAgZ2VuZXJhdGVkOiB7IGxpbmU6IDEsIGNvbHVtbjogMCB9LFxuICAgICAgICBvcmlnaW5hbDogeyBsaW5lOiAxLCBjb2x1bW46IDAgfVxuICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc1NvdXJjZXNDb250ZW50KCkpIHRoaXMuc2V0U291cmNlc0NvbnRlbnQoKVxuICAgIGlmICh0aGlzLnJvb3QgJiYgdGhpcy5wcmV2aW91cygpLmxlbmd0aCA+IDApIHRoaXMuYXBwbHlQcmV2TWFwcygpXG4gICAgaWYgKHRoaXMuaXNBbm5vdGF0aW9uKCkpIHRoaXMuYWRkQW5ub3RhdGlvbigpXG5cbiAgICBpZiAodGhpcy5pc0lubGluZSgpKSB7XG4gICAgICByZXR1cm4gW3RoaXMuY3NzXVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gW3RoaXMuY3NzLCB0aGlzLm1hcF1cbiAgICB9XG4gIH1cblxuICBwYXRoKGZpbGUpIHtcbiAgICBpZiAoZmlsZS5pbmRleE9mKCc8JykgPT09IDApIHJldHVybiBmaWxlXG4gICAgaWYgKC9eXFx3KzpcXC9cXC8vLnRlc3QoZmlsZSkpIHJldHVybiBmaWxlXG4gICAgaWYgKHRoaXMubWFwT3B0cy5hYnNvbHV0ZSkgcmV0dXJuIGZpbGVcblxuICAgIGxldCBmcm9tID0gdGhpcy5vcHRzLnRvID8gZGlybmFtZSh0aGlzLm9wdHMudG8pIDogJy4nXG5cbiAgICBpZiAodHlwZW9mIHRoaXMubWFwT3B0cy5hbm5vdGF0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgZnJvbSA9IGRpcm5hbWUocmVzb2x2ZShmcm9tLCB0aGlzLm1hcE9wdHMuYW5ub3RhdGlvbikpXG4gICAgfVxuXG4gICAgZmlsZSA9IHJlbGF0aXZlKGZyb20sIGZpbGUpXG4gICAgcmV0dXJuIGZpbGVcbiAgfVxuXG4gIHRvVXJsKHBhdGgpIHtcbiAgICBpZiAoc2VwID09PSAnXFxcXCcpIHtcbiAgICAgIHBhdGggPSBwYXRoLnJlcGxhY2UoL1xcXFwvZywgJy8nKVxuICAgIH1cbiAgICByZXR1cm4gZW5jb2RlVVJJKHBhdGgpLnJlcGxhY2UoL1sjP10vZywgZW5jb2RlVVJJQ29tcG9uZW50KVxuICB9XG5cbiAgdG9GaWxlVXJsKHBhdGgpIHtcbiAgICBpZiAocGF0aFRvRmlsZVVSTCkge1xuICAgICAgcmV0dXJuIHBhdGhUb0ZpbGVVUkwocGF0aCkudG9TdHJpbmcoKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgbWFwLmFic29sdXRlYCBvcHRpb24gaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIFBvc3RDU1MgYnVpbGQnXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgc291cmNlUGF0aChub2RlKSB7XG4gICAgaWYgKHRoaXMubWFwT3B0cy5mcm9tKSB7XG4gICAgICByZXR1cm4gdGhpcy50b1VybCh0aGlzLm1hcE9wdHMuZnJvbSlcbiAgICB9IGVsc2UgaWYgKHRoaXMudXNlc0ZpbGVVcmxzKSB7XG4gICAgICByZXR1cm4gdGhpcy50b0ZpbGVVcmwobm9kZS5zb3VyY2UuaW5wdXQuZnJvbSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMudG9VcmwodGhpcy5wYXRoKG5vZGUuc291cmNlLmlucHV0LmZyb20pKVxuICAgIH1cbiAgfVxuXG4gIGdlbmVyYXRlU3RyaW5nKCkge1xuICAgIHRoaXMuY3NzID0gJydcbiAgICB0aGlzLm1hcCA9IG5ldyBTb3VyY2VNYXBHZW5lcmF0b3IoeyBmaWxlOiB0aGlzLm91dHB1dEZpbGUoKSB9KVxuXG4gICAgbGV0IGxpbmUgPSAxXG4gICAgbGV0IGNvbHVtbiA9IDFcblxuICAgIGxldCBub1NvdXJjZSA9ICc8bm8gc291cmNlPidcbiAgICBsZXQgbWFwcGluZyA9IHtcbiAgICAgIHNvdXJjZTogJycsXG4gICAgICBnZW5lcmF0ZWQ6IHsgbGluZTogMCwgY29sdW1uOiAwIH0sXG4gICAgICBvcmlnaW5hbDogeyBsaW5lOiAwLCBjb2x1bW46IDAgfVxuICAgIH1cblxuICAgIGxldCBsaW5lcywgbGFzdFxuICAgIHRoaXMuc3RyaW5naWZ5KHRoaXMucm9vdCwgKHN0ciwgbm9kZSwgdHlwZSkgPT4ge1xuICAgICAgdGhpcy5jc3MgKz0gc3RyXG5cbiAgICAgIGlmIChub2RlICYmIHR5cGUgIT09ICdlbmQnKSB7XG4gICAgICAgIG1hcHBpbmcuZ2VuZXJhdGVkLmxpbmUgPSBsaW5lXG4gICAgICAgIG1hcHBpbmcuZ2VuZXJhdGVkLmNvbHVtbiA9IGNvbHVtbiAtIDFcbiAgICAgICAgaWYgKG5vZGUuc291cmNlICYmIG5vZGUuc291cmNlLnN0YXJ0KSB7XG4gICAgICAgICAgbWFwcGluZy5zb3VyY2UgPSB0aGlzLnNvdXJjZVBhdGgobm9kZSlcbiAgICAgICAgICBtYXBwaW5nLm9yaWdpbmFsLmxpbmUgPSBub2RlLnNvdXJjZS5zdGFydC5saW5lXG4gICAgICAgICAgbWFwcGluZy5vcmlnaW5hbC5jb2x1bW4gPSBub2RlLnNvdXJjZS5zdGFydC5jb2x1bW4gLSAxXG4gICAgICAgICAgdGhpcy5tYXAuYWRkTWFwcGluZyhtYXBwaW5nKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG1hcHBpbmcuc291cmNlID0gbm9Tb3VyY2VcbiAgICAgICAgICBtYXBwaW5nLm9yaWdpbmFsLmxpbmUgPSAxXG4gICAgICAgICAgbWFwcGluZy5vcmlnaW5hbC5jb2x1bW4gPSAwXG4gICAgICAgICAgdGhpcy5tYXAuYWRkTWFwcGluZyhtYXBwaW5nKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpbmVzID0gc3RyLm1hdGNoKC9cXG4vZylcbiAgICAgIGlmIChsaW5lcykge1xuICAgICAgICBsaW5lICs9IGxpbmVzLmxlbmd0aFxuICAgICAgICBsYXN0ID0gc3RyLmxhc3RJbmRleE9mKCdcXG4nKVxuICAgICAgICBjb2x1bW4gPSBzdHIubGVuZ3RoIC0gbGFzdFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29sdW1uICs9IHN0ci5sZW5ndGhcbiAgICAgIH1cblxuICAgICAgaWYgKG5vZGUgJiYgdHlwZSAhPT0gJ3N0YXJ0Jykge1xuICAgICAgICBsZXQgcCA9IG5vZGUucGFyZW50IHx8IHsgcmF3czoge30gfVxuICAgICAgICBsZXQgY2hpbGRsZXNzID1cbiAgICAgICAgICBub2RlLnR5cGUgPT09ICdkZWNsJyB8fCAobm9kZS50eXBlID09PSAnYXRydWxlJyAmJiAhbm9kZS5ub2RlcylcbiAgICAgICAgaWYgKCFjaGlsZGxlc3MgfHwgbm9kZSAhPT0gcC5sYXN0IHx8IHAucmF3cy5zZW1pY29sb24pIHtcbiAgICAgICAgICBpZiAobm9kZS5zb3VyY2UgJiYgbm9kZS5zb3VyY2UuZW5kKSB7XG4gICAgICAgICAgICBtYXBwaW5nLnNvdXJjZSA9IHRoaXMuc291cmNlUGF0aChub2RlKVxuICAgICAgICAgICAgbWFwcGluZy5vcmlnaW5hbC5saW5lID0gbm9kZS5zb3VyY2UuZW5kLmxpbmVcbiAgICAgICAgICAgIG1hcHBpbmcub3JpZ2luYWwuY29sdW1uID0gbm9kZS5zb3VyY2UuZW5kLmNvbHVtbiAtIDFcbiAgICAgICAgICAgIG1hcHBpbmcuZ2VuZXJhdGVkLmxpbmUgPSBsaW5lXG4gICAgICAgICAgICBtYXBwaW5nLmdlbmVyYXRlZC5jb2x1bW4gPSBjb2x1bW4gLSAyXG4gICAgICAgICAgICB0aGlzLm1hcC5hZGRNYXBwaW5nKG1hcHBpbmcpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1hcHBpbmcuc291cmNlID0gbm9Tb3VyY2VcbiAgICAgICAgICAgIG1hcHBpbmcub3JpZ2luYWwubGluZSA9IDFcbiAgICAgICAgICAgIG1hcHBpbmcub3JpZ2luYWwuY29sdW1uID0gMFxuICAgICAgICAgICAgbWFwcGluZy5nZW5lcmF0ZWQubGluZSA9IGxpbmVcbiAgICAgICAgICAgIG1hcHBpbmcuZ2VuZXJhdGVkLmNvbHVtbiA9IGNvbHVtbiAtIDFcbiAgICAgICAgICAgIHRoaXMubWFwLmFkZE1hcHBpbmcobWFwcGluZylcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgZ2VuZXJhdGUoKSB7XG4gICAgdGhpcy5jbGVhckFubm90YXRpb24oKVxuICAgIGlmIChwYXRoQXZhaWxhYmxlICYmIHNvdXJjZU1hcEF2YWlsYWJsZSAmJiB0aGlzLmlzTWFwKCkpIHtcbiAgICAgIHJldHVybiB0aGlzLmdlbmVyYXRlTWFwKClcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHJlc3VsdCA9ICcnXG4gICAgICB0aGlzLnN0cmluZ2lmeSh0aGlzLnJvb3QsIGkgPT4ge1xuICAgICAgICByZXN1bHQgKz0gaVxuICAgICAgfSlcbiAgICAgIHJldHVybiBbcmVzdWx0XVxuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcEdlbmVyYXRvclxuIiwiJ3VzZSBzdHJpY3QnXG5cbmxldCBNYXBHZW5lcmF0b3IgPSByZXF1aXJlKCcuL21hcC1nZW5lcmF0b3InKVxubGV0IHN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vc3RyaW5naWZ5JylcbmxldCB3YXJuT25jZSA9IHJlcXVpcmUoJy4vd2Fybi1vbmNlJylcbmxldCBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKVxuY29uc3QgUmVzdWx0ID0gcmVxdWlyZSgnLi9yZXN1bHQnKVxuXG5jbGFzcyBOb1dvcmtSZXN1bHQge1xuICBjb25zdHJ1Y3Rvcihwcm9jZXNzb3IsIGNzcywgb3B0cykge1xuICAgIGNzcyA9IGNzcy50b1N0cmluZygpXG4gICAgdGhpcy5zdHJpbmdpZmllZCA9IGZhbHNlXG5cbiAgICB0aGlzLl9wcm9jZXNzb3IgPSBwcm9jZXNzb3JcbiAgICB0aGlzLl9jc3MgPSBjc3NcbiAgICB0aGlzLl9vcHRzID0gb3B0c1xuICAgIHRoaXMuX21hcCA9IHVuZGVmaW5lZFxuICAgIGxldCByb290XG5cbiAgICBsZXQgc3RyID0gc3RyaW5naWZ5XG4gICAgdGhpcy5yZXN1bHQgPSBuZXcgUmVzdWx0KHRoaXMuX3Byb2Nlc3Nvciwgcm9vdCwgdGhpcy5fb3B0cylcbiAgICB0aGlzLnJlc3VsdC5jc3MgPSBjc3NcblxuICAgIGxldCBzZWxmID0gdGhpc1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLnJlc3VsdCwgJ3Jvb3QnLCB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiBzZWxmLnJvb3RcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgbGV0IG1hcCA9IG5ldyBNYXBHZW5lcmF0b3Ioc3RyLCByb290LCB0aGlzLl9vcHRzLCBjc3MpXG4gICAgaWYgKG1hcC5pc01hcCgpKSB7XG4gICAgICBsZXQgW2dlbmVyYXRlZENTUywgZ2VuZXJhdGVkTWFwXSA9IG1hcC5nZW5lcmF0ZSgpXG4gICAgICBpZiAoZ2VuZXJhdGVkQ1NTKSB7XG4gICAgICAgIHRoaXMucmVzdWx0LmNzcyA9IGdlbmVyYXRlZENTU1xuICAgICAgfVxuICAgICAgaWYgKGdlbmVyYXRlZE1hcCkge1xuICAgICAgICB0aGlzLnJlc3VsdC5tYXAgPSBnZW5lcmF0ZWRNYXBcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgcmV0dXJuICdOb1dvcmtSZXN1bHQnXG4gIH1cblxuICBnZXQgcHJvY2Vzc29yKCkge1xuICAgIHJldHVybiB0aGlzLnJlc3VsdC5wcm9jZXNzb3JcbiAgfVxuXG4gIGdldCBvcHRzKCkge1xuICAgIHJldHVybiB0aGlzLnJlc3VsdC5vcHRzXG4gIH1cblxuICBnZXQgY3NzKCkge1xuICAgIHJldHVybiB0aGlzLnJlc3VsdC5jc3NcbiAgfVxuXG4gIGdldCBjb250ZW50KCkge1xuICAgIHJldHVybiB0aGlzLnJlc3VsdC5jc3NcbiAgfVxuXG4gIGdldCBtYXAoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVzdWx0Lm1hcFxuICB9XG5cbiAgZ2V0IHJvb3QoKSB7XG4gICAgaWYgKHRoaXMuX3Jvb3QpIHtcbiAgICAgIHJldHVybiB0aGlzLl9yb290XG4gICAgfVxuXG4gICAgbGV0IHJvb3RcbiAgICBsZXQgcGFyc2VyID0gcGFyc2VcblxuICAgIHRyeSB7XG4gICAgICByb290ID0gcGFyc2VyKHRoaXMuX2NzcywgdGhpcy5fb3B0cylcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5lcnJvciA9IGVycm9yXG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZXJyb3IpIHtcbiAgICAgIHRocm93IHRoaXMuZXJyb3JcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcm9vdCA9IHJvb3RcbiAgICAgIHJldHVybiByb290XG4gICAgfVxuICB9XG5cbiAgZ2V0IG1lc3NhZ2VzKCkge1xuICAgIHJldHVybiBbXVxuICB9XG5cbiAgd2FybmluZ3MoKSB7XG4gICAgcmV0dXJuIFtdXG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5fY3NzXG4gIH1cblxuICB0aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghKCdmcm9tJyBpbiB0aGlzLl9vcHRzKSkge1xuICAgICAgICB3YXJuT25jZShcbiAgICAgICAgICAnV2l0aG91dCBgZnJvbWAgb3B0aW9uIFBvc3RDU1MgY291bGQgZ2VuZXJhdGUgd3Jvbmcgc291cmNlIG1hcCAnICtcbiAgICAgICAgICAgICdhbmQgd2lsbCBub3QgZmluZCBCcm93c2Vyc2xpc3QgY29uZmlnLiBTZXQgaXQgdG8gQ1NTIGZpbGUgcGF0aCAnICtcbiAgICAgICAgICAgICdvciB0byBgdW5kZWZpbmVkYCB0byBwcmV2ZW50IHRoaXMgd2FybmluZy4nXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5hc3luYygpLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpXG4gIH1cblxuICBjYXRjaChvblJlamVjdGVkKSB7XG4gICAgcmV0dXJuIHRoaXMuYXN5bmMoKS5jYXRjaChvblJlamVjdGVkKVxuICB9XG5cbiAgZmluYWxseShvbkZpbmFsbHkpIHtcbiAgICByZXR1cm4gdGhpcy5hc3luYygpLnRoZW4ob25GaW5hbGx5LCBvbkZpbmFsbHkpXG4gIH1cblxuICBhc3luYygpIHtcbiAgICBpZiAodGhpcy5lcnJvcikgcmV0dXJuIFByb21pc2UucmVqZWN0KHRoaXMuZXJyb3IpXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLnJlc3VsdClcbiAgfVxuXG4gIHN5bmMoKSB7XG4gICAgaWYgKHRoaXMuZXJyb3IpIHRocm93IHRoaXMuZXJyb3JcbiAgICByZXR1cm4gdGhpcy5yZXN1bHRcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE5vV29ya1Jlc3VsdFxuTm9Xb3JrUmVzdWx0LmRlZmF1bHQgPSBOb1dvcmtSZXN1bHRcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgeyBpc0NsZWFuLCBteSB9ID0gcmVxdWlyZSgnLi9zeW1ib2xzJylcbmxldCBDc3NTeW50YXhFcnJvciA9IHJlcXVpcmUoJy4vY3NzLXN5bnRheC1lcnJvcicpXG5sZXQgU3RyaW5naWZpZXIgPSByZXF1aXJlKCcuL3N0cmluZ2lmaWVyJylcbmxldCBzdHJpbmdpZnkgPSByZXF1aXJlKCcuL3N0cmluZ2lmeScpXG5cbmZ1bmN0aW9uIGNsb25lTm9kZShvYmosIHBhcmVudCkge1xuICBsZXQgY2xvbmVkID0gbmV3IG9iai5jb25zdHJ1Y3RvcigpXG5cbiAgZm9yIChsZXQgaSBpbiBvYmopIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGkpKSB7XG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAyICovXG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICBpZiAoaSA9PT0gJ3Byb3h5Q2FjaGUnKSBjb250aW51ZVxuICAgIGxldCB2YWx1ZSA9IG9ialtpXVxuICAgIGxldCB0eXBlID0gdHlwZW9mIHZhbHVlXG5cbiAgICBpZiAoaSA9PT0gJ3BhcmVudCcgJiYgdHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChwYXJlbnQpIGNsb25lZFtpXSA9IHBhcmVudFxuICAgIH0gZWxzZSBpZiAoaSA9PT0gJ3NvdXJjZScpIHtcbiAgICAgIGNsb25lZFtpXSA9IHZhbHVlXG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgY2xvbmVkW2ldID0gdmFsdWUubWFwKGogPT4gY2xvbmVOb2RlKGosIGNsb25lZCkpXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCkgdmFsdWUgPSBjbG9uZU5vZGUodmFsdWUpXG4gICAgICBjbG9uZWRbaV0gPSB2YWx1ZVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjbG9uZWRcbn1cblxuY2xhc3MgTm9kZSB7XG4gIGNvbnN0cnVjdG9yKGRlZmF1bHRzID0ge30pIHtcbiAgICB0aGlzLnJhd3MgPSB7fVxuICAgIHRoaXNbaXNDbGVhbl0gPSBmYWxzZVxuICAgIHRoaXNbbXldID0gdHJ1ZVxuXG4gICAgZm9yIChsZXQgbmFtZSBpbiBkZWZhdWx0cykge1xuICAgICAgaWYgKG5hbWUgPT09ICdub2RlcycpIHtcbiAgICAgICAgdGhpcy5ub2RlcyA9IFtdXG4gICAgICAgIGZvciAobGV0IG5vZGUgb2YgZGVmYXVsdHNbbmFtZV0pIHtcbiAgICAgICAgICBpZiAodHlwZW9mIG5vZGUuY2xvbmUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kKG5vZGUuY2xvbmUoKSlcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5hcHBlbmQobm9kZSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXNbbmFtZV0gPSBkZWZhdWx0c1tuYW1lXVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGVycm9yKG1lc3NhZ2UsIG9wdHMgPSB7fSkge1xuICAgIGlmICh0aGlzLnNvdXJjZSkge1xuICAgICAgbGV0IHsgc3RhcnQsIGVuZCB9ID0gdGhpcy5yYW5nZUJ5KG9wdHMpXG4gICAgICByZXR1cm4gdGhpcy5zb3VyY2UuaW5wdXQuZXJyb3IoXG4gICAgICAgIG1lc3NhZ2UsXG4gICAgICAgIHsgbGluZTogc3RhcnQubGluZSwgY29sdW1uOiBzdGFydC5jb2x1bW4gfSxcbiAgICAgICAgeyBsaW5lOiBlbmQubGluZSwgY29sdW1uOiBlbmQuY29sdW1uIH0sXG4gICAgICAgIG9wdHNcbiAgICAgIClcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBDc3NTeW50YXhFcnJvcihtZXNzYWdlKVxuICB9XG5cbiAgd2FybihyZXN1bHQsIHRleHQsIG9wdHMpIHtcbiAgICBsZXQgZGF0YSA9IHsgbm9kZTogdGhpcyB9XG4gICAgZm9yIChsZXQgaSBpbiBvcHRzKSBkYXRhW2ldID0gb3B0c1tpXVxuICAgIHJldHVybiByZXN1bHQud2Fybih0ZXh0LCBkYXRhKVxuICB9XG5cbiAgcmVtb3ZlKCkge1xuICAgIGlmICh0aGlzLnBhcmVudCkge1xuICAgICAgdGhpcy5wYXJlbnQucmVtb3ZlQ2hpbGQodGhpcylcbiAgICB9XG4gICAgdGhpcy5wYXJlbnQgPSB1bmRlZmluZWRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgdG9TdHJpbmcoc3RyaW5naWZpZXIgPSBzdHJpbmdpZnkpIHtcbiAgICBpZiAoc3RyaW5naWZpZXIuc3RyaW5naWZ5KSBzdHJpbmdpZmllciA9IHN0cmluZ2lmaWVyLnN0cmluZ2lmeVxuICAgIGxldCByZXN1bHQgPSAnJ1xuICAgIHN0cmluZ2lmaWVyKHRoaXMsIGkgPT4ge1xuICAgICAgcmVzdWx0ICs9IGlcbiAgICB9KVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGFzc2lnbihvdmVycmlkZXMgPSB7fSkge1xuICAgIGZvciAobGV0IG5hbWUgaW4gb3ZlcnJpZGVzKSB7XG4gICAgICB0aGlzW25hbWVdID0gb3ZlcnJpZGVzW25hbWVdXG4gICAgfVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBjbG9uZShvdmVycmlkZXMgPSB7fSkge1xuICAgIGxldCBjbG9uZWQgPSBjbG9uZU5vZGUodGhpcylcbiAgICBmb3IgKGxldCBuYW1lIGluIG92ZXJyaWRlcykge1xuICAgICAgY2xvbmVkW25hbWVdID0gb3ZlcnJpZGVzW25hbWVdXG4gICAgfVxuICAgIHJldHVybiBjbG9uZWRcbiAgfVxuXG4gIGNsb25lQmVmb3JlKG92ZXJyaWRlcyA9IHt9KSB7XG4gICAgbGV0IGNsb25lZCA9IHRoaXMuY2xvbmUob3ZlcnJpZGVzKVxuICAgIHRoaXMucGFyZW50Lmluc2VydEJlZm9yZSh0aGlzLCBjbG9uZWQpXG4gICAgcmV0dXJuIGNsb25lZFxuICB9XG5cbiAgY2xvbmVBZnRlcihvdmVycmlkZXMgPSB7fSkge1xuICAgIGxldCBjbG9uZWQgPSB0aGlzLmNsb25lKG92ZXJyaWRlcylcbiAgICB0aGlzLnBhcmVudC5pbnNlcnRBZnRlcih0aGlzLCBjbG9uZWQpXG4gICAgcmV0dXJuIGNsb25lZFxuICB9XG5cbiAgcmVwbGFjZVdpdGgoLi4ubm9kZXMpIHtcbiAgICBpZiAodGhpcy5wYXJlbnQpIHtcbiAgICAgIGxldCBib29rbWFyayA9IHRoaXNcbiAgICAgIGxldCBmb3VuZFNlbGYgPSBmYWxzZVxuICAgICAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xuICAgICAgICBpZiAobm9kZSA9PT0gdGhpcykge1xuICAgICAgICAgIGZvdW5kU2VsZiA9IHRydWVcbiAgICAgICAgfSBlbHNlIGlmIChmb3VuZFNlbGYpIHtcbiAgICAgICAgICB0aGlzLnBhcmVudC5pbnNlcnRBZnRlcihib29rbWFyaywgbm9kZSlcbiAgICAgICAgICBib29rbWFyayA9IG5vZGVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUoYm9va21hcmssIG5vZGUpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFmb3VuZFNlbGYpIHtcbiAgICAgICAgdGhpcy5yZW1vdmUoKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBuZXh0KCkge1xuICAgIGlmICghdGhpcy5wYXJlbnQpIHJldHVybiB1bmRlZmluZWRcbiAgICBsZXQgaW5kZXggPSB0aGlzLnBhcmVudC5pbmRleCh0aGlzKVxuICAgIHJldHVybiB0aGlzLnBhcmVudC5ub2Rlc1tpbmRleCArIDFdXG4gIH1cblxuICBwcmV2KCkge1xuICAgIGlmICghdGhpcy5wYXJlbnQpIHJldHVybiB1bmRlZmluZWRcbiAgICBsZXQgaW5kZXggPSB0aGlzLnBhcmVudC5pbmRleCh0aGlzKVxuICAgIHJldHVybiB0aGlzLnBhcmVudC5ub2Rlc1tpbmRleCAtIDFdXG4gIH1cblxuICBiZWZvcmUoYWRkKSB7XG4gICAgdGhpcy5wYXJlbnQuaW5zZXJ0QmVmb3JlKHRoaXMsIGFkZClcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgYWZ0ZXIoYWRkKSB7XG4gICAgdGhpcy5wYXJlbnQuaW5zZXJ0QWZ0ZXIodGhpcywgYWRkKVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICByb290KCkge1xuICAgIGxldCByZXN1bHQgPSB0aGlzXG4gICAgd2hpbGUgKHJlc3VsdC5wYXJlbnQgJiYgcmVzdWx0LnBhcmVudC50eXBlICE9PSAnZG9jdW1lbnQnKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQucGFyZW50XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIHJhdyhwcm9wLCBkZWZhdWx0VHlwZSkge1xuICAgIGxldCBzdHIgPSBuZXcgU3RyaW5naWZpZXIoKVxuICAgIHJldHVybiBzdHIucmF3KHRoaXMsIHByb3AsIGRlZmF1bHRUeXBlKVxuICB9XG5cbiAgY2xlYW5SYXdzKGtlZXBCZXR3ZWVuKSB7XG4gICAgZGVsZXRlIHRoaXMucmF3cy5iZWZvcmVcbiAgICBkZWxldGUgdGhpcy5yYXdzLmFmdGVyXG4gICAgaWYgKCFrZWVwQmV0d2VlbikgZGVsZXRlIHRoaXMucmF3cy5iZXR3ZWVuXG4gIH1cblxuICB0b0pTT04oXywgaW5wdXRzKSB7XG4gICAgbGV0IGZpeGVkID0ge31cbiAgICBsZXQgZW1pdElucHV0cyA9IGlucHV0cyA9PSBudWxsXG4gICAgaW5wdXRzID0gaW5wdXRzIHx8IG5ldyBNYXAoKVxuICAgIGxldCBpbnB1dHNOZXh0SW5kZXggPSAwXG5cbiAgICBmb3IgKGxldCBuYW1lIGluIHRoaXMpIHtcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMsIG5hbWUpKSB7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDIgKi9cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cbiAgICAgIGlmIChuYW1lID09PSAncGFyZW50JyB8fCBuYW1lID09PSAncHJveHlDYWNoZScpIGNvbnRpbnVlXG4gICAgICBsZXQgdmFsdWUgPSB0aGlzW25hbWVdXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICBmaXhlZFtuYW1lXSA9IHZhbHVlLm1hcChpID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIGkgPT09ICdvYmplY3QnICYmIGkudG9KU09OKSB7XG4gICAgICAgICAgICByZXR1cm4gaS50b0pTT04obnVsbCwgaW5wdXRzKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gaVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZS50b0pTT04pIHtcbiAgICAgICAgZml4ZWRbbmFtZV0gPSB2YWx1ZS50b0pTT04obnVsbCwgaW5wdXRzKVxuICAgICAgfSBlbHNlIGlmIChuYW1lID09PSAnc291cmNlJykge1xuICAgICAgICBsZXQgaW5wdXRJZCA9IGlucHV0cy5nZXQodmFsdWUuaW5wdXQpXG4gICAgICAgIGlmIChpbnB1dElkID09IG51bGwpIHtcbiAgICAgICAgICBpbnB1dElkID0gaW5wdXRzTmV4dEluZGV4XG4gICAgICAgICAgaW5wdXRzLnNldCh2YWx1ZS5pbnB1dCwgaW5wdXRzTmV4dEluZGV4KVxuICAgICAgICAgIGlucHV0c05leHRJbmRleCsrXG4gICAgICAgIH1cbiAgICAgICAgZml4ZWRbbmFtZV0gPSB7XG4gICAgICAgICAgaW5wdXRJZCxcbiAgICAgICAgICBzdGFydDogdmFsdWUuc3RhcnQsXG4gICAgICAgICAgZW5kOiB2YWx1ZS5lbmRcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZml4ZWRbbmFtZV0gPSB2YWx1ZVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChlbWl0SW5wdXRzKSB7XG4gICAgICBmaXhlZC5pbnB1dHMgPSBbLi4uaW5wdXRzLmtleXMoKV0ubWFwKGlucHV0ID0+IGlucHV0LnRvSlNPTigpKVxuICAgIH1cblxuICAgIHJldHVybiBmaXhlZFxuICB9XG5cbiAgcG9zaXRpb25JbnNpZGUoaW5kZXgpIHtcbiAgICBsZXQgc3RyaW5nID0gdGhpcy50b1N0cmluZygpXG4gICAgbGV0IGNvbHVtbiA9IHRoaXMuc291cmNlLnN0YXJ0LmNvbHVtblxuICAgIGxldCBsaW5lID0gdGhpcy5zb3VyY2Uuc3RhcnQubGluZVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmRleDsgaSsrKSB7XG4gICAgICBpZiAoc3RyaW5nW2ldID09PSAnXFxuJykge1xuICAgICAgICBjb2x1bW4gPSAxXG4gICAgICAgIGxpbmUgKz0gMVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29sdW1uICs9IDFcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4geyBsaW5lLCBjb2x1bW4gfVxuICB9XG5cbiAgcG9zaXRpb25CeShvcHRzKSB7XG4gICAgbGV0IHBvcyA9IHRoaXMuc291cmNlLnN0YXJ0XG4gICAgaWYgKG9wdHMuaW5kZXgpIHtcbiAgICAgIHBvcyA9IHRoaXMucG9zaXRpb25JbnNpZGUob3B0cy5pbmRleClcbiAgICB9IGVsc2UgaWYgKG9wdHMud29yZCkge1xuICAgICAgbGV0IGluZGV4ID0gdGhpcy50b1N0cmluZygpLmluZGV4T2Yob3B0cy53b3JkKVxuICAgICAgaWYgKGluZGV4ICE9PSAtMSkgcG9zID0gdGhpcy5wb3NpdGlvbkluc2lkZShpbmRleClcbiAgICB9XG4gICAgcmV0dXJuIHBvc1xuICB9XG5cbiAgcmFuZ2VCeShvcHRzKSB7XG4gICAgbGV0IHN0YXJ0ID0ge1xuICAgICAgbGluZTogdGhpcy5zb3VyY2Uuc3RhcnQubGluZSxcbiAgICAgIGNvbHVtbjogdGhpcy5zb3VyY2Uuc3RhcnQuY29sdW1uXG4gICAgfVxuICAgIGxldCBlbmQgPSB0aGlzLnNvdXJjZS5lbmRcbiAgICAgID8ge1xuICAgICAgICAgIGxpbmU6IHRoaXMuc291cmNlLmVuZC5saW5lLFxuICAgICAgICAgIGNvbHVtbjogdGhpcy5zb3VyY2UuZW5kLmNvbHVtbiArIDFcbiAgICAgICAgfVxuICAgICAgOiB7XG4gICAgICAgICAgbGluZTogc3RhcnQubGluZSxcbiAgICAgICAgICBjb2x1bW46IHN0YXJ0LmNvbHVtbiArIDFcbiAgICAgICAgfVxuXG4gICAgaWYgKG9wdHMud29yZCkge1xuICAgICAgbGV0IGluZGV4ID0gdGhpcy50b1N0cmluZygpLmluZGV4T2Yob3B0cy53b3JkKVxuICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICBzdGFydCA9IHRoaXMucG9zaXRpb25JbnNpZGUoaW5kZXgpXG4gICAgICAgIGVuZCA9IHRoaXMucG9zaXRpb25JbnNpZGUoaW5kZXggKyBvcHRzLndvcmQubGVuZ3RoKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0cy5zdGFydCkge1xuICAgICAgICBzdGFydCA9IHtcbiAgICAgICAgICBsaW5lOiBvcHRzLnN0YXJ0LmxpbmUsXG4gICAgICAgICAgY29sdW1uOiBvcHRzLnN0YXJ0LmNvbHVtblxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG9wdHMuaW5kZXgpIHtcbiAgICAgICAgc3RhcnQgPSB0aGlzLnBvc2l0aW9uSW5zaWRlKG9wdHMuaW5kZXgpXG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRzLmVuZCkge1xuICAgICAgICBlbmQgPSB7XG4gICAgICAgICAgbGluZTogb3B0cy5lbmQubGluZSxcbiAgICAgICAgICBjb2x1bW46IG9wdHMuZW5kLmNvbHVtblxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG9wdHMuZW5kSW5kZXgpIHtcbiAgICAgICAgZW5kID0gdGhpcy5wb3NpdGlvbkluc2lkZShvcHRzLmVuZEluZGV4KVxuICAgICAgfSBlbHNlIGlmIChvcHRzLmluZGV4KSB7XG4gICAgICAgIGVuZCA9IHRoaXMucG9zaXRpb25JbnNpZGUob3B0cy5pbmRleCArIDEpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgZW5kLmxpbmUgPCBzdGFydC5saW5lIHx8XG4gICAgICAoZW5kLmxpbmUgPT09IHN0YXJ0LmxpbmUgJiYgZW5kLmNvbHVtbiA8PSBzdGFydC5jb2x1bW4pXG4gICAgKSB7XG4gICAgICBlbmQgPSB7IGxpbmU6IHN0YXJ0LmxpbmUsIGNvbHVtbjogc3RhcnQuY29sdW1uICsgMSB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgc3RhcnQsIGVuZCB9XG4gIH1cblxuICBnZXRQcm94eVByb2Nlc3NvcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2V0KG5vZGUsIHByb3AsIHZhbHVlKSB7XG4gICAgICAgIGlmIChub2RlW3Byb3BdID09PSB2YWx1ZSkgcmV0dXJuIHRydWVcbiAgICAgICAgbm9kZVtwcm9wXSA9IHZhbHVlXG4gICAgICAgIGlmIChcbiAgICAgICAgICBwcm9wID09PSAncHJvcCcgfHxcbiAgICAgICAgICBwcm9wID09PSAndmFsdWUnIHx8XG4gICAgICAgICAgcHJvcCA9PT0gJ25hbWUnIHx8XG4gICAgICAgICAgcHJvcCA9PT0gJ3BhcmFtcycgfHxcbiAgICAgICAgICBwcm9wID09PSAnaW1wb3J0YW50JyB8fFxuICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgcHJvcCA9PT0gJ3RleHQnXG4gICAgICAgICkge1xuICAgICAgICAgIG5vZGUubWFya0RpcnR5KClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfSxcblxuICAgICAgZ2V0KG5vZGUsIHByb3ApIHtcbiAgICAgICAgaWYgKHByb3AgPT09ICdwcm94eU9mJykge1xuICAgICAgICAgIHJldHVybiBub2RlXG4gICAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gJ3Jvb3QnKSB7XG4gICAgICAgICAgcmV0dXJuICgpID0+IG5vZGUucm9vdCgpLnRvUHJveHkoKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBub2RlW3Byb3BdXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB0b1Byb3h5KCkge1xuICAgIGlmICghdGhpcy5wcm94eUNhY2hlKSB7XG4gICAgICB0aGlzLnByb3h5Q2FjaGUgPSBuZXcgUHJveHkodGhpcywgdGhpcy5nZXRQcm94eVByb2Nlc3NvcigpKVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5wcm94eUNhY2hlXG4gIH1cblxuICBhZGRUb0Vycm9yKGVycm9yKSB7XG4gICAgZXJyb3IucG9zdGNzc05vZGUgPSB0aGlzXG4gICAgaWYgKGVycm9yLnN0YWNrICYmIHRoaXMuc291cmNlICYmIC9cXG5cXHN7NH1hdCAvLnRlc3QoZXJyb3Iuc3RhY2spKSB7XG4gICAgICBsZXQgcyA9IHRoaXMuc291cmNlXG4gICAgICBlcnJvci5zdGFjayA9IGVycm9yLnN0YWNrLnJlcGxhY2UoXG4gICAgICAgIC9cXG5cXHN7NH1hdCAvLFxuICAgICAgICBgJCYke3MuaW5wdXQuZnJvbX06JHtzLnN0YXJ0LmxpbmV9OiR7cy5zdGFydC5jb2x1bW59JCZgXG4gICAgICApXG4gICAgfVxuICAgIHJldHVybiBlcnJvclxuICB9XG5cbiAgbWFya0RpcnR5KCkge1xuICAgIGlmICh0aGlzW2lzQ2xlYW5dKSB7XG4gICAgICB0aGlzW2lzQ2xlYW5dID0gZmFsc2VcbiAgICAgIGxldCBuZXh0ID0gdGhpc1xuICAgICAgd2hpbGUgKChuZXh0ID0gbmV4dC5wYXJlbnQpKSB7XG4gICAgICAgIG5leHRbaXNDbGVhbl0gPSBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGdldCBwcm94eU9mKCkge1xuICAgIHJldHVybiB0aGlzXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBOb2RlXG5Ob2RlLmRlZmF1bHQgPSBOb2RlXG4iLCIndXNlIHN0cmljdCdcblxubGV0IENvbnRhaW5lciA9IHJlcXVpcmUoJy4vY29udGFpbmVyJylcbmxldCBQYXJzZXIgPSByZXF1aXJlKCcuL3BhcnNlcicpXG5sZXQgSW5wdXQgPSByZXF1aXJlKCcuL2lucHV0JylcblxuZnVuY3Rpb24gcGFyc2UoY3NzLCBvcHRzKSB7XG4gIGxldCBpbnB1dCA9IG5ldyBJbnB1dChjc3MsIG9wdHMpXG4gIGxldCBwYXJzZXIgPSBuZXcgUGFyc2VyKGlucHV0KVxuICB0cnkge1xuICAgIHBhcnNlci5wYXJzZSgpXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKGUubmFtZSA9PT0gJ0Nzc1N5bnRheEVycm9yJyAmJiBvcHRzICYmIG9wdHMuZnJvbSkge1xuICAgICAgICBpZiAoL1xcLnNjc3MkL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9XG4gICAgICAgICAgICAnXFxuWW91IHRyaWVkIHRvIHBhcnNlIFNDU1Mgd2l0aCAnICtcbiAgICAgICAgICAgICd0aGUgc3RhbmRhcmQgQ1NTIHBhcnNlcjsgJyArXG4gICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3Mtc2NzcyBwYXJzZXInXG4gICAgICAgIH0gZWxzZSBpZiAoL1xcLnNhc3MvaS50ZXN0KG9wdHMuZnJvbSkpIHtcbiAgICAgICAgICBlLm1lc3NhZ2UgKz1cbiAgICAgICAgICAgICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgU2FzcyB3aXRoICcgK1xuICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICd0cnkgYWdhaW4gd2l0aCB0aGUgcG9zdGNzcy1zYXNzIHBhcnNlcidcbiAgICAgICAgfSBlbHNlIGlmICgvXFwubGVzcyQvaS50ZXN0KG9wdHMuZnJvbSkpIHtcbiAgICAgICAgICBlLm1lc3NhZ2UgKz1cbiAgICAgICAgICAgICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgTGVzcyB3aXRoICcgK1xuICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICd0cnkgYWdhaW4gd2l0aCB0aGUgcG9zdGNzcy1sZXNzIHBhcnNlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBlXG4gIH1cblxuICByZXR1cm4gcGFyc2VyLnJvb3Rcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXJzZVxucGFyc2UuZGVmYXVsdCA9IHBhcnNlXG5cbkNvbnRhaW5lci5yZWdpc3RlclBhcnNlKHBhcnNlKVxuIiwiJ3VzZSBzdHJpY3QnXG5cbmxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4vZGVjbGFyYXRpb24nKVxubGV0IHRva2VuaXplciA9IHJlcXVpcmUoJy4vdG9rZW5pemUnKVxubGV0IENvbW1lbnQgPSByZXF1aXJlKCcuL2NvbW1lbnQnKVxubGV0IEF0UnVsZSA9IHJlcXVpcmUoJy4vYXQtcnVsZScpXG5sZXQgUm9vdCA9IHJlcXVpcmUoJy4vcm9vdCcpXG5sZXQgUnVsZSA9IHJlcXVpcmUoJy4vcnVsZScpXG5cbmNvbnN0IFNBRkVfQ09NTUVOVF9ORUlHSEJPUiA9IHtcbiAgZW1wdHk6IHRydWUsXG4gIHNwYWNlOiB0cnVlXG59XG5cbmZ1bmN0aW9uIGZpbmRMYXN0V2l0aFBvc2l0aW9uKHRva2Vucykge1xuICBmb3IgKGxldCBpID0gdG9rZW5zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgbGV0IHRva2VuID0gdG9rZW5zW2ldXG4gICAgbGV0IHBvcyA9IHRva2VuWzNdIHx8IHRva2VuWzJdXG4gICAgaWYgKHBvcykgcmV0dXJuIHBvc1xuICB9XG59XG5cbmNsYXNzIFBhcnNlciB7XG4gIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgdGhpcy5pbnB1dCA9IGlucHV0XG5cbiAgICB0aGlzLnJvb3QgPSBuZXcgUm9vdCgpXG4gICAgdGhpcy5jdXJyZW50ID0gdGhpcy5yb290XG4gICAgdGhpcy5zcGFjZXMgPSAnJ1xuICAgIHRoaXMuc2VtaWNvbG9uID0gZmFsc2VcbiAgICB0aGlzLmN1c3RvbVByb3BlcnR5ID0gZmFsc2VcblxuICAgIHRoaXMuY3JlYXRlVG9rZW5pemVyKClcbiAgICB0aGlzLnJvb3Quc291cmNlID0geyBpbnB1dCwgc3RhcnQ6IHsgb2Zmc2V0OiAwLCBsaW5lOiAxLCBjb2x1bW46IDEgfSB9XG4gIH1cblxuICBjcmVhdGVUb2tlbml6ZXIoKSB7XG4gICAgdGhpcy50b2tlbml6ZXIgPSB0b2tlbml6ZXIodGhpcy5pbnB1dClcbiAgfVxuXG4gIHBhcnNlKCkge1xuICAgIGxldCB0b2tlblxuICAgIHdoaWxlICghdGhpcy50b2tlbml6ZXIuZW5kT2ZGaWxlKCkpIHtcbiAgICAgIHRva2VuID0gdGhpcy50b2tlbml6ZXIubmV4dFRva2VuKClcblxuICAgICAgc3dpdGNoICh0b2tlblswXSkge1xuICAgICAgICBjYXNlICdzcGFjZSc6XG4gICAgICAgICAgdGhpcy5zcGFjZXMgKz0gdG9rZW5bMV1cbiAgICAgICAgICBicmVha1xuXG4gICAgICAgIGNhc2UgJzsnOlxuICAgICAgICAgIHRoaXMuZnJlZVNlbWljb2xvbih0b2tlbilcbiAgICAgICAgICBicmVha1xuXG4gICAgICAgIGNhc2UgJ30nOlxuICAgICAgICAgIHRoaXMuZW5kKHRva2VuKVxuICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgY2FzZSAnY29tbWVudCc6XG4gICAgICAgICAgdGhpcy5jb21tZW50KHRva2VuKVxuICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgY2FzZSAnYXQtd29yZCc6XG4gICAgICAgICAgdGhpcy5hdHJ1bGUodG9rZW4pXG4gICAgICAgICAgYnJlYWtcblxuICAgICAgICBjYXNlICd7JzpcbiAgICAgICAgICB0aGlzLmVtcHR5UnVsZSh0b2tlbilcbiAgICAgICAgICBicmVha1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhpcy5vdGhlcih0b2tlbilcbiAgICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmVuZEZpbGUoKVxuICB9XG5cbiAgY29tbWVudCh0b2tlbikge1xuICAgIGxldCBub2RlID0gbmV3IENvbW1lbnQoKVxuICAgIHRoaXMuaW5pdChub2RlLCB0b2tlblsyXSlcbiAgICBub2RlLnNvdXJjZS5lbmQgPSB0aGlzLmdldFBvc2l0aW9uKHRva2VuWzNdIHx8IHRva2VuWzJdKVxuXG4gICAgbGV0IHRleHQgPSB0b2tlblsxXS5zbGljZSgyLCAtMilcbiAgICBpZiAoL15cXHMqJC8udGVzdCh0ZXh0KSkge1xuICAgICAgbm9kZS50ZXh0ID0gJydcbiAgICAgIG5vZGUucmF3cy5sZWZ0ID0gdGV4dFxuICAgICAgbm9kZS5yYXdzLnJpZ2h0ID0gJydcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IG1hdGNoID0gdGV4dC5tYXRjaCgvXihcXHMqKShbXl0qXFxTKShcXHMqKSQvKVxuICAgICAgbm9kZS50ZXh0ID0gbWF0Y2hbMl1cbiAgICAgIG5vZGUucmF3cy5sZWZ0ID0gbWF0Y2hbMV1cbiAgICAgIG5vZGUucmF3cy5yaWdodCA9IG1hdGNoWzNdXG4gICAgfVxuICB9XG5cbiAgZW1wdHlSdWxlKHRva2VuKSB7XG4gICAgbGV0IG5vZGUgPSBuZXcgUnVsZSgpXG4gICAgdGhpcy5pbml0KG5vZGUsIHRva2VuWzJdKVxuICAgIG5vZGUuc2VsZWN0b3IgPSAnJ1xuICAgIG5vZGUucmF3cy5iZXR3ZWVuID0gJydcbiAgICB0aGlzLmN1cnJlbnQgPSBub2RlXG4gIH1cblxuICBvdGhlcihzdGFydCkge1xuICAgIGxldCBlbmQgPSBmYWxzZVxuICAgIGxldCB0eXBlID0gbnVsbFxuICAgIGxldCBjb2xvbiA9IGZhbHNlXG4gICAgbGV0IGJyYWNrZXQgPSBudWxsXG4gICAgbGV0IGJyYWNrZXRzID0gW11cbiAgICBsZXQgY3VzdG9tUHJvcGVydHkgPSBzdGFydFsxXS5zdGFydHNXaXRoKCctLScpXG5cbiAgICBsZXQgdG9rZW5zID0gW11cbiAgICBsZXQgdG9rZW4gPSBzdGFydFxuICAgIHdoaWxlICh0b2tlbikge1xuICAgICAgdHlwZSA9IHRva2VuWzBdXG4gICAgICB0b2tlbnMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHR5cGUgPT09ICcoJyB8fCB0eXBlID09PSAnWycpIHtcbiAgICAgICAgaWYgKCFicmFja2V0KSBicmFja2V0ID0gdG9rZW5cbiAgICAgICAgYnJhY2tldHMucHVzaCh0eXBlID09PSAnKCcgPyAnKScgOiAnXScpXG4gICAgICB9IGVsc2UgaWYgKGN1c3RvbVByb3BlcnR5ICYmIGNvbG9uICYmIHR5cGUgPT09ICd7Jykge1xuICAgICAgICBpZiAoIWJyYWNrZXQpIGJyYWNrZXQgPSB0b2tlblxuICAgICAgICBicmFja2V0cy5wdXNoKCd9JylcbiAgICAgIH0gZWxzZSBpZiAoYnJhY2tldHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGlmICh0eXBlID09PSAnOycpIHtcbiAgICAgICAgICBpZiAoY29sb24pIHtcbiAgICAgICAgICAgIHRoaXMuZGVjbCh0b2tlbnMsIGN1c3RvbVByb3BlcnR5KVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICd7Jykge1xuICAgICAgICAgIHRoaXMucnVsZSh0b2tlbnMpXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ30nKSB7XG4gICAgICAgICAgdGhpcy50b2tlbml6ZXIuYmFjayh0b2tlbnMucG9wKCkpXG4gICAgICAgICAgZW5kID0gdHJ1ZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJzonKSB7XG4gICAgICAgICAgY29sb24gPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gYnJhY2tldHNbYnJhY2tldHMubGVuZ3RoIC0gMV0pIHtcbiAgICAgICAgYnJhY2tldHMucG9wKClcbiAgICAgICAgaWYgKGJyYWNrZXRzLmxlbmd0aCA9PT0gMCkgYnJhY2tldCA9IG51bGxcbiAgICAgIH1cblxuICAgICAgdG9rZW4gPSB0aGlzLnRva2VuaXplci5uZXh0VG9rZW4oKVxuICAgIH1cblxuICAgIGlmICh0aGlzLnRva2VuaXplci5lbmRPZkZpbGUoKSkgZW5kID0gdHJ1ZVxuICAgIGlmIChicmFja2V0cy5sZW5ndGggPiAwKSB0aGlzLnVuY2xvc2VkQnJhY2tldChicmFja2V0KVxuXG4gICAgaWYgKGVuZCAmJiBjb2xvbikge1xuICAgICAgaWYgKCFjdXN0b21Qcm9wZXJ0eSkge1xuICAgICAgICB3aGlsZSAodG9rZW5zLmxlbmd0aCkge1xuICAgICAgICAgIHRva2VuID0gdG9rZW5zW3Rva2Vucy5sZW5ndGggLSAxXVswXVxuICAgICAgICAgIGlmICh0b2tlbiAhPT0gJ3NwYWNlJyAmJiB0b2tlbiAhPT0gJ2NvbW1lbnQnKSBicmVha1xuICAgICAgICAgIHRoaXMudG9rZW5pemVyLmJhY2sodG9rZW5zLnBvcCgpKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmRlY2wodG9rZW5zLCBjdXN0b21Qcm9wZXJ0eSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy51bmtub3duV29yZCh0b2tlbnMpXG4gICAgfVxuICB9XG5cbiAgcnVsZSh0b2tlbnMpIHtcbiAgICB0b2tlbnMucG9wKClcblxuICAgIGxldCBub2RlID0gbmV3IFJ1bGUoKVxuICAgIHRoaXMuaW5pdChub2RlLCB0b2tlbnNbMF1bMl0pXG5cbiAgICBub2RlLnJhd3MuYmV0d2VlbiA9IHRoaXMuc3BhY2VzQW5kQ29tbWVudHNGcm9tRW5kKHRva2VucylcbiAgICB0aGlzLnJhdyhub2RlLCAnc2VsZWN0b3InLCB0b2tlbnMpXG4gICAgdGhpcy5jdXJyZW50ID0gbm9kZVxuICB9XG5cbiAgZGVjbCh0b2tlbnMsIGN1c3RvbVByb3BlcnR5KSB7XG4gICAgbGV0IG5vZGUgPSBuZXcgRGVjbGFyYXRpb24oKVxuICAgIHRoaXMuaW5pdChub2RlLCB0b2tlbnNbMF1bMl0pXG5cbiAgICBsZXQgbGFzdCA9IHRva2Vuc1t0b2tlbnMubGVuZ3RoIC0gMV1cbiAgICBpZiAobGFzdFswXSA9PT0gJzsnKSB7XG4gICAgICB0aGlzLnNlbWljb2xvbiA9IHRydWVcbiAgICAgIHRva2Vucy5wb3AoKVxuICAgIH1cblxuICAgIG5vZGUuc291cmNlLmVuZCA9IHRoaXMuZ2V0UG9zaXRpb24oXG4gICAgICBsYXN0WzNdIHx8IGxhc3RbMl0gfHwgZmluZExhc3RXaXRoUG9zaXRpb24odG9rZW5zKVxuICAgIClcblxuICAgIHdoaWxlICh0b2tlbnNbMF1bMF0gIT09ICd3b3JkJykge1xuICAgICAgaWYgKHRva2Vucy5sZW5ndGggPT09IDEpIHRoaXMudW5rbm93bldvcmQodG9rZW5zKVxuICAgICAgbm9kZS5yYXdzLmJlZm9yZSArPSB0b2tlbnMuc2hpZnQoKVsxXVxuICAgIH1cbiAgICBub2RlLnNvdXJjZS5zdGFydCA9IHRoaXMuZ2V0UG9zaXRpb24odG9rZW5zWzBdWzJdKVxuXG4gICAgbm9kZS5wcm9wID0gJydcbiAgICB3aGlsZSAodG9rZW5zLmxlbmd0aCkge1xuICAgICAgbGV0IHR5cGUgPSB0b2tlbnNbMF1bMF1cbiAgICAgIGlmICh0eXBlID09PSAnOicgfHwgdHlwZSA9PT0gJ3NwYWNlJyB8fCB0eXBlID09PSAnY29tbWVudCcpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICAgIG5vZGUucHJvcCArPSB0b2tlbnMuc2hpZnQoKVsxXVxuICAgIH1cblxuICAgIG5vZGUucmF3cy5iZXR3ZWVuID0gJydcblxuICAgIGxldCB0b2tlblxuICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoKSB7XG4gICAgICB0b2tlbiA9IHRva2Vucy5zaGlmdCgpXG5cbiAgICAgIGlmICh0b2tlblswXSA9PT0gJzonKSB7XG4gICAgICAgIG5vZGUucmF3cy5iZXR3ZWVuICs9IHRva2VuWzFdXG4gICAgICAgIGJyZWFrXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodG9rZW5bMF0gPT09ICd3b3JkJyAmJiAvXFx3Ly50ZXN0KHRva2VuWzFdKSkge1xuICAgICAgICAgIHRoaXMudW5rbm93bldvcmQoW3Rva2VuXSlcbiAgICAgICAgfVxuICAgICAgICBub2RlLnJhd3MuYmV0d2VlbiArPSB0b2tlblsxXVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChub2RlLnByb3BbMF0gPT09ICdfJyB8fCBub2RlLnByb3BbMF0gPT09ICcqJykge1xuICAgICAgbm9kZS5yYXdzLmJlZm9yZSArPSBub2RlLnByb3BbMF1cbiAgICAgIG5vZGUucHJvcCA9IG5vZGUucHJvcC5zbGljZSgxKVxuICAgIH1cblxuICAgIGxldCBmaXJzdFNwYWNlcyA9IFtdXG4gICAgbGV0IG5leHRcbiAgICB3aGlsZSAodG9rZW5zLmxlbmd0aCkge1xuICAgICAgbmV4dCA9IHRva2Vuc1swXVswXVxuICAgICAgaWYgKG5leHQgIT09ICdzcGFjZScgJiYgbmV4dCAhPT0gJ2NvbW1lbnQnKSBicmVha1xuICAgICAgZmlyc3RTcGFjZXMucHVzaCh0b2tlbnMuc2hpZnQoKSlcbiAgICB9XG5cbiAgICB0aGlzLnByZWNoZWNrTWlzc2VkU2VtaWNvbG9uKHRva2VucylcblxuICAgIGZvciAobGV0IGkgPSB0b2tlbnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHRva2VuID0gdG9rZW5zW2ldXG4gICAgICBpZiAodG9rZW5bMV0udG9Mb3dlckNhc2UoKSA9PT0gJyFpbXBvcnRhbnQnKSB7XG4gICAgICAgIG5vZGUuaW1wb3J0YW50ID0gdHJ1ZVxuICAgICAgICBsZXQgc3RyaW5nID0gdGhpcy5zdHJpbmdGcm9tKHRva2VucywgaSlcbiAgICAgICAgc3RyaW5nID0gdGhpcy5zcGFjZXNGcm9tRW5kKHRva2VucykgKyBzdHJpbmdcbiAgICAgICAgaWYgKHN0cmluZyAhPT0gJyAhaW1wb3J0YW50Jykgbm9kZS5yYXdzLmltcG9ydGFudCA9IHN0cmluZ1xuICAgICAgICBicmVha1xuICAgICAgfSBlbHNlIGlmICh0b2tlblsxXS50b0xvd2VyQ2FzZSgpID09PSAnaW1wb3J0YW50Jykge1xuICAgICAgICBsZXQgY2FjaGUgPSB0b2tlbnMuc2xpY2UoMClcbiAgICAgICAgbGV0IHN0ciA9ICcnXG4gICAgICAgIGZvciAobGV0IGogPSBpOyBqID4gMDsgai0tKSB7XG4gICAgICAgICAgbGV0IHR5cGUgPSBjYWNoZVtqXVswXVxuICAgICAgICAgIGlmIChzdHIudHJpbSgpLmluZGV4T2YoJyEnKSA9PT0gMCAmJiB0eXBlICE9PSAnc3BhY2UnKSB7XG4gICAgICAgICAgICBicmVha1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdHIgPSBjYWNoZS5wb3AoKVsxXSArIHN0clxuICAgICAgICB9XG4gICAgICAgIGlmIChzdHIudHJpbSgpLmluZGV4T2YoJyEnKSA9PT0gMCkge1xuICAgICAgICAgIG5vZGUuaW1wb3J0YW50ID0gdHJ1ZVxuICAgICAgICAgIG5vZGUucmF3cy5pbXBvcnRhbnQgPSBzdHJcbiAgICAgICAgICB0b2tlbnMgPSBjYWNoZVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlblswXSAhPT0gJ3NwYWNlJyAmJiB0b2tlblswXSAhPT0gJ2NvbW1lbnQnKSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IGhhc1dvcmQgPSB0b2tlbnMuc29tZShpID0+IGlbMF0gIT09ICdzcGFjZScgJiYgaVswXSAhPT0gJ2NvbW1lbnQnKVxuXG4gICAgaWYgKGhhc1dvcmQpIHtcbiAgICAgIG5vZGUucmF3cy5iZXR3ZWVuICs9IGZpcnN0U3BhY2VzLm1hcChpID0+IGlbMV0pLmpvaW4oJycpXG4gICAgICBmaXJzdFNwYWNlcyA9IFtdXG4gICAgfVxuICAgIHRoaXMucmF3KG5vZGUsICd2YWx1ZScsIGZpcnN0U3BhY2VzLmNvbmNhdCh0b2tlbnMpLCBjdXN0b21Qcm9wZXJ0eSlcblxuICAgIGlmIChub2RlLnZhbHVlLmluY2x1ZGVzKCc6JykgJiYgIWN1c3RvbVByb3BlcnR5KSB7XG4gICAgICB0aGlzLmNoZWNrTWlzc2VkU2VtaWNvbG9uKHRva2VucylcbiAgICB9XG4gIH1cblxuICBhdHJ1bGUodG9rZW4pIHtcbiAgICBsZXQgbm9kZSA9IG5ldyBBdFJ1bGUoKVxuICAgIG5vZGUubmFtZSA9IHRva2VuWzFdLnNsaWNlKDEpXG4gICAgaWYgKG5vZGUubmFtZSA9PT0gJycpIHtcbiAgICAgIHRoaXMudW5uYW1lZEF0cnVsZShub2RlLCB0b2tlbilcbiAgICB9XG4gICAgdGhpcy5pbml0KG5vZGUsIHRva2VuWzJdKVxuXG4gICAgbGV0IHR5cGVcbiAgICBsZXQgcHJldlxuICAgIGxldCBzaGlmdFxuICAgIGxldCBsYXN0ID0gZmFsc2VcbiAgICBsZXQgb3BlbiA9IGZhbHNlXG4gICAgbGV0IHBhcmFtcyA9IFtdXG4gICAgbGV0IGJyYWNrZXRzID0gW11cblxuICAgIHdoaWxlICghdGhpcy50b2tlbml6ZXIuZW5kT2ZGaWxlKCkpIHtcbiAgICAgIHRva2VuID0gdGhpcy50b2tlbml6ZXIubmV4dFRva2VuKClcbiAgICAgIHR5cGUgPSB0b2tlblswXVxuXG4gICAgICBpZiAodHlwZSA9PT0gJygnIHx8IHR5cGUgPT09ICdbJykge1xuICAgICAgICBicmFja2V0cy5wdXNoKHR5cGUgPT09ICcoJyA/ICcpJyA6ICddJylcbiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3snICYmIGJyYWNrZXRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYnJhY2tldHMucHVzaCgnfScpXG4gICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IGJyYWNrZXRzW2JyYWNrZXRzLmxlbmd0aCAtIDFdKSB7XG4gICAgICAgIGJyYWNrZXRzLnBvcCgpXG4gICAgICB9XG5cbiAgICAgIGlmIChicmFja2V0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgaWYgKHR5cGUgPT09ICc7Jykge1xuICAgICAgICAgIG5vZGUuc291cmNlLmVuZCA9IHRoaXMuZ2V0UG9zaXRpb24odG9rZW5bMl0pXG4gICAgICAgICAgdGhpcy5zZW1pY29sb24gPSB0cnVlXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAneycpIHtcbiAgICAgICAgICBvcGVuID0gdHJ1ZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ30nKSB7XG4gICAgICAgICAgaWYgKHBhcmFtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzaGlmdCA9IHBhcmFtcy5sZW5ndGggLSAxXG4gICAgICAgICAgICBwcmV2ID0gcGFyYW1zW3NoaWZ0XVxuICAgICAgICAgICAgd2hpbGUgKHByZXYgJiYgcHJldlswXSA9PT0gJ3NwYWNlJykge1xuICAgICAgICAgICAgICBwcmV2ID0gcGFyYW1zWy0tc2hpZnRdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocHJldikge1xuICAgICAgICAgICAgICBub2RlLnNvdXJjZS5lbmQgPSB0aGlzLmdldFBvc2l0aW9uKHByZXZbM10gfHwgcHJldlsyXSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5lbmQodG9rZW4pXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYXJhbXMucHVzaCh0b2tlbilcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyYW1zLnB1c2godG9rZW4pXG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnRva2VuaXplci5lbmRPZkZpbGUoKSkge1xuICAgICAgICBsYXN0ID0gdHJ1ZVxuICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cblxuICAgIG5vZGUucmF3cy5iZXR3ZWVuID0gdGhpcy5zcGFjZXNBbmRDb21tZW50c0Zyb21FbmQocGFyYW1zKVxuICAgIGlmIChwYXJhbXMubGVuZ3RoKSB7XG4gICAgICBub2RlLnJhd3MuYWZ0ZXJOYW1lID0gdGhpcy5zcGFjZXNBbmRDb21tZW50c0Zyb21TdGFydChwYXJhbXMpXG4gICAgICB0aGlzLnJhdyhub2RlLCAncGFyYW1zJywgcGFyYW1zKVxuICAgICAgaWYgKGxhc3QpIHtcbiAgICAgICAgdG9rZW4gPSBwYXJhbXNbcGFyYW1zLmxlbmd0aCAtIDFdXG4gICAgICAgIG5vZGUuc291cmNlLmVuZCA9IHRoaXMuZ2V0UG9zaXRpb24odG9rZW5bM10gfHwgdG9rZW5bMl0pXG4gICAgICAgIHRoaXMuc3BhY2VzID0gbm9kZS5yYXdzLmJldHdlZW5cbiAgICAgICAgbm9kZS5yYXdzLmJldHdlZW4gPSAnJ1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBub2RlLnJhd3MuYWZ0ZXJOYW1lID0gJydcbiAgICAgIG5vZGUucGFyYW1zID0gJydcbiAgICB9XG5cbiAgICBpZiAob3Blbikge1xuICAgICAgbm9kZS5ub2RlcyA9IFtdXG4gICAgICB0aGlzLmN1cnJlbnQgPSBub2RlXG4gICAgfVxuICB9XG5cbiAgZW5kKHRva2VuKSB7XG4gICAgaWYgKHRoaXMuY3VycmVudC5ub2RlcyAmJiB0aGlzLmN1cnJlbnQubm9kZXMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmN1cnJlbnQucmF3cy5zZW1pY29sb24gPSB0aGlzLnNlbWljb2xvblxuICAgIH1cbiAgICB0aGlzLnNlbWljb2xvbiA9IGZhbHNlXG5cbiAgICB0aGlzLmN1cnJlbnQucmF3cy5hZnRlciA9ICh0aGlzLmN1cnJlbnQucmF3cy5hZnRlciB8fCAnJykgKyB0aGlzLnNwYWNlc1xuICAgIHRoaXMuc3BhY2VzID0gJydcblxuICAgIGlmICh0aGlzLmN1cnJlbnQucGFyZW50KSB7XG4gICAgICB0aGlzLmN1cnJlbnQuc291cmNlLmVuZCA9IHRoaXMuZ2V0UG9zaXRpb24odG9rZW5bMl0pXG4gICAgICB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQucGFyZW50XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudW5leHBlY3RlZENsb3NlKHRva2VuKVxuICAgIH1cbiAgfVxuXG4gIGVuZEZpbGUoKSB7XG4gICAgaWYgKHRoaXMuY3VycmVudC5wYXJlbnQpIHRoaXMudW5jbG9zZWRCbG9jaygpXG4gICAgaWYgKHRoaXMuY3VycmVudC5ub2RlcyAmJiB0aGlzLmN1cnJlbnQubm9kZXMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmN1cnJlbnQucmF3cy5zZW1pY29sb24gPSB0aGlzLnNlbWljb2xvblxuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQucmF3cy5hZnRlciA9ICh0aGlzLmN1cnJlbnQucmF3cy5hZnRlciB8fCAnJykgKyB0aGlzLnNwYWNlc1xuICB9XG5cbiAgZnJlZVNlbWljb2xvbih0b2tlbikge1xuICAgIHRoaXMuc3BhY2VzICs9IHRva2VuWzFdXG4gICAgaWYgKHRoaXMuY3VycmVudC5ub2Rlcykge1xuICAgICAgbGV0IHByZXYgPSB0aGlzLmN1cnJlbnQubm9kZXNbdGhpcy5jdXJyZW50Lm5vZGVzLmxlbmd0aCAtIDFdXG4gICAgICBpZiAocHJldiAmJiBwcmV2LnR5cGUgPT09ICdydWxlJyAmJiAhcHJldi5yYXdzLm93blNlbWljb2xvbikge1xuICAgICAgICBwcmV2LnJhd3Mub3duU2VtaWNvbG9uID0gdGhpcy5zcGFjZXNcbiAgICAgICAgdGhpcy5zcGFjZXMgPSAnJ1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEhlbHBlcnNcblxuICBnZXRQb3NpdGlvbihvZmZzZXQpIHtcbiAgICBsZXQgcG9zID0gdGhpcy5pbnB1dC5mcm9tT2Zmc2V0KG9mZnNldClcbiAgICByZXR1cm4ge1xuICAgICAgb2Zmc2V0LFxuICAgICAgbGluZTogcG9zLmxpbmUsXG4gICAgICBjb2x1bW46IHBvcy5jb2xcbiAgICB9XG4gIH1cblxuICBpbml0KG5vZGUsIG9mZnNldCkge1xuICAgIHRoaXMuY3VycmVudC5wdXNoKG5vZGUpXG4gICAgbm9kZS5zb3VyY2UgPSB7XG4gICAgICBzdGFydDogdGhpcy5nZXRQb3NpdGlvbihvZmZzZXQpLFxuICAgICAgaW5wdXQ6IHRoaXMuaW5wdXRcbiAgICB9XG4gICAgbm9kZS5yYXdzLmJlZm9yZSA9IHRoaXMuc3BhY2VzXG4gICAgdGhpcy5zcGFjZXMgPSAnJ1xuICAgIGlmIChub2RlLnR5cGUgIT09ICdjb21tZW50JykgdGhpcy5zZW1pY29sb24gPSBmYWxzZVxuICB9XG5cbiAgcmF3KG5vZGUsIHByb3AsIHRva2VucywgY3VzdG9tUHJvcGVydHkpIHtcbiAgICBsZXQgdG9rZW4sIHR5cGVcbiAgICBsZXQgbGVuZ3RoID0gdG9rZW5zLmxlbmd0aFxuICAgIGxldCB2YWx1ZSA9ICcnXG4gICAgbGV0IGNsZWFuID0gdHJ1ZVxuICAgIGxldCBuZXh0LCBwcmV2XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB0b2tlbiA9IHRva2Vuc1tpXVxuICAgICAgdHlwZSA9IHRva2VuWzBdXG4gICAgICBpZiAodHlwZSA9PT0gJ3NwYWNlJyAmJiBpID09PSBsZW5ndGggLSAxICYmICFjdXN0b21Qcm9wZXJ0eSkge1xuICAgICAgICBjbGVhbiA9IGZhbHNlXG4gICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdjb21tZW50Jykge1xuICAgICAgICBwcmV2ID0gdG9rZW5zW2kgLSAxXSA/IHRva2Vuc1tpIC0gMV1bMF0gOiAnZW1wdHknXG4gICAgICAgIG5leHQgPSB0b2tlbnNbaSArIDFdID8gdG9rZW5zW2kgKyAxXVswXSA6ICdlbXB0eSdcbiAgICAgICAgaWYgKCFTQUZFX0NPTU1FTlRfTkVJR0hCT1JbcHJldl0gJiYgIVNBRkVfQ09NTUVOVF9ORUlHSEJPUltuZXh0XSkge1xuICAgICAgICAgIGlmICh2YWx1ZS5zbGljZSgtMSkgPT09ICcsJykge1xuICAgICAgICAgICAgY2xlYW4gPSBmYWxzZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YWx1ZSArPSB0b2tlblsxXVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjbGVhbiA9IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlICs9IHRva2VuWzFdXG4gICAgICB9XG4gICAgfVxuICAgIGlmICghY2xlYW4pIHtcbiAgICAgIGxldCByYXcgPSB0b2tlbnMucmVkdWNlKChhbGwsIGkpID0+IGFsbCArIGlbMV0sICcnKVxuICAgICAgbm9kZS5yYXdzW3Byb3BdID0geyB2YWx1ZSwgcmF3IH1cbiAgICB9XG4gICAgbm9kZVtwcm9wXSA9IHZhbHVlXG4gIH1cblxuICBzcGFjZXNBbmRDb21tZW50c0Zyb21FbmQodG9rZW5zKSB7XG4gICAgbGV0IGxhc3RUb2tlblR5cGVcbiAgICBsZXQgc3BhY2VzID0gJydcbiAgICB3aGlsZSAodG9rZW5zLmxlbmd0aCkge1xuICAgICAgbGFzdFRva2VuVHlwZSA9IHRva2Vuc1t0b2tlbnMubGVuZ3RoIC0gMV1bMF1cbiAgICAgIGlmIChsYXN0VG9rZW5UeXBlICE9PSAnc3BhY2UnICYmIGxhc3RUb2tlblR5cGUgIT09ICdjb21tZW50JykgYnJlYWtcbiAgICAgIHNwYWNlcyA9IHRva2Vucy5wb3AoKVsxXSArIHNwYWNlc1xuICAgIH1cbiAgICByZXR1cm4gc3BhY2VzXG4gIH1cblxuICBzcGFjZXNBbmRDb21tZW50c0Zyb21TdGFydCh0b2tlbnMpIHtcbiAgICBsZXQgbmV4dFxuICAgIGxldCBzcGFjZXMgPSAnJ1xuICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoKSB7XG4gICAgICBuZXh0ID0gdG9rZW5zWzBdWzBdXG4gICAgICBpZiAobmV4dCAhPT0gJ3NwYWNlJyAmJiBuZXh0ICE9PSAnY29tbWVudCcpIGJyZWFrXG4gICAgICBzcGFjZXMgKz0gdG9rZW5zLnNoaWZ0KClbMV1cbiAgICB9XG4gICAgcmV0dXJuIHNwYWNlc1xuICB9XG5cbiAgc3BhY2VzRnJvbUVuZCh0b2tlbnMpIHtcbiAgICBsZXQgbGFzdFRva2VuVHlwZVxuICAgIGxldCBzcGFjZXMgPSAnJ1xuICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoKSB7XG4gICAgICBsYXN0VG9rZW5UeXBlID0gdG9rZW5zW3Rva2Vucy5sZW5ndGggLSAxXVswXVxuICAgICAgaWYgKGxhc3RUb2tlblR5cGUgIT09ICdzcGFjZScpIGJyZWFrXG4gICAgICBzcGFjZXMgPSB0b2tlbnMucG9wKClbMV0gKyBzcGFjZXNcbiAgICB9XG4gICAgcmV0dXJuIHNwYWNlc1xuICB9XG5cbiAgc3RyaW5nRnJvbSh0b2tlbnMsIGZyb20pIHtcbiAgICBsZXQgcmVzdWx0ID0gJydcbiAgICBmb3IgKGxldCBpID0gZnJvbTsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0ICs9IHRva2Vuc1tpXVsxXVxuICAgIH1cbiAgICB0b2tlbnMuc3BsaWNlKGZyb20sIHRva2Vucy5sZW5ndGggLSBmcm9tKVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGNvbG9uKHRva2Vucykge1xuICAgIGxldCBicmFja2V0cyA9IDBcbiAgICBsZXQgdG9rZW4sIHR5cGUsIHByZXZcbiAgICBmb3IgKGxldCBbaSwgZWxlbWVudF0gb2YgdG9rZW5zLmVudHJpZXMoKSkge1xuICAgICAgdG9rZW4gPSBlbGVtZW50XG4gICAgICB0eXBlID0gdG9rZW5bMF1cblxuICAgICAgaWYgKHR5cGUgPT09ICcoJykge1xuICAgICAgICBicmFja2V0cyArPSAxXG4gICAgICB9XG4gICAgICBpZiAodHlwZSA9PT0gJyknKSB7XG4gICAgICAgIGJyYWNrZXRzIC09IDFcbiAgICAgIH1cbiAgICAgIGlmIChicmFja2V0cyA9PT0gMCAmJiB0eXBlID09PSAnOicpIHtcbiAgICAgICAgaWYgKCFwcmV2KSB7XG4gICAgICAgICAgdGhpcy5kb3VibGVDb2xvbih0b2tlbilcbiAgICAgICAgfSBlbHNlIGlmIChwcmV2WzBdID09PSAnd29yZCcgJiYgcHJldlsxXSA9PT0gJ3Byb2dpZCcpIHtcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcHJldiA9IHRva2VuXG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgLy8gRXJyb3JzXG5cbiAgdW5jbG9zZWRCcmFja2V0KGJyYWNrZXQpIHtcbiAgICB0aHJvdyB0aGlzLmlucHV0LmVycm9yKFxuICAgICAgJ1VuY2xvc2VkIGJyYWNrZXQnLFxuICAgICAgeyBvZmZzZXQ6IGJyYWNrZXRbMl0gfSxcbiAgICAgIHsgb2Zmc2V0OiBicmFja2V0WzJdICsgMSB9XG4gICAgKVxuICB9XG5cbiAgdW5rbm93bldvcmQodG9rZW5zKSB7XG4gICAgdGhyb3cgdGhpcy5pbnB1dC5lcnJvcihcbiAgICAgICdVbmtub3duIHdvcmQnLFxuICAgICAgeyBvZmZzZXQ6IHRva2Vuc1swXVsyXSB9LFxuICAgICAgeyBvZmZzZXQ6IHRva2Vuc1swXVsyXSArIHRva2Vuc1swXVsxXS5sZW5ndGggfVxuICAgIClcbiAgfVxuXG4gIHVuZXhwZWN0ZWRDbG9zZSh0b2tlbikge1xuICAgIHRocm93IHRoaXMuaW5wdXQuZXJyb3IoXG4gICAgICAnVW5leHBlY3RlZCB9JyxcbiAgICAgIHsgb2Zmc2V0OiB0b2tlblsyXSB9LFxuICAgICAgeyBvZmZzZXQ6IHRva2VuWzJdICsgMSB9XG4gICAgKVxuICB9XG5cbiAgdW5jbG9zZWRCbG9jaygpIHtcbiAgICBsZXQgcG9zID0gdGhpcy5jdXJyZW50LnNvdXJjZS5zdGFydFxuICAgIHRocm93IHRoaXMuaW5wdXQuZXJyb3IoJ1VuY2xvc2VkIGJsb2NrJywgcG9zLmxpbmUsIHBvcy5jb2x1bW4pXG4gIH1cblxuICBkb3VibGVDb2xvbih0b2tlbikge1xuICAgIHRocm93IHRoaXMuaW5wdXQuZXJyb3IoXG4gICAgICAnRG91YmxlIGNvbG9uJyxcbiAgICAgIHsgb2Zmc2V0OiB0b2tlblsyXSB9LFxuICAgICAgeyBvZmZzZXQ6IHRva2VuWzJdICsgdG9rZW5bMV0ubGVuZ3RoIH1cbiAgICApXG4gIH1cblxuICB1bm5hbWVkQXRydWxlKG5vZGUsIHRva2VuKSB7XG4gICAgdGhyb3cgdGhpcy5pbnB1dC5lcnJvcihcbiAgICAgICdBdC1ydWxlIHdpdGhvdXQgbmFtZScsXG4gICAgICB7IG9mZnNldDogdG9rZW5bMl0gfSxcbiAgICAgIHsgb2Zmc2V0OiB0b2tlblsyXSArIHRva2VuWzFdLmxlbmd0aCB9XG4gICAgKVxuICB9XG5cbiAgcHJlY2hlY2tNaXNzZWRTZW1pY29sb24oLyogdG9rZW5zICovKSB7XG4gICAgLy8gSG9vayBmb3IgU2FmZSBQYXJzZXJcbiAgfVxuXG4gIGNoZWNrTWlzc2VkU2VtaWNvbG9uKHRva2Vucykge1xuICAgIGxldCBjb2xvbiA9IHRoaXMuY29sb24odG9rZW5zKVxuICAgIGlmIChjb2xvbiA9PT0gZmFsc2UpIHJldHVyblxuXG4gICAgbGV0IGZvdW5kZWQgPSAwXG4gICAgbGV0IHRva2VuXG4gICAgZm9yIChsZXQgaiA9IGNvbG9uIC0gMTsgaiA+PSAwOyBqLS0pIHtcbiAgICAgIHRva2VuID0gdG9rZW5zW2pdXG4gICAgICBpZiAodG9rZW5bMF0gIT09ICdzcGFjZScpIHtcbiAgICAgICAgZm91bmRlZCArPSAxXG4gICAgICAgIGlmIChmb3VuZGVkID09PSAyKSBicmVha1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiB0aGUgdG9rZW4gaXMgYSB3b3JkLCBlLmcuIGAhaW1wb3J0YW50YCwgYHJlZGAgb3IgYW55IG90aGVyIHZhbGlkIHByb3BlcnR5J3MgdmFsdWUuXG4gICAgLy8gVGhlbiB3ZSBuZWVkIHRvIHJldHVybiB0aGUgY29sb24gYWZ0ZXIgdGhhdCB3b3JkIHRva2VuLiBbM10gaXMgdGhlIFwiZW5kXCIgY29sb24gb2YgdGhhdCB3b3JkLlxuICAgIC8vIEFuZCBiZWNhdXNlIHdlIG5lZWQgaXQgYWZ0ZXIgdGhhdCBvbmUgd2UgZG8gKzEgdG8gZ2V0IHRoZSBuZXh0IG9uZS5cbiAgICB0aHJvdyB0aGlzLmlucHV0LmVycm9yKFxuICAgICAgJ01pc3NlZCBzZW1pY29sb24nLFxuICAgICAgdG9rZW5bMF0gPT09ICd3b3JkJyA/IHRva2VuWzNdICsgMSA6IHRva2VuWzJdXG4gICAgKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUGFyc2VyXG4iLCIndXNlIHN0cmljdCdcblxubGV0IENzc1N5bnRheEVycm9yID0gcmVxdWlyZSgnLi9jc3Mtc3ludGF4LWVycm9yJylcbmxldCBEZWNsYXJhdGlvbiA9IHJlcXVpcmUoJy4vZGVjbGFyYXRpb24nKVxubGV0IExhenlSZXN1bHQgPSByZXF1aXJlKCcuL2xhenktcmVzdWx0JylcbmxldCBDb250YWluZXIgPSByZXF1aXJlKCcuL2NvbnRhaW5lcicpXG5sZXQgUHJvY2Vzc29yID0gcmVxdWlyZSgnLi9wcm9jZXNzb3InKVxubGV0IHN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vc3RyaW5naWZ5JylcbmxldCBmcm9tSlNPTiA9IHJlcXVpcmUoJy4vZnJvbUpTT04nKVxubGV0IERvY3VtZW50ID0gcmVxdWlyZSgnLi9kb2N1bWVudCcpXG5sZXQgV2FybmluZyA9IHJlcXVpcmUoJy4vd2FybmluZycpXG5sZXQgQ29tbWVudCA9IHJlcXVpcmUoJy4vY29tbWVudCcpXG5sZXQgQXRSdWxlID0gcmVxdWlyZSgnLi9hdC1ydWxlJylcbmxldCBSZXN1bHQgPSByZXF1aXJlKCcuL3Jlc3VsdC5qcycpXG5sZXQgSW5wdXQgPSByZXF1aXJlKCcuL2lucHV0JylcbmxldCBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKVxubGV0IGxpc3QgPSByZXF1aXJlKCcuL2xpc3QnKVxubGV0IFJ1bGUgPSByZXF1aXJlKCcuL3J1bGUnKVxubGV0IFJvb3QgPSByZXF1aXJlKCcuL3Jvb3QnKVxubGV0IE5vZGUgPSByZXF1aXJlKCcuL25vZGUnKVxuXG5mdW5jdGlvbiBwb3N0Y3NzKC4uLnBsdWdpbnMpIHtcbiAgaWYgKHBsdWdpbnMubGVuZ3RoID09PSAxICYmIEFycmF5LmlzQXJyYXkocGx1Z2luc1swXSkpIHtcbiAgICBwbHVnaW5zID0gcGx1Z2luc1swXVxuICB9XG4gIHJldHVybiBuZXcgUHJvY2Vzc29yKHBsdWdpbnMpXG59XG5cbnBvc3Rjc3MucGx1Z2luID0gZnVuY3Rpb24gcGx1Z2luKG5hbWUsIGluaXRpYWxpemVyKSB7XG4gIGxldCB3YXJuaW5nUHJpbnRlZCA9IGZhbHNlXG4gIGZ1bmN0aW9uIGNyZWF0b3IoLi4uYXJncykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS53YXJuICYmICF3YXJuaW5nUHJpbnRlZCkge1xuICAgICAgd2FybmluZ1ByaW50ZWQgPSB0cnVlXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBuYW1lICtcbiAgICAgICAgICAnOiBwb3N0Y3NzLnBsdWdpbiB3YXMgZGVwcmVjYXRlZC4gTWlncmF0aW9uIGd1aWRlOlxcbicgK1xuICAgICAgICAgICdodHRwczovL2V2aWxtYXJ0aWFucy5jb20vY2hyb25pY2xlcy9wb3N0Y3NzLTgtcGx1Z2luLW1pZ3JhdGlvbidcbiAgICAgIClcbiAgICAgIGlmIChwcm9jZXNzLmVudi5MQU5HICYmIHByb2Nlc3MuZW52LkxBTkcuc3RhcnRzV2l0aCgnY24nKSkge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCA3ICovXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICBuYW1lICtcbiAgICAgICAgICAgICc6IOmHjOmdoiBwb3N0Y3NzLnBsdWdpbiDooqvlvIPnlKguIOi/geenu+aMh+WNlzpcXG4nICtcbiAgICAgICAgICAgICdodHRwczovL3d3dy53M2N0ZWNoLmNvbS90b3BpYy8yMjI2J1xuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuICAgIGxldCB0cmFuc2Zvcm1lciA9IGluaXRpYWxpemVyKC4uLmFyZ3MpXG4gICAgdHJhbnNmb3JtZXIucG9zdGNzc1BsdWdpbiA9IG5hbWVcbiAgICB0cmFuc2Zvcm1lci5wb3N0Y3NzVmVyc2lvbiA9IG5ldyBQcm9jZXNzb3IoKS52ZXJzaW9uXG4gICAgcmV0dXJuIHRyYW5zZm9ybWVyXG4gIH1cblxuICBsZXQgY2FjaGVcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNyZWF0b3IsICdwb3N0Y3NzJywge1xuICAgIGdldCgpIHtcbiAgICAgIGlmICghY2FjaGUpIGNhY2hlID0gY3JlYXRvcigpXG4gICAgICByZXR1cm4gY2FjaGVcbiAgICB9XG4gIH0pXG5cbiAgY3JlYXRvci5wcm9jZXNzID0gZnVuY3Rpb24gKGNzcywgcHJvY2Vzc09wdHMsIHBsdWdpbk9wdHMpIHtcbiAgICByZXR1cm4gcG9zdGNzcyhbY3JlYXRvcihwbHVnaW5PcHRzKV0pLnByb2Nlc3MoY3NzLCBwcm9jZXNzT3B0cylcbiAgfVxuXG4gIHJldHVybiBjcmVhdG9yXG59XG5cbnBvc3Rjc3Muc3RyaW5naWZ5ID0gc3RyaW5naWZ5XG5wb3N0Y3NzLnBhcnNlID0gcGFyc2VcbnBvc3Rjc3MuZnJvbUpTT04gPSBmcm9tSlNPTlxucG9zdGNzcy5saXN0ID0gbGlzdFxuXG5wb3N0Y3NzLmNvbW1lbnQgPSBkZWZhdWx0cyA9PiBuZXcgQ29tbWVudChkZWZhdWx0cylcbnBvc3Rjc3MuYXRSdWxlID0gZGVmYXVsdHMgPT4gbmV3IEF0UnVsZShkZWZhdWx0cylcbnBvc3Rjc3MuZGVjbCA9IGRlZmF1bHRzID0+IG5ldyBEZWNsYXJhdGlvbihkZWZhdWx0cylcbnBvc3Rjc3MucnVsZSA9IGRlZmF1bHRzID0+IG5ldyBSdWxlKGRlZmF1bHRzKVxucG9zdGNzcy5yb290ID0gZGVmYXVsdHMgPT4gbmV3IFJvb3QoZGVmYXVsdHMpXG5wb3N0Y3NzLmRvY3VtZW50ID0gZGVmYXVsdHMgPT4gbmV3IERvY3VtZW50KGRlZmF1bHRzKVxuXG5wb3N0Y3NzLkNzc1N5bnRheEVycm9yID0gQ3NzU3ludGF4RXJyb3JcbnBvc3Rjc3MuRGVjbGFyYXRpb24gPSBEZWNsYXJhdGlvblxucG9zdGNzcy5Db250YWluZXIgPSBDb250YWluZXJcbnBvc3Rjc3MuUHJvY2Vzc29yID0gUHJvY2Vzc29yXG5wb3N0Y3NzLkRvY3VtZW50ID0gRG9jdW1lbnRcbnBvc3Rjc3MuQ29tbWVudCA9IENvbW1lbnRcbnBvc3Rjc3MuV2FybmluZyA9IFdhcm5pbmdcbnBvc3Rjc3MuQXRSdWxlID0gQXRSdWxlXG5wb3N0Y3NzLlJlc3VsdCA9IFJlc3VsdFxucG9zdGNzcy5JbnB1dCA9IElucHV0XG5wb3N0Y3NzLlJ1bGUgPSBSdWxlXG5wb3N0Y3NzLlJvb3QgPSBSb290XG5wb3N0Y3NzLk5vZGUgPSBOb2RlXG5cbkxhenlSZXN1bHQucmVnaXN0ZXJQb3N0Y3NzKHBvc3Rjc3MpXG5cbm1vZHVsZS5leHBvcnRzID0gcG9zdGNzc1xucG9zdGNzcy5kZWZhdWx0ID0gcG9zdGNzc1xuIiwiJ3VzZSBzdHJpY3QnXG5cbmxldCB7IFNvdXJjZU1hcENvbnN1bWVyLCBTb3VyY2VNYXBHZW5lcmF0b3IgfSA9IHJlcXVpcmUoJ3NvdXJjZS1tYXAtanMnKVxubGV0IHsgZXhpc3RzU3luYywgcmVhZEZpbGVTeW5jIH0gPSByZXF1aXJlKCdmcycpXG5sZXQgeyBkaXJuYW1lLCBqb2luIH0gPSByZXF1aXJlKCdwYXRoJylcblxuZnVuY3Rpb24gZnJvbUJhc2U2NChzdHIpIHtcbiAgaWYgKEJ1ZmZlcikge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShzdHIsICdiYXNlNjQnKS50b1N0cmluZygpXG4gIH0gZWxzZSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgMiAqL1xuICAgIHJldHVybiB3aW5kb3cuYXRvYihzdHIpXG4gIH1cbn1cblxuY2xhc3MgUHJldmlvdXNNYXAge1xuICBjb25zdHJ1Y3Rvcihjc3MsIG9wdHMpIHtcbiAgICBpZiAob3B0cy5tYXAgPT09IGZhbHNlKSByZXR1cm5cbiAgICB0aGlzLmxvYWRBbm5vdGF0aW9uKGNzcylcbiAgICB0aGlzLmlubGluZSA9IHRoaXMuc3RhcnRXaXRoKHRoaXMuYW5ub3RhdGlvbiwgJ2RhdGE6JylcblxuICAgIGxldCBwcmV2ID0gb3B0cy5tYXAgPyBvcHRzLm1hcC5wcmV2IDogdW5kZWZpbmVkXG4gICAgbGV0IHRleHQgPSB0aGlzLmxvYWRNYXAob3B0cy5mcm9tLCBwcmV2KVxuICAgIGlmICghdGhpcy5tYXBGaWxlICYmIG9wdHMuZnJvbSkge1xuICAgICAgdGhpcy5tYXBGaWxlID0gb3B0cy5mcm9tXG4gICAgfVxuICAgIGlmICh0aGlzLm1hcEZpbGUpIHRoaXMucm9vdCA9IGRpcm5hbWUodGhpcy5tYXBGaWxlKVxuICAgIGlmICh0ZXh0KSB0aGlzLnRleHQgPSB0ZXh0XG4gIH1cblxuICBjb25zdW1lcigpIHtcbiAgICBpZiAoIXRoaXMuY29uc3VtZXJDYWNoZSkge1xuICAgICAgdGhpcy5jb25zdW1lckNhY2hlID0gbmV3IFNvdXJjZU1hcENvbnN1bWVyKHRoaXMudGV4dClcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuY29uc3VtZXJDYWNoZVxuICB9XG5cbiAgd2l0aENvbnRlbnQoKSB7XG4gICAgcmV0dXJuICEhKFxuICAgICAgdGhpcy5jb25zdW1lcigpLnNvdXJjZXNDb250ZW50ICYmXG4gICAgICB0aGlzLmNvbnN1bWVyKCkuc291cmNlc0NvbnRlbnQubGVuZ3RoID4gMFxuICAgIClcbiAgfVxuXG4gIHN0YXJ0V2l0aChzdHJpbmcsIHN0YXJ0KSB7XG4gICAgaWYgKCFzdHJpbmcpIHJldHVybiBmYWxzZVxuICAgIHJldHVybiBzdHJpbmcuc3Vic3RyKDAsIHN0YXJ0Lmxlbmd0aCkgPT09IHN0YXJ0XG4gIH1cblxuICBnZXRBbm5vdGF0aW9uVVJMKHNvdXJjZU1hcFN0cmluZykge1xuICAgIHJldHVybiBzb3VyY2VNYXBTdHJpbmcucmVwbGFjZSgvXlxcL1xcKlxccyojIHNvdXJjZU1hcHBpbmdVUkw9LywgJycpLnRyaW0oKVxuICB9XG5cbiAgbG9hZEFubm90YXRpb24oY3NzKSB7XG4gICAgbGV0IGNvbW1lbnRzID0gY3NzLm1hdGNoKC9cXC9cXCpcXHMqIyBzb3VyY2VNYXBwaW5nVVJMPS9nbSlcbiAgICBpZiAoIWNvbW1lbnRzKSByZXR1cm5cblxuICAgIC8vIHNvdXJjZU1hcHBpbmdVUkxzIGZyb20gY29tbWVudHMsIHN0cmluZ3MsIGV0Yy5cbiAgICBsZXQgc3RhcnQgPSBjc3MubGFzdEluZGV4T2YoY29tbWVudHMucG9wKCkpXG4gICAgbGV0IGVuZCA9IGNzcy5pbmRleE9mKCcqLycsIHN0YXJ0KVxuXG4gICAgaWYgKHN0YXJ0ID4gLTEgJiYgZW5kID4gLTEpIHtcbiAgICAgIC8vIExvY2F0ZSB0aGUgbGFzdCBzb3VyY2VNYXBwaW5nVVJMIHRvIGF2b2lkIHBpY2tpblxuICAgICAgdGhpcy5hbm5vdGF0aW9uID0gdGhpcy5nZXRBbm5vdGF0aW9uVVJMKGNzcy5zdWJzdHJpbmcoc3RhcnQsIGVuZCkpXG4gICAgfVxuICB9XG5cbiAgZGVjb2RlSW5saW5lKHRleHQpIHtcbiAgICBsZXQgYmFzZUNoYXJzZXRVcmkgPSAvXmRhdGE6YXBwbGljYXRpb25cXC9qc29uO2NoYXJzZXQ9dXRmLT84O2Jhc2U2NCwvXG4gICAgbGV0IGJhc2VVcmkgPSAvXmRhdGE6YXBwbGljYXRpb25cXC9qc29uO2Jhc2U2NCwvXG4gICAgbGV0IGNoYXJzZXRVcmkgPSAvXmRhdGE6YXBwbGljYXRpb25cXC9qc29uO2NoYXJzZXQ9dXRmLT84LC9cbiAgICBsZXQgdXJpID0gL15kYXRhOmFwcGxpY2F0aW9uXFwvanNvbiwvXG5cbiAgICBpZiAoY2hhcnNldFVyaS50ZXN0KHRleHQpIHx8IHVyaS50ZXN0KHRleHQpKSB7XG4gICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHRleHQuc3Vic3RyKFJlZ0V4cC5sYXN0TWF0Y2gubGVuZ3RoKSlcbiAgICB9XG5cbiAgICBpZiAoYmFzZUNoYXJzZXRVcmkudGVzdCh0ZXh0KSB8fCBiYXNlVXJpLnRlc3QodGV4dCkpIHtcbiAgICAgIHJldHVybiBmcm9tQmFzZTY0KHRleHQuc3Vic3RyKFJlZ0V4cC5sYXN0TWF0Y2gubGVuZ3RoKSlcbiAgICB9XG5cbiAgICBsZXQgZW5jb2RpbmcgPSB0ZXh0Lm1hdGNoKC9kYXRhOmFwcGxpY2F0aW9uXFwvanNvbjsoW14sXSspLC8pWzFdXG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbnN1cHBvcnRlZCBzb3VyY2UgbWFwIGVuY29kaW5nICcgKyBlbmNvZGluZylcbiAgfVxuXG4gIGxvYWRGaWxlKHBhdGgpIHtcbiAgICB0aGlzLnJvb3QgPSBkaXJuYW1lKHBhdGgpXG4gICAgaWYgKGV4aXN0c1N5bmMocGF0aCkpIHtcbiAgICAgIHRoaXMubWFwRmlsZSA9IHBhdGhcbiAgICAgIHJldHVybiByZWFkRmlsZVN5bmMocGF0aCwgJ3V0Zi04JykudG9TdHJpbmcoKS50cmltKClcbiAgICB9XG4gIH1cblxuICBsb2FkTWFwKGZpbGUsIHByZXYpIHtcbiAgICBpZiAocHJldiA9PT0gZmFsc2UpIHJldHVybiBmYWxzZVxuXG4gICAgaWYgKHByZXYpIHtcbiAgICAgIGlmICh0eXBlb2YgcHJldiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHByZXZcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHByZXYgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgbGV0IHByZXZQYXRoID0gcHJldihmaWxlKVxuICAgICAgICBpZiAocHJldlBhdGgpIHtcbiAgICAgICAgICBsZXQgbWFwID0gdGhpcy5sb2FkRmlsZShwcmV2UGF0aClcbiAgICAgICAgICBpZiAoIW1hcCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgICAnVW5hYmxlIHRvIGxvYWQgcHJldmlvdXMgc291cmNlIG1hcDogJyArIHByZXZQYXRoLnRvU3RyaW5nKClcbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG1hcFxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHByZXYgaW5zdGFuY2VvZiBTb3VyY2VNYXBDb25zdW1lcikge1xuICAgICAgICByZXR1cm4gU291cmNlTWFwR2VuZXJhdG9yLmZyb21Tb3VyY2VNYXAocHJldikudG9TdHJpbmcoKVxuICAgICAgfSBlbHNlIGlmIChwcmV2IGluc3RhbmNlb2YgU291cmNlTWFwR2VuZXJhdG9yKSB7XG4gICAgICAgIHJldHVybiBwcmV2LnRvU3RyaW5nKClcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5pc01hcChwcmV2KSkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocHJldilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnVW5zdXBwb3J0ZWQgcHJldmlvdXMgc291cmNlIG1hcCBmb3JtYXQ6ICcgKyBwcmV2LnRvU3RyaW5nKClcbiAgICAgICAgKVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodGhpcy5pbmxpbmUpIHtcbiAgICAgIHJldHVybiB0aGlzLmRlY29kZUlubGluZSh0aGlzLmFubm90YXRpb24pXG4gICAgfSBlbHNlIGlmICh0aGlzLmFubm90YXRpb24pIHtcbiAgICAgIGxldCBtYXAgPSB0aGlzLmFubm90YXRpb25cbiAgICAgIGlmIChmaWxlKSBtYXAgPSBqb2luKGRpcm5hbWUoZmlsZSksIG1hcClcbiAgICAgIHJldHVybiB0aGlzLmxvYWRGaWxlKG1hcClcbiAgICB9XG4gIH1cblxuICBpc01hcChtYXApIHtcbiAgICBpZiAodHlwZW9mIG1hcCAhPT0gJ29iamVjdCcpIHJldHVybiBmYWxzZVxuICAgIHJldHVybiAoXG4gICAgICB0eXBlb2YgbWFwLm1hcHBpbmdzID09PSAnc3RyaW5nJyB8fFxuICAgICAgdHlwZW9mIG1hcC5fbWFwcGluZ3MgPT09ICdzdHJpbmcnIHx8XG4gICAgICBBcnJheS5pc0FycmF5KG1hcC5zZWN0aW9ucylcbiAgICApXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQcmV2aW91c01hcFxuUHJldmlvdXNNYXAuZGVmYXVsdCA9IFByZXZpb3VzTWFwXG4iLCIndXNlIHN0cmljdCdcblxubGV0IE5vV29ya1Jlc3VsdCA9IHJlcXVpcmUoJy4vbm8td29yay1yZXN1bHQnKVxubGV0IExhenlSZXN1bHQgPSByZXF1aXJlKCcuL2xhenktcmVzdWx0JylcbmxldCBEb2N1bWVudCA9IHJlcXVpcmUoJy4vZG9jdW1lbnQnKVxubGV0IFJvb3QgPSByZXF1aXJlKCcuL3Jvb3QnKVxuXG5jbGFzcyBQcm9jZXNzb3Ige1xuICBjb25zdHJ1Y3RvcihwbHVnaW5zID0gW10pIHtcbiAgICB0aGlzLnZlcnNpb24gPSAnOC40LjIxJ1xuICAgIHRoaXMucGx1Z2lucyA9IHRoaXMubm9ybWFsaXplKHBsdWdpbnMpXG4gIH1cblxuICB1c2UocGx1Z2luKSB7XG4gICAgdGhpcy5wbHVnaW5zID0gdGhpcy5wbHVnaW5zLmNvbmNhdCh0aGlzLm5vcm1hbGl6ZShbcGx1Z2luXSkpXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIHByb2Nlc3MoY3NzLCBvcHRzID0ge30pIHtcbiAgICBpZiAoXG4gICAgICB0aGlzLnBsdWdpbnMubGVuZ3RoID09PSAwICYmXG4gICAgICB0eXBlb2Ygb3B0cy5wYXJzZXIgPT09ICd1bmRlZmluZWQnICYmXG4gICAgICB0eXBlb2Ygb3B0cy5zdHJpbmdpZmllciA9PT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgIHR5cGVvZiBvcHRzLnN5bnRheCA9PT0gJ3VuZGVmaW5lZCdcbiAgICApIHtcbiAgICAgIHJldHVybiBuZXcgTm9Xb3JrUmVzdWx0KHRoaXMsIGNzcywgb3B0cylcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBMYXp5UmVzdWx0KHRoaXMsIGNzcywgb3B0cylcbiAgICB9XG4gIH1cblxuICBub3JtYWxpemUocGx1Z2lucykge1xuICAgIGxldCBub3JtYWxpemVkID0gW11cbiAgICBmb3IgKGxldCBpIG9mIHBsdWdpbnMpIHtcbiAgICAgIGlmIChpLnBvc3Rjc3MgPT09IHRydWUpIHtcbiAgICAgICAgaSA9IGkoKVxuICAgICAgfSBlbHNlIGlmIChpLnBvc3Rjc3MpIHtcbiAgICAgICAgaSA9IGkucG9zdGNzc1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGkgPT09ICdvYmplY3QnICYmIEFycmF5LmlzQXJyYXkoaS5wbHVnaW5zKSkge1xuICAgICAgICBub3JtYWxpemVkID0gbm9ybWFsaXplZC5jb25jYXQoaS5wbHVnaW5zKVxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaSA9PT0gJ29iamVjdCcgJiYgaS5wb3N0Y3NzUGx1Z2luKSB7XG4gICAgICAgIG5vcm1hbGl6ZWQucHVzaChpKVxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBub3JtYWxpemVkLnB1c2goaSlcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGkgPT09ICdvYmplY3QnICYmIChpLnBhcnNlIHx8IGkuc3RyaW5naWZ5KSkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgICdQb3N0Q1NTIHN5bnRheGVzIGNhbm5vdCBiZSB1c2VkIGFzIHBsdWdpbnMuIEluc3RlYWQsIHBsZWFzZSB1c2UgJyArXG4gICAgICAgICAgICAgICdvbmUgb2YgdGhlIHN5bnRheC9wYXJzZXIvc3RyaW5naWZpZXIgb3B0aW9ucyBhcyBvdXRsaW5lZCAnICtcbiAgICAgICAgICAgICAgJ2luIHlvdXIgUG9zdENTUyBydW5uZXIgZG9jdW1lbnRhdGlvbi4nXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoaSArICcgaXMgbm90IGEgUG9zdENTUyBwbHVnaW4nKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbm9ybWFsaXplZFxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJvY2Vzc29yXG5Qcm9jZXNzb3IuZGVmYXVsdCA9IFByb2Nlc3NvclxuXG5Sb290LnJlZ2lzdGVyUHJvY2Vzc29yKFByb2Nlc3NvcilcbkRvY3VtZW50LnJlZ2lzdGVyUHJvY2Vzc29yKFByb2Nlc3NvcilcbiIsIid1c2Ugc3RyaWN0J1xuXG5sZXQgV2FybmluZyA9IHJlcXVpcmUoJy4vd2FybmluZycpXG5cbmNsYXNzIFJlc3VsdCB7XG4gIGNvbnN0cnVjdG9yKHByb2Nlc3Nvciwgcm9vdCwgb3B0cykge1xuICAgIHRoaXMucHJvY2Vzc29yID0gcHJvY2Vzc29yXG4gICAgdGhpcy5tZXNzYWdlcyA9IFtdXG4gICAgdGhpcy5yb290ID0gcm9vdFxuICAgIHRoaXMub3B0cyA9IG9wdHNcbiAgICB0aGlzLmNzcyA9IHVuZGVmaW5lZFxuICAgIHRoaXMubWFwID0gdW5kZWZpbmVkXG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5jc3NcbiAgfVxuXG4gIHdhcm4odGV4dCwgb3B0cyA9IHt9KSB7XG4gICAgaWYgKCFvcHRzLnBsdWdpbikge1xuICAgICAgaWYgKHRoaXMubGFzdFBsdWdpbiAmJiB0aGlzLmxhc3RQbHVnaW4ucG9zdGNzc1BsdWdpbikge1xuICAgICAgICBvcHRzLnBsdWdpbiA9IHRoaXMubGFzdFBsdWdpbi5wb3N0Y3NzUGx1Z2luXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHdhcm5pbmcgPSBuZXcgV2FybmluZyh0ZXh0LCBvcHRzKVxuICAgIHRoaXMubWVzc2FnZXMucHVzaCh3YXJuaW5nKVxuXG4gICAgcmV0dXJuIHdhcm5pbmdcbiAgfVxuXG4gIHdhcm5pbmdzKCkge1xuICAgIHJldHVybiB0aGlzLm1lc3NhZ2VzLmZpbHRlcihpID0+IGkudHlwZSA9PT0gJ3dhcm5pbmcnKVxuICB9XG5cbiAgZ2V0IGNvbnRlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3NzXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZXN1bHRcblJlc3VsdC5kZWZhdWx0ID0gUmVzdWx0XG4iLCIndXNlIHN0cmljdCdcblxubGV0IENvbnRhaW5lciA9IHJlcXVpcmUoJy4vY29udGFpbmVyJylcblxubGV0IExhenlSZXN1bHQsIFByb2Nlc3NvclxuXG5jbGFzcyBSb290IGV4dGVuZHMgQ29udGFpbmVyIHtcbiAgY29uc3RydWN0b3IoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAncm9vdCdcbiAgICBpZiAoIXRoaXMubm9kZXMpIHRoaXMubm9kZXMgPSBbXVxuICB9XG5cbiAgcmVtb3ZlQ2hpbGQoY2hpbGQsIGlnbm9yZSkge1xuICAgIGxldCBpbmRleCA9IHRoaXMuaW5kZXgoY2hpbGQpXG5cbiAgICBpZiAoIWlnbm9yZSAmJiBpbmRleCA9PT0gMCAmJiB0aGlzLm5vZGVzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMubm9kZXNbMV0ucmF3cy5iZWZvcmUgPSB0aGlzLm5vZGVzW2luZGV4XS5yYXdzLmJlZm9yZVxuICAgIH1cblxuICAgIHJldHVybiBzdXBlci5yZW1vdmVDaGlsZChjaGlsZClcbiAgfVxuXG4gIG5vcm1hbGl6ZShjaGlsZCwgc2FtcGxlLCB0eXBlKSB7XG4gICAgbGV0IG5vZGVzID0gc3VwZXIubm9ybWFsaXplKGNoaWxkKVxuXG4gICAgaWYgKHNhbXBsZSkge1xuICAgICAgaWYgKHR5cGUgPT09ICdwcmVwZW5kJykge1xuICAgICAgICBpZiAodGhpcy5ub2Rlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgc2FtcGxlLnJhd3MuYmVmb3JlID0gdGhpcy5ub2Rlc1sxXS5yYXdzLmJlZm9yZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRlbGV0ZSBzYW1wbGUucmF3cy5iZWZvcmVcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLmZpcnN0ICE9PSBzYW1wbGUpIHtcbiAgICAgICAgZm9yIChsZXQgbm9kZSBvZiBub2Rlcykge1xuICAgICAgICAgIG5vZGUucmF3cy5iZWZvcmUgPSBzYW1wbGUucmF3cy5iZWZvcmVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBub2Rlc1xuICB9XG5cbiAgdG9SZXN1bHQob3B0cyA9IHt9KSB7XG4gICAgbGV0IGxhenkgPSBuZXcgTGF6eVJlc3VsdChuZXcgUHJvY2Vzc29yKCksIHRoaXMsIG9wdHMpXG4gICAgcmV0dXJuIGxhenkuc3RyaW5naWZ5KClcbiAgfVxufVxuXG5Sb290LnJlZ2lzdGVyTGF6eVJlc3VsdCA9IGRlcGVuZGFudCA9PiB7XG4gIExhenlSZXN1bHQgPSBkZXBlbmRhbnRcbn1cblxuUm9vdC5yZWdpc3RlclByb2Nlc3NvciA9IGRlcGVuZGFudCA9PiB7XG4gIFByb2Nlc3NvciA9IGRlcGVuZGFudFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJvb3RcblJvb3QuZGVmYXVsdCA9IFJvb3RcblxuQ29udGFpbmVyLnJlZ2lzdGVyUm9vdChSb290KVxuIiwiJ3VzZSBzdHJpY3QnXG5cbmxldCBDb250YWluZXIgPSByZXF1aXJlKCcuL2NvbnRhaW5lcicpXG5sZXQgbGlzdCA9IHJlcXVpcmUoJy4vbGlzdCcpXG5cbmNsYXNzIFJ1bGUgZXh0ZW5kcyBDb250YWluZXIge1xuICBjb25zdHJ1Y3RvcihkZWZhdWx0cykge1xuICAgIHN1cGVyKGRlZmF1bHRzKVxuICAgIHRoaXMudHlwZSA9ICdydWxlJ1xuICAgIGlmICghdGhpcy5ub2RlcykgdGhpcy5ub2RlcyA9IFtdXG4gIH1cblxuICBnZXQgc2VsZWN0b3JzKCkge1xuICAgIHJldHVybiBsaXN0LmNvbW1hKHRoaXMuc2VsZWN0b3IpXG4gIH1cblxuICBzZXQgc2VsZWN0b3JzKHZhbHVlcykge1xuICAgIGxldCBtYXRjaCA9IHRoaXMuc2VsZWN0b3IgPyB0aGlzLnNlbGVjdG9yLm1hdGNoKC8sXFxzKi8pIDogbnVsbFxuICAgIGxldCBzZXAgPSBtYXRjaCA/IG1hdGNoWzBdIDogJywnICsgdGhpcy5yYXcoJ2JldHdlZW4nLCAnYmVmb3JlT3BlbicpXG4gICAgdGhpcy5zZWxlY3RvciA9IHZhbHVlcy5qb2luKHNlcClcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJ1bGVcblJ1bGUuZGVmYXVsdCA9IFJ1bGVcblxuQ29udGFpbmVyLnJlZ2lzdGVyUnVsZShSdWxlKVxuIiwiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IERFRkFVTFRfUkFXID0ge1xuICBjb2xvbjogJzogJyxcbiAgaW5kZW50OiAnICAgICcsXG4gIGJlZm9yZURlY2w6ICdcXG4nLFxuICBiZWZvcmVSdWxlOiAnXFxuJyxcbiAgYmVmb3JlT3BlbjogJyAnLFxuICBiZWZvcmVDbG9zZTogJ1xcbicsXG4gIGJlZm9yZUNvbW1lbnQ6ICdcXG4nLFxuICBhZnRlcjogJ1xcbicsXG4gIGVtcHR5Qm9keTogJycsXG4gIGNvbW1lbnRMZWZ0OiAnICcsXG4gIGNvbW1lbnRSaWdodDogJyAnLFxuICBzZW1pY29sb246IGZhbHNlXG59XG5cbmZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyKSB7XG4gIHJldHVybiBzdHJbMF0udG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKVxufVxuXG5jbGFzcyBTdHJpbmdpZmllciB7XG4gIGNvbnN0cnVjdG9yKGJ1aWxkZXIpIHtcbiAgICB0aGlzLmJ1aWxkZXIgPSBidWlsZGVyXG4gIH1cblxuICBzdHJpbmdpZnkobm9kZSwgc2VtaWNvbG9uKSB7XG4gICAgLyogYzggaWdub3JlIHN0YXJ0ICovXG4gICAgaWYgKCF0aGlzW25vZGUudHlwZV0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1Vua25vd24gQVNUIG5vZGUgdHlwZSAnICtcbiAgICAgICAgICBub2RlLnR5cGUgK1xuICAgICAgICAgICcuICcgK1xuICAgICAgICAgICdNYXliZSB5b3UgbmVlZCB0byBjaGFuZ2UgUG9zdENTUyBzdHJpbmdpZmllci4nXG4gICAgICApXG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBzdG9wICovXG4gICAgdGhpc1tub2RlLnR5cGVdKG5vZGUsIHNlbWljb2xvbilcbiAgfVxuXG4gIGRvY3VtZW50KG5vZGUpIHtcbiAgICB0aGlzLmJvZHkobm9kZSlcbiAgfVxuXG4gIHJvb3Qobm9kZSkge1xuICAgIHRoaXMuYm9keShub2RlKVxuICAgIGlmIChub2RlLnJhd3MuYWZ0ZXIpIHRoaXMuYnVpbGRlcihub2RlLnJhd3MuYWZ0ZXIpXG4gIH1cblxuICBjb21tZW50KG5vZGUpIHtcbiAgICBsZXQgbGVmdCA9IHRoaXMucmF3KG5vZGUsICdsZWZ0JywgJ2NvbW1lbnRMZWZ0JylcbiAgICBsZXQgcmlnaHQgPSB0aGlzLnJhdyhub2RlLCAncmlnaHQnLCAnY29tbWVudFJpZ2h0JylcbiAgICB0aGlzLmJ1aWxkZXIoJy8qJyArIGxlZnQgKyBub2RlLnRleHQgKyByaWdodCArICcqLycsIG5vZGUpXG4gIH1cblxuICBkZWNsKG5vZGUsIHNlbWljb2xvbikge1xuICAgIGxldCBiZXR3ZWVuID0gdGhpcy5yYXcobm9kZSwgJ2JldHdlZW4nLCAnY29sb24nKVxuICAgIGxldCBzdHJpbmcgPSBub2RlLnByb3AgKyBiZXR3ZWVuICsgdGhpcy5yYXdWYWx1ZShub2RlLCAndmFsdWUnKVxuXG4gICAgaWYgKG5vZGUuaW1wb3J0YW50KSB7XG4gICAgICBzdHJpbmcgKz0gbm9kZS5yYXdzLmltcG9ydGFudCB8fCAnICFpbXBvcnRhbnQnXG4gICAgfVxuXG4gICAgaWYgKHNlbWljb2xvbikgc3RyaW5nICs9ICc7J1xuICAgIHRoaXMuYnVpbGRlcihzdHJpbmcsIG5vZGUpXG4gIH1cblxuICBydWxlKG5vZGUpIHtcbiAgICB0aGlzLmJsb2NrKG5vZGUsIHRoaXMucmF3VmFsdWUobm9kZSwgJ3NlbGVjdG9yJykpXG4gICAgaWYgKG5vZGUucmF3cy5vd25TZW1pY29sb24pIHtcbiAgICAgIHRoaXMuYnVpbGRlcihub2RlLnJhd3Mub3duU2VtaWNvbG9uLCBub2RlLCAnZW5kJylcbiAgICB9XG4gIH1cblxuICBhdHJ1bGUobm9kZSwgc2VtaWNvbG9uKSB7XG4gICAgbGV0IG5hbWUgPSAnQCcgKyBub2RlLm5hbWVcbiAgICBsZXQgcGFyYW1zID0gbm9kZS5wYXJhbXMgPyB0aGlzLnJhd1ZhbHVlKG5vZGUsICdwYXJhbXMnKSA6ICcnXG5cbiAgICBpZiAodHlwZW9mIG5vZGUucmF3cy5hZnRlck5hbWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBuYW1lICs9IG5vZGUucmF3cy5hZnRlck5hbWVcbiAgICB9IGVsc2UgaWYgKHBhcmFtcykge1xuICAgICAgbmFtZSArPSAnICdcbiAgICB9XG5cbiAgICBpZiAobm9kZS5ub2Rlcykge1xuICAgICAgdGhpcy5ibG9jayhub2RlLCBuYW1lICsgcGFyYW1zKVxuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgZW5kID0gKG5vZGUucmF3cy5iZXR3ZWVuIHx8ICcnKSArIChzZW1pY29sb24gPyAnOycgOiAnJylcbiAgICAgIHRoaXMuYnVpbGRlcihuYW1lICsgcGFyYW1zICsgZW5kLCBub2RlKVxuICAgIH1cbiAgfVxuXG4gIGJvZHkobm9kZSkge1xuICAgIGxldCBsYXN0ID0gbm9kZS5ub2Rlcy5sZW5ndGggLSAxXG4gICAgd2hpbGUgKGxhc3QgPiAwKSB7XG4gICAgICBpZiAobm9kZS5ub2Rlc1tsYXN0XS50eXBlICE9PSAnY29tbWVudCcpIGJyZWFrXG4gICAgICBsYXN0IC09IDFcbiAgICB9XG5cbiAgICBsZXQgc2VtaWNvbG9uID0gdGhpcy5yYXcobm9kZSwgJ3NlbWljb2xvbicpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2RlLm5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgY2hpbGQgPSBub2RlLm5vZGVzW2ldXG4gICAgICBsZXQgYmVmb3JlID0gdGhpcy5yYXcoY2hpbGQsICdiZWZvcmUnKVxuICAgICAgaWYgKGJlZm9yZSkgdGhpcy5idWlsZGVyKGJlZm9yZSlcbiAgICAgIHRoaXMuc3RyaW5naWZ5KGNoaWxkLCBsYXN0ICE9PSBpIHx8IHNlbWljb2xvbilcbiAgICB9XG4gIH1cblxuICBibG9jayhub2RlLCBzdGFydCkge1xuICAgIGxldCBiZXR3ZWVuID0gdGhpcy5yYXcobm9kZSwgJ2JldHdlZW4nLCAnYmVmb3JlT3BlbicpXG4gICAgdGhpcy5idWlsZGVyKHN0YXJ0ICsgYmV0d2VlbiArICd7Jywgbm9kZSwgJ3N0YXJ0JylcblxuICAgIGxldCBhZnRlclxuICAgIGlmIChub2RlLm5vZGVzICYmIG5vZGUubm9kZXMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmJvZHkobm9kZSlcbiAgICAgIGFmdGVyID0gdGhpcy5yYXcobm9kZSwgJ2FmdGVyJylcbiAgICB9IGVsc2Uge1xuICAgICAgYWZ0ZXIgPSB0aGlzLnJhdyhub2RlLCAnYWZ0ZXInLCAnZW1wdHlCb2R5JylcbiAgICB9XG5cbiAgICBpZiAoYWZ0ZXIpIHRoaXMuYnVpbGRlcihhZnRlcilcbiAgICB0aGlzLmJ1aWxkZXIoJ30nLCBub2RlLCAnZW5kJylcbiAgfVxuXG4gIHJhdyhub2RlLCBvd24sIGRldGVjdCkge1xuICAgIGxldCB2YWx1ZVxuICAgIGlmICghZGV0ZWN0KSBkZXRlY3QgPSBvd25cblxuICAgIC8vIEFscmVhZHkgaGFkXG4gICAgaWYgKG93bikge1xuICAgICAgdmFsdWUgPSBub2RlLnJhd3Nbb3duXVxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHJldHVybiB2YWx1ZVxuICAgIH1cblxuICAgIGxldCBwYXJlbnQgPSBub2RlLnBhcmVudFxuXG4gICAgaWYgKGRldGVjdCA9PT0gJ2JlZm9yZScpIHtcbiAgICAgIC8vIEhhY2sgZm9yIGZpcnN0IHJ1bGUgaW4gQ1NTXG4gICAgICBpZiAoIXBhcmVudCB8fCAocGFyZW50LnR5cGUgPT09ICdyb290JyAmJiBwYXJlbnQuZmlyc3QgPT09IG5vZGUpKSB7XG4gICAgICAgIHJldHVybiAnJ1xuICAgICAgfVxuXG4gICAgICAvLyBgcm9vdGAgbm9kZXMgaW4gYGRvY3VtZW50YCBzaG91bGQgdXNlIG9ubHkgdGhlaXIgb3duIHJhd3NcbiAgICAgIGlmIChwYXJlbnQgJiYgcGFyZW50LnR5cGUgPT09ICdkb2N1bWVudCcpIHtcbiAgICAgICAgcmV0dXJuICcnXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRmxvYXRpbmcgY2hpbGQgd2l0aG91dCBwYXJlbnRcbiAgICBpZiAoIXBhcmVudCkgcmV0dXJuIERFRkFVTFRfUkFXW2RldGVjdF1cblxuICAgIC8vIERldGVjdCBzdHlsZSBieSBvdGhlciBub2Rlc1xuICAgIGxldCByb290ID0gbm9kZS5yb290KClcbiAgICBpZiAoIXJvb3QucmF3Q2FjaGUpIHJvb3QucmF3Q2FjaGUgPSB7fVxuICAgIGlmICh0eXBlb2Ygcm9vdC5yYXdDYWNoZVtkZXRlY3RdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHJvb3QucmF3Q2FjaGVbZGV0ZWN0XVxuICAgIH1cblxuICAgIGlmIChkZXRlY3QgPT09ICdiZWZvcmUnIHx8IGRldGVjdCA9PT0gJ2FmdGVyJykge1xuICAgICAgcmV0dXJuIHRoaXMuYmVmb3JlQWZ0ZXIobm9kZSwgZGV0ZWN0KVxuICAgIH0gZWxzZSB7XG4gICAgICBsZXQgbWV0aG9kID0gJ3JhdycgKyBjYXBpdGFsaXplKGRldGVjdClcbiAgICAgIGlmICh0aGlzW21ldGhvZF0pIHtcbiAgICAgICAgdmFsdWUgPSB0aGlzW21ldGhvZF0ocm9vdCwgbm9kZSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJvb3Qud2FsayhpID0+IHtcbiAgICAgICAgICB2YWx1ZSA9IGkucmF3c1tvd25dXG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHJldHVybiBmYWxzZVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB2YWx1ZSA9IERFRkFVTFRfUkFXW2RldGVjdF1cblxuICAgIHJvb3QucmF3Q2FjaGVbZGV0ZWN0XSA9IHZhbHVlXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICByYXdTZW1pY29sb24ocm9vdCkge1xuICAgIGxldCB2YWx1ZVxuICAgIHJvb3Qud2FsayhpID0+IHtcbiAgICAgIGlmIChpLm5vZGVzICYmIGkubm9kZXMubGVuZ3RoICYmIGkubGFzdC50eXBlID09PSAnZGVjbCcpIHtcbiAgICAgICAgdmFsdWUgPSBpLnJhd3Muc2VtaWNvbG9uXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgcmF3RW1wdHlCb2R5KHJvb3QpIHtcbiAgICBsZXQgdmFsdWVcbiAgICByb290LndhbGsoaSA9PiB7XG4gICAgICBpZiAoaS5ub2RlcyAmJiBpLm5vZGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB2YWx1ZSA9IGkucmF3cy5hZnRlclxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgfSlcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIHJhd0luZGVudChyb290KSB7XG4gICAgaWYgKHJvb3QucmF3cy5pbmRlbnQpIHJldHVybiByb290LnJhd3MuaW5kZW50XG4gICAgbGV0IHZhbHVlXG4gICAgcm9vdC53YWxrKGkgPT4ge1xuICAgICAgbGV0IHAgPSBpLnBhcmVudFxuICAgICAgaWYgKHAgJiYgcCAhPT0gcm9vdCAmJiBwLnBhcmVudCAmJiBwLnBhcmVudCA9PT0gcm9vdCkge1xuICAgICAgICBpZiAodHlwZW9mIGkucmF3cy5iZWZvcmUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgbGV0IHBhcnRzID0gaS5yYXdzLmJlZm9yZS5zcGxpdCgnXFxuJylcbiAgICAgICAgICB2YWx1ZSA9IHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdXG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXFMvZywgJycpXG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgcmF3QmVmb3JlQ29tbWVudChyb290LCBub2RlKSB7XG4gICAgbGV0IHZhbHVlXG4gICAgcm9vdC53YWxrQ29tbWVudHMoaSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGkucmF3cy5iZWZvcmUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhbHVlID0gaS5yYXdzLmJlZm9yZVxuICAgICAgICBpZiAodmFsdWUuaW5jbHVkZXMoJ1xcbicpKSB7XG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9bXlxcbl0rJC8sICcnKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH0pXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhbHVlID0gdGhpcy5yYXcobm9kZSwgbnVsbCwgJ2JlZm9yZURlY2wnKVxuICAgIH0gZWxzZSBpZiAodmFsdWUpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXFxTL2csICcnKVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIHJhd0JlZm9yZURlY2wocm9vdCwgbm9kZSkge1xuICAgIGxldCB2YWx1ZVxuICAgIHJvb3Qud2Fsa0RlY2xzKGkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBpLnJhd3MuYmVmb3JlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YWx1ZSA9IGkucmF3cy5iZWZvcmVcbiAgICAgICAgaWYgKHZhbHVlLmluY2x1ZGVzKCdcXG4nKSkge1xuICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvW15cXG5dKyQvLCAnJylcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9KVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YWx1ZSA9IHRoaXMucmF3KG5vZGUsIG51bGwsICdiZWZvcmVSdWxlJylcbiAgICB9IGVsc2UgaWYgKHZhbHVlKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcUy9nLCAnJylcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICByYXdCZWZvcmVSdWxlKHJvb3QpIHtcbiAgICBsZXQgdmFsdWVcbiAgICByb290LndhbGsoaSA9PiB7XG4gICAgICBpZiAoaS5ub2RlcyAmJiAoaS5wYXJlbnQgIT09IHJvb3QgfHwgcm9vdC5maXJzdCAhPT0gaSkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpLnJhd3MuYmVmb3JlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHZhbHVlID0gaS5yYXdzLmJlZm9yZVxuICAgICAgICAgIGlmICh2YWx1ZS5pbmNsdWRlcygnXFxuJykpIHtcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvW15cXG5dKyQvLCAnJylcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICAgIGlmICh2YWx1ZSkgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXFMvZywgJycpXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICByYXdCZWZvcmVDbG9zZShyb290KSB7XG4gICAgbGV0IHZhbHVlXG4gICAgcm9vdC53YWxrKGkgPT4ge1xuICAgICAgaWYgKGkubm9kZXMgJiYgaS5ub2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaS5yYXdzLmFmdGVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHZhbHVlID0gaS5yYXdzLmFmdGVyXG4gICAgICAgICAgaWYgKHZhbHVlLmluY2x1ZGVzKCdcXG4nKSkge1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9bXlxcbl0rJC8sICcnKVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgaWYgKHZhbHVlKSB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcUy9nLCAnJylcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIHJhd0JlZm9yZU9wZW4ocm9vdCkge1xuICAgIGxldCB2YWx1ZVxuICAgIHJvb3Qud2FsayhpID0+IHtcbiAgICAgIGlmIChpLnR5cGUgIT09ICdkZWNsJykge1xuICAgICAgICB2YWx1ZSA9IGkucmF3cy5iZXR3ZWVuXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgcmF3Q29sb24ocm9vdCkge1xuICAgIGxldCB2YWx1ZVxuICAgIHJvb3Qud2Fsa0RlY2xzKGkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBpLnJhd3MuYmV0d2VlbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFsdWUgPSBpLnJhd3MuYmV0d2Vlbi5yZXBsYWNlKC9bXlxcczpdL2csICcnKVxuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgYmVmb3JlQWZ0ZXIobm9kZSwgZGV0ZWN0KSB7XG4gICAgbGV0IHZhbHVlXG4gICAgaWYgKG5vZGUudHlwZSA9PT0gJ2RlY2wnKSB7XG4gICAgICB2YWx1ZSA9IHRoaXMucmF3KG5vZGUsIG51bGwsICdiZWZvcmVEZWNsJylcbiAgICB9IGVsc2UgaWYgKG5vZGUudHlwZSA9PT0gJ2NvbW1lbnQnKSB7XG4gICAgICB2YWx1ZSA9IHRoaXMucmF3KG5vZGUsIG51bGwsICdiZWZvcmVDb21tZW50JylcbiAgICB9IGVsc2UgaWYgKGRldGVjdCA9PT0gJ2JlZm9yZScpIHtcbiAgICAgIHZhbHVlID0gdGhpcy5yYXcobm9kZSwgbnVsbCwgJ2JlZm9yZVJ1bGUnKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSA9IHRoaXMucmF3KG5vZGUsIG51bGwsICdiZWZvcmVDbG9zZScpXG4gICAgfVxuXG4gICAgbGV0IGJ1ZiA9IG5vZGUucGFyZW50XG4gICAgbGV0IGRlcHRoID0gMFxuICAgIHdoaWxlIChidWYgJiYgYnVmLnR5cGUgIT09ICdyb290Jykge1xuICAgICAgZGVwdGggKz0gMVxuICAgICAgYnVmID0gYnVmLnBhcmVudFxuICAgIH1cblxuICAgIGlmICh2YWx1ZS5pbmNsdWRlcygnXFxuJykpIHtcbiAgICAgIGxldCBpbmRlbnQgPSB0aGlzLnJhdyhub2RlLCBudWxsLCAnaW5kZW50JylcbiAgICAgIGlmIChpbmRlbnQubGVuZ3RoKSB7XG4gICAgICAgIGZvciAobGV0IHN0ZXAgPSAwOyBzdGVwIDwgZGVwdGg7IHN0ZXArKykgdmFsdWUgKz0gaW5kZW50XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICByYXdWYWx1ZShub2RlLCBwcm9wKSB7XG4gICAgbGV0IHZhbHVlID0gbm9kZVtwcm9wXVxuICAgIGxldCByYXcgPSBub2RlLnJhd3NbcHJvcF1cbiAgICBpZiAocmF3ICYmIHJhdy52YWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgIHJldHVybiByYXcucmF3XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdHJpbmdpZmllclxuU3RyaW5naWZpZXIuZGVmYXVsdCA9IFN0cmluZ2lmaWVyXG4iLCIndXNlIHN0cmljdCdcblxubGV0IFN0cmluZ2lmaWVyID0gcmVxdWlyZSgnLi9zdHJpbmdpZmllcicpXG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShub2RlLCBidWlsZGVyKSB7XG4gIGxldCBzdHIgPSBuZXcgU3RyaW5naWZpZXIoYnVpbGRlcilcbiAgc3RyLnN0cmluZ2lmeShub2RlKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0cmluZ2lmeVxuc3RyaW5naWZ5LmRlZmF1bHQgPSBzdHJpbmdpZnlcbiIsIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cy5pc0NsZWFuID0gU3ltYm9sKCdpc0NsZWFuJylcblxubW9kdWxlLmV4cG9ydHMubXkgPSBTeW1ib2woJ215JylcbiIsIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBTSU5HTEVfUVVPVEUgPSBcIidcIi5jaGFyQ29kZUF0KDApXG5jb25zdCBET1VCTEVfUVVPVEUgPSAnXCInLmNoYXJDb2RlQXQoMClcbmNvbnN0IEJBQ0tTTEFTSCA9ICdcXFxcJy5jaGFyQ29kZUF0KDApXG5jb25zdCBTTEFTSCA9ICcvJy5jaGFyQ29kZUF0KDApXG5jb25zdCBORVdMSU5FID0gJ1xcbicuY2hhckNvZGVBdCgwKVxuY29uc3QgU1BBQ0UgPSAnICcuY2hhckNvZGVBdCgwKVxuY29uc3QgRkVFRCA9ICdcXGYnLmNoYXJDb2RlQXQoMClcbmNvbnN0IFRBQiA9ICdcXHQnLmNoYXJDb2RlQXQoMClcbmNvbnN0IENSID0gJ1xccicuY2hhckNvZGVBdCgwKVxuY29uc3QgT1BFTl9TUVVBUkUgPSAnWycuY2hhckNvZGVBdCgwKVxuY29uc3QgQ0xPU0VfU1FVQVJFID0gJ10nLmNoYXJDb2RlQXQoMClcbmNvbnN0IE9QRU5fUEFSRU5USEVTRVMgPSAnKCcuY2hhckNvZGVBdCgwKVxuY29uc3QgQ0xPU0VfUEFSRU5USEVTRVMgPSAnKScuY2hhckNvZGVBdCgwKVxuY29uc3QgT1BFTl9DVVJMWSA9ICd7Jy5jaGFyQ29kZUF0KDApXG5jb25zdCBDTE9TRV9DVVJMWSA9ICd9Jy5jaGFyQ29kZUF0KDApXG5jb25zdCBTRU1JQ09MT04gPSAnOycuY2hhckNvZGVBdCgwKVxuY29uc3QgQVNURVJJU0sgPSAnKicuY2hhckNvZGVBdCgwKVxuY29uc3QgQ09MT04gPSAnOicuY2hhckNvZGVBdCgwKVxuY29uc3QgQVQgPSAnQCcuY2hhckNvZGVBdCgwKVxuXG5jb25zdCBSRV9BVF9FTkQgPSAvW1xcdFxcblxcZlxcciBcIiMnKCkvO1tcXFxcXFxde31dL2dcbmNvbnN0IFJFX1dPUkRfRU5EID0gL1tcXHRcXG5cXGZcXHIgIVwiIycoKTo7QFtcXFxcXFxde31dfFxcLyg/PVxcKikvZ1xuY29uc3QgUkVfQkFEX0JSQUNLRVQgPSAvLltcXG5cIicoL1xcXFxdL1xuY29uc3QgUkVfSEVYX0VTQ0FQRSA9IC9bXFxkYS1mXS9pXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdG9rZW5pemVyKGlucHV0LCBvcHRpb25zID0ge30pIHtcbiAgbGV0IGNzcyA9IGlucHV0LmNzcy52YWx1ZU9mKClcbiAgbGV0IGlnbm9yZSA9IG9wdGlvbnMuaWdub3JlRXJyb3JzXG5cbiAgbGV0IGNvZGUsIG5leHQsIHF1b3RlLCBjb250ZW50LCBlc2NhcGVcbiAgbGV0IGVzY2FwZWQsIGVzY2FwZVBvcywgcHJldiwgbiwgY3VycmVudFRva2VuXG5cbiAgbGV0IGxlbmd0aCA9IGNzcy5sZW5ndGhcbiAgbGV0IHBvcyA9IDBcbiAgbGV0IGJ1ZmZlciA9IFtdXG4gIGxldCByZXR1cm5lZCA9IFtdXG5cbiAgZnVuY3Rpb24gcG9zaXRpb24oKSB7XG4gICAgcmV0dXJuIHBvc1xuICB9XG5cbiAgZnVuY3Rpb24gdW5jbG9zZWQod2hhdCkge1xuICAgIHRocm93IGlucHV0LmVycm9yKCdVbmNsb3NlZCAnICsgd2hhdCwgcG9zKVxuICB9XG5cbiAgZnVuY3Rpb24gZW5kT2ZGaWxlKCkge1xuICAgIHJldHVybiByZXR1cm5lZC5sZW5ndGggPT09IDAgJiYgcG9zID49IGxlbmd0aFxuICB9XG5cbiAgZnVuY3Rpb24gbmV4dFRva2VuKG9wdHMpIHtcbiAgICBpZiAocmV0dXJuZWQubGVuZ3RoKSByZXR1cm4gcmV0dXJuZWQucG9wKClcbiAgICBpZiAocG9zID49IGxlbmd0aCkgcmV0dXJuXG5cbiAgICBsZXQgaWdub3JlVW5jbG9zZWQgPSBvcHRzID8gb3B0cy5pZ25vcmVVbmNsb3NlZCA6IGZhbHNlXG5cbiAgICBjb2RlID0gY3NzLmNoYXJDb2RlQXQocG9zKVxuXG4gICAgc3dpdGNoIChjb2RlKSB7XG4gICAgICBjYXNlIE5FV0xJTkU6XG4gICAgICBjYXNlIFNQQUNFOlxuICAgICAgY2FzZSBUQUI6XG4gICAgICBjYXNlIENSOlxuICAgICAgY2FzZSBGRUVEOiB7XG4gICAgICAgIG5leHQgPSBwb3NcbiAgICAgICAgZG8ge1xuICAgICAgICAgIG5leHQgKz0gMVxuICAgICAgICAgIGNvZGUgPSBjc3MuY2hhckNvZGVBdChuZXh0KVxuICAgICAgICB9IHdoaWxlIChcbiAgICAgICAgICBjb2RlID09PSBTUEFDRSB8fFxuICAgICAgICAgIGNvZGUgPT09IE5FV0xJTkUgfHxcbiAgICAgICAgICBjb2RlID09PSBUQUIgfHxcbiAgICAgICAgICBjb2RlID09PSBDUiB8fFxuICAgICAgICAgIGNvZGUgPT09IEZFRURcbiAgICAgICAgKVxuXG4gICAgICAgIGN1cnJlbnRUb2tlbiA9IFsnc3BhY2UnLCBjc3Muc2xpY2UocG9zLCBuZXh0KV1cbiAgICAgICAgcG9zID0gbmV4dCAtIDFcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cblxuICAgICAgY2FzZSBPUEVOX1NRVUFSRTpcbiAgICAgIGNhc2UgQ0xPU0VfU1FVQVJFOlxuICAgICAgY2FzZSBPUEVOX0NVUkxZOlxuICAgICAgY2FzZSBDTE9TRV9DVVJMWTpcbiAgICAgIGNhc2UgQ09MT046XG4gICAgICBjYXNlIFNFTUlDT0xPTjpcbiAgICAgIGNhc2UgQ0xPU0VfUEFSRU5USEVTRVM6IHtcbiAgICAgICAgbGV0IGNvbnRyb2xDaGFyID0gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKVxuICAgICAgICBjdXJyZW50VG9rZW4gPSBbY29udHJvbENoYXIsIGNvbnRyb2xDaGFyLCBwb3NdXG4gICAgICAgIGJyZWFrXG4gICAgICB9XG5cbiAgICAgIGNhc2UgT1BFTl9QQVJFTlRIRVNFUzoge1xuICAgICAgICBwcmV2ID0gYnVmZmVyLmxlbmd0aCA/IGJ1ZmZlci5wb3AoKVsxXSA6ICcnXG4gICAgICAgIG4gPSBjc3MuY2hhckNvZGVBdChwb3MgKyAxKVxuICAgICAgICBpZiAoXG4gICAgICAgICAgcHJldiA9PT0gJ3VybCcgJiZcbiAgICAgICAgICBuICE9PSBTSU5HTEVfUVVPVEUgJiZcbiAgICAgICAgICBuICE9PSBET1VCTEVfUVVPVEUgJiZcbiAgICAgICAgICBuICE9PSBTUEFDRSAmJlxuICAgICAgICAgIG4gIT09IE5FV0xJTkUgJiZcbiAgICAgICAgICBuICE9PSBUQUIgJiZcbiAgICAgICAgICBuICE9PSBGRUVEICYmXG4gICAgICAgICAgbiAhPT0gQ1JcbiAgICAgICAgKSB7XG4gICAgICAgICAgbmV4dCA9IHBvc1xuICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgIGVzY2FwZWQgPSBmYWxzZVxuICAgICAgICAgICAgbmV4dCA9IGNzcy5pbmRleE9mKCcpJywgbmV4dCArIDEpXG4gICAgICAgICAgICBpZiAobmV4dCA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgaWYgKGlnbm9yZSB8fCBpZ25vcmVVbmNsb3NlZCkge1xuICAgICAgICAgICAgICAgIG5leHQgPSBwb3NcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHVuY2xvc2VkKCdicmFja2V0JylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXNjYXBlUG9zID0gbmV4dFxuICAgICAgICAgICAgd2hpbGUgKGNzcy5jaGFyQ29kZUF0KGVzY2FwZVBvcyAtIDEpID09PSBCQUNLU0xBU0gpIHtcbiAgICAgICAgICAgICAgZXNjYXBlUG9zIC09IDFcbiAgICAgICAgICAgICAgZXNjYXBlZCA9ICFlc2NhcGVkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSB3aGlsZSAoZXNjYXBlZClcblxuICAgICAgICAgIGN1cnJlbnRUb2tlbiA9IFsnYnJhY2tldHMnLCBjc3Muc2xpY2UocG9zLCBuZXh0ICsgMSksIHBvcywgbmV4dF1cblxuICAgICAgICAgIHBvcyA9IG5leHRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXh0ID0gY3NzLmluZGV4T2YoJyknLCBwb3MgKyAxKVxuICAgICAgICAgIGNvbnRlbnQgPSBjc3Muc2xpY2UocG9zLCBuZXh0ICsgMSlcblxuICAgICAgICAgIGlmIChuZXh0ID09PSAtMSB8fCBSRV9CQURfQlJBQ0tFVC50ZXN0KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICBjdXJyZW50VG9rZW4gPSBbJygnLCAnKCcsIHBvc11cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY3VycmVudFRva2VuID0gWydicmFja2V0cycsIGNvbnRlbnQsIHBvcywgbmV4dF1cbiAgICAgICAgICAgIHBvcyA9IG5leHRcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBicmVha1xuICAgICAgfVxuXG4gICAgICBjYXNlIFNJTkdMRV9RVU9URTpcbiAgICAgIGNhc2UgRE9VQkxFX1FVT1RFOiB7XG4gICAgICAgIHF1b3RlID0gY29kZSA9PT0gU0lOR0xFX1FVT1RFID8gXCInXCIgOiAnXCInXG4gICAgICAgIG5leHQgPSBwb3NcbiAgICAgICAgZG8ge1xuICAgICAgICAgIGVzY2FwZWQgPSBmYWxzZVxuICAgICAgICAgIG5leHQgPSBjc3MuaW5kZXhPZihxdW90ZSwgbmV4dCArIDEpXG4gICAgICAgICAgaWYgKG5leHQgPT09IC0xKSB7XG4gICAgICAgICAgICBpZiAoaWdub3JlIHx8IGlnbm9yZVVuY2xvc2VkKSB7XG4gICAgICAgICAgICAgIG5leHQgPSBwb3MgKyAxXG4gICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB1bmNsb3NlZCgnc3RyaW5nJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZXNjYXBlUG9zID0gbmV4dFxuICAgICAgICAgIHdoaWxlIChjc3MuY2hhckNvZGVBdChlc2NhcGVQb3MgLSAxKSA9PT0gQkFDS1NMQVNIKSB7XG4gICAgICAgICAgICBlc2NhcGVQb3MgLT0gMVxuICAgICAgICAgICAgZXNjYXBlZCA9ICFlc2NhcGVkXG4gICAgICAgICAgfVxuICAgICAgICB9IHdoaWxlIChlc2NhcGVkKVxuXG4gICAgICAgIGN1cnJlbnRUb2tlbiA9IFsnc3RyaW5nJywgY3NzLnNsaWNlKHBvcywgbmV4dCArIDEpLCBwb3MsIG5leHRdXG4gICAgICAgIHBvcyA9IG5leHRcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cblxuICAgICAgY2FzZSBBVDoge1xuICAgICAgICBSRV9BVF9FTkQubGFzdEluZGV4ID0gcG9zICsgMVxuICAgICAgICBSRV9BVF9FTkQudGVzdChjc3MpXG4gICAgICAgIGlmIChSRV9BVF9FTkQubGFzdEluZGV4ID09PSAwKSB7XG4gICAgICAgICAgbmV4dCA9IGNzcy5sZW5ndGggLSAxXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV4dCA9IFJFX0FUX0VORC5sYXN0SW5kZXggLSAyXG4gICAgICAgIH1cblxuICAgICAgICBjdXJyZW50VG9rZW4gPSBbJ2F0LXdvcmQnLCBjc3Muc2xpY2UocG9zLCBuZXh0ICsgMSksIHBvcywgbmV4dF1cblxuICAgICAgICBwb3MgPSBuZXh0XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG5cbiAgICAgIGNhc2UgQkFDS1NMQVNIOiB7XG4gICAgICAgIG5leHQgPSBwb3NcbiAgICAgICAgZXNjYXBlID0gdHJ1ZVxuICAgICAgICB3aGlsZSAoY3NzLmNoYXJDb2RlQXQobmV4dCArIDEpID09PSBCQUNLU0xBU0gpIHtcbiAgICAgICAgICBuZXh0ICs9IDFcbiAgICAgICAgICBlc2NhcGUgPSAhZXNjYXBlXG4gICAgICAgIH1cbiAgICAgICAgY29kZSA9IGNzcy5jaGFyQ29kZUF0KG5leHQgKyAxKVxuICAgICAgICBpZiAoXG4gICAgICAgICAgZXNjYXBlICYmXG4gICAgICAgICAgY29kZSAhPT0gU0xBU0ggJiZcbiAgICAgICAgICBjb2RlICE9PSBTUEFDRSAmJlxuICAgICAgICAgIGNvZGUgIT09IE5FV0xJTkUgJiZcbiAgICAgICAgICBjb2RlICE9PSBUQUIgJiZcbiAgICAgICAgICBjb2RlICE9PSBDUiAmJlxuICAgICAgICAgIGNvZGUgIT09IEZFRURcbiAgICAgICAgKSB7XG4gICAgICAgICAgbmV4dCArPSAxXG4gICAgICAgICAgaWYgKFJFX0hFWF9FU0NBUEUudGVzdChjc3MuY2hhckF0KG5leHQpKSkge1xuICAgICAgICAgICAgd2hpbGUgKFJFX0hFWF9FU0NBUEUudGVzdChjc3MuY2hhckF0KG5leHQgKyAxKSkpIHtcbiAgICAgICAgICAgICAgbmV4dCArPSAxXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY3NzLmNoYXJDb2RlQXQobmV4dCArIDEpID09PSBTUEFDRSkge1xuICAgICAgICAgICAgICBuZXh0ICs9IDFcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjdXJyZW50VG9rZW4gPSBbJ3dvcmQnLCBjc3Muc2xpY2UocG9zLCBuZXh0ICsgMSksIHBvcywgbmV4dF1cblxuICAgICAgICBwb3MgPSBuZXh0XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG5cbiAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgaWYgKGNvZGUgPT09IFNMQVNIICYmIGNzcy5jaGFyQ29kZUF0KHBvcyArIDEpID09PSBBU1RFUklTSykge1xuICAgICAgICAgIG5leHQgPSBjc3MuaW5kZXhPZignKi8nLCBwb3MgKyAyKSArIDFcbiAgICAgICAgICBpZiAobmV4dCA9PT0gMCkge1xuICAgICAgICAgICAgaWYgKGlnbm9yZSB8fCBpZ25vcmVVbmNsb3NlZCkge1xuICAgICAgICAgICAgICBuZXh0ID0gY3NzLmxlbmd0aFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdW5jbG9zZWQoJ2NvbW1lbnQnKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGN1cnJlbnRUb2tlbiA9IFsnY29tbWVudCcsIGNzcy5zbGljZShwb3MsIG5leHQgKyAxKSwgcG9zLCBuZXh0XVxuICAgICAgICAgIHBvcyA9IG5leHRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBSRV9XT1JEX0VORC5sYXN0SW5kZXggPSBwb3MgKyAxXG4gICAgICAgICAgUkVfV09SRF9FTkQudGVzdChjc3MpXG4gICAgICAgICAgaWYgKFJFX1dPUkRfRU5ELmxhc3RJbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgbmV4dCA9IGNzcy5sZW5ndGggLSAxXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5leHQgPSBSRV9XT1JEX0VORC5sYXN0SW5kZXggLSAyXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY3VycmVudFRva2VuID0gWyd3b3JkJywgY3NzLnNsaWNlKHBvcywgbmV4dCArIDEpLCBwb3MsIG5leHRdXG4gICAgICAgICAgYnVmZmVyLnB1c2goY3VycmVudFRva2VuKVxuICAgICAgICAgIHBvcyA9IG5leHRcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgcG9zKytcbiAgICByZXR1cm4gY3VycmVudFRva2VuXG4gIH1cblxuICBmdW5jdGlvbiBiYWNrKHRva2VuKSB7XG4gICAgcmV0dXJuZWQucHVzaCh0b2tlbilcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgYmFjayxcbiAgICBuZXh0VG9rZW4sXG4gICAgZW5kT2ZGaWxlLFxuICAgIHBvc2l0aW9uXG4gIH1cbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbid1c2Ugc3RyaWN0J1xuXG5sZXQgcHJpbnRlZCA9IHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gd2Fybk9uY2UobWVzc2FnZSkge1xuICBpZiAocHJpbnRlZFttZXNzYWdlXSkgcmV0dXJuXG4gIHByaW50ZWRbbWVzc2FnZV0gPSB0cnVlXG5cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiBjb25zb2xlLndhcm4pIHtcbiAgICBjb25zb2xlLndhcm4obWVzc2FnZSlcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnXG5cbmNsYXNzIFdhcm5pbmcge1xuICBjb25zdHJ1Y3Rvcih0ZXh0LCBvcHRzID0ge30pIHtcbiAgICB0aGlzLnR5cGUgPSAnd2FybmluZydcbiAgICB0aGlzLnRleHQgPSB0ZXh0XG5cbiAgICBpZiAob3B0cy5ub2RlICYmIG9wdHMubm9kZS5zb3VyY2UpIHtcbiAgICAgIGxldCByYW5nZSA9IG9wdHMubm9kZS5yYW5nZUJ5KG9wdHMpXG4gICAgICB0aGlzLmxpbmUgPSByYW5nZS5zdGFydC5saW5lXG4gICAgICB0aGlzLmNvbHVtbiA9IHJhbmdlLnN0YXJ0LmNvbHVtblxuICAgICAgdGhpcy5lbmRMaW5lID0gcmFuZ2UuZW5kLmxpbmVcbiAgICAgIHRoaXMuZW5kQ29sdW1uID0gcmFuZ2UuZW5kLmNvbHVtblxuICAgIH1cblxuICAgIGZvciAobGV0IG9wdCBpbiBvcHRzKSB0aGlzW29wdF0gPSBvcHRzW29wdF1cbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIGlmICh0aGlzLm5vZGUpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vZGUuZXJyb3IodGhpcy50ZXh0LCB7XG4gICAgICAgIHBsdWdpbjogdGhpcy5wbHVnaW4sXG4gICAgICAgIGluZGV4OiB0aGlzLmluZGV4LFxuICAgICAgICB3b3JkOiB0aGlzLndvcmRcbiAgICAgIH0pLm1lc3NhZ2VcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wbHVnaW4pIHtcbiAgICAgIHJldHVybiB0aGlzLnBsdWdpbiArICc6ICcgKyB0aGlzLnRleHRcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy50ZXh0XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXYXJuaW5nXG5XYXJuaW5nLmRlZmF1bHQgPSBXYXJuaW5nXG4iLCJsZXQgdXJsQWxwaGFiZXQgPVxuICAndXNlYW5kb20tMjZUMTk4MzQwUFg3NXB4SkFDS1ZFUllNSU5EQlVTSFdPTEZfR1FaYmZnaGprbHF2d3l6cmljdCdcbmxldCBjdXN0b21BbHBoYWJldCA9IChhbHBoYWJldCwgZGVmYXVsdFNpemUgPSAyMSkgPT4ge1xuICByZXR1cm4gKHNpemUgPSBkZWZhdWx0U2l6ZSkgPT4ge1xuICAgIGxldCBpZCA9ICcnXG4gICAgbGV0IGkgPSBzaXplXG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgaWQgKz0gYWxwaGFiZXRbKE1hdGgucmFuZG9tKCkgKiBhbHBoYWJldC5sZW5ndGgpIHwgMF1cbiAgICB9XG4gICAgcmV0dXJuIGlkXG4gIH1cbn1cbmxldCBuYW5vaWQgPSAoc2l6ZSA9IDIxKSA9PiB7XG4gIGxldCBpZCA9ICcnXG4gIGxldCBpID0gc2l6ZVxuICB3aGlsZSAoaS0tKSB7XG4gICAgaWQgKz0gdXJsQWxwaGFiZXRbKE1hdGgucmFuZG9tKCkgKiA2NCkgfCAwXVxuICB9XG4gIHJldHVybiBpZFxufVxubW9kdWxlLmV4cG9ydHMgPSB7IG5hbm9pZCwgY3VzdG9tQWxwaGFiZXQgfVxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8v0JTQvtCx0LDQstC70LXQvdC40LUg0L/QtdGA0LLRi9GFIDYg0LrQsNGA0YLQvtGH0LXQuiDQvdCwINGB0YLRgNCw0L3QuNGG0YNcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xuICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19zdWJtaXQnLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdF9pbmFjdGl2ZScsXG4gIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJyxcbiAgZXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dC1lcnJvcl9hY3RpdmUnXG59OyIsImltcG9ydCB7IGRhdGEgfSBmcm9tIFwiYXV0b3ByZWZpeGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoeyBjYXJkRGF0YSwgdXNlcklkLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUxpa2VDbGljaywgaGFuZGxlRGVsZXRlSWNvbkNsaWNrIH0sIHRlbXBsYXRlU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9uYW1lID0gY2FyZERhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcbiAgICB0aGlzLl9saWtlcyA9IGNhcmREYXRhLmxpa2VzO1xuICAgIHRoaXMuY2FyZElkID0gY2FyZERhdGEuX2lkO1xuICAgIHRoaXMuX3VzZXIgPSB1c2VySWQ7XG4gICAgdGhpcy5fb3duZXIgPSBjYXJkRGF0YS5vd25lci5faWQ7XG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVJY29uQ2xpY2sgPSBoYW5kbGVEZWxldGVJY29uQ2xpY2s7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wbGFjZV9faW1hZ2UnKTtcbiAgICB0aGlzLl9sYWJlbCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlX190ZXh0Jyk7XG4gICAgdGhpcy5fYnV0dG9uTGlrZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmxpa2VfX2ljb24nKTtcbiAgICB0aGlzLl9saWtlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcubGlrZV9fcXVhbnRpdHknKTtcbiAgICB0aGlzLl90cmFzaCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnRyYXNoJyk7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgbmV3UGxhY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLnBsYWNlJykuY2xvbmVOb2RlKHRydWUpO1xuICAgIHJldHVybiBuZXdQbGFjZTtcbiAgfVxuXG4gIGNvdW50TGlrZXMoZGF0YSl7XG4gICAgdGhpcy5fbGlrZS50ZXh0Q29udGVudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgfVxuXG4gIGlzTGlrZWQoKXsgXG4gICAgcmV0dXJuIHRoaXMuX2xpa2VzLnNvbWUoaXRlbSA9PiB7XG4gICAgICByZXR1cm4gaXRlbS5faWQgPT09IHRoaXMuX3VzZXJ9KVxuICB9XG5cbiAgX2NoZWNrTGlrZSgpe1xuICAgIHRoaXMuX2xpa2VzLnNvbWUoKGl0ZW0pPT57XG4gICAgICBpZihpdGVtLl9pZCA9PT0gdGhpcy5fdXNlcil7XG4gICAgICAgIHRoaXMuX2J1dHRvbkxpa2UuY2xhc3NMaXN0LmFkZCgnbGlrZV9faWNvbl9hY3RpdmUnKVxuICAgICAgfX0pXG4gIH1cblxuICBzZXRMaWtlKCl7XG4gICAgdGhpcy5fYnV0dG9uTGlrZS5jbGFzc0xpc3QuYWRkKCdsaWtlX19pY29uX2FjdGl2ZScpO1xuICB9XG5cbiAgZGVsZXRlTGlrZSgpe1xuICAgIHRoaXMuX2J1dHRvbkxpa2UuY2xhc3NMaXN0LnJlbW92ZSgnbGlrZV9faWNvbl9hY3RpdmUnKTtcbiAgfVxuXG5cbiAgX3NldExpa2VFdmVudExpc3RlbmVyKCkge1xuICAgIHRoaXMuX2J1dHRvbkxpa2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IFxuICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKHRoaXMpO1xuICAgIH0pO1xuICB9XG5cbiAgX3JlbW92ZURlbGV0ZUJ1dHRvbigpe1xuICAgIGlmKHRoaXMuX3VzZXIgIT09IHRoaXMuX293bmVyICl7XG4gICAgICB0aGlzLl90cmFzaC5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICBkZWxldGVDYXJkKCl7XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIF9zZXREZWxldGVFdmVudExpc3RlbmVyKCkge1xuICAgIHRoaXMuX3RyYXNoLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlSWNvbkNsaWNrKHRoaXMuY2FyZElkKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zZXRJbWFnZUNsaWNrRXZlbnRMaXN0ZW5lcigpIHtcbiAgICB0aGlzLl9pbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9zZXRMaWtlRXZlbnRMaXN0ZW5lcigpO1xuICAgIHRoaXMuX3NldERlbGV0ZUV2ZW50TGlzdGVuZXIoKTtcbiAgICB0aGlzLl9zZXRJbWFnZUNsaWNrRXZlbnRMaXN0ZW5lcigpO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkgeyAgICBcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2xhYmVsLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2xpa2UudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fY2hlY2tMaWtlKCk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9yZW1vdmVEZWxldGVCdXR0b24oKTtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gXG5cbiAgXG5cbn0gIiwiZXhwb3J0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yICh7cmVuZGVyZXJ9LCBjb250YWluZXJTZWxlY3Rvcil7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgfVxyXG5cclxuICByZW5kZXJFbGVtZW50cyhkYXRhLCB1c2VySWQpe1xyXG4gICAgZGF0YS5mb3JFYWNoKChpdGVtKT0+e1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtLCB1c2VySWQpO1xyXG4gICAgICAvLyB0aGlzLl91c2VySWQgPSB1c2VySWRcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbSAoZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5pbnB1dFNlbGVjdG9yKSk7XG4gIH1cblxuXG4gIC8vINGE0YPQvdC60YbQuNGPINC00L7QsdCw0LLQu9GP0LXRgiDQutC70LDRgdGBINGB0L4g0YHRgtC40LvRj9C80Lgg0LjQvdC/0YPRgtC+0LIg0L/RgNC4INC+0YjQuNCx0LrQtVxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICAvL9GE0YPQvdC60YbQuNGPINGD0LTQsNC70Y/QtdGCINC60LvQsNGB0YEg0YHQviDRgdGC0LjQu9GP0LzQuCDQuNC90L/Rg9GC0L7QsiDQv9GA0Lgg0L7RiNC40LHQutC1XG4gIF9oaWRlSW5wdXRFcnJvciA9IChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF90b2dnbGVJbnB1dEVycm9yU3RhdGUgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2UgeyB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpOyB9XG4gIH07XG5cbiAgX2hhc0ludmFsaWRJbnB1dCA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgLy8g0JXRgdC70Lgg0L/QvtC70LUg0L3QtSDQstCw0LvQuNC00L3Qviwg0LrQvtC70LHRjdC6INCy0LXRgNC90ZHRgiB0cnVlLCDQvtCx0YXQvtC0INC80LDRgdGB0LjQstCwINC/0YDQtdC60YDQsNGC0LjRgtGB0Y8g0Lgg0LLRgdGPINGE0YPQvdC60YbQuNGPIGhhc0ludmFsaWRJbnB1dCDQstC10YDQvdGR0YIgdHJ1ZVxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSlcbiAgfVxuXG4gIF9kaXNhYmxlQnV0dG9uID0gKCkgPT4ge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgfVxuXG4gIF9hY3RpdmF0ZUJ1dHRvbiA9ICgpID0+IHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuX2FjdGl2YXRlQnV0dG9uKCk7XG4gICAgfVxuICB9XG5cbiAgcmVzZXRWYWxpZGF0aW9uID0gKCkgPT4ge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCk9PntcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSlcbiAgfVxuXG4gIF9zZXRFdmVudHNMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdyZXNldCcsICgpID0+IHtcbiAgICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcbiAgICB9KTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUlucHV0RXJyb3JTdGF0ZShpbnB1dEVsZW1lbnQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSlcbiAgfTtcblxuICBlbmFibGVWYWxpZGF0aW9uID0gKCkgPT4ge1xuICAgIHRoaXMuX3NldEV2ZW50c0xpc3RlbmVycygpO1xuICB9O1xufVxuXG4iLCJleHBvcnQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yIChwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG4gIFxyXG4gIG9wZW4gKCl7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG4gIFxyXG4gIGNsb3NlICgpe1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCl7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldnQpID0+e1xyXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX29wZW5lZCcpIHx8IGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9fY2xvc2UnKSkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9XHJcbn0iLCJpbXBvcnQge1BvcHVwfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBmb3JtU3VibWl0KXtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fZm9ybVN1Ym1pdCA9IGZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICB0aGlzLl9pbnB1dHMgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9faW5wdXQnKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpe1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKGlucHV0ID0+IGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpO1xyXG4gICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gIH07XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGV2dCA9PntcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2Zvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0gXHJcbiAgICApO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCl7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gIH1cclxufSIsImltcG9ydCB7UG9wdXB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKXtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fbGluayA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcclxuICAgIHRoaXMuX25hbWUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3RleHQnKTtcclxuICB9XHJcblxyXG4gIG9wZW4gKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX2xpbmsuc3JjID0gbGluaztcclxuICAgIHRoaXMuX25hbWUuYWx0ID0gbmFtZTtcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufSIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3Ioe25hbWVTZWxlY3Rvciwgc3RhdHVzU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yfSkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3N0YXR1cyA9ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHN0YXR1c1NlbGVjdG9yKTtcclxuICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCBwcm9maWxlID0ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICBhYm91dDogdGhpcy5fc3RhdHVzLnRleHRDb250ZW50LFxyXG4gICAgfTtcclxuICAgIHJldHVybiBwcm9maWxlO1xyXG4gIH07XHJcblxyXG4gIHNldFVzZXJJbmZvKHVzZXIpIHtcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSB1c2VyLm5hbWU7XHJcbiAgICB0aGlzLl9zdGF0dXMudGV4dENvbnRlbnQgPSB1c2VyLmFib3V0O1xyXG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IHVzZXIuYXZhdGFyO1xyXG4gIH1cclxufSIsImV4cG9ydCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHVzZXJJRCwgdXJsKSB7XHJcbiAgICB0aGlzLl91c2VyID0gdXNlcklEO1xyXG4gICAgdGhpcy5fdXJsID0gdXJsO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNraW5nVGhlU2VydmVyUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgZWxzZSByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH1jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdXNlclxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgICAudGhlbih0aGlzLl9jaGVja2luZ1RoZVNlcnZlclJlc3BvbnNlKVxyXG4gIH1cclxuXHJcbiAgc2V0TmV3Q2FyZChjYXJkRGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH1jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3VzZXIsXHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogY2FyZERhdGEubmFtZSxcclxuICAgICAgICBsaW5rOiBjYXJkRGF0YS5saW5rXHJcbiAgICAgIH0pXHJcblxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja2luZ1RoZVNlcnZlclJlc3BvbnNlKVxyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfXVzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl91c2VyXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNraW5nVGhlU2VydmVyUmVzcG9uc2UpXHJcblxyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8odXNlckluZm8pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9dXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3VzZXIsXHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogdXNlckluZm8ubmFtZSxcclxuICAgICAgICBhYm91dDogdXNlckluZm8uYWJvdXRcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNraW5nVGhlU2VydmVyUmVzcG9uc2UpXHJcbiAgfVxyXG5cclxuICBzZXRBdmF0YXIodXNlckluZm8pIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9dXNlcnMvbWUvYXZhdGFyIGAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl91c2VyLFxyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogdXNlckluZm8uYXZhdGFyXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgICAudGhlbih0aGlzLl9jaGVja2luZ1RoZVNlcnZlclJlc3BvbnNlKVxyXG4gIH1cclxuXHJcbiAgc2V0TGlrZShjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9Y2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl91c2VyLFxyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgICAgLnRoZW4odGhpcy5fY2hlY2tpbmdUaGVTZXJ2ZXJSZXNwb25zZSlcclxuICB9XHJcblxyXG4gIGRlbGV0ZUxpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfWNhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdXNlcixcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNraW5nVGhlU2VydmVyUmVzcG9uc2UpXHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH1jYXJkcy8ke2NhcmRJZH0gYCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl91c2VyLFxyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICAgICAgfVxyXG5cclxuICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNraW5nVGhlU2VydmVyUmVzcG9uc2UpXHJcblxyXG4gIH1cclxufSIsImltcG9ydCB7UG9wdXB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcil7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3N1Ym1pdCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VibWl0X3dhcm5pbmcnKTtcclxuICAgIFxyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChhY3Rpb24pe1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlID0gYWN0aW9uO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9zdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KT0+e1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlKCk7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbn0iLCJpbXBvcnQgJy4vLi4vcGFnZXMvaW5kZXguY3NzJztcbmltcG9ydCB7IHZhbGlkYXRpb25Db25maWcgfSBmcm9tICcuLi9zY3JpcHRzL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCB7IFBvcHVwV2l0aEltYWdlIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZSc7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8nO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSAnLi4vY29tcG9uZW50cy9BcGknO1xuaW1wb3J0IHsgUG9wdXBXaXRoQ29uZmlybWF0aW9uIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24nO1xuaW1wb3J0IHsgZGF0YSB9IGZyb20gJ2F1dG9wcmVmaXhlcic7XG5cbmNvbnN0IHBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpO1xuY29uc3QgYnV0dG9uRWRpdFByb2ZpbGUgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlLWluZm9fX2J1dHRvbicpOyAvLyDQutC90L7Qv9C60LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQtNCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG5jb25zdCBidXR0b25BZGRQbGFjZSA9IHBhZ2UucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbicpOyAvL9C90LDRhdC+0LTQuNC8INC60L3QvtC/0LrRgyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvdC+0LLQvtCz0L4g0LzQtdGB0YLQsFxuY29uc3QgZm9ybUVkaXRQcm9maWxlID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1fZWRpdC1wcm9maWxlJyk7XG5jb25zdCBmb3JtQWRkQ2FyZCA9IHBhZ2UucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX2FkZC1jYXJkJyk7XG5jb25zdCBuYW1lSW5wdXQgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9uYW1lJyk7IC8v0L/QvtC70LUg0YTQvtGA0LzRiyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC40LzQtdC90LhcbmNvbnN0IGpvYklucHV0ID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfc3RhdHVzJyk7IC8v0L/QvtC70LUg0YTQvtGA0LzRiyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINGB0YLQsNGC0YPRgdCwXG5jb25zdCBhdmF0YXIgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXInKTsgLy/QsNCy0LDRgtCw0YBcbmNvbnN0IGF2YXRhckNvbnRhaW5lciA9IHBhZ2UucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1jb250YWluZXInKTtcbmNvbnN0IGZvcm1FZGl0QXZhdGFyID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm1fZWRpdC1hdmF0YXInKTtcblxuY29uc3QgdXNlciA9IG5ldyBVc2VySW5mbyh7IG5hbWVTZWxlY3RvcjogJy5wcm9maWxlLWluZm9fX25hbWUnLCBzdGF0dXNTZWxlY3RvcjogJy5wcm9maWxlLWluZm9fX3N0YXR1cycsIGF2YXRhclNlbGVjdG9yOiAnLnByb2ZpbGVfX2F2YXRhcicgfSk7XG5jb25zdCBwb3B1cEVkaXRQcm9maWxlID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cF9lZGl0LXByb2ZpbGUnLCBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdCk7XG5jb25zdCBwb3B1cEFkZFBsYWNlID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cF9hZGQtY2FyZCcsIGhhbmRsZUFkZFBsYWNlRm9ybVN1Ym1pdCk7XG5jb25zdCBwb3B1cEVkaXRBdmF0YXIgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwX2VkaXQtYXZhdGFyJywgaGFuZGxlRWRpdEF2YXRhckZvcm1TdWJtaXQpO1xuY29uc3QgcG9wdXBXYXJuaW5nID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbignLnBvcHVwX3dhcm5pbmcnKTtcbmNvbnN0IHBvcHVwT3BlbkltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKCcucG9wdXBfb3Blbi1pbWFnZScpO1xuY29uc3QgcHJvZmlsZUZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtRWRpdFByb2ZpbGUpO1xuY29uc3QgcGxhY2VGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgZm9ybUFkZENhcmQpO1xuY29uc3QgYXZhdGFyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGZvcm1FZGl0QXZhdGFyKTtcbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbnBsYWNlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuY29uc3QgYXBpID0gbmV3IEFwaSgnMDZlMThmZDQtODQ2OS00ODhhLTg2ZDMtZTcxMjg0ZWI4NGMwJywgJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNjUvJyk7XG5sZXQgdXNlcklkO1xuXG5Qcm9taXNlLmFsbChbYXBpLmdldEluaXRpYWxDYXJkcygpLCBhcGkuZ2V0VXNlckluZm8oKV0pXG4gIC50aGVuKChbZGF0YSwgdXNlckRhdGFdKSA9PiB7XG4gICAgdXNlcklkID0gdXNlckRhdGEuX2lkO1xuICAgIGNhcmRzLnJlbmRlckVsZW1lbnRzKGRhdGEsIHVzZXJJZCk7XG4gICAgdXNlci5zZXRVc2VySW5mbyh1c2VyRGF0YSk7XG4gICAgYXZhdGFyLnNyYyA9IHVzZXJEYXRhLmF2YXRhcjtcbiAgfSlcbiAgLmNhdGNoKChlcnJvcikgPT4geyBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycm9yfWApIH0pO1xuXG5cbmZ1bmN0aW9uIG9wZW5Qcm9maWxlRWRpdFBvcHVwKCkge1xuICBwb3B1cEVkaXRQcm9maWxlLm9wZW4oKTtcbiAgcHJvZmlsZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGNvbnN0IHVzZXJJbmZvID0gdXNlci5nZXRVc2VySW5mbygpO1xuICBuYW1lSW5wdXQudmFsdWUgPSB1c2VySW5mby5uYW1lO1xuICBqb2JJbnB1dC52YWx1ZSA9IHVzZXJJbmZvLmFib3V0O1xufVxuXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdCh1c2VyRGF0YSkge1xuICBhcGkuc2V0VXNlckluZm8odXNlckRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgdXNlci5zZXRVc2VySW5mbyhyZXMpXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCkgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVkaXRBdmF0YXJGb3JtU3VibWl0KHVzZXJEYXRhKSB7XG4gIGFwaS5zZXRBdmF0YXIodXNlckRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgdXNlci5zZXRVc2VySW5mbyhyZXMpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnJvcikgPT4geyBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycm9yfWApIH0pXG59XG5cbmNvbnN0IGhhbmRsZUNhcmRDbGljayA9IChuYW1lLCBsaW5rKSA9PiB7XG4gIHBvcHVwT3BlbkltYWdlLm9wZW4obmFtZSwgbGluayk7XG59XG5cbmNvbnN0IGNyZWF0ZUNhcmQgPSAoY2FyZERhdGEsIHVzZXJJZCwgdGVtcGxhdGVTZWxlY3RvcikgPT4ge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoe1xuICAgIGNhcmREYXRhOiBjYXJkRGF0YSxcbiAgICB1c2VySWQ6IHVzZXJJZCxcbiAgICBoYW5kbGVDYXJkQ2xpY2s6IGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVMaWtlQ2xpY2s6IChjYXJkKSA9PiB7XG4gICAgICBpZiAoY2FyZC5pc0xpa2VkKCkpIHtcbiAgICAgICAgYXBpLmRlbGV0ZUxpa2UoY2FyZC5jYXJkSWQpXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgY2FyZC5kZWxldGVMaWtlKCk7XG4gICAgICAgICAgICBjYXJkLmNvdW50TGlrZXMocmVzKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJvcn1gKSB9KVxuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIGFwaS5zZXRMaWtlKGNhcmQuY2FyZElkKVxuICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgIGNhcmQuc2V0TGlrZSgpO1xuICAgICAgICAgICAgY2FyZC5jb3VudExpa2VzKHJlcyk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCkgfSlcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZURlbGV0ZUljb25DbGljazogKGNhcmRJZCkgPT4ge1xuICAgICAgcG9wdXBXYXJuaW5nLm9wZW4oKTtcbiAgICAgIHBvcHVwV2FybmluZy5kZWxldGVDYXJkKCgpID0+IHtcbiAgICAgICAgYXBpLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGNhcmQuZGVsZXRlQ2FyZCgpO1xuICAgICAgICAgICAgcG9wdXBXYXJuaW5nLmNsb3NlKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCkgfSlcbiAgICAgIH0pXG4gICAgfVxuICB9LCB0ZW1wbGF0ZVNlbGVjdG9yKTtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59XG5cbmNvbnN0IGNhcmRzID0gbmV3IFNlY3Rpb24oe1xuICByZW5kZXJlcjogKGl0ZW0sIHVzZXJJZCkgPT4ge1xuICAgIGNvbnN0IG5ld0NhcmRzID0gY3JlYXRlQ2FyZChpdGVtLCB1c2VySWQsICcucGxhY2UtY2FyZCcpO1xuICAgIGNhcmRzLmFkZEl0ZW0obmV3Q2FyZHMpXG4gIH1cbn0sICcucGxhY2VzX19saXN0Jyk7XG5cbmJ1dHRvbkFkZFBsYWNlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICBwb3B1cEFkZFBsYWNlLm9wZW4oKTtcbiAgcGxhY2VGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xufSk7XG5cbi8v0L7QsdGA0LDQsdC+0YLRh9C40Log0L7RgtC/0YDQsNCy0LrQuCDRhNC+0YDQvNGLINC/0L7Qv9Cw0L/QsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvNC10YHRgtCwXG5mdW5jdGlvbiBoYW5kbGVBZGRQbGFjZUZvcm1TdWJtaXQoZGF0YSkge1xuICBhcGkuc2V0TmV3Q2FyZChkYXRhKS50aGVuKChyZXMpID0+IHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQocmVzLCB1c2VySWQsICcucGxhY2UtY2FyZCcpO1xuICAgIHJldHVybiBjYXJkcy5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgfSk7XG5cbiAgcG9wdXBBZGRQbGFjZS5jbG9zZSgpO1xufVxuXG5wb3B1cEVkaXRQcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5wb3B1cEFkZFBsYWNlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5wb3B1cE9wZW5JbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xucG9wdXBFZGl0QXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5wb3B1cFdhcm5pbmcuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYnV0dG9uRWRpdFByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUHJvZmlsZUVkaXRQb3B1cCk7XG5cbmF2YXRhckNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsgcG9wdXBFZGl0QXZhdGFyLm9wZW4oKSB9KTtcblxuXG4iXSwibmFtZXMiOlsidW5wYWNrIiwicmVxdWlyZSIsImJyb3dzZXJzU29ydCIsImEiLCJiIiwic3BsaXQiLCJNYXRoIiwic2lnbiIsInBhcnNlRmxvYXQiLCJmIiwiZGF0YSIsIm9wdHMiLCJjYWxsYmFjayIsIl9yZWYiLCJtYXRjaCIsIm5lZWQiLCJicm93c2VyIiwic3RhdHMiLCJ2ZXJzaW9ucyIsInZlcnNpb24iLCJwdXNoIiwic29ydCIsInJlc3VsdCIsInByZWZpeCIsIm5hbWVzIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsInMiLCJuIiwiZG9uZSIsIm5hbWUiLCJ2YWx1ZSIsIk9iamVjdCIsImFzc2lnbiIsImVyciIsImUiLCJhZGQiLCJfc3RlcDIiLCJfaXRlcmF0b3IyIiwiYnJvd3NlcnMiLCJjb25jYXQiLCJtb2R1bGUiLCJleHBvcnRzIiwibWlzdGFrZXMiLCJmZWF0dXJlIiwicHJlZml4VHJhbnNmb3JtczNkIiwicHJlZml4R3JhZGllbnRzIiwicHJvcHMiLCJtYXAiLCJpIiwidGVzdCIsImZpbHRlciIsInByZWZpeEZsZXhib3giLCJzZWxlY3RvciIsInByZWZpeEZ1bGxzY3JlZW4iLCJwcmVmaXhJbnRyaW5zaWMiLCJzaXplUHJvcHMiLCJwcmVmaXhDcmlzcGVkZ2VzIiwicHJlZml4TG9naWNhbFByb3BzIiwicHJlZml4R3JpZCIsIkF0UnVsZSIsIl9QcmVmaXhlciIsIl9pbmhlcml0cyIsIl9zdXBlciIsIl9jbGFzc0NhbGxDaGVjayIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwicnVsZSIsInByZWZpeGVkIiwicGFyZW50Iiwic29tZSIsInBhcmFtcyIsImNsb25lZCIsInRoaXMiLCJjbG9uZSIsImluc2VydEJlZm9yZSIsIm5vZGUiLCJwYXJlbnRQcmVmaXgiLCJwcmVmaXhlcyIsImJyb3dzZXJzbGlzdCIsImFnZW50cyIsInBpY28iLCJCcm93c2VycyIsIlByZWZpeGVzIiwiZGF0YVByZWZpeGVzIiwiZ2V0SW5mbyIsImF1dG9wcmVmaXhlckRhdGEiLCJjYWNoZSIsIk1hcCIsInBsdWdpbiIsIl9sZW4iLCJsZW5ndGgiLCJyZXFzIiwiQXJyYXkiLCJfa2V5Iiwib3B0aW9ucyIsIm9iaiIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwidW5kZWZpbmVkIiwiaXNBcnJheSIsIl90eXBlb2YiLCJwb3AiLCJFcnJvciIsIm92ZXJyaWRlQnJvd3NlcnNsaXN0IiwiY29uc29sZSIsIndhcm4iLCJyZWQiLCJyZXBsYWNlIiwieWVsbG93Iiwic2xpY2UiLCJicndsc3RPcHRzIiwiaWdub3JlVW5rbm93blZlcnNpb25zIiwiZW52IiwibG9hZFByZWZpeGVzIiwiZCIsInNlbGVjdGVkIiwiam9pbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJoYXMiLCJzZXQiLCJnZXQiLCJwb3N0Y3NzUGx1Z2luIiwicHJlcGFyZSIsImZyb20iLCJPbmNlRXhpdCIsInJvb3QiLCJzZWxlY3RvcnMiLCJrZXlzIiwidGltZUNhcHN1bGUiLCJyZW1vdmUiLCJwcm9jZXNzb3IiLCJpbmZvIiwicHJvY2VzcyIsImN3ZCIsInBvc3Rjc3MiLCJkZWZhdWx0cyIsImxhc3QiLCJhcnJheSIsImJyYWNrZXRzIiwicGFyc2UiLCJzdHIiLCJjdXJyZW50Iiwic3RhY2siLCJzeW0iLCJhc3QiLCJ1dGlscyIsInJlcXVpcmVtZW50cyIsImJyb3dzZXJzbGlzdE9wdHMiLCJwcmVmaXhlc0NhY2hlIiwidW5pcSIsInByZWZpeGVzUmVnZXhwIiwiUmVnRXhwIiwicGF0aCIsIl9icm93c2VyJHNwbGl0MiIsInByZWZpeF9leGNlcHRpb25zIiwiaW5jbHVkZXMiLCJQcmVmaXhlciIsIkRlY2xhcmF0aW9uIiwicHJvcCIsIm90aGVyIiwiZGVjbCIsIl9hdXRvcHJlZml4ZXJDYXNjYWRlIiwiYWxsIiwiY2FzY2FkZSIsInJhdyIsIl9hdXRvcHJlZml4ZXJNYXgiLCJtYXgiLCJyZW1vdmVOb3RlIiwiZGlmZiIsIm1heFByZWZpeGVkIiwiYmVmb3JlIiwiZmlsbCIsImxpbmVzIiwibWluIiwiZ3JvdXAiLCJ1cCIsInJhd3MiLCJuZWVkQ2FzY2FkZSIsImNhbGNCZWZvcmUiLCJhbHJlYWR5IiwiZG93biIsImlzQWxyZWFkeSIsIm90aGVyUHJlZml4ZXMiLCJpbnNlcnQiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwiY2FsbCIsInJlc3RvcmVCZWZvcmUiLCJmbGV4U3BlYyIsIkFsaWduQ29udGVudCIsIl9EZWNsYXJhdGlvbiIsInNwZWMiLCJfZmxleFNwZWMyIiwib2xkVmFsdWVzIiwiQWxpZ25JdGVtcyIsIkFsaWduU2VsZiIsInN0YXJ0c1dpdGgiLCJBbmltYXRpb24iLCJsb3dlciIsInRvTG93ZXJDYXNlIiwiQXBwZWFyYW5jZSIsIl90aGlzIiwiU2VsZWN0b3IiLCJBdXRvZmlsbCIsIl9TZWxlY3RvciIsIkJhY2tkcm9wRmlsdGVyIiwiQmFja2dyb3VuZENsaXAiLCJCYWNrZ3JvdW5kU2l6ZSIsIkJsb2NrTG9naWNhbCIsIkJvcmRlckltYWdlIiwiQm9yZGVyUmFkaXVzIiwidG9Nb3ppbGxhIiwidG9Ob3JtYWwiLCJfaSIsIl9hcnIiLCJ2ZXIiLCJfaTIiLCJfYXJyMiIsImhvciIsIm5vcm1hbCIsIm1vemlsbGEiLCJCcmVha1Byb3BzIiwibGlzdCIsIkNyb3NzRmFkZSIsIl9WYWx1ZSIsInN0cmluZyIsInNwYWNlIiwiY2xvc2UiLCJsYXN0SW5kZXhPZiIsImFmdGVyIiwiYXJncyIsInRyaW0iLCJPbGRWYWx1ZSIsIkRpc3BsYXlGbGV4IiwiRGlzcGxheUdyaWQiLCJGaWxlU2VsZWN0b3JCdXR0b24iLCJGaWx0ZXJWYWx1ZSIsIkZpbHRlciIsInYiLCJGbGV4QmFzaXMiLCJfc2xpY2VkVG9BcnJheSIsIl9mbGV4U3BlYzQiLCJGbGV4RGlyZWN0aW9uIiwib3JpZW50IiwiZGlyIiwiRmxleEZsb3ciLCJ2YWx1ZXMiLCJGbGV4IiwiRmxleFNocmluayIsIkZsZXhXcmFwIiwiY29tcG9uZW50cyIsImF1dG8iLCJub25lIiwiRnVsbHNjcmVlbiIsInBhcnNlciIsInJhbmdlIiwiVmFsdWUiLCJJU19ESVJFQ1RJT04iLCJHcmFkaWVudCIsIm5vZGVzIiwiZ3JhZGllbnROYW1lIiwidHlwZSIsIm5ld0RpcmVjdGlvbiIsIm5vcm1hbGl6ZSIsIm9sZFdlYmtpdCIsImNvbnZlcnREaXJlY3Rpb24iLCJ3b3JkcyIsImZ1bGwiLCJudW0iLCJub3JtYWxpemVVbml0IiwiUEkiLCJ3cmFwIiwiZGlyZWN0aW9uIiwicmVwbGFjZUZpcnN0IiwibGFzdEluZGV4IiwidW5zaGlmdCIsInJldmVydERpcmVjdGlvbiIsInN0YXRlIiwicGFyYW0iLCJmaXhEaXJlY3Rpb24iLCJmaXhBbmdsZSIsImlzUmFkaWFsIiwiZml4UmFkaWFsIiwic3BsaWNlIiwiX3N0ZXAzIiwiX2l0ZXJhdG9yMyIsImZpcnN0IiwiYWJzIiwicm91bmRGbG9hdCIsImMiLCJuZXh0IiwiZGl2Iiwic2Vjb25kIiwid29yZCIsImRpcmVjdGlvbnMiLCJmbG9hdCIsImRpZ2l0cyIsInRvRml4ZWQiLCJfc3RlcDQiLCJfaXRlcmF0b3I0Iiwib2xkRGlyZWN0aW9uIiwiY29sb3JTdG9wcyIsIl9wYXJhbXMiLCJjbG9uZURpdiIsIm9sZERpcmVjdGlvbnMiLCJib3R0b20iLCJfc3RlcDUiLCJfaXRlcmF0b3I1Iiwib2xkIiwiX3N0ZXA2IiwiX2l0ZXJhdG9yNiIsInBvcyIsIml0ZW0iLCJjb2xvciIsInN0b3AiLCJyZWdleHAiLCJwIiwidG9wIiwibGVmdCIsInJpZ2h0IiwiR3JpZEFyZWEiLCJfdXRpbHMkdHJhbnNsYXRlMiIsInRyYW5zbGF0ZSIsInJvd1N0YXJ0Iiwicm93U3BhbiIsIl91dGlscyR0cmFuc2xhdGU0IiwiZm9yRWFjaCIsIl9yZWYyIiwiaW5zZXJ0RGVjbCIsIndhcm5UZW1wbGF0ZVNlbGVjdG9yTm90Rm91bmQiLCJ3YXJuSWZHcmlkUm93Q29sdW1uRXhpc3RzIiwiR3JpZENvbHVtbkFsaWduIiwiaXNQdXJlTnVtYmVyIiwiR3JpZEVuZCIsImNsb25lZERlY2wiLCJzdGFydFByb3AiLCJzcGFuUHJvcCIsInN0YXJ0RGVjbCIsIndhbGtEZWNscyIsIk51bWJlciIsImNsb25lQmVmb3JlIiwiR3JpZFJvd0FsaWduIiwiR3JpZFJvd0NvbHVtbiIsInN0YXJ0Iiwic3BhbiIsIl9yZXF1aXJlIiwicHJlZml4VHJhY2tQcm9wIiwicHJlZml4VHJhY2tWYWx1ZSIsImF1dG9wbGFjZUdyaWRJdGVtcyIsImdldEdyaWRHYXAiLCJpbmhlcml0R3JpZEdhcCIsIlByb2Nlc3NvciIsIkdyaWRSb3dzQ29sdW1ucyIsImlzUm93UHJvcCIsImlzQ29sdW1uUHJvcCIsImhhc0dyaWRUZW1wbGF0ZSIsInN0YXR1cyIsImdyaWRTdGF0dXMiLCJnYXAiLCJnYXBWYWx1ZSIsInJvdyIsImNvbHVtbiIsInByZWZpeFZhbHVlIiwiYXV0b2Zsb3ciLCJmaW5kIiwiYXV0b2Zsb3dWYWx1ZSIsImRpc2FibGVkIiwicm93RGVjbCIsIkdyaWRTdGFydCIsInBhcnNlR3JpZEFyZWFzIiwid2Fybk1pc3NlZEFyZWFzIiwid2FybkdyaWRHYXAiLCJHcmlkVGVtcGxhdGVBcmVhcyIsImhhc0NvbHVtbnMiLCJoYXNSb3dzIiwidHJhY2tEZWNsIiwiZ3JpZFJvd3MiLCJhcmVhcyIsInJvd3MiLCJwYXJzZVRlbXBsYXRlIiwiR3JpZFRlbXBsYXRlIiwiaW5oZXJpdGVkR2FwIiwiX3BhcnNlVGVtcGxhdGUiLCJjb2x1bW5zIiwiaGFzQXJlYXMiLCJCb29sZWFuIiwiZXNjYXBlUmVnZXhwIiwic3BsaXRTZWxlY3RvciIsImNvbnZlcnQiLCJwYXJzZUludCIsInRyYW5zZm9ybVJlcGVhdCIsIl9yZWYzIiwiX25vZGVzJHJlZHVjZSIsInJlZHVjZSIsInNpemUiLCJjb3VudCIsInZhbCIsIl9sb29wIiwiaW5kZXgiLCJfcmVmNCIsInN0YXJ0SW5kZXgiLCJlbmRJbmRleCIsInN0YXJ0VmFsdWUiLCJlbmRWYWx1ZSIsIl9jb252ZXJ0MiIsInNwYW5TdGFydCIsIl9jb252ZXJ0NCIsImVuZCIsInNwYW5FbmQiLCJET1RTIiwidHJhY2siLCJfcmVmNSIsImxpbmUiLCJyb3dJbmRleCIsImdldENvbHVtbnMiLCJhcmVhIiwiY29sdW1uSW5kZXgiLCJfYXJlYXMkYXJlYSIsInZlcmlmeVJvd1NpemUiLCJfcmVmNiIsImdyaWRUZW1wbGF0ZSIsInRlc3RUcmFjayIsImdldE1TRGVjbHMiLCJhZGRSb3dTcGFuIiwiYWRkQ29sdW1uU3BhbiIsIlN0cmluZyIsImdldFBhcmVudE1lZGlhIiwiY2hhbmdlRHVwbGljYXRlQXJlYVNlbGVjdG9ycyIsInJ1bGVTZWxlY3RvcnMiLCJ0ZW1wbGF0ZVNlbGVjdG9ycyIsInNlbGVjdG9yQnlTcGFjZSIsInNlbGVjdG9yQnlDb21tYSIsImNvbW1hIiwicnVsZVNlbGVjdG9yIiwidHBsU2VsZWN0b3IiLCJzZWxlY3RvcnNFcXVhbCIsInJ1bGVBIiwicnVsZUIiLCJzZWwiLCJfcmVmOCIsIl9wYXJzZXIkbm9kZXMiLCJwYXJzZU1lZGlhUGFyYW1zIiwid2FsayIsIm1lZGlhUnVsZSIsInNwbGl0U2VsZWN0b3JBcnIiLCJjbG9zZXN0UnVsZUdhcCIsImxhc3RCeVNwYWNlIiwiZXNjYXBlZCIsIndhbGtSdWxlcyIsInIiLCJncmlkR2FwIiwic2VsQSIsInNlbEIiLCJzcGxpdFNlbGVjdG9yQXJyQSIsInNwbGl0U2VsZWN0b3JBcnJCIiwiaWR4IiwicmVzIiwiX3JlZjkiLCJldmVyeSIsImFyciIsInBhcnQiLCJpbm5lckluZGV4IiwiYnlDb21tYUFyciIsImJ5U3BhY2VBcnIiLCJzaG91bGRJbmhlcml0R2FwIiwibWVkaWEiLCJub3JtYWxpemVSb3dDb2x1bW4iLCJfbm9kZSRub2RlcyRyZWR1Y2UyIiwiYWNjIiwiaW5zZXJ0QXJlYXMiLCJjc3MiLCJpc0Rpc2FibGVkIiwiZ3JpZFRlbXBsYXRlc0RhdGEiLCJwYXJzZWQiLCJhcmVhTmFtZXMiLCJfcmVmNyIsImFsbEFyZWFzIiwiX3BhcnNlZCRpbmRleCIsInJ1bGVzIiwiaGFzTm9EdXBsaWNhdGVzIiwiaGFzRHVwbGljYXRlcyIsImR1cGxpY2F0ZXNGb3VuZCIsImR1cGxpY2F0ZUFyZWFOYW1lcyIsInVwZGF0ZVNwYW4iLCJhcmVhc0NvdW50IiwiZHVwbGljYXRlUnVsZXMiLCJwYXJzZUdyaWRUZW1wbGF0ZXNEYXRhIiwicnVsZXNUb0luc2VydCIsImdyaWRBcmVhIiwiZ3JpZEFyZWFSdWxlIiwiaGFzUHJlZml4ZWRSb3ciLCJncmlkQXJlYU1lZGlhIiwiZ3JpZEFyZWFSdWxlSW5kZXgiLCJsYXN0QXJlYSIsInNlbGVjdG9ySXNDb21wbGV4IiwibGFzdFJ1bGVJc1NldCIsIl9sb29wMiIsImhhc0R1cGxpY2F0ZU5hbWUiLCJsYXN0UnVsZUluZGV4IiwibGFzdFJ1bGUiLCJyZXZlcnNlIiwicHJlcGVuZCIsImJldHdlZW4iLCJyZW1vdmVBbGwiLCJhcHBlbmQiLCJtaXNzZWQiLCJzbGljZWRTZWxlY3RvckFyciIsImdyaWRUZW1wbGF0ZUZvdW5kIiwiZm91bmRBcmVhU2VsZWN0b3IiLCJoYXNBcmVhIiwidHBsU2VsZWN0b3JBcnIiLCJkZWNscyIsImVuZHNXaXRoIiwiX3JlZjExIiwiaGFzQm90aEdhcHMiLCJfIiwiayIsIml0ZW1zIiwibm9kZVNlbGVjdG9yIiwiSW1hZ2VSZW5kZXJpbmciLCJJbWFnZVNldCIsImZpeGVkIiwiSW5saW5lTG9naWNhbCIsIkludHJpbnNpYyIsInJlZ2V4cENhY2hlIiwiaXNTdHJldGNoIiwiSnVzdGlmeUNvbnRlbnQiLCJNYXNrQm9yZGVyIiwiTWFza0NvbXBvc2l0ZSIsImNvbXBvc2l0ZVZhbHVlcyIsImNvbXBvc2l0ZURlY2wiLCJpc0NvbXBvc2l0ZVByb3AiLCJoYXNDb21wb3NpdGVWYWx1ZXMiLCJlbCIsInN1YnRyYWN0IiwiaW50ZXJzZWN0IiwiZXhjbHVkZSIsIk9yZGVyIiwiT3ZlcnNjcm9sbEJlaGF2aW9yIiwiUGl4ZWxhdGVkIiwiUGxhY2VTZWxmIiwiX3V0aWxzJHBhcnNlMiIsIl91dGlscyRwYXJzZTIkIiwiUGxhY2Vob2xkZXJTaG93biIsIlBsYWNlaG9sZGVyIiwiUHJpbnRDb2xvckFkanVzdCIsIlRleHREZWNvcmF0aW9uU2tpcEluayIsIkJBU0lDIiwiVGV4dERlY29yYXRpb24iLCJUZXh0RW1waGFzaXNQb3NpdGlvbiIsIlRyYW5zZm9ybURlY2wiLCJmdW5jdGlvbnMzZCIsImZ1bmMiLCJjb250YWluM2QiLCJrZXlmcmFtZVBhcmVudHMiLCJVc2VyU2VsZWN0IiwiV3JpdGluZ01vZGUiLCJtc1ZhbHVlcyIsImx0ciIsInJ0bCIsIk5BTUVTIiwiaWUiLCJpZV9tb2IiLCJpb3Nfc2FmIiwib3BfbWluaSIsIm9wX21vYiIsImFuZF9jaHIiLCJhbmRfZmYiLCJhbmRfdWMiLCJhbmRfcXEiLCJrYWlvcyIsImJhaWR1Iiwic2Ftc3VuZyIsIm5vdGUiLCJvdXQiLCJwYXJ0cyIsInRvVXBwZXJDYXNlIiwiY292ZXJhZ2UiLCJyb3VuZCIsImF0cnVsZXMiLCJoYWRHcmlkIiwiZ3JpZCIsImluZGV4T2YiLCJPbGRTZWxlY3RvciIsInByZWZpeGVkcyIsInBvc3NpYmxlIiwieCIsInVucHJlZml4ZWQiLCJuYW1lUmVnZXhwIiwiX3N0ZXAkdmFsdWUiLCJpc0hhY2siLCJ2ZW5kb3IiLCJjb25zdHJ1Y3RvciIsIl9PYmplY3Qka2V5cyIsImtsYXNzIiwiaGFja3MiLCJLbGFzcyIsIm92ZXJyaWRlcyIsIl9hdXRvcHJlZml4ZXJQcmVmaXgiLCJjaGVjayIsImFkZGVkIiwiUmVzb2x1dGlvbiIsIlRyYW5zaXRpb24iLCJTdXBwb3J0cyIsImhhY2tGdWxsc2NyZWVuIiwiaGFja1BsYWNlaG9sZGVyIiwiaGFja1BsYWNlaG9sZGVyU2hvd24iLCJoYWNrRmlsZVNlbGVjdG9yQnV0dG9uIiwiaGFja0ZsZXgiLCJoYWNrT3JkZXIiLCJoYWNrRmlsdGVyIiwiaGFja0dyaWRFbmQiLCJoYWNrQW5pbWF0aW9uIiwiaGFja0ZsZXhGbG93IiwiaGFja0ZsZXhHcm93IiwiaGFja0ZsZXhXcmFwIiwiaGFja0dyaWRBcmVhIiwiaGFja1BsYWNlU2VsZiIsImhhY2tHcmlkU3RhcnQiLCJoYWNrQWxpZ25TZWxmIiwiaGFja0FwcGVhcmFuY2UiLCJoYWNrRmxleEJhc2lzIiwiaGFja01hc2tCb3JkZXIiLCJoYWNrTWFza0NvbXBvc2l0ZSIsImhhY2tBbGlnbkl0ZW1zIiwiaGFja1VzZXJTZWxlY3QiLCJoYWNrRmxleFNocmluayIsImhhY2tCcmVha1Byb3BzIiwiaGFja1dyaXRpbmdNb2RlIiwiaGFja0JvcmRlckltYWdlIiwiaGFja0FsaWduQ29udGVudCIsImhhY2tCb3JkZXJSYWRpdXMiLCJoYWNrQmxvY2tMb2dpY2FsIiwiaGFja0dyaWRUZW1wbGF0ZSIsImhhY2tJbmxpbmVMb2dpY2FsIiwiaGFja0dyaWRSb3dBbGlnbiIsImhhY2tUcmFuc2Zvcm1EZWNsIiwiaGFja0ZsZXhEaXJlY3Rpb24iLCJoYWNrSW1hZ2VSZW5kZXJpbmciLCJoYWNrQmFja2Ryb3BGaWx0ZXIiLCJoYWNrQmFja2dyb3VuZENsaXAiLCJoYWNrVGV4dERlY29yYXRpb24iLCJoYWNrSnVzdGlmeUNvbnRlbnQiLCJoYWNrQmFja2dyb3VuZFNpemUiLCJoYWNrR3JpZFJvd0NvbHVtbiIsImhhY2tHcmlkUm93c0NvbHVtbnMiLCJoYWNrR3JpZENvbHVtbkFsaWduIiwiaGFja1ByaW50Q29sb3JBZGp1c3QiLCJoYWNrT3ZlcnNjcm9sbEJlaGF2aW9yIiwiaGFja0dyaWRUZW1wbGF0ZUFyZWFzIiwiaGFja1RleHRFbXBoYXNpc1Bvc2l0aW9uIiwiaGFja1RleHREZWNvcmF0aW9uU2tpcEluayIsImhhY2tHcmFkaWVudCIsImhhY2tJbnRyaW5zaWMiLCJoYWNrUGl4ZWxhdGVkIiwiaGFja0ltYWdlU2V0IiwiaGFja0Nyb3NzRmFkZSIsImhhY2tEaXNwbGF5RmxleCIsImhhY2tEaXNwbGF5R3JpZCIsImhhY2tGaWx0ZXJWYWx1ZSIsImhhY2tBdXRvZmlsbCIsImhhY2siLCJkZWNsc0NhY2hlIiwiX3RoaXMkcHJlcHJvY2VzczIiLCJwcmVwcm9jZXNzIiwic2VsZWN0IiwidHJhbnNpdGlvbiIsImNsZWFuZXJDYWNoZSIsImVtcHR5Iiwibm90ZXMiLCJpc1NlbGVjdGVkIiwiZmxleGJveCIsImFMZW5ndGgiLCJiTGVuZ3RoIiwibG9hZCIsIm9sZHMiLCJfc3RlcDciLCJfaXRlcmF0b3I3IiwiZ2xvYmFsIiwiX3RoaXMyIiwiY2hlY2tlciIsInN0ZXAiLCJ3aXRoUHJlZml4IiwiT0xEX0xJTkVBUiIsIk9MRF9SQURJQUwiLCJJR05PUkVfTkVYVCIsIkdSSURfUkVHRVgiLCJTSVpFUyIsInJlc29sdXRpb24iLCJrZXlmcmFtZXMiLCJ2aWV3cG9ydCIsInN1cHBvcnRzIiwiaW5zaWRlR3JpZCIsImRpc3BsYXlHcmlkIiwid2Fsa0F0UnVsZXMiLCJncmlkUHJlZml4ZXMiLCJkaXNhYmxlZERlY2wiLCJwcmVmaXhlciIsImluc2lkZUZsZXgiLCJoYXNSb3dzQW5kQ29sdW1ucyIsImhhc0NvbHMiLCJkaXNwbGF5VHlwZSIsImRpc2FibGVkVmFsdWUiLCJzYXZlIiwicmVtb3ZlQ2hpbGQiLCJjbGVhbiIsIm5vdEhhY2siLCJqIiwid2l0aEhhY2tWYWx1ZSIsInJlZHVjZVNwYWNlcyIsIl9hdXRvcHJlZml4ZXJEaXNhYmxlZCIsInByZXYiLCJ0ZXh0IiwiX2F1dG9wcmVmaXhlclNlbGZEaXNhYmxlZCIsImVhY2giLCJpc1BhcmVudERpc2FibGVkIiwicHJldk1pbiIsIl9hdXRvcHJlZml4ZXJHcmlkU3RhdHVzIiwiaGFzQXV0b3BsYWNlIiwibm9BdXRvcGxhY2UiLCJpc1BhcmVudEdyaWQiLCJBVVRPUFJFRklYRVJfR1JJRCIsIkZyYWN0aW9uSnMiLCJSRUdFWFAiLCJTUExJVCIsImNvbG9uIiwidW5pdHMiLCJtdWwiLCJzaW1wbGlmeSIsInByZWZpeE5hbWUiLCJiYWQiLCJlZGl0TGlzdCIsInF1ZXJpZXMiLCJxdWVyeSIsIm9yaWdpbiIsInByb2Nlc3NlZCIsInByZWZpeFF1ZXJ5IiwiX2F1dG9wcmVmaXhlclByZWZpeGVkcyIsInRvUHJvY2VzcyIsImZlYXR1cmVRdWVyaWVzIiwic3VwcG9ydGVkIiwic3VwcG9ydCIsInByZWZpeGVyQ2FjaGUiLCJmaWx0ZXJlZCIsIl90aGlzJHBhcnNlMiIsInZpcnR1YWwiLCJfdGhpcyRwYXJzZTQiLCJjbGVhbmVyIiwiaXNOb3QiLCJpc1Byb3AiLCJpc09yIiwidG9SZW1vdmUiLCJjbGVhbkJyYWNrZXRzIiwicHJvZ3Jlc3MiLCJmaXJzdE5vZGUiLCJfdGhpczMiLCJ2ZW5kb3JQcmVmaXhlcyIsInJ1bGVWZW5kb3JQcmVmaXhlcyIsImRlY2xQcmVmaXhlcyIsImZpbmRQcm9wIiwid2Via2l0Q2xlYW4iLCJjbGVhbkZyb21VbnByZWZpeGVkIiwib3BlcmFDbGVhbiIsImNsZWFuT3RoZXJQcmVmaXhlcyIsImNoZWNrRm9yV2FybmluZyIsImVudHJpZXMiLCJfc3RlcDQkdmFsdWUiLCJ0b2tlbiIsImlzUHJlZml4ZWQiLCJoYXNBc3NvY2lhdGVkUHJvcCIsImxvb2t1cCIsImRvdWJsZSIsInNtYWxsZXIiLCJjaGFuZ2VkIiwiX3N0ZXA4IiwiX2l0ZXJhdG9yOCIsIl9zdGVwOSIsIl9pdGVyYXRvcjkiLCJfdGhpczQiLCJfc3RlcDEwIiwiX3RoaXM1IiwiX2l0ZXJhdG9yMTAiLCJlcnJvciIsImF1dG9wcmVmaXhlciIsIlNldCIsIl9hdXRvcHJlZml4ZXJWYWx1ZXMiLCJwcm9wUHJlZml4IiwidHJpbW1lZCIsIkJyb3dzZXJzbGlzdEVycm9yIiwibm9vcCIsImxvYWRRdWVyaWVzIiwiZ2V0U3RhdCIsImxvYWRDb25maWciLCJjb25maWciLCJsb2FkQ291bnRyeSIsImxvYWRGZWF0dXJlIiwiY3VycmVudE5vZGUiLCJyZXNvbHZlIiwiY29udGV4dCIsInBhcnNlQ29uZmlnIiwicmVhZENvbmZpZyIsImZpbmRDb25maWciLCJjbGVhckNhY2hlcyIsIm9sZERhdGFXYXJuaW5nIiwibWVzc2FnZSIsImNhcHR1cmVTdGFja1RyYWNlIiwianNSZWxlYXNlcyIsImpzRU9MIiwiZTJjIiwiQU5EUk9JRF9FVkVSR1JFRU5fRklSU1QiLCJpc1ZlcnNpb25zTWF0Y2giLCJ2ZXJzaW9uQSIsInZlcnNpb25CIiwibm9ybWFsaXplRWxlY3Ryb24iLCJ2ZXJzaW9uVG9Vc2UiLCJuYW1lTWFwcGVyIiwiZ2V0TWFqb3IiLCJnZXRNYWpvclZlcnNpb25zIiwicmVsZWFzZWQiLCJudW1iZXIiLCJtYWpvclZlcnNpb25zIiwibWluaW11bSIsImZpbGxVc2FnZSIsImdlbmVyYXRlRmlsdGVyIiwicGFyc2VTaW1wbGVJbnQiLCJjb21wYXJlIiwiY29tcGFyZVNlbXZlciIsInNlbXZlckZpbHRlckxvb3NlIiwib3BlcmF0b3IiLCJjb21wYXJlU2VtdmVyTG9vc2UiLCJub3JtYWxpemVWZXJzaW9uIiwicmVzb2x2ZWQiLCJ2ZXJzaW9uQWxpYXNlcyIsInJlc29sdmVWZXJzaW9uIiwiZmlsdGVyQnlZZWFyIiwic2luY2UiLCJieU5hbWUiLCJyZWxlYXNlRGF0ZSIsImRhdGUiLCJjbG9uZURhdGEiLCJhbGlhc2VzIiwibW9iaWxlVG9EZXNrdG9wIiwiZGVza3RvcE5hbWVzIiwiZGVza3RvcCIsImNocm9tZSIsImFuZHJvaWQiLCJub3JtYWxpemVBbmRyb2lkVmVyc2lvbnMiLCJmaXhlZERhdGUiLCJtYXBWZXJzaW9ucyIsImFuZHJvaWRWZXJzaW9ucyIsImNocm9tZVZlcnNpb25zIiwiZmlyc3RFdmVyZ3JlZW4iLCJjaGVja05hbWUiLCJmaWx0ZXJBbmRyb2lkIiwiUVVFUklFUyIsIm5vdCIsImNvbXBvc2UiLCJwcmVwYXJlT3B0cyIsInByZXBhcmVRdWVyaWVzIiwiY2hlY2tRdWVyaWVzIiwiZGFuZ2Vyb3VzRXh0ZW5kIiwiY3VzdG9tVXNhZ2UiLCJjYWNoZUtleSIsIm5hbWUxIiwibmFtZTIiLCJ2ZXJzaW9uMSIsIkJST1dTRVJTTElTVF9ESVNBQkxFX0NBQ0hFIiwibm9kZVF1ZXJ5IiwibWF0Y2hlZCIsIm5vZGVWZXJzaW9ucyIsInNpbmNlUXVlcnkiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJEYXRlIiwiVVRDIiwiY292ZXJRdWVyeSIsInVzYWdlIiwicGxhY2UiLCJjb3ZlcmFnZWQiLCJjdXN0b20iLCJmeCIsImZmIiwiaW9zIiwiZXhwbG9yZXIiLCJibGFja2JlcnJ5IiwiZXhwbG9yZXJtb2JpbGUiLCJvcGVyYW1pbmkiLCJvcGVyYW1vYmlsZSIsImNocm9tZWFuZHJvaWQiLCJmaXJlZm94YW5kcm9pZCIsInVjYW5kcm9pZCIsInFxYW5kcm9pZCIsImN1c3RvbVN0YXRzIiwiZGF0YUJ5QnJvd3NlciIsImxhc3RfbWFqb3JfdmVyc2lvbnMiLCJtYXRjaGVzIiwibGFzdF92ZXJzaW9ucyIsImxhc3RfZWxlY3Ryb25fbWFqb3JfdmVyc2lvbnMiLCJsYXN0X25vZGVfbWFqb3JfdmVyc2lvbnMiLCJsYXN0X2Jyb3dzZXJfbWFqb3JfdmVyc2lvbnMiLCJsYXN0X2VsZWN0cm9uX3ZlcnNpb25zIiwibGFzdF9ub2RlX3ZlcnNpb25zIiwibGFzdF9icm93c2VyX3ZlcnNpb25zIiwidW5yZWxlYXNlZF92ZXJzaW9ucyIsInVucmVsZWFzZWRfZWxlY3Ryb25fdmVyc2lvbnMiLCJ1bnJlbGVhc2VkX2Jyb3dzZXJfdmVyc2lvbnMiLCJsYXN0X3llYXJzIiwibm93IiwieWVhcnMiLCJzaW5jZV95Iiwic2luY2VfeV9tIiwic2luY2VfeV9tX2QiLCJwb3B1bGFyaXR5IiwicG9wdWxhcml0eV9pbl9teV9zdGF0cyIsInBlcmNlbnRhZ2UiLCJwb3B1bGFyaXR5X2luX2NvbmZpZ19zdGF0cyIsImxvYWRTdGF0IiwicG9wdWxhcml0eV9pbl9wbGFjZSIsImNvdmVyIiwiY292ZXJfaW4iLCJmZWF0dXJlcyIsImZsYWdzIiwiZWxlY3Ryb25fcmFuZ2UiLCJmcm9tVG9Vc2UiLCJ0b1RvVXNlIiwidG8iLCJub2RlX3JhbmdlIiwiYnJvd3Nlcl9yYW5nZSIsImVsZWN0cm9uX3JheSIsIm5vZGVfcmF5IiwiYnJvd3Nlcl9yYXkiLCJhbGlhcyIsImZpcmVmb3hfZXNyIiwib3BlcmFfbWluaV9hbGwiLCJlbGVjdHJvbl92ZXJzaW9uIiwibm9kZV9tYWpvcl92ZXJzaW9uIiwibm9kZV9taW5vcl92ZXJzaW9uIiwibm9kZV9wYXRjaF92ZXJzaW9uIiwiY3VycmVudF9ub2RlIiwibWFpbnRhaW5lZF9ub2RlIiwicGhhbnRvbWpzXzFfOSIsInBoYW50b21qc18yXzEiLCJicm93c2VyX3ZlcnNpb24iLCJicm93c2Vyc2xpc3RfY29uZmlnIiwiZXh0ZW5kcyIsImRlYWQiLCJ1bmtub3duIiwicmVsZWFzZV9kYXRlIiwidXNhZ2VfZ2xvYmFsIiwiaW50ZXJ2YWwiLCJyZWxlYXNlIiwiQU5EX1JFR0VYUCIsIk9SX1JFR0VYUCIsImZsYXR0ZW4iLCJtYXRjaFF1ZXJ5IiwibWF0Y2hCbG9jayIsInFzIiwicHJlZGljYXRlIiwic3Vic3RyIiwiYmxvY2siLCJBIiwiSiIsIkQiLCJFIiwiRiIsIkIiLCJFQyIsIkMiLCJLIiwiTCIsIkciLCJNIiwiTiIsIk8iLCJQIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiVyIsIlgiLCJZIiwiWiIsImwiLCJtIiwibyIsInEiLCJ0IiwidSIsIkgiLCJGQyIsInVCIiwiSSIsInciLCJnIiwieSIsInoiLCJBQiIsIkJCIiwiQ0IiLCJEQiIsIkVCIiwiRkIiLCJHQiIsIkhCIiwiSUIiLCJKQiIsIktCIiwiTEIiLCJNQiIsIk5CIiwiT0IiLCJQQiIsIlFCIiwiUkIiLCJTQiIsIlRCIiwiVUIiLCJWQiIsIldCIiwiWEIiLCJZQiIsIlpCIiwidkIiLCJhQiIsIndCIiwiYkIiLCJjQiIsImRCIiwiZUIiLCJmQiIsImdCIiwiaEIiLCJpQiIsImpCIiwia0IiLCJsQiIsImgiLCJtQiIsIm5CIiwib0IiLCJwQiIsInFCIiwieEIiLCJ5QiIsInpCIiwiR0MiLCJIQyIsIklDIiwiSkMiLCJLQyIsIkxDIiwiTUMiLCJOQyIsIk9DIiwickIiLCJzQiIsIlBDIiwiUUMiLCJ0QiIsIkFDIiwiQkMiLCJSQyIsIlNDIiwiVEMiLCJVQyIsIlZDIiwiQ0MiLCJXQyIsIlhDIiwiREMiLCJZQyIsIlpDIiwiYUMiLCJiQyIsImNDIiwiZEMiLCJlQyIsImZDIiwiZ0MiLCJoQyIsImlDIiwiakMiLCJrQyIsImxDIiwibUMiLCJuQyIsIm9DIiwicEMiLCJxQyIsInJDIiwic0MiLCJ0QyIsInVDIiwidkMiLCJ3QyIsInhDIiwieUMiLCJ6QyIsIkFEIiwiQkQiLCJDRCIsIkREIiwiRUQiLCJhZ2VudHNEYXRhIiwidW5wYWNrQnJvd3NlclZlcnNpb25zIiwidmVyc2lvbnNEYXRhIiwiZW50cnkiLCJtYXAyIiwia2V5MiIsImJyb3dzZXJWZXJzaW9ucyIsInN0YXR1c2VzIiwiTUFUSDJMT0ciLCJsb2ciLCJ1bnBhY2tGZWF0dXJlIiwicGFja2VkIiwidW5wYWNrZWQiLCJ0aXRsZSIsImJyb3dzZXJTdGF0cyIsInBhY2tlZFZlcnNpb25zIiwidW5wYWNrZWQyIiwiY2lwaGVyIiwibm90ZXNBcnJheSIsImZsb29yIiwicG93IiwidW5wYWNrU3VwcG9ydCIsImlzTmFOIiwiRnJhY3Rpb24iLCJuZXdGcmFjdGlvbiIsImNyZWF0ZSIsImdjZCIsImZhY3Rvcml6ZSIsImZhY3RvcnMiLCJwMSIsInAyIiwiTE4xMCIsIk5hTiIsInBsYWNlcyIsImNlaWwiLCJlcHMiLCJ0aGlzQUJTIiwiY29udCIsInZhbHVlT2YiLCJleGNsdWRlV2hvbGUiLCJ3aG9sZSIsImRlYyIsImN5Y0xlbiIsInJlbSIsImN5Y2xlTGVuIiwiY3ljT2ZmIiwibGVuIiwicmVtMSIsInJlbTIiLCJtb2Rwb3ciLCJjeWNsZVN0YXJ0Iiwid3JhcFJhbmdlIiwibWF4TGVzc01pbiIsImxpbWl0UmFuZ2UiLCJ2YWxpZGF0ZVJhbmdlIiwibWluRXhjbHVzaXZlIiwibWF4RXhjbHVzaXZlIiwidGVzdFJhbmdlIiwibWluRXhjbCIsIm1heEV4Y2wiLCJsaW1pdCIsInZhbGlkYXRlIiwiY3VycnkiLCJib3VuZE5hbWVGbiIsImJpbmQiLCJpc0NvbG9yU3VwcG9ydGVkIiwicmVzZXQiLCJib2xkIiwiZGltIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiaW52ZXJzZSIsImhpZGRlbiIsInN0cmlrZXRocm91Z2giLCJibGFjayIsImdyZWVuIiwiYmx1ZSIsIm1hZ2VudGEiLCJjeWFuIiwid2hpdGUiLCJncmF5IiwiYmdCbGFjayIsImJnUmVkIiwiYmdHcmVlbiIsImJnWWVsbG93IiwiYmdCbHVlIiwiYmdNYWdlbnRhIiwiYmdDeWFuIiwiYmdXaGl0ZSIsImNyZWF0ZUNvbG9ycyIsIlZhbHVlUGFyc2VyIiwiY2IiLCJidWJibGUiLCJ1bml0Iiwib3BlblBhcmVudGhlc2VzIiwiY2hhckNvZGVBdCIsImNsb3NlUGFyZW50aGVzZXMiLCJzaW5nbGVRdW90ZSIsImRvdWJsZVF1b3RlIiwiYmFja3NsYXNoIiwic2xhc2giLCJzdGFyIiwidUxvd2VyIiwidVVwcGVyIiwicGx1cyIsImlzVW5pY29kZVJhbmdlIiwiaW5wdXQiLCJxdW90ZSIsImVzY2FwZSIsImVzY2FwZVBvcyIsIndoaXRlc3BhY2VQb3MiLCJwYXJlbnRoZXNlc09wZW5Qb3MiLCJ0b2tlbnMiLCJjb2RlIiwiYmFsYW5jZWQiLCJzb3VyY2VFbmRJbmRleCIsInNvdXJjZUluZGV4IiwidW5jbG9zZWQiLCJzdHJpbmdpZnlOb2RlIiwiYnVmIiwiY3VzdG9tUmVzdWx0IiwibWludXMiLCJkb3QiLCJleHAiLCJFWFAiLCJuZXh0Q29kZSIsIm5leHROZXh0Q29kZSIsImxpa2VOdW1iZXIiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImRlZmluZVByb3BlcnR5IiwiaGludCIsInByaW0iLCJ0b1ByaW1pdGl2ZSIsIlR5cGVFcnJvciIsIl90b1ByaW1pdGl2ZSIsIlJlZmxlY3QiLCJwcm9wZXJ0eSIsInJlY2VpdmVyIiwiYmFzZSIsIm9iamVjdCIsImhhc093blByb3BlcnR5IiwiX3N1cGVyUHJvcEJhc2UiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX3NldFByb3RvdHlwZU9mIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsIkNvbnRhaW5lciIsIl9Db250YWluZXIiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsImNvbnN0cnVjdCIsInNoYW0iLCJQcm94eSIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJTdXBlciIsIk5ld1RhcmdldCIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImluc3RhbmNlIiwiX2dldDIiLCJwcm94eU9mIiwiY2hpbGRyZW4iLCJfZ2V0MyIsIl9sZW4yIiwiX2tleTIiLCJkZWZhdWx0IiwicmVnaXN0ZXJBdFJ1bGUiLCJDb21tZW50IiwiX05vZGUiLCJhbGxvd0FycmF5TGlrZSIsIml0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX2UiLCJub3JtYWxDb21wbGV0aW9uIiwiZGlkRXJyIiwiX2UyIiwicmV0dXJuIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIyIiwiUnVsZSIsIlJvb3QiLCJpc0NsZWFuIiwibXkiLCJjbGVhblNvdXJjZSIsInNvdXJjZSIsIm1hcmtEaXJ0eVVwIiwiY2hpbGQiLCJnZXRJdGVyYXRvciIsImluZGV4ZXMiLCJhZGRUb0Vycm9yIiwiX2NoaWxkcmVuIiwibWFya0RpcnR5IiwiaWQiLCJrZWVwQmV0d2VlbiIsImNsZWFuUmF3cyIsImV4aXN0IiwiZXhpc3RJbmRleCIsInBhdHRlcm4iLCJmYXN0IiwiY29uZGl0aW9uIiwic2FtcGxlIiwicmVidWlsZCIsIl9sZW4zIiwiX2tleTMiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJ0b1Byb3h5IiwiaXRlciIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJfbGVuNCIsIl9rZXk0IiwibGFzdEVhY2giLCJyZWdpc3RlclBhcnNlIiwiZGVwZW5kYW50IiwicmVnaXN0ZXJSdWxlIiwicmVnaXN0ZXJSb290IiwiX3dyYXBOYXRpdmVTdXBlciIsIkNsYXNzIiwiX2NhY2hlIiwiZm4iLCJGdW5jdGlvbiIsIldyYXBwZXIiLCJfY29uc3RydWN0IiwiUGFyZW50IiwidGVybWluYWxIaWdobGlnaHQiLCJDc3NTeW50YXhFcnJvciIsIl9FcnJvciIsImZpbGUiLCJyZWFzb24iLCJlbmRMaW5lIiwiZW5kQ29sdW1uIiwic2V0TWVzc2FnZSIsIm1hcmsiLCJhc2lkZSIsIm1heFdpZHRoIiwiX3BpY28kY3JlYXRlQ29sb3JzIiwiZ3V0dGVyIiwic3BhY2luZyIsInNob3dTb3VyY2VDb2RlIiwib3duS2V5cyIsImVudW1lcmFibGVPbmx5IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic3ltYm9scyIsIl9vYmplY3RTcHJlYWQiLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsIl90b1Byb3BlcnR5S2V5IiwiYXJnIiwiTGF6eVJlc3VsdCIsIkRvY3VtZW50IiwicmVnaXN0ZXJMYXp5UmVzdWx0IiwicmVnaXN0ZXJQcm9jZXNzb3IiLCJfZXhjbHVkZWQiLCJfZXhjbHVkZWQyIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJzb3VyY2VTeW1ib2xLZXlzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJQcmV2aW91c01hcCIsIklucHV0IiwiZnJvbUpTT04iLCJqc29uIiwiaW5wdXRzIiwib3duSW5wdXRzIiwiaW5wdXRIeWRyYXRlZCIsIl9kZWZhdWx0cyRzb3VyY2UiLCJpbnB1dElkIiwiU291cmNlTWFwQ29uc3VtZXIiLCJTb3VyY2VNYXBHZW5lcmF0b3IiLCJfcmVxdWlyZTIiLCJmaWxlVVJMVG9QYXRoIiwicGF0aFRvRmlsZVVSTCIsIl9yZXF1aXJlMyIsImlzQWJzb2x1dGUiLCJuYW5vaWQiLCJmcm9tT2Zmc2V0Q2FjaGUiLCJzb3VyY2VNYXBBdmFpbGFibGUiLCJwYXRoQXZhaWxhYmxlIiwiaGFzQk9NIiwiY29uc3VtZXIiLCJtYXBSZXNvbHZlIiwib2Zmc2V0IiwibGluZVRvSW5kZXgiLCJwcmV2SW5kZXgiLCJtaWQiLCJjb2wiLCJmcm9tT2Zmc2V0IiwidXJsIiwiZnJvbVVybCIsIm9yaWdpbmFsUG9zaXRpb25Gb3IiLCJVUkwiLCJzb3VyY2VSb290IiwibWFwRmlsZSIsInByb3RvY29sIiwic291cmNlQ29udGVudEZvciIsImNvbnN1bWVyQ2FjaGUiLCJyZWdpc3RlcklucHV0IiwiX3JlZ2VuZXJhdG9yUnVudGltZSIsIk9wIiwiaGFzT3duIiwiJFN5bWJvbCIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsIkNvbnRpbnVlU2VudGluZWwiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJtZXRob2QiLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsIlByb21pc2VJbXBsIiwiaW52b2tlIiwicmVqZWN0IiwicmVjb3JkIiwiX19hd2FpdCIsInRoZW4iLCJ1bndyYXBwZWQiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsImRlbGVnYXRlIiwiZGVsZWdhdGVSZXN1bHQiLCJtYXliZUludm9rZURlbGVnYXRlIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJtZXRob2ROYW1lIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwidHJ5TG9jIiwiY2F0Y2hMb2MiLCJmaW5hbGx5TG9jIiwiYWZ0ZXJMb2MiLCJ0cnlFbnRyaWVzIiwicmVzZXRUcnlFbnRyeSIsImNvbXBsZXRpb24iLCJpdGVyYWJsZSIsIml0ZXJhdG9yTWV0aG9kIiwiZG9uZVJlc3VsdCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsInNraXBUZW1wUmVzZXQiLCJjaGFyQXQiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwiY2F0Y2giLCJ0aHJvd24iLCJkZWxlZ2F0ZVlpZWxkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwiX25leHQiLCJfdGhyb3ciLCJfYXJyYXlXaXRoSG9sZXMiLCJfcyIsIl94IiwiX3IiLCJfbiIsIl9kIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX25vbkl0ZXJhYmxlUmVzdCIsIl9lMyIsIk1hcEdlbmVyYXRvciIsIlJlc3VsdCIsIlRZUEVfVE9fQ0xBU1NfTkFNRSIsImRvY3VtZW50IiwiYXRydWxlIiwiY29tbWVudCIsIlBMVUdJTl9QUk9QUyIsIk9uY2UiLCJEZWNsYXJhdGlvbkV4aXQiLCJSdWxlRXhpdCIsIkF0UnVsZUV4aXQiLCJDb21tZW50RXhpdCIsIlJvb3RFeGl0IiwiRG9jdW1lbnRFeGl0IiwiTk9UX1ZJU0lUT1JTIiwiQ0hJTERSRU4iLCJpc1Byb21pc2UiLCJnZXRFdmVudHMiLCJ0b1N0YWNrIiwiZXZlbnRzIiwiZXZlbnRJbmRleCIsInZpc2l0b3JzIiwidmlzaXRvckluZGV4IiwiY2xlYW5NYXJrcyIsIl9TeW1ib2wkdG9TdHJpbmdUYWciLCJzdHJpbmdpZmllZCIsImlubGluZSIsInN5bnRheCIsImhlbHBlcnMiLCJwbHVnaW5zIiwiX3J1bkFzeW5jIiwiY29udGVudCIsInN5bmMiLCJtZXNzYWdlcyIsIndhcm5pbmdzIiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25GaW5hbGx5IiwicHJvY2Vzc2luZyIsInJ1bkFzeW5jIiwiZ2V0QXN5bmNFcnJvciIsInJ1bk9uUm9vdCIsInByZXBhcmVWaXNpdG9ycyIsImhhc0xpc3RlbmVyIiwid2Fsa1N5bmMiLCJsaXN0ZW5lcnMiLCJzdWJSb290IiwidmlzaXRTeW5jIiwic3RyaW5naWZpZXIiLCJnZW5lcmF0ZSIsImV2ZW50IiwidmlzaXRvciIsImxhc3RQbHVnaW4iLCJwcm9taXNlIiwiaGFuZGxlRXJyb3IiLCJyb290cyIsInBvc3Rjc3NWZXJzaW9uIiwiX2NhbGxlZSIsIl9wcm9taXNlIiwiX2NvbnRleHQyIiwidDAiLCJ2aXNpdFRpY2siLCJ0MSIsIl9zdGVwNSR2YWx1ZSIsIl9jb250ZXh0IiwidDMiLCJ2aXNpdCIsIl92aXNpdG9ycyR2aXNpdCR2aXNpdCIsInJlZ2lzdGVyUG9zdGNzcyIsInNlcGFyYXRvcnMiLCJpblF1b3RlIiwicHJldlF1b3RlIiwibGV0dGVyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwic2VwIiwiY3NzU3RyaW5nIiwibWFwT3B0cyIsInVzZXNGaWxlVXJscyIsImFic29sdXRlIiwicHJldmlvdXMiLCJwcmV2aW91c01hcHMiLCJhbm5vdGF0aW9uIiwic291cmNlc0NvbnRlbnQiLCJ3aXRoQ29udGVudCIsInRvRmlsZVVybCIsInRvVXJsIiwic2V0U291cmNlQ29udGVudCIsImFwcGx5U291cmNlTWFwIiwiaXNJbmxpbmUiLCJCdWZmZXIiLCJ3aW5kb3ciLCJidG9hIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b0Jhc2U2NCIsIm91dHB1dEZpbGUiLCJlb2wiLCJnZW5lcmF0ZVN0cmluZyIsImZyb21Tb3VyY2VNYXAiLCJhZGRNYXBwaW5nIiwiZ2VuZXJhdGVkIiwib3JpZ2luYWwiLCJpc1NvdXJjZXNDb250ZW50Iiwic2V0U291cmNlc0NvbnRlbnQiLCJhcHBseVByZXZNYXBzIiwiaXNBbm5vdGF0aW9uIiwiYWRkQW5ub3RhdGlvbiIsImVuY29kZVVSSSIsIm5vU291cmNlIiwibWFwcGluZyIsInNvdXJjZVBhdGgiLCJzZW1pY29sb24iLCJjbGVhckFubm90YXRpb24iLCJpc01hcCIsImdlbmVyYXRlTWFwIiwiTm9Xb3JrUmVzdWx0IiwiX3Byb2Nlc3NvciIsIl9jc3MiLCJfb3B0cyIsIl9tYXAiLCJfbWFwJGdlbmVyYXRlMiIsImdlbmVyYXRlZENTUyIsImdlbmVyYXRlZE1hcCIsIl9yb290IiwiU3RyaW5naWZpZXIiLCJjbG9uZU5vZGUiLCJOb2RlIiwiX3RoaXMkcmFuZ2VCeSIsInJhbmdlQnkiLCJpbnNlcnRBZnRlciIsImJvb2ttYXJrIiwiZm91bmRTZWxmIiwiX25vZGVzIiwiZGVmYXVsdFR5cGUiLCJlbWl0SW5wdXRzIiwiaW5wdXRzTmV4dEluZGV4IiwidG9KU09OIiwicG9zaXRpb25JbnNpZGUiLCJwcm94eUNhY2hlIiwiZ2V0UHJveHlQcm9jZXNzb3IiLCJwb3N0Y3NzTm9kZSIsIlBhcnNlciIsInRva2VuaXplciIsIlNBRkVfQ09NTUVOVF9ORUlHSEJPUiIsInNwYWNlcyIsImN1c3RvbVByb3BlcnR5IiwiY3JlYXRlVG9rZW5pemVyIiwiZW5kT2ZGaWxlIiwibmV4dFRva2VuIiwiZnJlZVNlbWljb2xvbiIsImVtcHR5UnVsZSIsImVuZEZpbGUiLCJpbml0IiwiZ2V0UG9zaXRpb24iLCJicmFja2V0IiwiYmFjayIsInVuY2xvc2VkQnJhY2tldCIsInVua25vd25Xb3JkIiwic3BhY2VzQW5kQ29tbWVudHNGcm9tRW5kIiwiZmluZExhc3RXaXRoUG9zaXRpb24iLCJzaGlmdCIsImZpcnN0U3BhY2VzIiwicHJlY2hlY2tNaXNzZWRTZW1pY29sb24iLCJpbXBvcnRhbnQiLCJzdHJpbmdGcm9tIiwic3BhY2VzRnJvbUVuZCIsImhhc1dvcmQiLCJjaGVja01pc3NlZFNlbWljb2xvbiIsInVubmFtZWRBdHJ1bGUiLCJvcGVuIiwiYWZ0ZXJOYW1lIiwic3BhY2VzQW5kQ29tbWVudHNGcm9tU3RhcnQiLCJ1bmV4cGVjdGVkQ2xvc2UiLCJ1bmNsb3NlZEJsb2NrIiwib3duU2VtaWNvbG9uIiwibGFzdFRva2VuVHlwZSIsImRvdWJsZUNvbG9uIiwiZm91bmRlZCIsIldhcm5pbmciLCJpbml0aWFsaXplciIsIndhcm5pbmdQcmludGVkIiwiY3JlYXRvciIsIkxBTkciLCJ0cmFuc2Zvcm1lciIsInByb2Nlc3NPcHRzIiwicGx1Z2luT3B0cyIsImF0UnVsZSIsImV4aXN0c1N5bmMiLCJyZWFkRmlsZVN5bmMiLCJsb2FkQW5ub3RhdGlvbiIsInN0YXJ0V2l0aCIsImxvYWRNYXAiLCJzb3VyY2VNYXBTdHJpbmciLCJjb21tZW50cyIsImdldEFubm90YXRpb25VUkwiLCJzdWJzdHJpbmciLCJkZWNvZGVVUklDb21wb25lbnQiLCJsYXN0TWF0Y2giLCJhdG9iIiwiZW5jb2RpbmciLCJwcmV2UGF0aCIsImxvYWRGaWxlIiwiZGVjb2RlSW5saW5lIiwibWFwcGluZ3MiLCJfbWFwcGluZ3MiLCJzZWN0aW9ucyIsIm5vcm1hbGl6ZWQiLCJ3YXJuaW5nIiwiaWdub3JlIiwiREVGQVVMVF9SQVciLCJpbmRlbnQiLCJiZWZvcmVEZWNsIiwiYmVmb3JlUnVsZSIsImJlZm9yZU9wZW4iLCJiZWZvcmVDbG9zZSIsImJlZm9yZUNvbW1lbnQiLCJlbXB0eUJvZHkiLCJjb21tZW50TGVmdCIsImNvbW1lbnRSaWdodCIsImJ1aWxkZXIiLCJib2R5IiwicmF3VmFsdWUiLCJvd24iLCJkZXRlY3QiLCJyYXdDYWNoZSIsImJlZm9yZUFmdGVyIiwid2Fsa0NvbW1lbnRzIiwiZGVwdGgiLCJTSU5HTEVfUVVPVEUiLCJET1VCTEVfUVVPVEUiLCJCQUNLU0xBU0giLCJTTEFTSCIsIk5FV0xJTkUiLCJTUEFDRSIsIkZFRUQiLCJUQUIiLCJDUiIsIk9QRU5fU1FVQVJFIiwiQ0xPU0VfU1FVQVJFIiwiT1BFTl9QQVJFTlRIRVNFUyIsIkNMT1NFX1BBUkVOVEhFU0VTIiwiT1BFTl9DVVJMWSIsIkNMT1NFX0NVUkxZIiwiU0VNSUNPTE9OIiwiQVNURVJJU0siLCJDT0xPTiIsIkFUIiwiUkVfQVRfRU5EIiwiUkVfV09SRF9FTkQiLCJSRV9CQURfQlJBQ0tFVCIsIlJFX0hFWF9FU0NBUEUiLCJjdXJyZW50VG9rZW4iLCJpZ25vcmVFcnJvcnMiLCJidWZmZXIiLCJyZXR1cm5lZCIsIndoYXQiLCJpZ25vcmVVbmNsb3NlZCIsImNvbnRyb2xDaGFyIiwiZnJvbUNoYXJDb2RlIiwicG9zaXRpb24iLCJwcmludGVkIiwib3B0IiwicmFuZG9tIiwiY3VzdG9tQWxwaGFiZXQiLCJhbHBoYWJldCIsImRlZmF1bHRTaXplIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInZhbGlkYXRpb25Db25maWciLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIkNhcmQiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiY2FyZERhdGEiLCJ1c2VySWQiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJoYW5kbGVEZWxldGVJY29uQ2xpY2siLCJfbmFtZSIsIl9saW5rIiwibGluayIsIl9saWtlcyIsImxpa2VzIiwiY2FyZElkIiwiX2lkIiwiX3VzZXIiLCJfb3duZXIiLCJvd25lciIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfaGFuZGxlRGVsZXRlSWNvbkNsaWNrIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfaW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwiX2xhYmVsIiwiX2J1dHRvbkxpa2UiLCJfbGlrZSIsIl90cmFzaCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9zZXRMaWtlRXZlbnRMaXN0ZW5lciIsIl9zZXREZWxldGVFdmVudExpc3RlbmVyIiwiX3NldEltYWdlQ2xpY2tFdmVudExpc3RlbmVyIiwic3JjIiwiYWx0IiwiX2NoZWNrTGlrZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9yZW1vdmVEZWxldGVCdXR0b24iLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9jb250YWluZXIiLCJfcmVuZGVyZXIiLCJlbGVtZW50IiwiRm9ybVZhbGlkYXRvciIsIl9jcmVhdGVDbGFzcyIsImZvcm1FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2lucHV0TGlzdCIsIl9idXR0b25FbGVtZW50IiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaGFzSW52YWxpZElucHV0IiwiX2Rpc2FibGVCdXR0b24iLCJfYWN0aXZhdGVCdXR0b24iLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfdG9nZ2xlSW5wdXRFcnJvclN0YXRlIiwiX3NldEV2ZW50c0xpc3RlbmVycyIsIl9pbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwicXVlcnlTZWxlY3RvckFsbCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJfUG9wdXAiLCJmb3JtU3VibWl0IiwiX2Zvcm1TdWJtaXQiLCJfZm9ybSIsIl9pbnB1dHMiLCJpbnB1dFZhbHVlcyIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwiUG9wdXBXaXRoSW1hZ2UiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsInN0YXR1c1NlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfc3RhdHVzIiwiX2F2YXRhciIsImFib3V0IiwidXNlciIsImF2YXRhciIsIkFwaSIsInVzZXJJRCIsIl91cmwiLCJvayIsImZldGNoIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJfY2hlY2tpbmdUaGVTZXJ2ZXJSZXNwb25zZSIsInVzZXJJbmZvIiwiUG9wdXBXaXRoQ29uZmlybWF0aW9uIiwiX3N1Ym1pdCIsImFjdGlvbiIsIl9oYW5kbGVEZWxldGUiLCJwYWdlIiwiYnV0dG9uRWRpdFByb2ZpbGUiLCJidXR0b25BZGRQbGFjZSIsImZvcm1FZGl0UHJvZmlsZSIsImZvcm1BZGRDYXJkIiwibmFtZUlucHV0Iiwiam9iSW5wdXQiLCJhdmF0YXJDb250YWluZXIiLCJmb3JtRWRpdEF2YXRhciIsInBvcHVwRWRpdFByb2ZpbGUiLCJ1c2VyRGF0YSIsImFwaSIsInNldFVzZXJJbmZvIiwicG9wdXBBZGRQbGFjZSIsInNldE5ld0NhcmQiLCJjYXJkRWxlbWVudCIsImNyZWF0ZUNhcmQiLCJjYXJkcyIsImFkZEl0ZW0iLCJwb3B1cEVkaXRBdmF0YXIiLCJzZXRBdmF0YXIiLCJwb3B1cFdhcm5pbmciLCJwb3B1cE9wZW5JbWFnZSIsInByb2ZpbGVGb3JtVmFsaWRhdG9yIiwicGxhY2VGb3JtVmFsaWRhdG9yIiwiYXZhdGFyRm9ybVZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJnZXRJbml0aWFsQ2FyZHMiLCJnZXRVc2VySW5mbyIsInJlbmRlckVsZW1lbnRzIiwiY2FyZCIsImlzTGlrZWQiLCJkZWxldGVMaWtlIiwiY291bnRMaWtlcyIsInNldExpa2UiLCJkZWxldGVDYXJkIiwiZ2VuZXJhdGVDYXJkIiwibmV3Q2FyZHMiLCJyZXNldFZhbGlkYXRpb24iLCJzZXRFdmVudExpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=