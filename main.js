(()=>{"use strict";var t={inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){var r=e.cardData,o=e.handleCardClick;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=r.name,this._link=r.link,this._templateSelector=n,this._handleCardClick=o,this._element=this._getTemplate(),this._image=this._element.querySelector(".place__image"),this._label=this._element.querySelector(".place__text"),this._buttonLike=this._element.querySelector(".like__icon"),this._trash=this._element.querySelector(".trash")}var e,r;return e=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_setLikeEventListener",value:function(){this._buttonLike.addEventListener("click",(function(t){t.target.classList.toggle("like__icon_active")}))}},{key:"_setDeleteEventListener",value:function(){var t=this;this._trash.addEventListener("click",(function(){t._element.remove(),t._element=null}))}},{key:"_setImageClickEventListener",value:function(){var t=this;this._image.addEventListener("click",(function(){t._handleCardClick(t._name,t._link)}))}},{key:"_setEventListeners",value:function(){this._setLikeEventListener(),this._setDeleteEventListener(),this._setImageClickEventListener()}},{key:"generateCard",value:function(){return console.log(this._buttonLike),this._image.src=this._link,this._label.textContent=this._name,this._image.alt=this._name,this._setEventListeners(),this._element}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._container=document.querySelector(n),this._renderer=r}var e,n;return e=t,(n=[{key:"renderElements",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,f(r.key),r)}}function l(t,e,n){return e&&c(t.prototype,e),n&&c(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function s(t,e,n){return(e=f(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function f(t){var e=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===a(e)?e:String(e)}var p=l((function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),s(this,"_showInputError",(function(t,e){var n=r._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(r._inputErrorClass),n.textContent=e,n.classList.add(r._errorClass)})),s(this,"_hideInputError",(function(t){var e=r._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(r._inputErrorClass),e.textContent="",e.classList.remove(r._errorClass)})),s(this,"_toggleInputErrorState",(function(t){t.validity.valid?r._hideInputError(t):r._showInputError(t,t.validationMessage)})),s(this,"_hasInvalidInput",(function(){return r._inputList.some((function(t){return!t.validity.valid}))})),s(this,"_disableButton",(function(){r._buttonElement.disabled=!0,r._buttonElement.classList.add(r._inactiveButtonClass)})),s(this,"_activateButton",(function(){r._buttonElement.classList.remove(r._inactiveButtonClass),r._buttonElement.disabled=!1})),s(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r._disableButton():r._activateButton()})),s(this,"resetValidation",(function(){r._toggleButtonState(),r._inputList.forEach((function(t){r._hideInputError(t)}))})),s(this,"_setEventsListeners",(function(){r._toggleButtonState(),r._formElement.addEventListener("reset",(function(){r._disableButton()})),r._inputList.forEach((function(t){t.addEventListener("input",(function(){r._toggleInputErrorState(t),r._toggleButtonState()}))}))})),s(this,"enableValidation",(function(){r._setEventsListeners()})),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._errorClass=e.errorClass,this._inputErrorClass=e.inputErrorClass,this._formElement=n,this._buttonElement=n.querySelector(e.submitButtonSelector),this._inputList=Array.from(n.querySelectorAll(e.inputSelector))}));function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}var m=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close"))&&t.close()}))}}])&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},b.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var g=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._formSubmit=e,n._form=n._popup.querySelector(".popup__form"),n._inputs=n._form.querySelectorAll(".popup__input"),n}return e=u,(n=[{key:"_getInputValues",value:function(){console.log(this._inputs);var t={};return this._inputs.forEach((function(e){return t[e.name]=e.value})),console.log(t),t}},{key:"setEventListeners",value:function(){var t=this;this._form.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmit(t._getInputValues()),t.close()})),b(S(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){b(S(u.prototype),"close",this).call(this),this._form.reset()}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(m);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=C(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},k.apply(this,arguments)}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function C(t){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},C(t)}var O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=C(r);if(o){var n=C(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._link=e._popup.querySelector(".popup__image"),e._name=e._popup.querySelector(".popup__text"),e}return e=u,(n=[{key:"open",value:function(t,e){this._link.src=e,this._name.alt=t,this._name.textContent=t,k(C(u.prototype),"open",this).call(this)}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(m);function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==P(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===P(o)?o:String(o)),r)}var o}var T=function(){function t(e){var n=e.nameSelector,r=e.statusSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._status=document.querySelector(r),this._avatar=document.querySelector(o)}var e,n;return e=t,n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._status.textContent}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.name,this._status.textContent=t.about,this._avatar.src=t.avatar}}],n&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}var R=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._user=e,this._url=n}var e,n;return e=t,(n=[{key:"_checkingTheServerResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"cards"),{method:"GET",headers:{authorization:this._user}}).then(this._checkingTheServerResponse)}},{key:"setNewCard",value:function(t){return fetch("".concat(this._url,"cards"),{method:"POST",headers:{authorization:this._user,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,link:t.link})}).then(this._checkingTheServerResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._user}}).then(this._checkingTheServerResponse)}},{key:"setUserInfo",value:function(t){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:{authorization:this._user,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,about:t.about})}).then(this._checkingTheServerResponse)}},{key:"setAvatar",value:function(t){return fetch("".concat(this._url,"users/me/avatar "),{method:"PATCH",headers:{authorization:this._user,"Content-Type":"application/json"},body:JSON.stringify({avatar:t.avatar})}).then(this._checkingTheServerResponse)}}])&&I(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),B=document.querySelector(".page"),x=B.querySelector(".profile-info__button"),U=B.querySelector(".profile__button"),D=B.querySelector(".popup__form_edit-profile"),V=B.querySelector(".popup__form_add-card"),A=B.querySelector(".popup__input_type_name"),N=B.querySelector(".popup__input_type_status"),z=B.querySelector(".profile__avatar"),J=B.querySelector(".profile__avatar-container"),G=B.querySelector(".popup__form_edit-avatar"),H=(B.querySelector(".like__quantity"),B.querySelector(".popup__submit_warning"),new p(t,D)),M=new p(t,V),F=new p(t,G);H.enableValidation(),M.enableValidation(),F.enableValidation();var K=new T({nameSelector:".profile-info__name",statusSelector:".profile-info__status",avatarSelector:".profile__avatar"}),Q=new g(".popup_edit-profile",(function(t){Z.setUserInfo(t).then((function(t){K.setUserInfo(t)}))})),W=new g(".popup_add-card",(function(t){var e=t.name,n=t.link;Z.setNewCard({name:e,link:n}).then((function(t){var e=et({name:t.name,link:t.link},".place-card",tt);return nt.addItem(e)})),W.close()})),X=new g(".popup_edit-avatar",(function(t){Z.setAvatar(t).then((function(t){console.log(t),K.setUserInfo(t)}))})),Y=(new m(".popup_warning"),new O(".popup_open-image")),Z=new R("06e18fd4-8469-488a-86d3-e71284eb84c0","https://mesto.nomoreparties.co/v1/cohort-65/"),$=new O(".popup_open-image"),tt=function(t,e){$.open(t,e)},et=function(t,e){return new r({cardData:t,handleCardClick:tt},e).generateCard()};Z.getInitialCards().then((function(t){nt.renderElements(t)})),Z.getUserInfo().then((function(t){console.log(t),K.setUserInfo(t),z.src=t.avatar}));var nt=new u({renderer:function(t){var e=et(t,".place-card");nt.addItem(e)}},".places__list");Q.setEventListeners(),W.setEventListeners(),Y.setEventListeners(),X.setEventListeners(),x.addEventListener("click",(function(){Q.open(),H.resetValidation();var t=K.getUserInfo();A.value=t.name,N.value=t.about})),U.addEventListener("click",(function(){W.open(),M.resetValidation()})),J.addEventListener("click",(function(){X.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,